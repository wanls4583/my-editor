{"version":3,"file":"js/app-legacy.4c855503.js","mappings":"+FAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,WAAW,IACzIG,EAAkB,GCDlB,EAAS,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,SAASC,YAAY,YAAYC,MAAM,CAC7I,cAAeV,EAAIW,cACnB,iBAAkBX,EAAIY,eACvBC,GAAG,CAAC,UAAYb,EAAIc,kBAAkB,CAAe,QAAbd,EAAIe,KAAgBX,EAAG,WAAW,CAACI,IAAI,YAAYR,EAAIgB,KAAKZ,EAAG,MAAM,CAACI,IAAI,YAAYC,YAAY,gBAAgBI,GAAG,CAAC,YAAc,SAASI,GAAyD,OAAjDA,EAAOC,iBAAiBD,EAAOE,kBAAyBnB,EAAIoB,cAAcC,MAAM,KAAMC,cAAc,CAAClB,EAAG,aAAa,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAI2B,WAAiB,OAAEC,WAAW,sBAAsBtB,MAAM,CAAC,WAAaN,EAAI2B,YAAYd,GAAG,CAAC,OAASb,EAAI6B,YAAY,MAAQ7B,EAAI8B,WAAW,YAAY9B,EAAI+B,WAAW,cAAc/B,EAAIgC,aAAa,gBAAgBhC,EAAIiC,cAAc,iBAAiBjC,EAAIkC,kBAAkBlC,EAAImC,GAAInC,EAAc,YAAE,SAASoC,GAAM,MAAO,CAAChC,EAAG,SAAS,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOU,EAAW,OAAER,WAAW,gBAAgBS,IAAID,EAAKE,GAAG9B,IAAI,SAAW4B,EAAKE,GAAGC,UAAS,EAAKjC,MAAM,CAAC,OAAS8B,EAAKI,OAAO,GAAKJ,EAAKE,IAAIzB,GAAG,CAAC,OAAS,SAASI,GAAQ,OAAOjB,EAAIyC,aAAaL,EAAKE,KAAK,KAAO,SAASrB,GAAQ,OAAOjB,EAAI0C,WAAWN,EAAKE,YAAWlC,EAAG,cAAc,CAACI,IAAI,aAAa,GAAGJ,EAAG,YAAY,CAACI,IAAI,WAAWF,MAAM,CAAC,OAASN,EAAI2C,cAAc9B,GAAG,CAAC,OAASb,EAAI4C,gBAAgBxC,EAAG,aAAa,CAACI,IAAI,YAAYF,MAAM,CAAC,OAASN,EAAI6C,aAAa,aAAe7C,EAAI8C,cAAcjC,GAAG,CAAC,mBAAmBb,EAAI+C,oBAAoB3C,EAAG,aAAaA,EAAG,SAAS,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAiB,cAAE4B,WAAW,kBAAkBtB,MAAM,CAAC,KAAON,EAAIgD,WAAW,QAAUhD,EAAIiD,cAAc,KAAOhD,KAAKiD,WAAW,aAAajD,KAAKkD,gBAAgB,SAAU,EAAK,MAAQnD,EAAIoD,aAAavC,GAAG,CAAC,MAAQb,EAAIqD,kBAAkB,IAC5jD,EAAkB,GCJlB,G,wHAAS,WAAa,IAAIrD,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,YAAYC,YAAY,gBAAgBI,GAAG,CAAC,YAAc,SAASI,GAAQA,EAAOC,oBAAqB,CAACd,EAAG,MAAM,CAACK,YAAY,iDAAiDT,EAAImC,GAAInC,EAAc,YAAE,SAASoC,GAAM,OAAOhC,EAAG,MAAM,CAACK,YAAY,oBAAoB6C,MAAM,CAAClB,EAAKI,OAAS,YAAc,IAAIlC,MAAM,CAAC,MAAQ8B,EAAKmB,MAAM1C,GAAG,CAAC,MAAQ,SAASI,GAAQ,OAAOjB,EAAIwD,YAAYpB,EAAKE,KAAK,YAAc,SAASrB,GAAyD,OAAjDA,EAAOC,iBAAiBD,EAAOE,kBAAyBnB,EAAIoB,cAAcH,EAAQmB,EAAKE,OAAO,CAAClC,EAAG,MAAM,CAACK,YAAY,cAAc6C,MAAM,CAAClB,EAAKqB,OAAO,CAACrD,EAAG,OAAO,CAACK,YAAY,YAAY,CAACT,EAAI0D,GAAG1D,EAAI2D,GAAGvB,EAAKZ,SAASpB,EAAG,MAAM,CAACK,YAAY,YAAY,CAACL,EAAG,OAAO,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOU,EAAU,MAAER,WAAW,eAAenB,YAAY,qCAAqCH,MAAM,CAAC,MAAQ,SAASO,GAAG,CAAC,MAAQ,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAI4D,QAAQxB,EAAKE,QAAQlC,EAAG,OAAO,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQU,EAAKyB,MAAOjC,WAAW,gBAAgBnB,YAAY,qBAAoB,GAAGL,EAAG,kBAAkB,CAACI,IAAI,mBAAmB,KAC9rC,EAAkB,GCDlB,G,QAAS,WAAa,IAAIR,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,QAAQ,CAACJ,EAAG,OAAO,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAe,YAAE4B,WAAW,gBAAgBpB,IAAI,OAAOF,MAAM,CAAC,WAAY,EAAM,SAAWN,EAAI8D,SAAS,OAAS9D,EAAI+D,WAAWlD,GAAG,CAAC,OAASb,EAAI4C,iBAAiB,KACjV,EAAkB,G,mBCDlB,EAAS,WAAa,IAAI5C,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,WAAWC,YAAY,8BAA8BC,MAAOV,EAAU,OAAEa,GAAG,CAAC,UAAY,SAASI,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAM,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAW,QAAE4B,WAAW,YAAYpB,IAAI,WAAW,CAACR,EAAImC,GAAInC,EAAc,YAAE,SAASgE,EAAMC,GAAO,MAAO,CAAC7D,EAAG,MAAM,CAACK,YAAY,iBAAiBT,EAAImC,GAAG,GAAQ,SAASC,GAAM,OAAOhC,EAAG,MAAM,CAACK,YAAY,0CAA0C6C,MAAM,CACphB,YAAatD,EAAIkE,WAAa9B,EAAK+B,QACnCC,SAAUhC,EAAKgC,UACjBvD,GAAG,CAAC,UAAY,SAASI,GAAQ,OAAOjB,EAAIqE,QAAQjC,IAAO,UAAY,SAASnB,GAAQ,OAAOjB,EAAIsE,QAAQlC,MAAS,CAAChC,EAAG,MAAM,CAACK,YAAY,iBAAiB,CAACT,EAAI0D,GAAG1D,EAAI2D,GAAGvB,EAAKZ,SAAUY,EAAa,SAAEhC,EAAG,MAAM,CAACK,YAAY,oBAAoB,CAACT,EAAI0D,GAAG,IAAI1D,EAAI2D,GAAGvB,EAAKmC,UAAU,OAAOvE,EAAIgB,UAAS,GAAIiD,EAAQjE,EAAIwE,WAAWC,OAAS,EAAGrE,EAAG,MAAM,CAACK,YAAY,iBAAiBT,EAAIgB,UAAS,MACtZ,EAAkB,GC6BtB,G,QAAA,CACE,KAAFQ,OACE,MAAFkD,CACI,SAAJZ,CACM,KAANa,MACM,QAANC,IAEI,OAAJC,CACM,KAANF,QAEI,UAAJT,CACM,KAANS,QACM,SAANC,GAEI,WAAJE,CACM,KAANH,QACM,SAANC,GAEI,MAAJlD,CACM,KAANiD,CAAAA,OAAAA,UAGE,KAtBF,WAuBI,MAAJ,CACM,OAANV,EACM,WAANc,GACM,WAANP,KAGE,SAAFQ,CACI,QADJ,WAEM,IAAN,qCACQ,GAAR,0BACU,OAAV,EAGM,OAAN,IAGE,MAAFC,CACI,SADJ,WAEM,KAAN,YAEI,MAJJ,SAIAC,GACM,KAAN,eAEI,MAPJ,WAOM,IAAN,OACM,KAAN,sBACQ,EAAR,qBAIE,QApDF,WAqDI,KAAJ,YAEE,QAvDF,WAuDI,IAAJ,OACI,KAAJ,sBACA,+BACA,eACU,EAAV,6BACA,eACU,EAAV,6BACA,gBACA,YACY,EAAZ,sCAKIC,GAAAA,CAAAA,QAAAA,GAAAA,UAAAA,KAAAA,YAEF,UAvEF,WAwEIA,GAAAA,CAAAA,QAAAA,OAAAA,UAAAA,KAAAA,YAEF,QAAFC,CACI,SADJ,WACM,IAAN,OACA,KACA,gBACM,KAAN,SACM,KAAN,YACM,KAAN,aACA,6BACQ,EAARtB,CAAAA,IAEM,KAAN,8BACQ,OAAR,mBASU,OARA,EAAV1B,OAAAA,OAAAA,GAAAA,GACU,EAAVA,WAAAA,IAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,MACU,EAAVA,QAAAA,EAAAA,QAAAA,EAAAA,MACU,EAAV,gBACU,EAAV,WACA,YACY,EAAZ,SAEA,SAII,cAxBJ,WAyBM,IAAN,sBACA,iCACA,gCACQ,EAARiD,UAAAA,EAAAA,EAAAA,aACA,mCACQ,EAARA,UAAAA,EAAAA,KAAAA,aAGI,QAjCJ,SAiCAjD,GACA,aAGM,KAAN,eACM,EAANA,SAAAA,EACM,KAAN,oBAEI,QAzCJ,SAyCAA,GACM,KAAN,sCAEI,WA5CJ,SA4CAV,GAAM,IAAN,OACA,KACM,KAAN,gCACQ,EAARsC,SAAAA,SAAAA,GACU,EAAV5B,QAAAA,EAAAA,QAAAA,EACU,IACV,YACY,EAAZ,eAIM,KAAN,qBAEI,kBAzDJ,SAyDA6B,GACM,KAAN,eACA,IACQ,EAARA,KAAAA,SACA,kBACQ,EAARA,GAEM,KAAN,uBACM,KAAN,QACM,KAAN,qBAEI,aApEJ,WAqEM,KAAN,gCACQ,EAARD,SAAAA,SAAAA,GACU,EAAV5B,SAAAA,YClLmT,I,UCO/SkD,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAeA,EAAiB,QChB1BC,EAAM,IAAIC,EAAAA,EAEhB,ICkBA,GACE,KAAFhE,YACE,WAAFiE,CACI,KAAJC,GAEE,KALF,WAMI,MAAJ,CACM,SAAN5B,CACA,CACA,CACQ,KAARtC,QACQ,GAARmE,QACQ,SAARpB,WAEA,CACQ,KAAR/C,oBACQ,GAARmE,eAEA,CACQ,KAARnE,qBACQ,GAARmE,gBAEA,CACQ,KAARnE,cACQ,GAARmE,aACQ,SAARpB,YAEA,CACQ,KAAR/C,YACQ,GAARmE,WACQ,SAARpB,cAIM,aAANqB,EACM,UAAN7B,CACQ,KAAR8B,OACQ,IAARC,UAIE,QAzCF,WA0CI,KAAJ,gBAEE,QAAFV,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,WACE,EAAR,mBAGI,KANJ,SAMAC,EAAA1D,GAAM,IAAN,OACM,KAAN,QACM,KAAN,eACM,IAAN,gCACM,KAAN,sBACQ,IAAR,aACA,+BAEA2D,EAAAA,EAAAA,QACAC,EAAAA,KAAAA,EAAAA,GAAAA,YAEU,EAAV,eACAF,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,KAEU,EAAV,qCAEQ,EAAR,uCAGI,aAzBJ,SAyBA5D,GACM,OAAN,MACQ,IAAR,QACU,KAAV,kCACU,MACF,IAAR,cACU,KAAV,0CACU,MACF,IAAR,eACU,KAAV,2CACU,MACF,IAAR,aACU,KAAV,wCACU,MACF,IAAR,WACU,KAAV,sCACU,MAEJ,KAAN,kBC7G4T,ICOxT,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,Q,wCClB1B+D,G,gFAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,cACrDG,EAASH,EAAQ,oBACjB5C,EAAO4C,EAAQ,QACfI,EAAUD,EAAOE,IAAIC,aAErBC,EAAa,CACfH,QAASA,EACTI,WAAY,GACZC,SAAU,KACVC,OAAQ,GACRC,SAAU,CACNpF,MAAO,gBACPiD,KAAM,OACNpB,KAAMA,EAAKwD,KAAKR,EAAS,kEAE7BS,aAAc,CACVtF,MAAO,UACP6B,KAAMA,EAAKwD,KAAKR,EAAS,6DAE7BU,YAAa,GACbC,OAAQ,GACRC,WAAY,GACZrE,aAAc,GACdsE,cAAe,GACfC,eAAgB,GAChBC,SAAU,GACVC,cAAe,GACfC,mBAAoB,uHAGxB,I,UCrBMrB,EAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,aACrDsB,EAAKtB,EAAQ,MAEbuB,EAAAA,W,8EACF,WACI,OAAItB,OAAOuB,cACA,IAAIC,SAAQ,SAACC,GAChBA,EAAQF,cAAcG,QAAQ,YAE3BC,UAAUC,UACVD,UAAUC,UAAUC,gBADxB,I,4BAIX,SAAsBC,GACd9B,OAAOuB,cACPA,cAAcQ,QAAQ,OAAQD,GACvBH,UAAUC,WACjBD,UAAUC,UAAUI,UAAUF,K,oBAItC,SAAcxG,GACVA,EAAQ2G,OAAO3G,GACfA,EAAQA,EAAM4G,QAAQ,mBAAoB,IAC1C,IAAIC,EAAQ,gBACRC,EAAID,EAAME,KAAK/G,GACfgH,EAAOF,GAAKA,EAAE,IAAO,GAIzB,OAHIE,IACAA,EAAMC,OAAOH,EAAE,KAEZE,I,mBAGX,SAAaE,GAET,IADA,IAAIC,EAAM,GACDC,EAAM,EAAGA,EAAMF,EAASE,IAC7BD,GAAO,IAEX,OAAOA,I,qBAGX,SAAeE,GACXA,EAAIC,MAAK,SAAUC,EAAMC,GACrB,OAAOP,OAAOM,GAAQN,OAAOO,Q,0BAIrC,SAAoBC,GAChB,IAAIC,EAAO,uFACPC,EAAO,8CACPC,EAAM,cAAgB5B,EAAK6B,UAC3BC,EAAM,cAAgB9B,EAAK6B,UAC3BE,EAAWtE,GAAAA,CAAE,iEAAD,OACiBmE,EADjB,aACyBF,EADzB,4BACiDI,EADjD,aACyDH,EADzD,kCAGhBlE,GAAAA,CAAEgE,GAAMO,OAAOD,GACf,IAAIE,EAAMxE,GAAAA,CAAE,IAAMmE,GAAK,GACnBM,EAAYD,EAAIE,YAAcT,EAAK3E,OACnCqF,EAAYH,EAAII,aAChBC,EAAW5D,OAAO6D,iBAAmB7D,OAAO6D,iBAAiBN,EAAK,MAAMK,SAAWL,EAAIO,aAAaF,SACpGG,EAAqBhF,GAAAA,CAAE,IAAMqE,GAAK,GAAGK,YAAcR,EAAK5E,OAE5D,OADAgF,EAASW,SACF,CACHR,UAAWA,EACXO,mBAAoBA,EACpBL,UAAWA,EACXE,SAAUA,K,yBAalB,SAAmBK,EAAKC,EAAOC,EAAW3B,EAAS4B,EAAOC,GACtD7B,EAAUA,GAAW,EACD,oBAAT4B,IACPH,EAAMA,EAAIK,OAAOF,IAEH,oBAAPC,IACPJ,EAAMA,EAAIM,UAAU,EAAGF,EAAMD,IAEjC,IAAII,EAAQP,EAAIO,MAAM3K,KAAK4K,cACvBC,EAAQT,EAAI5F,OAAS6F,EACrBS,EAASV,EAAIO,MAAM,OAQvB,OAPAG,EAAUA,GAAUA,EAAOtG,QAAW,EACtCmG,EAASA,GAASA,EAAMnG,QAAW,EAC/BmG,IACAA,GAAgBG,EAChBD,EAAQF,EAAQL,GAAaF,EAAI5F,OAASmG,GAASN,EACnDQ,GAASC,EAAST,GAAS1B,EAAU,IAElCkC,I,8BAOX,SAAwBT,EAAKzB,EAASO,GAGlC,GAFAzB,EAAKsD,iBAAiBC,MAAQvD,EAAKsD,iBAAiBC,OAAS,EAC7DvD,EAAKsD,iBAAiBC,SACjBZ,EACD,OAAO,EAEX,IAAI/H,EAAK,aAAeoF,EAAK6B,UACzBE,EAAWtE,GAAAA,CAAE,kGAAD,OACW7C,EADX,aACkB4I,EAAUb,GAD5B,2BAGhBlF,GAAAA,CAAEgE,GAAMO,OAAOD,GACf,IAAIE,EAAMxE,GAAAA,CAAE,IAAM7C,GAAI,GAClBsH,EAAYD,EAAIwB,YAUpB,OATAhG,GAAAA,CAAE,iBAAiBiF,SASZR,EAEP,SAASsB,EAAUb,GAGf,IAFA,IAAIY,EAAQG,KAAKC,MAAMhB,EAAI5F,OAAS,KAChC6G,EAAS,GACJC,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC5B,IAAIC,EAAa,IAAJD,EACbD,EAAOG,KAAK/D,EAAKgE,UAAUrB,EAAIsB,MAAMH,EAAQA,EAAS,OAM1D,OAJAP,GAAgB,IACZA,EAAQZ,EAAI5F,QACZ6G,EAAOG,KAAK/D,EAAKgE,UAAUrB,EAAIsB,MAAMV,KAEzC,gBAAgBK,EAAOvE,KAAK,iBAAiBuB,QAAQ,MAAOZ,EAAKkE,MAAMhD,GAAW,IAAlF,c,uBAIR,SAAiBiD,GAEb,OADAA,EAAOA,EAAKvD,QAAQ,QAAS,UACtBuD,EAAKvD,QAAQ,KAAM,QAAQA,QAAQ,KAAM,U,wBAGpD,SAAkBwD,EAAWC,EAAWC,GACpC,OAAOC,EAAQH,EAAWC,EAAWC,EAAY,IAAIE,KAErD,SAASD,EAAQH,EAAWC,EAAWC,EAAYG,GAE/C,IAAK,IAAI9J,KADT2J,EAAaA,GAAc,GACXD,EAAW,CACvB,IAAIrK,EAAQqK,EAAU1J,GACtB,GAAI2J,EAAWI,QAAQ/J,IAAQ,EAC3ByJ,EAAUzJ,GAAOX,OAGrB,GAAqB,YAAjB,OAAOA,IAAwBA,aAAiB2K,QAAqB,OAAV3K,GAAoBA,EAAM4K,UAAa5K,EAAM6K,SAgBxGT,EAAUzJ,GAAOX,OAfjB,GAAIyK,EAASK,IAAI9K,GACboK,EAAUzJ,GAAO8J,EAASM,IAAI/K,OAC3B,CACH,IAAIoH,EAAM,KACNpH,aAAiBgL,OACjB5D,EAAMgD,EAAUzJ,IAAQ,GACxB8J,EAASQ,IAAIjL,EAAOoH,GACpBgD,EAAUzJ,GAAO4J,EAAQnD,EAAKpH,EAAOsK,EAAY,IAAIE,IAAIC,MAEzDrD,EAAMgD,EAAUzJ,IAAQ,GACxB8J,EAASQ,IAAIjL,EAAOoH,GACpBgD,EAAUzJ,GAAO4J,EAAQnD,EAAKpH,EAAOsK,EAAY,IAAIE,IAAIC,MAOzE,OAAOL,K,qBAGf,SAAec,GACXA,EAAMA,GAAO,GAEb,IADA,IAAIvC,EAAM,GACDkB,EAAI,EAAGA,EAAIqB,EAAKrB,IACrBlB,IAAyB,GAAhBe,KAAKyB,SAAiB,GAAGC,SAAS,IAE/C,OAAOzC,I,wBAOX,SAAkBG,EAAOC,GACrB,OAAID,EAAMuC,KAAOtC,EAAIsC,MAASvC,EAAMuC,MAAQtC,EAAIsC,MAAQvC,EAAMgB,OAASf,EAAIe,OAChE,EACAhB,EAAMuC,MAAQtC,EAAIsC,MAAQvC,EAAMgB,QAAUf,EAAIe,OAC9C,GAEC,I,0BAGhB,SAAoBwB,GAChB,IAAIC,EAAO,IAAIC,KAAK,CAACF,IACjBG,EAAM/G,OAAOgH,IAAIC,gBAAgBJ,GACjCK,EAAS,IAAIC,OAAOJ,GACxB,OAAOG,I,8BAEX,SAAwBE,EAAQC,EAASC,GACrC,IAAIpC,EAAS,GACboC,EAAWC,SAAQ,SAACC,GAChBtC,EAAOsC,GAAY,CACfnB,IAAK,WACD,MAAgC,mBAArBgB,EAAQG,GACRH,EAAQG,GAAUC,KAAKJ,GAEvBA,EAAQG,QAK/BE,OAAOC,iBAAiBP,EAAQlC,K,6BAEpC,SAAuBxI,EAAckL,GACjC,IAAK,IAAIzC,EAAI,EAAGA,EAAIzI,EAAa2B,OAAQ8G,IACrC,GAAIzI,EAAayI,GAAGyC,WAAaA,EAC7B,OAAOlL,EAAayI,K,oCAIhC,SAA8BzI,EAAcmL,GACxC,IAAK,IAAI1C,EAAI,EAAGA,EAAIzI,EAAa2B,OAAQ8G,IACrC,GAAIzI,EAAayI,GAAG0C,YAAcA,EAC9B,OAAOnL,EAAayI,K,4BAIhC,SAAsByC,GAClB,IAAIE,EAAcxH,EAAAA,mBAElB,GADAsH,EAAWtG,EAAKyG,gBAAgBzH,EAAAA,aAAyBsH,GACrDA,EAAU,CACV,IAAII,EAAe1H,EAAAA,cAAyBsH,EAASC,WACrDG,EAAeA,GAAgBA,EAAaC,QAC5CH,EAAcE,GAAgBF,EAElC,OAAO,IAAI7B,OAAO6B,K,2BAEtB,SAAqBI,EAAU/K,EAAMoB,EAAM4J,EAAUC,GACjD,IAAIC,EAAW,YAAYhG,KAAKlF,GAC5BmL,EAAU,GACVC,EAAU,GAEd,OADAF,EAAWA,GAAYA,EAAS,GAC3BH,GAGDG,IACAC,EAAU,iBAAiBjG,KAAKgG,GAChCE,EAAU,yBAAyBlG,KAAKgG,GACxCC,EAAUA,GAAWA,EAAQ,GAC7BC,EAAUA,GAAWA,EAAQ,IAEpB,UAAThK,GAA6B,mBAATA,IACpB2J,EAAWA,EAASM,OAEP,QAAbL,EACOC,EAASF,EAASO,eAAiBP,EAASQ,OAEnDR,EAASS,WAAaT,EAASS,UAAUN,GAClCH,EAASS,UAAUN,GAE1BH,EAASU,gBAAkBV,EAASU,eAAeL,GAC5CL,EAASU,eAAeL,GAE/BL,EAASU,gBAAkBV,EAASU,eAAeN,GAC5CJ,EAASU,eAAeN,GAE5BJ,EAASW,MAvBL,K,sBAyBf,SAAgB1L,GACZ,OAAO,IAAIqE,SAAQ,SAACC,EAASqH,GACzBzH,EAAG0H,SAAS5L,GAAM,SAAC6L,EAAOC,GAAR,OAAkBD,EAAQF,EAAOE,GAASvH,EAAQwH,W,0BAG5E,SAAoBC,GAChB,OAAO5H,EAAKyH,SAASG,GAAUC,MAAK,SAACF,GAKjC,OAJAA,EAAOA,EAAKvC,WACZuC,GAAOG,EAAAA,EAAAA,GAAkBH,GACzBA,EAAOA,EAAKI,WAAW,yCAA0C,IACjEJ,EAAOK,KAAKC,MAAMN,GACXA,O,wBAQf,SAAkBO,EAAMpC,EAAQqC,GAC5B,IAAIC,EAAU,GACVC,EAAS,GACTC,EAAa,EACbC,EAAQ,EACRC,EAAe,GACfC,EAAqB,GACrBC,GAAY,EACZC,EAAY,GACZpF,EAAQ,EACRqF,EAAS,GACThF,EAAS,KACTiF,EAAU/C,EAAOgD,cACrB,GAAIZ,IAASpC,EACT,OAAOqC,EAAY,CAAEI,MAAO,IAAKK,OAAQ,IAAO,KAEpDG,IACA,IAAK,IAAIlF,EAAI,EAAGA,EAAIiC,EAAO/I,OAAQ8G,IAAK,CACpC,IAAImF,EAAalD,EAAOjC,GACpBoF,EAAOJ,EAAQhF,GACnB,GACIuE,EAAQa,MAENT,GAAgBH,EAAOG,EAAeS,IAAUZ,EAAOY,EAAOT,IAAiBE,GAEjF,IAAKC,EAAUM,IAASN,EAAUM,GAAQb,EAAQa,GAAO,CAkBrD,GAjBAN,EAAUM,GAAQN,EAAUM,GAAQN,EAAUM,GAAQ,EAAI,EAC1DL,EAAO7E,KAAKF,GACC,MAAToF,GAAyB,MAATA,EAEhBV,GAAS,GACFG,IAEPH,GAAS,EACLF,EAAOG,EAAeS,KAEtBV,GAAS,EACLW,EAAWT,EAAoBO,IAAeN,IAE9CH,GAAS,KAIjBY,EAAUF,GACV,OAAOrF,EAENyE,EAAOY,EAAOT,KAAiBH,EAAOG,EAAeS,KACtDT,EAAeS,EACfR,EAAqBO,GAEzBN,GAAY,OAGZH,IACAG,EAAYO,IAAST,OAGpBjF,GAASgF,GAAS,EAEnBA,GAAS,EAGTA,IAEJG,EAAYO,IAAST,EAK7B,SAASO,IACL,GAAI/I,EAAKoJ,WAAWC,OAASrJ,EAAKoJ,WAAWC,MAAMnB,OAASA,EAIxD,OAHAE,EAAUpI,EAAKoJ,WAAWC,MAAMjB,QAChCC,EAASrI,EAAKoJ,WAAWC,MAAMhB,YAC/BC,EAAatI,EAAKoJ,WAAWC,MAAMf,YAIvC,IADA,IAAIgB,EAAU,GACLzF,EAAI,EAAGA,EAAIqE,EAAKnL,OAAQ8G,IAAK,CAClC,IAAIoF,EAAOf,EAAKrE,GAAGiF,cACnBV,EAAQa,GAAQb,EAAQa,GAAQb,EAAQa,GAAQ,EAAI,EAChDpF,EAAI,IACJwE,EAAOiB,EAAUL,IAAQ,GAE7BK,EAAUL,EAEdX,EAAalC,OAAOmD,KAAKnB,GAASrL,OAClCiD,EAAKoJ,WAAWC,MAAQ,CACpBnB,KAAMA,EACNE,QAASA,EACTC,OAAQA,EACRC,WAAYA,GAKpB,SAASY,EAAWI,EAASL,GACzB,IAAIO,EAAUF,EAAQG,WAAW,GAC7BC,EAAWT,EAAKQ,WAAW,GAC/B,OAAKD,EAAU,IAAME,GAAY,IAAQA,EAAW,IAAMF,GAAW,GAOzE,SAASL,EAAUF,GACf,GAAIN,EAAUM,KAAUb,EAAQa,MACtB1F,IAAU+E,EAKZ,OAJA1E,EAAS,CACL2E,MAAOA,EACPK,OAAQA,IAEL,O,EAvZrB5I,GA6ZNgF,MAAM2E,UAAUC,KAAO,SAAUrN,GAC7B,GAAIhE,KAAKwE,OACL,OAAOxE,KAAKA,KAAKwE,QAAUR,GAAS,KAG5CyI,MAAM2E,UAAUE,MAAQ,WAEpB,OADAtR,KAAKwE,OAAS,EACPxE,MAEXyM,MAAM2E,UAAUG,OAAS,SAAUpP,EAAM4G,GACrC,GAAIA,GAAQ/I,KAAKwE,OAAQ,CACrB,IAAIoB,EAAO,EACP4L,EAAQxR,KAAKwE,OAAS,EAC1B,MAAOoB,EAAO4L,EAAO,CACjB,IAAIC,EAAMtG,KAAKC,OAAOxF,EAAO4L,GAAS,GAClCzI,EAAK5G,EAAMnC,KAAKyR,IAAQ,EACxB7L,EAAO6L,EAAM,EAEbD,EAAQC,EAGZ1I,EAAK5G,EAAMnC,KAAK4F,IAAS,GACzBA,IAEJ5F,KAAK0R,OAAO9L,EAAO,EAAG,EAAGzD,QAEzBnC,KAAKwL,KAAKrJ,IAGlBiG,OAAOgJ,UAAUC,KAAO,SAAUrN,GAC9B,GAAIhE,KAAKwE,OACL,OAAOxE,KAAKA,KAAKwE,QAAUR,GAAS,KAI5CyD,EAAKmD,aACD,wiBACJnD,EAAKkK,QAAU,CACXC,OAAQ,GACRC,UAAW,GAEfpK,EAAKqK,SAAL,QACIF,OAAQ,SACRG,OAAQ,SACRC,OAAQ,aACRC,SAAU,eACVC,QAAS,aACTC,UAAW,eACXC,eAAgB,mBAChBC,iBAAkB,qBAClBC,QAAS,UACTC,YAAa,aACbC,YAAa,cAXjB,UAYa,WAEb/K,EAAKgL,UAAY,CACbC,aAAc,eACdC,cAAe,gBACfC,QAAS,UACTC,IAAK,OAET,Q,aC9dI,WAAYC,IAAW,eACnB9S,KAAK+S,eAAeD,G,6CAExB,SAAeA,GACXrL,EAAAA,iBAAsBzH,KAAM8S,EAAW,CACnC,Y,uBAGR,SAAU/M,GACN,GAAIA,EAAEiN,QACF,GAAIhT,KAAKiT,OAEL,OADAjT,KAAKiT,QAAS,EACNlN,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAKkT,MAAM,eACX,MACJ,KAAK,GACDnN,EAAE9E,iBACFjB,KAAKkT,MAAM,aACX,WAGR,OAAQnN,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAKiT,QAAS,EACd,MACJ,KAAK,IACDlN,EAAE9E,iBACFjB,KAAKkT,MAAM,SACX,W,KCLxB,GACE,KAAF3R,YACE,WAAFiE,CACI,cAAJ2N,GAEE,MAAF1O,CACI,WAAJ/C,CACM,KAANgD,QAGE,KAVF,WAWI,MAAJ,CACM,KAAN0O,KAGE,QAfF,WAgBI,MAAJ,CACM,SAANC,KAAAA,OAGE,QApBF,WAoBI,IAAJ,OACI,KAAJ,qBACI,KAAJ,eACInO,GAAAA,CAAAA,QAAAA,GAAAA,WAAAA,SAAAA,GACE,EAAN,0BAGE,QAAFC,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,SAAAA,GACE,EAAR,sBACU,IAAV,+CACU,EAAVwN,QAAAA,EAAAA,GAAAA,wBAII,YATJ,SASAjR,GACM,KAAN,mBAEI,QAZJ,SAYAA,GACM,KAAN,kBAEI,cAfJ,SAeA0D,EAAA1D,GACM,KAAN,iCC7EwT,ICOpT,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,QClB5B,EAAS,WAAa,IAAItC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,SAASC,YAAY,iBAAiBI,GAAG,CAAC,YAAc,SAASI,GAAyD,OAAjDA,EAAOC,iBAAiBD,EAAOE,kBAAyBnB,EAAIoB,cAAcC,MAAM,KAAMC,YAAY,YAAc,SAASL,GAAQA,EAAOC,kBAAmB,MAAQ,SAASD,GAAgC,OAAxBA,EAAOC,iBAAwBlB,EAAIwT,QAAQnS,MAAM,KAAMC,cAAc,CAAEtB,EAAU,OAAEI,EAAG,MAAM,CAACK,YAAY,UAAUC,MAAM,CAAGoF,IAAK9F,EAAIyT,UAAY,CAACrT,EAAG,MAAM,CAACK,YAAY,SAASiT,YAAY,CAAC,WAAa,WAAW,CAAC1T,EAAI0D,GAAG1D,EAAI2D,GAAG3D,EAAI2T,YAAY3T,EAAImC,GAAInC,EAAe,aAAE,SAAS+M,GAAM,OAAO3M,EAAG,MAAM,CAACiC,IAAI0K,EAAKrE,IAAIjI,YAAY,SAAS6C,MAAM,CAAE,YAAatD,EAAI4T,aAAa7G,OAASA,EAAKrE,KAAMhI,MAAM,CAAGmT,OAAQ7T,EAAI8T,YAAa,cAAe9T,EAAI8T,cAAgB,CAAC1T,EAAG,OAAO,CAACK,YAAY,OAAO,CAACT,EAAI0D,GAAG1D,EAAI2D,GAAGoJ,EAAKrE,QAASqE,EAAS,KAAE3M,EAAG,OAAO,CAACK,YAAY,2BAA2B6C,MAAM,CAAC,WAAyB,QAAbyJ,EAAKgH,KAAiB,0BAA4B,4BAA4BlT,GAAG,CAAC,MAAQ,SAASI,GAAQ,OAAOjB,EAAIgU,aAAajH,EAAKrE,SAAS1I,EAAIgB,WAAU,GAAGhB,EAAIgB,KAAKZ,EAAG,MAAM,CAACK,YAAY,kBAAkBC,MAAM,CAAG,aAAcV,EAAIiU,cAAgB,CAAC7T,EAAG,MAAM,CAACI,IAAI,WAAWC,YAAY,gCAAgCI,GAAG,CAAC,OAASb,EAAIkU,WAAW,CAAC9T,EAAG,MAAM,CAACI,IAAI,UAAUC,YAAY,aAAaC,MAAM,CAAGyT,SAAUnU,EAAIoU,iBAAkBP,OAAQ7T,EAAIqU,eAAiBxT,GAAG,CAAC,UAAYb,EAAIsU,eAAe,UAAYtU,EAAIuU,eAAe,WAAavU,EAAIwU,gBAAgB,UAAY,SAASvT,GAAgC,OAAxBA,EAAOC,iBAAwBlB,EAAIyU,YAAYpT,MAAM,KAAMC,cAAc,CAAEtB,EAAU,OAAEI,EAAG,MAAM,CAACI,IAAI,SAASC,YAAY,YAAYC,MAAM,CAAGoF,IAAK9F,EAAI0U,OAAS1U,EAAImC,GAAInC,EAAe,aAAE,SAAS+M,GAAM,OAAO3M,EAAG,MAAM,CAACiC,IAAI0K,EAAKrE,IAAIjI,YAAY,UAAU6C,MAAM,CAAE,YAAatD,EAAI2U,YAAY5H,EAAKrE,MAAOhI,MAAM,CAAGmT,OAAQ7T,EAAI8T,YAAa,cAAe9T,EAAI8T,aAAexT,MAAM,CAAC,YAAYyM,EAAKrE,IAAI,GAAK,QAAUqE,EAAKrE,MAAM,CAACtI,EAAG,MAAM,CAACK,YAAY,UAAU6C,MAAM,CAC78DyJ,EAAKvK,OAAS,YAAc,GAC5BuK,EAAK6H,SAAY7H,EAAK8H,UAAY,eAAiB,eAAkB,GACrE9H,EAAK6H,UAAY5U,EAAI8U,WAAa,eAAiB,GACtC,SAAb/H,EAAKgH,KAAkB,aAAe,IAAKzT,MAAM,CAAC,YAAYyM,EAAKrE,KAAKqM,SAAS,CAAC,UAAY/U,EAAI2D,GAAGoJ,EAAKiI,SAAUhV,EAAIiV,cAAgBlI,EAAKrE,KAAO1I,EAAIiV,aAAazK,MAAMuC,KAAM3M,EAAG,MAAM,CAACK,YAAY,mBAAmBC,MAAM,CAAGmF,KAAM7F,EAAIiV,aAAazK,MAAM3E,KAAO,KAAMiF,MAAO9K,EAAIiV,aAAazK,MAAMM,MAAQ,QAAU9K,EAAIgB,KAAMhB,EAAIiV,cAAgBlI,EAAKrE,KAAO1I,EAAIiV,aAAaxK,IAAIsC,KAAM3M,EAAG,MAAM,CAACK,YAAY,mBAAmBC,MAAM,CAAGmF,KAAM7F,EAAIiV,aAAaxK,IAAI5E,KAAO,KAAMiF,MAAO9K,EAAIiV,aAAaxK,IAAIK,MAAQ,QAAU9K,EAAIgB,KAAKhB,EAAImC,GAAI4K,EAAiB,cAAE,SAASmI,GAAO,OAAO9U,EAAG,MAAM,CAACK,YAAY,0BAA0B6C,MAAM,CAAE,YAAa4R,EAAM1S,OAAQ,eAAgB0S,EAAML,WAAYnU,MAAM,CAAGmF,KAAMqP,EAAMrP,KAAO,KAAMiF,MAAOoK,EAAMpK,MAAQ,WAAY9K,EAAImC,GAAI4K,EAAe,YAAE,SAASmI,GAAO,OAAO9U,EAAG,MAAM,CAACK,YAAY,0BAA0B6C,MAAM,CAAE,YAAa4R,EAAM1S,OAAQ,eAAgB0S,EAAML,WAAYnU,MAAM,CAAGmF,KAAMqP,EAAMrP,KAAO,KAAMiF,MAAOoK,EAAMpK,MAAQ,WAAY9K,EAAImC,GAAI4K,EAAW,QAAE,SAASoI,GAAK,OAAO/U,EAAG,OAAO,CAACK,YAAY,cAAcC,MAAM,CAAGmF,KAAM7F,EAAIoV,aAAaD,SAAYnV,EAAImC,GAAI4K,EAAe,YAAE,SAASlH,GAAM,OAAOzF,EAAG,MAAM,CAACK,YAAY,YAAYiT,YAAY,CAAC,IAAM,OAAOhT,MAAM,CAAGmT,OAAQ7T,EAAI8T,YAAajO,KAAMA,EAAMwP,WAAYrV,EAAIsV,sBAAuB,MAAK,GAAGtV,EAAIgB,KAAKZ,EAAG,WAAW,CAACI,IAAI,WAAWC,YAAY,cAAcC,MAAM,CAAGoF,IAAK9F,EAAIuV,aAAazP,IAAKD,KAAM7F,EAAIuV,aAAa1P,MAAQhF,GAAG,CAAC,KAAOb,EAAIwV,OAAO,eAAiBxV,EAAIyV,iBAAiB,iBAAmBzV,EAAI0V,mBAAmB,KAAO,SAASzU,GAAgC,OAAxBA,EAAOC,iBAAwBlB,EAAI2V,OAAOtU,MAAM,KAAMC,YAAY,IAAM,SAASL,GAAgC,OAAxBA,EAAOC,iBAAwBlB,EAAI4V,MAAMvU,MAAM,KAAMC,YAAY,MAAQtB,EAAI6V,QAAQ,MAAQ7V,EAAI8V,QAAQ,QAAU9V,EAAI+V,UAAU,MAAQ,SAAS9U,GAAgC,OAAxBA,EAAOC,iBAAwBlB,EAAIgW,QAAQ3U,MAAM,KAAMC,eAAelB,EAAG,WAAW,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAIiW,aAAejW,EAAIiW,YAAYxR,OAAQ7C,WAAW,sCAAsCpB,IAAI,UAAUF,MAAM,CAAC,OAASN,EAAIkW,aAAa,QAAUlW,EAAIiW,aAAapV,GAAG,CAAC,OAASb,EAAImW,gBAAgB,KAAK/V,EAAG,gBAAgB,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAiB,cAAE4B,WAAW,kBAAkBpB,IAAI,eAAeF,MAAM,CAAC,MAAQN,EAAIoW,YAAY,IAAMpW,EAAIqW,WAAWxV,GAAG,CAAC,MAAQb,EAAIsW,cAAc,KAAO,SAASrV,GAAQ,OAAOjB,EAAIuW,gBAAgB,KAAO,SAAStV,GAAQ,OAAOjB,EAAIwW,gBAAgB,QAAUxW,EAAIsI,QAAQ,WAAatI,EAAIyP,WAAW,OAASzP,EAAIyW,aAAa,GAAGrW,EAAG,OAAO,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAe,YAAE4B,WAAW,gBAAgBpB,IAAI,OAAOF,MAAM,CAAC,WAAY,EAAM,SAAWN,EAAI8D,SAAS,OAAS9D,EAAI+D,WAAWlD,GAAG,CAAC,OAASb,EAAI0W,eAAetW,EAAG,MAAM,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAc,WAAE4B,WAAW,eAAepB,IAAI,MAAMF,MAAM,CAAC,QAAUN,EAAI2W,WAAW,OAAS3W,EAAI4W,aAAa,IAC/5F,EAAkB,G,qCCKhBzQ,EAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,aACrDsB,EAAKtB,EAAQ,MACb5C,EAAO4C,EAAQ,QAEf0Q,GAAO,CACTC,YAAa,sB,cAIb,WAAYC,EAAQtJ,IAAS,eACzBxN,KAAK+W,YAAc,EACnB/W,KAAKgX,eACLhX,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAKiX,aAAaH,EAAO/I,U,2CAE7B,WAAe,WACLmJ,EAAU1P,EAAG2P,aAAa7T,EAAKwD,KAAKL,EAAAA,QAAoB,uBAAuB2Q,OAC/EC,EAAqBC,EAAAA,SAAmBJ,GAAS5H,MAAK,WACxD,MAAO,CACHiI,kBADG,SACeC,GACd,OAAO,IAAIF,EAAAA,YAAsBE,IAErCC,iBAJG,SAIcC,GACb,OAAO,IAAIJ,EAAAA,WAAqBI,QAI5C1X,KAAK2X,SAAW,IAAIC,EAAAA,SAAe,CAC/BC,QAASR,EACTS,YAAa,SAAC9J,GACV,IAAID,EAAWtG,EAAAA,uBAA4BhB,EAAAA,cAA0BuH,GACrE,OAAID,EACIA,EAASgK,WACFtQ,EAAAA,aAAkBsG,EAASgK,YAAYzI,MAAK,SAACF,GAOhD,OALA,EAAK4I,cAAcjK,EAASC,WAAa,GACzCvH,EAAAA,cAAyBsH,EAASC,WAAaoB,EAAKnB,YAEpD,EAAKgK,eAAiB,EAAKA,gBAAkBlK,EAASC,UAAUkK,WAAW,QAC3E,EAAKC,mBAAmB,EAAKH,cAAcjK,EAASC,WAAYoB,GACzD3H,EAAAA,SAAcsG,EAASzK,MAAMgM,MAAK,SAACF,GAAD,OAAUwI,EAAAA,gBAAsBxI,EAAKvC,WAAYkB,EAASzK,YAGhGmE,EAAAA,SAAcsG,EAASzK,MAAMgM,MAAK,SAACF,GAAD,OAAUwI,EAAAA,gBAAsBxI,EAAKvC,WAAYkB,EAASzK,SAGpG,U,0BAInB,SAAayK,GAAU,WACnB,GAAI/N,KAAK+N,WAAaA,EAAtB,CAWA,GARA/N,KAAK+N,SAAWA,EAChB/N,KAAKoY,QAAU,KACfpY,KAAKqY,SAAW,EAChBrY,KAAKgY,cAAgB,GACrBhY,KAAKiY,gBAAiB,EACtBjY,KAAK+W,YAAc,EACnBhJ,EAAWtG,EAAAA,gBAAqBhB,EAAAA,aAAyBsH,GACzD/N,KAAKgO,UAAaD,GAAYA,EAASC,WAAc,GACjDhO,KAAKgO,UAAW,CAChB,IAAIvH,EAAAA,SAAoBzG,KAAKgO,WAMzB,OAAOhO,KAAK2X,SAASG,YAAY9X,KAAKgO,WAAWsB,MAAK,SAAC8I,GACnD,EAAKA,QAAUA,EACf3R,EAAAA,SAAoB,EAAKuH,WAAa,CAClCoK,QAASA,EACTJ,cAAe,EAAKA,cACpBC,eAAgB,EAAKA,gBAEzB,EAAKK,yBAZT,IAAIC,EAAc9R,EAAAA,SAAoBzG,KAAKgO,WAC3ChO,KAAKoY,QAAUG,EAAYH,QAC3BpY,KAAKgY,cAAgBO,EAAYP,cACjChY,KAAKiY,eAAiBM,EAAYN,eAc1C,OADAjY,KAAKsY,sBACE3Q,QAAQC,a,4BAEnB,SAAekP,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,YAAa,kBAAmB,UAAW,aAAc,SAAU,cACxGrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,Y,gCAE1C,SAAmBgL,EAASpJ,GAAM,WAC1BqJ,EAAS,GACbD,EAAQE,aAAe,CACnBC,YAAa,GACbC,aAAc,IAEdxJ,EAAKyJ,WACDzJ,EAAKyJ,SAASF,cACdF,EAAOjN,KAAK4D,EAAKyJ,SAASF,aAC1BH,EAAQpJ,EAAKyJ,SAASF,aAAe,EACrCH,EAAQE,aAAaC,YAAcvJ,EAAKyJ,SAASF,aAEjDvJ,EAAKyJ,SAASD,eACdH,EAAOjN,KAAK4D,EAAKyJ,SAASD,aAAa,IACvCH,EAAOjN,KAAK4D,EAAKyJ,SAASD,aAAa,IACvCJ,EAAQpJ,EAAKyJ,SAASD,aAAa,KAAO5Y,KAAKqY,SAC/CG,EAAQpJ,EAAKyJ,SAASD,aAAa,IAAM5Y,KAAKqY,SAC9CG,EAAQE,aAAaE,aAAexJ,EAAKyJ,SAASD,aAClDJ,EAAQM,kBAAoB,IAAI1M,OAAOgD,EAAKyJ,SAASD,aAAa,GAAGvQ,QAAQ,4BAA6B,QAAS,KACnHrI,KAAKqY,aAGTjJ,EAAK2J,UACL3J,EAAK2J,SAASrL,SAAQ,SAACvL,GACfqW,EAAQrW,EAAK,IAERqW,EAAQrW,EAAK,MACdsW,EAAOjN,KAAKrJ,EAAK,IACjBqW,EAAQrW,EAAK,KAAOqW,EAAQrW,EAAK,KAE9BqW,EAAQrW,EAAK,IAEfqW,EAAQrW,EAAK,MACdsW,EAAOjN,KAAKrJ,EAAK,IACjBqW,EAAQrW,EAAK,KAAOqW,EAAQrW,EAAK,MAGrCsW,EAAOjN,KAAKrJ,EAAK,IACjBsW,EAAOjN,KAAKrJ,EAAK,IACjBqW,EAAQrW,EAAK,KAAO,EAAKkW,SACzBG,EAAQrW,EAAK,IAAM,EAAKkW,SACxB,EAAKA,eAIjBI,EAASA,EAAO3R,KAAK,KACrB2R,EAASA,EAAOpQ,QAAQ,4BAA6B,QACrDmQ,EAAQQ,YAAc,IAAI5M,OAAOqM,EAAQ,O,kCAE7C,SAAqBQ,EAASC,GAAS,WAC/BD,GAAWjZ,KAAK+W,aAChB/W,KAAK+W,YAAckC,EACnBE,aAAanZ,KAAKoZ,oBAClBpZ,KAAKqZ,WAAU,WACP,EAAKtC,cAAgBkC,GAGzB,EAAKK,cAAcL,OAGvBjZ,KAAKsY,wB,kCAGb,SAAqBW,EAASC,GAAS,WAC/BA,GAAWlZ,KAAK+W,aAChB/W,KAAK+W,YAAcmC,EACnBC,aAAanZ,KAAKoZ,oBAClBpZ,KAAKqZ,WAAU,WACP,EAAKtC,cAAgBmC,GAGzB,EAAKI,cAAcJ,OAGvBlZ,KAAKsY,wB,iCAGb,WAAsB,WACdiB,EAAwBvZ,KAAKuZ,sBAAwB,GAAK,EAC9DvZ,KAAKuZ,sBAAwBA,EAC7BvZ,KAAKqZ,WAAU,WACX,GAAI,EAAKE,wBAA0BA,EAAnC,CAGA,IAAIxC,EAAc,EAAKA,YACnByC,EAAY,EAAKA,UACjBC,EAAU,EAAKD,UAAY,EAAKE,gBACpCD,EAAU,EAAK5K,OAAO8K,YAAYF,GAElC,EAAKG,mBAAmBJ,EAAWC,GAASnK,MAAK,WAC7CkK,EAAY,EAAKA,UAAY,IAC7BA,EAAYA,EAAY,EAAI,EAAIA,EAE5BA,EAAYzC,EACZ,EAAK6C,mBAAmBJ,EAAWC,GAASnK,MAAK,WAC7C,EAAKgK,cAAcvC,MAGvB,EAAKuC,cAAcvC,Y,gCAKnC,SAAmByC,EAAWC,GAAS,WACnC,OAAO,IAAI9R,SAAQ,SAACC,GAChB,EAAK0R,cAAcE,EAAWC,EAAS7R,Q,2BAG/C,SAAc4R,EAAWC,EAAS7R,GAAS,WACnCiS,EAAiB,EACjBC,EAAgBC,KAAKC,MAIzB,GAHAP,EAAUA,GAAWzZ,KAAK0T,QAC1B+F,EAAUA,EAAUzZ,KAAK0T,QAAU1T,KAAK0T,QAAU+F,EAClDQ,mBAAmBja,KAAKoZ,qBACpBpZ,KAAKgO,WAAchO,KAAKoY,QAA5B,CAMA,MAAOoB,GAAaC,EAAS,CACzB,IAAIS,EAAUla,KAAKma,MAAMX,EAAY,GACrC,IAAKU,EAAQE,OAAQ,CAEjB,IAAIhL,EAAOpP,KAAKqa,aAAab,GAmB7B,GAlBAU,EAAQE,OAAShL,EAAKgL,OACtBF,EAAQI,MAAQlL,EAAKkL,MACrBJ,EAAQK,UAAYnL,EAAKmL,UACrBva,KAAKwa,iBAAiBhB,KACtBU,EAAQE,OAASpa,KAAKya,eAAeP,EAAQE,QAC7CF,EAAQnF,KAAO/U,KAAK0a,WAAWR,EAAQE,OAAQF,EAAQjS,MACvDjI,KAAK2a,WAAWT,EAAQU,WAEvBV,EAAQW,QAAWX,EAAQW,OAAOC,SAAWZ,EAAQW,OAAOC,OAAO1L,EAAKyL,SAAYX,EAAQW,OAAOhO,aAAeuC,EAAKyL,OAAOhO,cAC/HqN,EAAQW,OAASzL,EAAKyL,OACtBX,EAAUla,KAAKma,MAAMX,GACjBU,IACAA,EAAQE,OAAS,KACjBF,EAAQnF,KAAO,KAGvB8E,IAEIA,EAAiB,GAAK,GAAKE,KAAKC,MAAQF,GAAiB,GAAI,CAC7DN,IACA,OAGRA,IAEJxZ,KAAK+W,YAAcyC,EACfA,GAAaC,EACbzZ,KAAKoZ,mBAAqB2B,qBAAoB,WAC1C,EAAKzB,cAAcE,EAAWC,EAAS7R,MAEpCA,GACPA,SAzCA5H,KAAKoZ,mBAAqB4B,YAAW,WACjC,EAAK1B,cAAcE,EAAWC,EAAS7R,Q,wBA2CnD,SAAWwS,EAAQa,GACf,OAAOb,EACFc,KAAI,SAAC/Y,GACF,IAAIgZ,EAAW,GACX1Z,EAAQwZ,EAASvQ,UAAUvI,EAAKiZ,WAAYjZ,EAAKkZ,UASrD,MARuB,UAAnBlZ,EAAKmZ,OAAO,GACZH,EAAW,WACe,aAAnBhZ,EAAKmZ,OAAO,GACnBH,EAAW,gBAEXA,EAAWI,EAAapZ,GACxBgZ,EAAYA,GAAY,YAAJ,OAAgBA,EAASK,UAAc,IAE/D,uBAAuBL,EAAvB,0BAAiDhZ,EAAKiZ,WAAtD,aAAqE3T,EAAAA,UAAehG,GAApF,cAEHqF,KAAK,IAEV,SAASyU,EAAaE,GAClB,IAAIpQ,EAAS,KACTiQ,EAASG,EAAMH,OACnBG,EAAMC,MAAQJ,EAAOxU,KAAK,KAC1B6U,EAAW,IAAK,IAAIrQ,EAAIgQ,EAAO9W,OAAS,EAAG8G,GAAK,EAAGA,IAE/C,IADA,IAAIoQ,EAAQJ,EAAOhQ,GACVA,EAAI,EAAGA,EAAI7E,EAAAA,eAAAA,OAAkC6E,IAAK,CACvD,IAAInJ,EAAOsE,EAAAA,eAA0B6E,GACjCsQ,EAASzZ,EAAKmZ,OAAOjK,OACzB,GAAIqK,EAAMvP,QAAQyP,IAAW,GACrBzZ,EAAK0Z,OAAOC,KAAKL,EAAMC,OAAQ,CAC/BrQ,EAASlJ,EACT,MAAMwZ,GAKtB,OAAOtQ,K,0BAGf,SAAayB,GACT,IAAImO,EAAWjb,KAAKma,MAAMrN,EAAO,GAAG7E,KAChCqS,EAAQ,GACZ,GAAIW,EAASzW,OAAS,MAAUxE,KAAKgO,UACjC,MAAO,CACHoM,OAAQ,CACJ,CACIkB,OAAQ,CAAC,SACTF,WAAY,EACZC,SAAUJ,EAASzW,SAG3B8V,MAAO,GACPO,OAAQjD,EAAAA,SAGhB,IAAIiD,EAAU/N,EAAO,GAAK9M,KAAKma,MAAMrN,EAAO,GAAG+N,QAAWjD,EAAAA,QACtDmE,EAAa/b,KAAKoY,QAAQiC,aAAaY,EAAUJ,GACjDN,EAAYva,KAAKgc,QAAQlP,EAAMiP,EAAW3B,OAAQE,GAEtD,OADAyB,EAAW3B,OAAO/I,OAAOgK,SAAWJ,EAASzW,OACtC,CACH4V,OAAQ2B,EAAW3B,OACnBS,OAAQkB,EAAWE,UACnB3B,MAAOA,EACPC,UAAWA,K,qBAGnB,SAAQzN,EAAMsN,EAAQE,GAClB,IAAItM,EAAY,GACZoN,EAAa,EACbc,GAAW,EACXjB,EAAWjb,KAAKma,MAAMrN,EAAO,GAAG7E,KAChCsS,EAAYzN,EAAO,EAAI9M,KAAKma,MAAMrN,EAAO,GAAGyN,UAAY,KAE5DH,EAAO1M,SAAQ,SAAC+N,GACR7E,GAAKC,YAAYiF,KAAKL,EAAMH,OAAOxU,KAAK,QACxC2U,EAAMU,UAAW,MAGzBR,EAAW,IAAK,IAAI3X,EAAQ,EAAGA,EAAQoW,EAAO5V,OAAQR,IAAS,CAI3D,IAHA,IAAIyX,EAAQrB,EAAOpW,GACfoY,EAAa,GACb5D,EAAU,KACLlN,EAAImQ,EAAMH,OAAO9W,OAAS,EAAG8G,GAAK,EAAGA,IAE1C,GADAkN,EAAUxY,KAAKgY,cAAcyD,EAAMH,OAAOhQ,IACrCkN,EAAL,CAIA,GADA4D,EAAaX,EAAMH,OAAOhQ,GACtB0C,GAAahK,IAAUoW,EAAO5V,OAAS,GACvC,GAAI4X,IAAepO,GAAahK,IAAUoW,EAAO5V,OAAS,EAAG,CACzD,IAAI6W,EAAWrX,IAAUoW,EAAO5V,OAAS,EAAIiX,EAAMJ,SAAWI,EAAML,WAChEiB,EAAWrc,KAAKsc,WAAW,CAC3BlC,OAAQA,EACRtN,KAAMA,EACN0L,QAASA,EACT8B,MAAOA,EACPc,WAAYA,EACZC,SAAUA,EACVd,UAAWA,EACXU,SAAUA,IAGd,GAAIoB,GAAYA,EAAS3X,OAAS+C,EAAAA,UAAAA,aAC9B,MAAMkU,EAEV3N,EAAYyN,EAAMH,OAAOhQ,GACzB8P,EAAaK,EAAML,iBAGvBpN,EAAYyN,EAAMH,OAAOhQ,GACzB8P,EAAaK,EAAML,WAEvB,MAGApb,KAAKuc,WAAW,CACZd,MAAOA,EACPjD,QAASA,EACT8B,MAAOA,EACPW,SAAUA,MAGdiB,GAAW,GAQnB,OALIA,GACA5B,EAAMvR,MAAK,SAACyT,EAAGC,GACX,OAAOD,EAAEpB,WAAaqB,EAAErB,cAG5Bd,EAAM9V,OACC8V,EAAMjJ,OAAO3M,OAAS+C,EAAAA,UAAAA,cAA+B6S,EAAMjJ,OAAS,KAEpEkJ,I,wBAGf,SAAWmC,GACP,IAAItC,EAASsC,EAAOtC,OAChB5B,EAAUkE,EAAOlE,QACjB8B,EAAQoC,EAAOpC,MACfc,EAAasB,EAAOtB,WACpBC,EAAWqB,EAAOrB,SAClBd,EAAYmC,EAAOnC,UACnBtS,EAAOyU,EAAOzB,SAASvP,MAAM0P,EAAYC,GACzCsB,EAAMnE,EAAQQ,YACd4D,EAAM,KACNC,EAAU,KAEVA,EADAvC,EAAM9V,OACI8V,EAAMjJ,OAENkJ,EAEVsC,GAAWA,EAAQnY,OAAS+C,EAAAA,UAAAA,eAAgCoV,EAAQC,KAAO,IAC3EH,EAAMnE,EAAQM,mBAElB,MAAQ8D,EAAMD,EAAInU,KAAKP,GAAQ,CAC3B,IAAIvD,EAAO+C,EAAAA,UAAAA,QAOX,GANI+Q,EAAQE,aAAaC,cAAgBiE,EAAI,GACzClY,EAAO+C,EAAAA,UAAAA,aACA+Q,EAAQE,aAAaE,aAAa,KAAOgE,EAAI,IAAMpE,EAAQE,aAAaE,aAAa,KAAOgE,EAAI,KACvGlY,EAAO+C,EAAAA,UAAAA,gBAGPsV,EAAUH,GASd,GANAtC,EAAM9O,KAAK,CACP4P,WAAYA,EAAawB,EAAI5Y,MAC7BqX,SAAUD,EAAawB,EAAI5Y,MAAQ4Y,EAAI,GAAGpY,OAC1CsY,KAAMtE,EAAQoE,EAAI,IAClBlY,KAAMA,IAENA,IAAS+C,EAAAA,UAAAA,eAAgC+Q,EAAQoE,EAAI,IAAM,EAC3DpE,EAAQM,kBAAkBkE,UAAYL,EAAIK,UAC1CL,EAAIK,UAAY,EAChBL,EAAMnE,EAAQM,uBACX,GAAIpU,IAAS+C,EAAAA,UAAAA,aAChB,MAIR,OADAkV,EAAIK,UAAY,EACT1C,EAAM9V,QAAU8V,EAAMjJ,OAE7B,SAAS0L,EAAUH,GAEf,IADA,IAAI5Y,EAAQ4Y,EAAI5Y,MACPsH,EAAI,EAAGA,EAAI8O,EAAO5V,OAAQ8G,IAAK,CACpC,GAAI8O,EAAO9O,GAAG8P,YAAcpX,GAASoW,EAAO9O,GAAG+P,SAAWrX,EAAO,CAC7D,GAAIoW,EAAO9O,GAAG6Q,SACV,OAAO,EAEX,MACG,GAAI/B,EAAO9O,GAAG8P,WAAapX,EAC9B,MAGR,OAAO,K,wBAGf,SAAW0Y,GACP,IAAIjB,EAAQiB,EAAOjB,MACfnB,EAAQoC,EAAOpC,MACf9B,EAAUkE,EAAOlE,QACjByC,EAAWyB,EAAOzB,SACtB,GAAIjb,KAAKiY,gBAAkBwD,EAAMH,OAAOjK,OAAO6G,WAAW,mBAAoB,CAE1E,IAAI+E,EAAMhC,EAASvP,MAAM+P,EAAML,WAAYK,EAAMJ,UAC7CyB,EAAO,EAiBX,OAhBItE,EAAQyE,GACRH,EAAOtE,EAAQyE,IAEfH,EAAO9c,KAAKqY,WACZG,EAAQyE,GAAOH,GAGoB,MAAnC7B,EAASQ,EAAML,WAAa,KAC5B0B,GAAQA,GAEZxC,EAAM9O,KAAK,CACP4P,WAAYK,EAAML,WAClBC,SAAUI,EAAMJ,SAChByB,KAAMA,EACNpY,KAAM+C,EAAAA,UAAAA,OAEH,K,4BAGf,SAAe2S,GACX,IAAI/O,EAAS,GA6Bb,OA5BA+O,EAAO1M,SAAQ,SAAC+N,GACZ,IAAIjX,EAASiX,EAAMJ,SAAWI,EAAML,WACpC,GAAI5W,EAAS,IAAK,CAId,IAFA,IAAI0Y,EAAWzB,EAAML,WACjBpQ,EAAQG,KAAKC,MAAM5G,EAAS,KACvB8G,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC5B,IAAI8P,EAAiB,IAAJ9P,EACb+P,EAAqB,KAAT/P,EAAI,GACpB+P,EAAWA,EAAWI,EAAMJ,SAAWI,EAAMJ,SAAWA,EACxDhQ,EAAOG,KAAK,CACR4P,WAAYA,EAAa8B,EACzB7B,SAAUA,EACVC,OAAQG,EAAMH,SAGtBtQ,GAAgB,IACZA,EAAQxG,GACR6G,EAAOG,KAAK,CACR4P,WAAYpQ,EAAQkS,EACpB7B,SAAUI,EAAMJ,SAChBC,OAAQG,EAAMH,cAItBjQ,EAAOG,KAAKiQ,MAGbpQ,I,8BAEX,SAAiByB,GACb,IAAI2M,EAAUzZ,KAAKwZ,UAAYxZ,KAAK0Z,gBAEpC,OADAD,EAAUzZ,KAAK6O,OAAO8K,YAAYF,IAC9BzZ,KAAK6O,OAAOsO,cAAcrQ,KAIvBA,GAAQ9M,KAAKwZ,WAAa1M,GAAQ2M,O,KC/f3CvT,GAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,aACrD5C,GAAO4C,GAAQ,QACfkX,GAAgBlX,GAAQ,iBAE1BmH,GAAS,K,cAGT,WAAYyJ,EAAQtJ,IAAS,eACzBxN,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAKiX,aAAaH,EAAO/I,UACzB/N,KAAKqd,Y,6CAET,SAAevG,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,QAAS,eAC/C/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,gB,0BAEzC,SAAa/I,GACL/N,KAAK+N,WAAaA,IAGtB/N,KAAK+N,SAAWA,EAChB/N,KAAKsd,UAAU,IACftd,KAAKqd,YACLrd,KAAK0P,W,uBAET,WAAY,WACO,OAAXrC,IACA2N,YAAW,WACP3N,GAAS+P,GAAcG,KAAKja,GAAKwD,KAAKL,EAAAA,QAAoB,+BAC1D4G,GAAOzM,GAAG,WAAW,SAACwO,GAClBoO,QAAQC,IAAIrO,GACRA,EAAKsO,UAAY,EAAKA,SACtB,EAAKJ,UAAUlO,EAAKuO,YAG5BtQ,GAAOzM,GAAG,SAAS,WACfyM,GAAS,KACT,EAAKgQ,iBAEV,O,kCAGX,SAAqBpE,EAASC,GAAS,WACnCC,aAAanZ,KAAK4d,YAClB5d,KAAK0d,QAAU,GACf1d,KAAK4d,WAAa5C,YAAW,WACzB,EAAKtL,UACN,O,kCAEP,SAAqBuJ,EAASC,GAAS,WACnCC,aAAanZ,KAAK4d,YAClB5d,KAAK0d,QAAU,GACf1d,KAAK4d,WAAa5C,YAAW,WACzB,EAAKtL,UACN,O,mBAEP,WACI,GAAK1P,KAAK+N,SAAV,CAGA,IAAM9F,EAAOjI,KAAK6d,aAClB7d,KAAK0d,QAAUjW,EAAAA,UACf4F,GAAOyQ,KAAK,CACR7V,KAAMA,EACNyV,QAAS1d,KAAK0d,QACd3P,SAAU/N,KAAK+N,gB,kCCzE3B,IACIgQ,WAAY,CACRC,KAAM,OACNC,OAAQ,SACRC,SAAU,WACVC,UAAW,YACXC,OAAQ,SACRC,KAAM,OACNC,IAAK,MACLC,UAAW,YACXC,aAAc,eACdC,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,UAAW,cCPb7Y,GAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,aACrD5C,GAAO4C,GAAQ,QAEf0Q,GAAO,CACTC,YAAa,oCACbmI,SAAU,YACVC,aAAc,oBACdC,YAAa,kBACbC,cAAe,2CACfC,iBAAkB,uBAClBC,iBAAkB,iBAClBC,kBAAmB,sBACnBC,cAAe,yBACfC,eAAgB,kBAChBC,SAAU,uCACVC,iBAAkB,6BAGhBC,GAAAA,WACF,WAAY7I,EAAQtJ,IAAS,eACzBxN,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAK4f,QAAU,GACf5f,KAAK2d,QAAU,GACf3d,KAAKiO,YAAcxG,EAAAA,eAAoBzH,KAAK+N,UAC5C/N,KAAKiO,YAAc,IAAI7B,OAAJ,YAAgBpM,KAAKiO,YAAYwK,OAAjC,O,6CAEvB,SAAe3B,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,WAAY,SAAU,eAAgB,YAAa,cAAe,aAAc,kBACrHrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,QAAS,aAAc,oB,mBAEjE,WACIxN,KAAK+W,YAAc,EACnB/W,KAAK2d,QAAU,GACf3d,KAAK4f,QAAU,K,kBAEnB,WACI3F,mBAAmBja,KAAK6f,e,oBAE5B,WAAS,WACL7f,KAAK8f,OACL9f,KAAK6f,YAAc9E,qBAAoB,WACnC,EAAKgF,e,mBAGb,WACI,IAAI7F,EAAUla,KAAKma,MAAMna,KAAK2T,aAAa7G,KAAO,GAC9CkT,EAAahgB,KAAKigB,cAAcjgB,KAAK2T,cACrCuM,EAAWhG,EAAQE,OAAO4F,GAC1BrQ,EAAOuQ,GAAYhG,EAAQjS,KAAKyD,MAAMwU,EAAS9E,WAAYpb,KAAK2T,aAAapI,QAC7E4U,EAAW,KACXzb,EAAO,GACX,GAAIiL,EAAM,CACN,IAAI+L,EAAQwE,EAAS5E,OAAOjK,OAC5B,GAAIqK,EAAMxD,WAAW,SACjBiI,GAAWC,EAAAA,GAAAA,IAAQzQ,GACnBjL,EAAO2b,GAAAA,WAAAA,gBACJ,GAAIrgB,KAAKsgB,YAAYJ,GAAW,CACnC,GAAIlgB,KAAKugB,oBAAoBL,GACzBC,GAAWC,EAAAA,GAAAA,IAAQzQ,EAAMA,EAAKnL,OAAQ,CAAEE,KAAM,oBAC3C,GAAI1E,KAAKwgB,iBAAiBN,GAAW,CAExC,IAAIO,EAAWvG,EAAQE,OAAO4F,EAAa,GACvCS,GAAYzgB,KAAKugB,oBAAoBE,KACrC9Q,EAAOuK,EAAQjS,KAAKyD,MAAM+U,EAASrF,WAAYqF,EAASpF,UAAY1L,EACpEwQ,GAAWC,EAAAA,GAAAA,IAAQzQ,EAAMA,EAAKnL,OAAQ,CAAEE,KAAM,gBAGtDA,EAAO2b,GAAAA,WAAAA,WAGXF,EACAngB,KAAK0gB,WAAW,CAAE/Q,KAAMwQ,EAASQ,aAActV,OAAQ8U,EAASQ,aAAcjc,KAAMA,IAC7E1E,KAAKgW,aAAehW,KAAKgW,YAAYxR,OAC5CxE,KAAK4gB,gBAEL5gB,KAAK6gB,cAAc,Q,qBAG3B,WACI,IAAI3G,EAAUla,KAAKma,MAAMna,KAAK2T,aAAa7G,KAAO,GAC9CkT,EAAahgB,KAAKigB,cAAcjgB,KAAK2T,cACrCuM,EAAWhG,EAAQE,OAAO4F,GAC1BrQ,EAAOuQ,GAAYhG,EAAQjS,KAAKyD,MAAMwU,EAAS9E,WAAYpb,KAAK2T,aAAapI,QAGjF,GAFAvL,KAAK8gB,QACL9gB,KAAK+gB,WAAW,MACXpR,EAGL,GAAI3P,KAAKghB,aAAad,GAAW,CAC7B,IAAIxE,EAAQwE,EAAS5E,OAAOjK,OAC5B,GAAIqK,EAAMxD,WAAW,SAEjBlY,KAAKihB,aAAatR,QACf,GAAI3P,KAAKkhB,gBAAgBhB,GAE5BlgB,KAAKmhB,eAAexR,QACjB,GAAI3P,KAAKohB,iBAAiBlB,GAAW,CAExC,IAAIjD,EAAMjd,KAAKqhB,eAAerB,EAAYhgB,KAAK2T,aAAa7G,MACxDmQ,GACAjd,KAAKshB,mBAAmB3R,EAAMsN,SAGnC,GAAIjd,KAAKsgB,YAAYJ,GACxB,GAAIlgB,KAAKugB,oBAAoBL,GAEzBlgB,KAAKuhB,mBAAmB5R,QACrB,GAAI3P,KAAKwgB,iBAAiBN,GAAW,CAExC,IAAIO,EAAWvG,EAAQE,OAAO4F,EAAa,GAE3C,GAAIS,GAAYzgB,KAAKugB,oBAAoBE,GAAW,CAChD,IAAIA,EAAWvG,EAAQE,OAAO4F,EAAa,GACvCS,GAAYzgB,KAAKugB,oBAAoBE,KACrC9Q,EAAOuK,EAAQjS,KAAKyD,MAAM+U,EAASrF,WAAYqF,EAASpF,UAAY1L,EACpE3P,KAAKuhB,mBAAmB5R,QAEzB,CACH,IAAIhC,EAAW3N,KAAKwhB,mBAAmBxB,EAAYhgB,KAAK2T,aAAa7G,MACjEa,GACA3N,KAAKyhB,gBAAgB9R,EAAMhC,SAG5B3N,KAAK0hB,oBAAoBxB,IAC5BlgB,KAAKkhB,gBAAgBhB,GACrBlgB,KAAK2hB,cAAchS,GACZA,EAAKxD,QAAQ,MAAQ,GAC5BnM,KAAK4hB,iBAAiBjS,GAE1B3P,KAAK6hB,gBAAgBlS,EAAMuQ,IACpBlgB,KAAK8hB,YAAY5B,IAExBlgB,KAAK+hB,aAAapS,EAAMuQ,QAErBlgB,KAAKgiB,eAAe9B,IACvBlgB,KAAKiO,YAAY6N,KAAKnM,IACtB3P,KAAKiiB,YAAYtS,EAAMuQ,K,yBAInC,SAAYvQ,EAAMuQ,GAAU,WACxBlgB,KAAKkiB,iBAAgB,SAAChI,GAClBA,EAAQE,OAAO1M,SAAQ,SAAC+N,GACpB,GAAIA,IAAUyE,EAAd,CAGA,IAAIjY,EAAOiS,EAAQjS,KAAKyD,MAAM+P,EAAML,WAAYK,EAAMJ,UACtD,GAAI,EAAKpN,YAAY6N,KAAK7T,GAAO,CAE7B,GAAI,EAAK+Y,aAAavF,IAAU,EAAK0G,eAAe1G,GAChD,OAEJ,EAAK2G,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOwG,EAAMvD,KAAM2b,GAAAA,WAAAA,iB,6BAK9D,SAAgB1Q,EAAMuQ,GAAU,WACxBlgB,KAAKqiB,iBAAiBnC,IAAsB,MAATvQ,IACnCA,EAAO,IAAMA,GAEjB3P,KAAKkiB,iBAAgB,SAAChI,GAClBA,EAAQE,OAAO1M,SAAQ,SAAC+N,GACpB,GAAIA,IAAUyE,GAGV,EAAKwB,oBAAoBjG,GAAQ,CACjC,IAAIxT,EAAOiS,EAAQjS,KAAKyD,MAAM+P,EAAML,WAAYK,EAAMJ,UACtD,IAAK,EAAKpN,YAAY6N,KAAK7T,GACvB,OAEA,EAAKoa,iBAAiB5G,KACtBxT,EAAO,IAAMA,GAEJ,MAAT0H,EACI,EAAK0S,iBAAiB5G,IAAmB,OAATxT,GAChC,EAAKma,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOwG,EAAMvD,KAAM2b,GAAAA,WAAAA,UAA2BiC,WAAW,IAEjF,EAAKD,iBAAiBnC,GACzB,EAAKmC,iBAAiB5G,IACtB,EAAK2G,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOwG,EAAMvD,KAAM2b,GAAAA,WAAAA,YAGlD,EAAK+B,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOwG,EAAMvD,KAAM2b,GAAAA,WAAAA,sBAI3D,K,6BAEP,SAAgBkC,EAAUC,GAAS,WAC3B1V,EAAO9M,KAAK+W,YACZ0L,EAAY1I,KAAKC,MACjBH,EAAiB,EACrB,MAAO/M,GAAQ9M,KAAKma,MAAM3V,OAAQ,CAC9B,IAAI0V,EAAUla,KAAKma,MAAMrN,EAAO,GAEhC,GADAA,IACKoN,EAAQE,SAGbmI,EAASrI,GACTL,IAEIA,EAAiB,GAAK,GAAKE,KAAKC,MAAQyI,GAAa,IACrD,MAGRziB,KAAK+W,YAAcjK,EACnB9M,KAAK0iB,SAASF,GACV1V,GAAQ9M,KAAKma,MAAM3V,SACnBxE,KAAK6f,YAAc9E,qBAAoB,WACnC,EAAKmH,gBAAgBK,EAAUC,S,4BAI3C,SAAe7S,GAAM,WACXgT,EAAW3iB,KAAK4iB,cACtBD,EAASE,KAAKnV,SAAQ,SAACvL,GACnB,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,cAElDrgB,KAAK2d,QAAQnZ,QACdxE,KAAKoiB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOkO,EAAMjL,KAAM2b,GAAAA,WAAAA,SAA0BiC,WAAW,IAEvFtiB,KAAK0iB,a,gCAET,SAAmB/S,EAAMsN,GAAK,WACpB0F,EAAW3iB,KAAK4iB,cAClBE,EAAaH,EAASI,OAAO9F,GACjC6F,EAAaA,GAAcA,EAAWA,WAClCA,GAEAA,EAAWpV,SAAQ,SAACvL,GAChB,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,UAA2B2C,MAAO,WAI7FL,EAASM,iBAAiBvV,SAAQ,SAACvL,GAC/B,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,UAA2B2C,MAAO,WAEzFhjB,KAAK0iB,a,2BAET,SAAc/S,GAAM,WACVgT,EAAW3iB,KAAK4iB,cACtBD,EAASE,KAAKnV,SAAQ,SAACvL,GACnB,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,e,8BAG3D,SAAiB1Q,GAAM,WACbuT,EAAUljB,KAAKmjB,aACfC,EAASzT,EAAK0T,MAAM,KAAKhS,OAAOiS,OACtCJ,EAAQK,cAAc7V,SAAQ,SAACvL,GACvBihB,EACA,EAAKhB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,aAEnD,EAAK+B,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,WAA4BiC,WAAW,OAGlGY,EAAQM,eAAe9V,SAAQ,SAACvL,GACxBihB,EACA,EAAKhB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,aAEnD,EAAK+B,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,WAA4BiC,WAAW,S,0BAItG,SAAa3S,EAAMuQ,GACf,IAAI3U,EAASvL,KAAK2T,aAAapI,OAC3B2O,EAAUla,KAAKma,MAAMna,KAAK2T,aAAa7G,KAAO,GAC9C2W,EAAW,KAGf,GAFA9T,EAAOuK,EAAQjS,KAAKyD,MAAMwU,EAAS9E,WAAY7P,GAC/CkY,EAAW7M,GAAK6I,SAASjX,KAAKmH,GAC1B8T,GAAYA,EAAS,GAAzB,CACI,IAAI9V,EAAW8V,EAAS,GACpBhiB,EAAQgiB,EAAS,IAAM,GAC3BzjB,KAAKyhB,gBAAgBhgB,EAAOkM,QAGhC8V,EAAW7M,GAAK8I,iBAAiBlX,KAAKmH,GAClC8T,GAAYA,EAAS,IACrBzjB,KAAKuhB,mBAAmBkC,EAAS,M,gCAGzC,SAAmB9T,GAAM,WACfuT,EAAUljB,KAAKmjB,aAIrB,GAHAD,EAAQzV,WAAWC,SAAQ,SAACvL,GACxB,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,aAA8B2C,MAAO,WAEvFhjB,KAAK2d,QAAQnZ,OAAQ,CACtB,IAAM2b,GAAWC,EAAAA,GAAAA,IAAQzQ,EAAMA,EAAKnL,OAAQ,CAAEE,KAAM,eAChDyb,GAAYA,EAASQ,cACrB3gB,KAAKoiB,QAAQ,CAAEzS,KAAMwQ,EAASQ,aAAclf,MAAO0e,EAASQ,aAAcjc,KAAM2b,GAAAA,WAAAA,UAA2BiC,WAAW,IAG9HtiB,KAAK0iB,a,6BAET,SAAgB/S,EAAMhC,GAAU,WACtBuV,EAAUljB,KAAKmjB,aACjBO,EAASR,EAAQS,YAAYhW,GAEjC,GADA+V,EAASA,GAAUA,EAAOA,OACtBA,EAAQ,CACR,IAAIE,EAAQjU,EAAK2T,OACH,MAAVM,GAA2B,KAAVA,GACjBF,EAAOhW,SAAQ,SAACvL,GACZ,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,UAA2BwD,OAAQ,IAAKb,MAAO,IAAKV,WAAW,OAEtHtiB,KAAK0iB,UAAS,KAEdgB,EAAOhW,SAAQ,SAACvL,GACZ,EAAKigB,QAAQ,CAAEzS,KAAMA,EAAMlO,MAAOU,EAAKZ,KAAMmD,KAAM2b,GAAAA,WAAAA,UAA2B2C,MAAO,SAEzFhjB,KAAK0iB,e,0BAIjB,SAAa/S,GACT,IAAMwQ,GAAWC,EAAAA,GAAAA,IAAQzQ,GACrBwQ,GAAYA,EAASQ,eACrB3gB,KAAKoiB,QAAQ,CAAEzS,KAAMwQ,EAASQ,aAAclf,MAAO0e,EAASQ,aAAcjc,KAAM2b,GAAAA,WAAAA,WAA4BiC,WAAW,IACvHtiB,KAAK0iB,c,2BAGb,SAAcjH,GACVA,EAAMqI,eAAgB,EACtBrI,EAAMsI,YAAa,EACnBtI,EAAMuI,aAAc,EACpBvI,EAAMwI,YAAa,EACnBxI,EAAMyI,oBAAqB,EAC3BzI,EAAMC,MAAQD,EAAMC,OAASD,EAAMH,OAAOxU,KAAK,KAC/C,IAAK,IAAIwE,EAAImQ,EAAMH,OAAO9W,OAAS,EAAG8G,GAAK,EAAGA,IAAK,CAC/C,IAAIoQ,EAAQD,EAAMH,OAAOhQ,GACzB,GAAIoQ,EAAMxD,WAAW,WAAY,CAC7BuD,EAAMqI,eAAgB,EAClBpI,EAAMxD,WAAW,gBACjBuD,EAAMsI,YAAa,GAEvB,MACG,GAAIrI,EAAMxD,WAAW,SAAU,CAClCuD,EAAMuI,aAAc,EACpBvI,EAAMyI,mBAAqBtN,GAAKsI,YAAYpD,KAAKL,EAAMC,OACvD,OAGRD,EAAMwI,WAAarN,GAAKoI,SAASlD,KAAKL,EAAMC,OAC5CD,EAAM0I,eAAiBvN,GAAKqI,aAAanD,KAAKL,EAAMC,OACpDD,EAAM2I,cAAgBxN,GAAKC,YAAYiF,KAAKL,EAAMC,OAC9CD,EAAMsI,aACNtI,EAAM4I,gBAAkBzN,GAAKuI,cAAcrD,KAAKL,EAAMC,OACtDD,EAAM6I,mBAAqB1N,GAAKwI,iBAAiBtD,KAAKL,EAAMC,OAC5DD,EAAM8I,mBAAqB3N,GAAKyI,iBAAiBvD,KAAKL,EAAMC,OAC5DD,EAAM+I,gBAAkB5N,GAAK2I,cAAczD,KAAKL,EAAMC,OACtDD,EAAMgJ,oBAAsB7N,GAAK0I,kBAAkBxD,KAAKL,EAAMC,OAC9DD,EAAMiJ,iBAAmB9N,GAAK4I,eAAe1D,KAAKL,EAAMC,U,0BAGhE,SAAaD,GAIT,YAH0BkJ,IAAtBlJ,EAAMuI,aACNhkB,KAAK4kB,cAAcnJ,GAEhBA,EAAMuI,c,4BAEjB,SAAevI,GAIX,YAH4BkJ,IAAxBlJ,EAAMqI,eACN9jB,KAAK4kB,cAAcnJ,GAEhBA,EAAMqI,gB,yBAEjB,SAAYrI,GAIR,YAHyBkJ,IAArBlJ,EAAMsI,YACN/jB,KAAK4kB,cAAcnJ,GAEhBA,EAAMsI,a,iCAEjB,SAAoBtI,GAIhB,YAHiCkJ,IAA7BlJ,EAAM6I,oBACNtkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM6I,qB,8BAEjB,SAAiB7I,GAIb,YAH8BkJ,IAA1BlJ,EAAM4I,iBACNrkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM4I,kB,iCAEjB,SAAoB5I,GAIhB,YAHiCkJ,IAA7BlJ,EAAM8I,oBACNvkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM8I,qB,8BAEjB,SAAiB9I,GAIb,YAH8BkJ,IAA1BlJ,EAAM+I,iBACNxkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM+I,kB,kCAEjB,SAAqB/I,GAIjB,YAHkCkJ,IAA9BlJ,EAAMgJ,qBACNzkB,KAAK4kB,cAAcnJ,GAEhBA,EAAMgJ,sB,+BAEjB,SAAkBhJ,GAId,YAH+BkJ,IAA3BlJ,EAAMiJ,kBACN1kB,KAAK4kB,cAAcnJ,GAEhBA,EAAMiJ,mB,4BAEjB,SAAejJ,GAIX,YAH4BkJ,IAAxBlJ,EAAM2I,eACNpkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM2I,gB,yBAEjB,SAAY3I,GAIR,YAHyBkJ,IAArBlJ,EAAMwI,YACNjkB,KAAK4kB,cAAcnJ,GAEhBA,EAAMwI,a,6BAEjB,SAAgBxI,GAIZ,YAH6BkJ,IAAzBlJ,EAAM0I,gBACNnkB,KAAK4kB,cAAcnJ,GAEhBA,EAAM0I,iB,8BAEjB,SAAiB1I,GAIb,YAHiCkJ,IAA7BlJ,EAAMyI,oBACNlkB,KAAK4kB,cAAcnJ,GAEhBA,EAAMyI,qB,4BAEjB,SAAelE,EAAYlT,GACvB,IAAImQ,EAAM,GACNjS,EAAQ,EACZ2Q,EAAW,MAAO7O,GAAQ,EAAG,CACzB,IAAIoN,EAAUla,KAAKma,MAAMrN,EAAO,GAChC,IAAKoN,EAAQE,OACT,MAEJ4F,EAAaA,GAAc,EAAIA,EAAa9F,EAAQE,OAAO5V,OAC3D,IAAK,IAAI8G,EAAI0U,EAAa,EAAG1U,GAAK,EAAGA,IAAK,CACtC,IAAImQ,EAAQvB,EAAQE,OAAO9O,GAC3B,GAAItL,KAAKkhB,gBAAgBzF,GAAQ,CAC7BwB,EAAM/C,EAAQjS,KAAKyD,MAAM+P,EAAML,WAAYK,EAAMJ,UACjD,MAAMM,EAGV,GADA3Q,IACIA,EAAQ,IACR,MAAM2Q,EAGd7O,IACAkT,GAAc,EAElB,OAAO/C,I,gCAEX,SAAmB+C,EAAYlT,GAC3B,IAAIa,EAAW,GACX3C,EAAQ,EACZ2Q,EAAW,MAAO7O,GAAQ,EAAG,CACzB,IAAIoN,EAAUla,KAAKma,MAAMrN,EAAO,GAChC,IAAKoN,EAAQE,OACT,MAEJ4F,EAAaA,GAAc,EAAIA,EAAa9F,EAAQE,OAAO5V,OAC3D,IAAK,IAAI8G,EAAI0U,EAAa,EAAG1U,GAAK,EAAGA,IAAK,CACtC,IAAImQ,EAAQvB,EAAQE,OAAO9O,GAC3B,GAAItL,KAAKugB,oBAAoB9E,GAAQ,CACjC9N,EAAWuM,EAAQjS,KAAKyD,MAAM+P,EAAML,WAAYK,EAAMJ,UACtD,MAAMM,EAGV,GADA3Q,IACIA,EAAQ,MAAQhL,KAAKwgB,iBAAiB/E,GACtC,MAAME,EAGd7O,IACAkT,GAAc,EAElB,OAAOrS,I,qBAEX,SAAQ+O,GACJ,IAAIrR,EAAS,KACTuE,EAAY8M,EAAO9M,UAEvB,GADAA,OAA0B+U,IAAd/U,GAAiCA,GACzC5P,KAAK4f,QAAQlD,EAAOjb,QAAWib,EAAOmI,SAW1C,GAPIxZ,EADAqR,EAAO4F,UACE,CACLjS,OAAQ,GACRL,MAAO,GAGFvI,EAAAA,WAAgBiV,EAAO/M,KAAK2T,OAAQ5G,EAAOjb,MAAOmO,GAE3DvE,EAAQ,CACR,IAAIyZ,EAAM,CACNzZ,OAAQqR,EAAOjb,MACfkO,KAAM+M,EAAO/M,MAAQ,GACrBoV,KAAMrI,EAAOqI,MAAQ,GACrBrgB,KAAMgY,EAAOhY,MAAQ,GACrBmf,OAAQnH,EAAOmH,QAAU,GACzBb,MAAOtG,EAAOsG,OAAS,GACvBxf,KAAMxD,KAAKglB,QAAQtI,EAAOhB,OAC1BrL,OAAQhF,EAAOgF,OACfL,MAAO3E,EAAO2E,OAElBhQ,KAAK2d,QAAQnS,KAAKsZ,GAClB9kB,KAAK4f,QAAQlD,EAAOjb,OAASqjB,OAE7B9kB,KAAK4f,QAAQlD,EAAOjb,QAAS,I,sBAGrC,SAASwjB,GACL,IAAItH,EAAU,KACVuH,EAAQD,EAAM,IAAM,GACxBjlB,KAAK2d,QAAQ5U,MAAK,SAACyT,EAAGC,GAClB,OAAOA,EAAEzM,MAAQwM,EAAExM,SAEvB2N,EAAU3d,KAAK2d,QAAQjS,MAAM,EAAGwZ,GAChCllB,KAAK+gB,WAAWpD,K,6BAEpB,SAAgB1V,GACZ,IAAIkd,EAAQ,GACZ,GAAIvO,GAAKwO,kBAAkB5c,KAAKP,GAC5B,OAAO,EAEX,MAAOA,KAAUkd,EAAQld,EAAKI,QAAQuO,GAAKyO,WAAY,MACnDpd,EAAOkd,EAEX,QAASvO,GAAK0O,MAAM9c,KAAKP,K,2BAE7B,SAAcsd,GACV,IAAInL,EAASpa,KAAKma,MAAMoL,EAAUzY,KAAO,GAAGsN,OAC5C,GAAIA,EACA,IAAK,IAAI9O,EAAI,EAAGA,EAAI8O,EAAO5V,OAAQ8G,IAC/B,GAAI8O,EAAO9O,GAAG8P,WAAamK,EAAUha,QAAU6O,EAAO9O,GAAG+P,UAAYkK,EAAUha,OAC3E,OAAOD,EAInB,OAAQ,I,yBAEZ,WACI,GAAItL,KAAK2iB,SACL,OAAO3iB,KAAK2iB,SAEZ,IAAMA,EAAWzc,GAAQ5C,GAAKwD,KAAKL,EAAAA,QAAoB,iCAMvD,OALAzG,KAAK2iB,SAAWA,EAChBA,EAASI,OAAS,GAClBJ,EAASE,KAAKnV,SAAQ,SAACvL,GACnBwgB,EAASI,OAAO5gB,EAAKZ,MAAQY,KAE1BnC,KAAK2iB,W,wBAGpB,WACI,GAAI3iB,KAAKkjB,QACL,OAAOljB,KAAKkjB,QAEZ,IAAMA,EAAUhd,GAAQ5C,GAAKwD,KAAKL,EAAAA,QAAoB,gCAMtD,OALAzG,KAAKkjB,QAAUA,EACfA,EAAQS,YAAc,GACtBT,EAAQzV,WAAWC,SAAQ,SAACvL,GACxB+gB,EAAQS,YAAYxhB,EAAKZ,MAAQY,KAE9BnC,KAAKkjB,U,qBAGpB,SAAQxH,GACJ,MAAO,O,EAziBTiE,GA6iBN,MCpkBM6F,I,iBAAAA,EAAAA,EAAAA,IACF,WAAYC,IAAK,eACbzlB,KAAK0lB,SAAW,IAAIjZ,MAAMgZ,EAAM,GAChCzlB,KAAK2lB,SAAW,IAAIlZ,MAAMgZ,EAAM,GAChCzlB,KAAKyI,IAAM,EACXzI,KAAK4lB,KAAO,KACZ5lB,KAAK6lB,KAAO,KACZ7lB,KAAK8lB,MAAQ,SAGfC,GAAAA,WAMF,WAAYC,EAASP,IAAK,eACtBzlB,KAAKylB,IAAMA,GAAO,EAClBzlB,KAAKimB,KAAO,KACZjmB,KAAKkmB,KAAO,KACZlmB,KAAKmmB,KAAO,EACZnmB,KAAKgmB,QAAUA,GAAW,SAAUxJ,EAAGC,GACnC,OAAOD,EAAIC,G,qCAOnB,SAAOhb,GACH,IAAKzB,KAAKimB,KAAM,CACZ,IAAIG,EAAO,IAAIZ,GAAKxlB,KAAKylB,KAOzB,OANAW,EAAKV,SAAS,GAAKjkB,EACnB2kB,EAAK3d,MACLzI,KAAKimB,KAAOG,EACZpmB,KAAKkmB,KAAOE,EACZpmB,KAAKmmB,YACLnmB,KAAKqmB,WAAa,MAGtB,IAAID,EAAOpmB,KAAK+f,QAAQte,GAAO,GAC3B6kB,EAAO,KACPC,EAAOpb,KAAKC,MAAMpL,KAAKylB,IAAM,IAAM,EACnCpa,EAASrL,KAAKwmB,SAASJ,EAAM3kB,GACjC,GAAIzB,KAAKymB,UAAUL,EAAM3kB,IAAU,EAC/B,OAAO4J,EAEXrL,KAAKmmB,OACLnmB,KAAKqmB,WAAa,KAClB,MAAOD,EAAM,CAGT,IAFA,IAAIT,EAAWS,EAAKT,SAChBD,EAAWU,EAAKV,SACXpa,EAAI,EAAGA,EAAI8a,EAAK3d,IAAK6C,IAAK,CAC/B,IAAI8D,EAAOsW,EAASpa,GACpB,GAAItL,KAAKgmB,QAAQvkB,EAAO2N,GAAQ,EAAG,CAC/BsX,EAAQhB,EAAUC,EAAUra,GAC5B,MACOA,IAAM8a,EAAK3d,IAAM,GACxBie,EAAQhB,EAAUC,EAAUra,EAAI,GAIxC,GADA8a,EAAK3d,MACD2d,EAAK3d,KAAOzI,KAAKylB,IACjB,MAEJ,IAAIkB,EAAU,IAAInB,GAAKxlB,KAAKylB,KACxBmB,EAAUR,EAAKT,SAAS,GAC5BlkB,EAAQikB,EAASa,GACZK,IACGR,EAAKR,OACLQ,EAAKR,KAAKC,KAAOc,GAErBA,EAAQf,KAAOQ,EAAKR,KACpBQ,EAAKR,KAAOe,EACZA,EAAQd,KAAOO,EACfO,EAAQb,MAAQM,EAAKN,OAEzBQ,EAAOK,EAEP,IAAK,IAAIrb,EAAKsb,EAAUL,EAAO,EAAIA,EAAOM,EAAI,EAAGvb,EAAI8a,EAAK3d,IAAK6C,IAAKub,IAChEF,EAAQjB,SAASmB,GAAKnB,EAASpa,GAC/Bqb,EAAQhB,SAASkB,EAAI,GAAKlB,EAASra,EAAI,GACnCqb,EAAQhB,SAASkB,EAAI,KACrBF,EAAQhB,SAASkB,EAAI,GAAGf,MAAQa,GAEpCjB,EAASpa,GAAK,KACdqa,EAASra,EAAI,GAAK,KAClBqb,EAAQle,MAYZ,GAVA2d,EAAK3d,IAAM8d,EACPK,IACAR,EAAKV,SAASU,EAAK3d,KAAO,KAE1Bke,EAAQhB,SAAS,GAAKS,EAAKT,SAASS,EAAK3d,IAAM,GAC3Cke,EAAQhB,SAAS,KACjBgB,EAAQhB,SAAS,GAAGG,MAAQa,GAEhCP,EAAKT,SAASS,EAAK3d,IAAM,GAAK,OAE7B2d,EAAKN,MAAO,CACb9lB,KAAKimB,KAAO,IAAIT,GAAKxlB,KAAKylB,KAC1BzlB,KAAKimB,KAAKP,SAAS,GAAKjkB,EACxBzB,KAAKimB,KAAKN,SAAS,GAAKS,EACxBpmB,KAAKimB,KAAKN,SAAS,GAAKgB,EACxB3mB,KAAKimB,KAAKxd,IAAM,EAChB2d,EAAKN,MAAQ9lB,KAAKimB,KAClBU,EAAQb,MAAQ9lB,KAAKimB,KACrB,MAEJG,EAAOA,EAAKN,MAEhB,OAAOza,EAGP,SAASqb,EAAQhB,EAAUC,EAAUra,GACjC,IAAK,IAAIub,EAAIT,EAAK3d,IAAKoe,GAAKvb,EAAI,EAAGub,IAC/BnB,EAASmB,GAAKnB,EAASmB,EAAI,GAC3BlB,EAASkB,EAAI,GAAKlB,EAASkB,GAE/BnB,EAASpa,GAAK7J,EACdkkB,EAASra,EAAI,GAAKgb,EACdA,IACAA,EAAKR,MAAQM,M,oBAQzB,SAAO3kB,GACH,IAAIqlB,EAAO9mB,KACPomB,EAAOpmB,KAAK+f,QAAQte,GACpB4J,EAAS,KACTkb,EAAOpb,KAAKC,MAAMpL,KAAKylB,IAAM,IAAM,EACvC,GAAIW,EAAM,CACN,IAAIV,EAAWU,EAAKV,SAChB1hB,EAAQhE,KAAKymB,UAAUL,EAAM3kB,GACjC4J,EAASqa,EAAS1hB,GAClB,IAAK,IAAIsH,EAAItH,EAAOsH,EAAI8a,EAAK3d,IAAK6C,IAC9Boa,EAASpa,GAAKoa,EAASpa,EAAI,GAK/B,GAHA8a,EAAK3d,MACLzI,KAAKmmB,OACLnmB,KAAKqmB,WAAa,MACbrmB,KAAKmmB,KAEN,OADAnmB,KAAKimB,KAAO,KACL5a,EAGf,MAAO+a,GAAQA,EAAK3d,IAAM8d,GAAQH,EAAKN,MAAO,CAC1C,IAAIA,EAAQM,EAAKN,MACbiB,EAASjB,EAAMH,SAASxZ,QAAQia,GAChCY,EAAWlB,EAAMH,SAASoB,EAAS,GACnCE,EAAYnB,EAAMH,SAASoB,EAAS,GACpCH,EAAUR,EAAKT,SAAS,GACxBqB,GAAYA,EAASve,IAAM8d,GAC3BW,EAAWd,EAAM,GACbQ,GACAR,EAAKV,SAAS,GAAKI,EAAMJ,SAASqB,EAAS,GAC3CX,EAAKT,SAAS,GAAKqB,EAASrB,SAASqB,EAASve,KAC9Cqd,EAAMJ,SAASqB,EAAS,GAAKC,EAAStB,SAASsB,EAASve,IAAM,KAE9D2d,EAAKV,SAAS,GAAKsB,EAAStB,SAASsB,EAASve,IAAM,GACpDqd,EAAMJ,SAASqB,EAAS,GAAKX,EAAKV,SAAS,IAE3CU,EAAKT,SAAS,KACdS,EAAKT,SAAS,GAAGG,MAAQM,GAE7BN,EAAMJ,SAASqB,EAAS,GAAKC,EAAStB,SAASsB,EAASve,IAAM,GAC9Due,EAAStB,SAASsB,EAASve,IAAM,GAAK,KACtCue,EAASrB,SAASqB,EAASve,KAAO,KAClCue,EAASve,MACT2d,EAAK3d,OACEwe,GAAaA,EAAUxe,IAAM8d,GAChCK,GACAR,EAAKV,SAASU,EAAK3d,KAAOqd,EAAMJ,SAASqB,GACzCX,EAAKT,SAASS,EAAK3d,IAAM,GAAKwe,EAAUtB,SAAS,GACjDG,EAAMJ,SAASqB,GAAUE,EAAUvB,SAAS,KAE5CU,EAAKV,SAASU,EAAK3d,KAAOwe,EAAUvB,SAAS,GAC7CI,EAAMJ,SAASqB,GAAUE,EAAUvB,SAAS,IAE5CU,EAAKT,SAASS,EAAK3d,IAAM,KACzB2d,EAAKT,SAASS,EAAK3d,IAAM,GAAGqd,MAAQM,GAExCe,EAAUF,EAAW,GACrBA,EAAUxe,MACV2d,EAAK3d,OACEwe,EACPG,EAAMhB,EAAKN,MAAOiB,EAAQX,EAAMa,GACzBD,GACPI,EAAMhB,EAAKN,MAAOiB,EAAS,EAAGC,EAAUZ,GAGhD,OAAO/a,EAEP,SAAS+b,EAAMtB,EAAOiB,EAAQC,EAAUC,GACpC,IAAIL,EAAUI,EAASrB,SAAS,GAAK,EAAI,EAEzCuB,EAAWD,EAAWD,EAASve,IAAMme,GAErC,IAAK,IAAItb,EAAI,EAAGA,EAAI0b,EAASve,IAAK6C,IAC9B2b,EAAUvB,SAASpa,GAAK0b,EAAStB,SAASpa,GAC1C2b,EAAUtB,SAASra,EAAI,GAAK0b,EAASrB,SAASra,EAAI,GAC9C2b,EAAUtB,SAASra,EAAI,KACvB2b,EAAUtB,SAASra,EAAI,GAAGwa,MAAQmB,GAG1CA,EAAUtB,SAAS,GAAKqB,EAASrB,SAAS,GACtCsB,EAAUtB,SAAS,KACnBsB,EAAUtB,SAAS,GAAGG,MAAQmB,GAE9BL,IACAK,EAAUvB,SAASsB,EAASve,KAAOqd,EAAMJ,SAASqB,IAEtDI,EAAUrB,EAAO,EAAGiB,GACpBE,EAAUxe,KAAOue,EAASve,IAAMme,EAChCd,EAAMrd,MACDme,IACGE,EAAKZ,OAASc,GACdF,EAAKZ,KAAOe,EACZH,EAAKZ,KAAKL,KAAO,OAEjBmB,EAASnB,KAAKD,KAAOqB,EACrBA,EAAUpB,KAAOmB,EAASnB,OAG7BC,EAAMrd,IAKP2d,EAAON,GAJPgB,EAAKb,KAAOgB,EACZH,EAAKb,KAAKH,MAAQ,KAClBM,EAAO,MAOf,SAASc,EAAW3Z,EAAQ9E,GACxB,IAAK,IAAI6C,EAAIiC,EAAO9E,IAAM,EAAG6C,GAAK,EAAGA,IACjCiC,EAAOmY,SAASjd,EAAM6C,GAAKiC,EAAOmY,SAASpa,GAC3CiC,EAAOoY,SAASld,EAAM6C,EAAI,GAAKiC,EAAOoY,SAASra,EAAI,GAEvDiC,EAAOoY,SAASld,GAAO8E,EAAOoY,SAAS,GAI3C,SAASwB,EAAU5Z,EAAQ9E,EAAKzE,GAC5BA,EAAQA,GAAS,EACjB,IAAK,IAAIsH,EAAItH,EAAOsH,EAAIiC,EAAO9E,IAAK6C,IAChCiC,EAAOmY,SAASpa,GAAKiC,EAAOmY,SAASpa,EAAI7C,GACzC8E,EAAOoY,SAASra,GAAKiC,EAAOoY,SAASra,EAAI7C,GAE7C8E,EAAOoY,SAASpY,EAAO9E,KAAO8E,EAAOoY,SAASpY,EAAO9E,IAAMA,M,oBASnE,SAAOhH,EAAOukB,EAASzU,GACnB,IAAIlG,EAASrL,KAAK+f,QAAQte,EAAO8P,EAAQyU,GAIzC,OAHI3a,IACAA,EAASrL,KAAKwmB,SAASnb,EAAQ5J,EAAOukB,IAEnC3a,I,uBAMX,SAAU+a,EAAM3kB,GACZ,IAAK,IAAI6J,EAAI,EAAGA,EAAI8a,EAAK3d,IAAK6C,IAC1B,GAA8C,IAA1CtL,KAAKgmB,QAAQvkB,EAAO2kB,EAAKV,SAASpa,IAClC,OAAOA,EAGf,OAAQ,I,sBAOZ,SAASD,EAAQ5J,EAAOukB,GACpB,IAAIhiB,EAAQqH,EAAO5C,IACf4e,EAAahc,EAAO5C,IACpB6e,EAAejc,EAAO5C,IAC1Bud,EAAUA,GAAWhmB,KAAKgmB,QAC1B,IAAK,IAAI1a,EAAI,EAAGA,EAAID,EAAO5C,IAAK6C,IAAK,CACjC,IAAInJ,EAAOkJ,EAAOqa,SAASpa,GACvBsR,EAAMoJ,EAAQvkB,EAAOU,GACzB,GAAGya,GAAO,EAAG,CACTyK,EAAa/b,EACbtH,EAAQsH,EACR,OAIR,MAAO,CACHsa,KAAM2B,EACN1B,KAAM2B,EACN1G,MAAO,WACH9c,EAAQqjB,EACRhc,EAASic,IAIjB,SAASC,IACL,OAAIvjB,EAAQqH,EAAO5C,IACR4C,EAAOqa,SAAS1hB,KAChBqH,EAAOua,MACdva,EAASA,EAAOua,KAChB5hB,EAAQ,EACDqH,EAAOqa,SAAS1hB,IAEpB,KAGX,SAASwjB,IAEL,OADAxjB,IACIA,GAAS,EACFqH,EAAOqa,SAAS1hB,GAChBqH,EAAOwa,MACdxa,EAASA,EAAOwa,KAChB7hB,EAAQqH,EAAO5C,IAAM,EACd4C,EAAOqa,SAAS1hB,KAEvBA,IAEG,S,qBAGf,SAAQyjB,GAEJ,IADA,IAAI3e,EAAM9I,KAAK0nB,UACNpc,EAAI,EAAGA,EAAIxC,EAAItE,OAAQ8G,IAC5Bmc,EAAG3e,EAAIwC,GAAIA,K,qBAGnB,WACI,GAAItL,KAAKqmB,WACL,OAAOrmB,KAAKqmB,WAEhB,IAAI1I,EAAU,GACVyI,EAAOpmB,KAAKkmB,KAChB,MAAOE,EAAM,CAET,IADA,IAAIV,EAAWU,EAAKV,SACX1hB,EAAQ,EAAGA,EAAQoiB,EAAK3d,IAAKzE,IAClC2Z,EAAQnS,KAAKka,EAAS1hB,IAE1BoiB,EAAOA,EAAKR,KAGhB,OADA5lB,KAAKqmB,WAAa1I,EACXA,I,iBAEX,SAAI3Z,GACA,IAAIoiB,EAAOpmB,KAAKkmB,KACZlb,GAAS,EACb,MAAOob,EAAM,CAET,IADA,IAAIV,EAAWU,EAAKV,SACXpa,EAAI,EAAGA,EAAI8a,EAAK3d,IAAK6C,IAE1B,GADAN,IACIA,GAAShH,EACT,OAAO0hB,EAASpa,GAGxB8a,EAAOA,EAAKR,KAEhB,OAAO,O,mBAEX,WACI5lB,KAAKimB,KAAO,KACZjmB,KAAKkmB,KAAO,KACZlmB,KAAKmmB,KAAO,EACZnmB,KAAKqmB,WAAa,O,qBAEtB,SAAQ5kB,EAAOkmB,EAAU3B,GACrB,IAAII,EAAOpmB,KAAKimB,KAChBD,EAAUA,GAAWhmB,KAAKgmB,QAC1B,MAAOI,EAGH,IAFA,IAAIT,EAAWS,EAAKT,SAChBD,EAAWU,EAAKV,SACXpa,EAAI,EAAGA,EAAI8a,EAAK3d,IAAK6C,IAAK,CAC/B,IAAIsR,EAAMoJ,EAAQvkB,EAAOikB,EAASpa,IAClC,GAAY,IAARsR,EAAW,CACX,GAAI+I,EAASra,EAAI,GAAI,CACjB8a,EAAOT,EAASra,EAAI,GACpB,MAEA,OAAO8a,EAER,KAAIxJ,EAAM,GASV,CACH,GAAI+I,EAASra,GAAI,CACb8a,EAAOT,EAASra,GAChB,MAEA,OAAOqc,EAAWvB,EAAO,KAb7B,IAAKV,EAASpa,EAAI,IAAM0a,EAAQvkB,EAAOikB,EAASpa,EAAI,IAAM,EAAG,CACzD,GAAIqa,EAASra,EAAI,GAAI,CACjB8a,EAAOT,EAASra,EAAI,GACpB,MAEA,OAAOqc,EAAWvB,EAAO,W,EArY/CL,GAqZN,MC5ZM6B,GAAa,SAAUpL,EAAGC,GAC5B,OAAOD,EAAEjS,MAAMuC,KAAO2P,EAAElS,MAAMuC,MAG5B+a,GAAY,CAAC,KAAM,KAAM,OAAQ,OAAQ,MAAO,QAAS,OAAQ,OAAQ,WAAY,QAAS,MAAO,QAAS,QAAS,SAAU,UACjIC,GAAe,GACrBD,GAAUna,SAAQ,SAACuP,GACf6K,GAAa7K,IAAO,K,kBAIpB,WAAYnG,EAAQtJ,IAAS,eACzBxN,KAAKsa,MAAQ,IAAIyL,GAAM6B,IACvB5nB,KAAK+nB,aAAe,GACpB/nB,KAAK+S,eAAe+D,EAAQtJ,G,6CAEhC,SAAesJ,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAK+nB,aAAcjR,EAAQ,CAAC,WAClDrP,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,aACrCrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,Y,kCAE1C,SAAqBwa,EAAczC,GAI/B,IAHA,IAAIjL,EAAQta,KAAKsa,MAAMoN,UACnBO,EAAaC,EAAAA,EAER5c,EAAI,EAAGA,EAAIgP,EAAM9V,OAAQ8G,IAAK,CACnC,IAAIwI,EAAOwG,EAAMhP,GACjB,KAAIwI,EAAKvJ,MAAMuC,KAAOkb,EAAalb,MAI5B,CACHmb,EAAa3c,EACb,MALIwI,EAAKtJ,IAAIsC,KAAOkb,EAAalb,MAC7B9M,KAAK+nB,aAAaI,OAAOrU,EAAKvJ,MAAMuC,MAOhD,GAAIyY,EAAUzY,KAAOkb,EAAalb,KAAM,CAChCwN,EAAM2N,IAAe3N,EAAM2N,GAAY1d,MAAMuC,OAASkb,EAAalb,OACnE9M,KAAK+nB,aAAaI,OAAOH,EAAalb,MACtCmb,KAGJ,IAAK,IAAI3c,EAAI2c,EAAY3c,EAAIgP,EAAM9V,OAAQ8G,IACvCgP,EAAMhP,GAAGf,MAAMuC,MAAQyY,EAAUzY,KAAOkb,EAAalb,KACrDwN,EAAMhP,GAAGd,IAAIsC,MAAQyY,EAAUzY,KAAOkb,EAAalb,Q,kCAI/D,SAAqBkb,EAAczC,GAG/B,IAFA,IAAIjL,EAAQta,KAAKsa,MAAMoN,UACnBO,EAAaC,EAAAA,EACR5c,EAAI,EAAGA,EAAIgP,EAAM9V,OAAQ8G,IAAK,CACnC,IAAIwI,EAAOwG,EAAMhP,GACb8c,EAAWtU,EAAKvJ,MAAMuC,KACtB2M,EAAU3F,EAAKtJ,IAAIsC,KACvB,KAAIsb,GAAYJ,EAAalb,MAUtB,CACHmb,EAAa3c,EACb,MAXI8c,EAAWJ,EAAalb,MACnBsb,GAAY7C,EAAUzY,MAAQsb,EAAWJ,EAAalb,MAAUsb,EAAW7C,EAAUzY,MAAQ2M,EAAU8L,EAAUzY,OAClH9M,KAAK+nB,aAAaI,OAAOC,GAGzBJ,EAAalb,KAAOyY,EAAUzY,MAC9B9M,KAAK+nB,aAAaI,OAAOC,GAQzC,GAAIJ,EAAalb,KAAOyY,EAAUzY,KAE9B,IAAK,IAAIxB,EAAI2c,EAAY3c,EAAIgP,EAAM9V,OAAQ8G,IACvCgP,EAAMhP,GAAGf,MAAMuC,MAAQyY,EAAUzY,KAAOkb,EAAalb,KACrDwN,EAAMhP,GAAGd,IAAIsC,MAAQyY,EAAUzY,KAAOkb,EAAalb,O,sBAK/D,SAASA,GACL,IAAIub,EAAaroB,KAAKsoB,aAAaxb,GACnC,GAAIub,EAAY,CAEZ,IAAK,IAAIvb,EAAOub,EAAW9d,MAAMuC,KAAO,EAAGA,EAAOub,EAAW7d,IAAIsC,KAAMA,IAAQ,CAC3E,IAAIgH,EAAO9T,KAAKuoB,cAAczb,GAC1BgH,GACIA,EAAKtJ,IAAIsC,KAAOub,EAAW7d,IAAIsC,MAC/B9M,KAAK+nB,aAAaI,OAAOrb,GAIrC9M,KAAKsa,MAAM/I,OAAO8W,GAEtB,OAAOA,I,oBAGX,SAAOvb,GACH,IAAIgH,EAAO9T,KAAKuoB,cAAczb,GAE9B,OADAgH,GAAQ9T,KAAKsa,MAAMkO,OAAO1U,GACnBA,I,2BAEX,SAAchH,GACV,IAAI2b,EAAKzoB,KAAKsa,MAAMoO,OAAO5b,GAAM,SAAC0P,EAAGC,GACjC,OAAOD,EAAIC,EAAElS,MAAMuC,QAEvB,OAAO2b,GAAMA,EAAG7C,S,2BAEpB,SAAc9Y,GACV,IAAI2b,EAAKzoB,KAAKsa,MAAMoO,OAChB5b,GACA,SAAC0P,EAAGC,GACA,OAAOD,EAAIC,EAAElS,MAAMuC,QAEvB,GAEJ,GAAI2b,EAAI,CACJ,IAAI3U,EAAO2U,EAAG5C,OACd,GAAI/R,GAAQA,EAAKvJ,MAAMuC,KAAOA,GAAQgH,EAAKtJ,IAAIsC,KAAOA,EAClD,OAAO,EAGf,OAAO,I,0BAOX,SAAaA,EAAM6b,GACf,IAAIC,EAAQ,GACRpP,EAAY1M,EACZoN,EAAUla,KAAKma,MAAMX,EAAY,GACjCqP,EAAY,KAChB,GAAI3O,EAAQI,OAASJ,EAAQI,MAAM9V,OAC/B,IAAK,IAAI8G,EAAI,EAAGA,EAAI4O,EAAQI,MAAM9V,OAAQ8G,IAAK,CAC3C,IAAIwI,EAAOoG,EAAQI,MAAMhP,GACzB,GAAIwI,EAAKgJ,MAAQ,EACb8L,EAAMpd,KAAKsI,QACR,GAAIA,EAAKgJ,KAAO,EACnB,IAAK,IAAIxR,EAAIsd,EAAMpkB,OAAS,EAAG8G,GAAK,EAAGA,IACnC,GAAIsd,EAAMtd,GAAGwR,KAAOhJ,EAAKgJ,OAAS,EAAG,CACjC8L,EAAMlX,OAAOpG,EAAG,GAChB,OAMpB,GAAIsd,EAAMpkB,OAAQ,CACd,IAAIskB,EAAgB,GAKpB,GAJAD,EAAYD,EAAMvX,OAClBwX,EAAYhb,OAAOkb,OAAO,CAAEjc,KAAM0M,GAAaqP,GAC/CC,EAAgB5O,EAAQjS,KAAKyD,MAAMmd,EAAUzN,WAAYyN,EAAUxN,UAE/DyM,GAAagB,GACb,OAAO,EAGX,GAAID,EAAUnkB,OAAS+C,EAAAA,UAAAA,aAA6B,CAChD,IAAIgS,EAAUD,EACV1F,EAAO,KACXhH,EAAO0M,EAAY,EACnB,MAAO1M,GAAQ9M,KAAKma,MAAM3V,OAAQ,CAC9B,IAAI0V,EAAUla,KAAKma,MAAMrN,EAAO,GAC5B7E,EAAOiS,EAAQjS,KAAK+gB,WACpB5N,EAAalB,EAAQjS,KAAKzD,OAASyD,EAAKzD,OACxCykB,EAAQ/O,EAAQI,OAASJ,EAAQI,MAAM,GAC3C,IAAI2O,GAASA,EAAMvkB,OAAS+C,EAAAA,UAAAA,cAA+BwhB,EAAM7N,aAAeA,EAQ5E,MALA,GAFA3B,EAAU3M,EACVgH,EAAOmV,EACHN,GAAiBlP,EAAUD,EAAY,EACvC,OAAO,EAEX1M,IAKR,OAAI6b,EACOlP,EAAUD,EAAY,EAEtB,CACHjP,MAAOse,EACPre,IAAKqD,OAAOkb,OAAO,CAAEjc,KAAM2M,GAAW3F,IAIlD,OAAO9T,KAAKkpB,wBAAwBL,EAAWF,GAEnD,OAAO,I,qCAEX,SAAwBE,EAAWF,GAC/B,IAAI7b,EAAO+b,EAAU/b,KACjB8b,EAAQ,GACRP,EAAa,KACjB,MAAOvb,GAAQ9M,KAAKma,MAAM3V,UAAYmkB,GAAiB7b,EAAO+b,EAAU/b,MAAQ,GAAI,CAChF,IAAIoN,EAAUla,KAAKma,MAAMrN,EAAO,GAChC,GAAIoN,EAAQI,OAASJ,EAAQI,MAAM9V,OAC/B,IAAK,IAAI8G,EAAI,EAAGA,EAAI4O,EAAQI,MAAM9V,OAAQ8G,IAAK,CAC3C,IAAIwI,EAAOoG,EAAQI,MAAMhP,GACzB,KAAIwB,IAAS+b,EAAU/b,MAAQgH,EAAKsH,YAAcyN,EAAUzN,YAG5D,GAAItH,EAAKgJ,OAAS+L,EAAU/L,KACxB8L,EAAMpd,KAAKsI,QACR,GAAI+U,EAAU/L,KAAOhJ,EAAKgJ,OAAS,EAAG,CACzC,GAAqB,IAAjB8L,EAAMpkB,OAKN,OAJA6jB,EAAa,CACT9d,MAAOse,EACPre,IAAKqD,OAAOkb,OAAO,CAAEjc,KAAMA,GAAQgH,IAEhC6U,EAAgB7b,EAAO+b,EAAU/b,KAAO,EAAIub,EAEnDO,EAAMO,OAKtBrc,IAEJ,OAAO6b,EAAgB7b,EAAO+b,EAAU/b,KAAO,EAAIub,I,6BAMvD,SAAgB9C,GACZ,IAAIzY,EAAOyY,EAAUzY,KACjB+b,EAAY,KACZD,EAAQ,GACZjN,EAAW,MAAO7O,GAAQ,IAAM+b,EAAW,CAEvC,IADA,IAAIvO,EAAQta,KAAKma,MAAMrN,EAAO,GAAGwN,OAAS,GACjChP,EAAIgP,EAAM9V,OAAS,EAAG8G,GAAK,EAAGA,IAAK,CACxC,IAAIwI,EAAOwG,EAAMhP,GAEjB,GAAGwI,EAAKpP,OAAS+C,EAAAA,UAAAA,IAEV,GAAIqM,EAAKgJ,KAAO,IAAMhQ,EAAOyY,EAAUzY,MAAQgH,EAAKuH,SAAWkK,EAAUha,QAC5Eqd,EAAMpd,KAAKsI,QACR,GAAIA,EAAKgJ,KAAO,IAAMhQ,EAAOyY,EAAUzY,MAAQgH,EAAKsH,YAAcmK,EAAUha,QAAS,CACxF,IAAI6d,GAAW,EACf,GAAIR,EAAMpkB,OACN,IAAK,IAAI8G,EAAIsd,EAAMpkB,OAAS,EAAG8G,GAAK,EAAGA,IACnC,GAAIsd,EAAMtd,GAAGwR,KAAOhJ,EAAKgJ,OAAS,EAAG,CACjC8L,EAAMlX,OAAOpG,EAAG,GAChB8d,GAAW,EACX,MAIZ,IAAKA,EAAU,CACXP,EAAYhb,OAAOkb,OAAO,CAAEjc,KAAMA,GAAQgH,GAC1C,MAAM6H,IAIlB7O,IAEJ,GAAI+b,EACA,OAAO7oB,KAAKkpB,wBAAwBL,K,yBAI5C,SAAY/b,GACR,IAAIxB,EAAI,EACJ+d,EAAY,EACZC,EAAW,EACXhP,EAAQta,KAAKsa,MAAMoN,UACvB,MAAOpc,EAAIgP,EAAM9V,QAAU6kB,EAAYvc,EAAM,CACzC,IAAIgH,EAAOwG,EAAMhP,GACjB,KAAI+d,EAAYvV,EAAKvJ,MAAMuC,KAAOwc,EAAWxc,GAIzC,MAHAuc,GAAavV,EAAKvJ,MAAMuC,KAAO,EAAIwc,EACnCA,EAAWxV,EAAKtJ,IAAIsC,KAIxBxB,IACA,MAAOA,EAAIgP,EAAM9V,QAAU8V,EAAMhP,GAAGd,IAAIsC,MAAQgH,EAAKtJ,IAAIsC,KAErDxB,IAIR,OADAge,GAAYxc,EAAOuc,EACZC,I,6BAGX,SAAgBxc,GACZ,IAAIyc,EAAUzc,EACVxB,EAAI,EACJgP,EAAQta,KAAKsa,MAAMoN,UACvB,MAAOpc,EAAIgP,EAAM9V,OAAQ,CACrB,IAAIsP,EAAOwG,EAAMhP,GACjB,KAAIwB,GAAQgH,EAAKtJ,IAAIsC,MAGjB,MAFAyc,GAAWzV,EAAKtJ,IAAIsC,KAAOgH,EAAKvJ,MAAMuC,KAAO,EAIjDxB,IACA,MAAOA,EAAIgP,EAAM9V,QAAU8V,EAAMhP,GAAGd,IAAIsC,MAAQgH,EAAKtJ,IAAIsC,KAErDxB,IAGR,OAAOie,M,mBC/SX,WAAYzS,EAAQtJ,EAASgc,IAAU,eACnCxpB,KAAKwpB,SAAWA,EAChBxpB,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAKiO,YAAcxG,EAAAA,eAAoBzH,KAAK+N,UAC5C/N,KAAKypB,iBAAmB,IAAIrd,OAAJ,YAAgBpM,KAAKiO,YAAYwK,OAAjC,OACxBzY,KAAKiO,YAAc,IAAI7B,OAAOpM,KAAKiO,YAAYwK,OAAQ,K,6CAE3D,SAAe3B,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,WAAY,YAAa,WAAY,eAAgB,SAAU,YAAa,UACjHrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,QAAS,eAAgB,iB,oBAEnE,SAAOkc,GACH,IAAIC,EAAY,KACZ3P,EAAM,EACNhP,EAAQ,EACR4e,EAAW5pB,KAAK4pB,WAChBC,EAAS,KAEb,GADAH,EAAYA,GAAa,GACrBE,EACAD,EAAY3pB,KAAK8pB,aAAaJ,EAAUK,OAAQL,EAAUM,cACvD,CAEH,GADAH,EAAUH,GAAaA,EAAUG,QAAW7pB,KAAKiqB,mBAC5CJ,IAAWA,EAAO5hB,KACnB,MAAO,CAAE+R,IAAK,EAAGhP,MAAO,GAE5B2e,EAAY3pB,KAAK+f,QAAQ8J,GA8B7B,OA5BIF,GAAaA,EAAUte,SACnBrL,KAAKkqB,WAAalqB,MAAQ0pB,EAAUM,SAChCJ,GACA5pB,KAAKmqB,OAAOC,aAAaT,EAAUte,OAAOb,KAC1CxK,KAAKwpB,SAASa,UAAUV,EAAUte,OAAOb,OAGA,IAArCxK,KAAKwpB,SAASc,cAAcnE,KAC5BnmB,KAAKmqB,OAAOI,aAAaZ,EAAUte,OAAOb,KAE1CxK,KAAKwqB,aAETxqB,KAAKwpB,SAASiB,SAASd,EAAUhM,UAGjCiM,GACA5pB,KAAKwpB,SAASkB,UAAUf,EAAUte,OAAOb,KACzCxK,KAAKmqB,OAAOI,aAAaZ,EAAUte,OAAOb,KAC1CxK,KAAKkqB,SAASS,gBAEd3qB,KAAKwpB,SAASiB,SAASd,EAAUhM,SACjC3d,KAAK4qB,eAGb5Q,EAAM2P,EAAU3P,IAChBhP,EAAQ2e,EAAUhM,QAAQnZ,QAGvB,CACHwV,IAAKA,EACLhP,MAAOA,K,qBAGf,SAAQ6e,GACJ,IAAI/C,EAAO9mB,KACP2c,EAAM,KACNnU,EAAO,KACP+B,EAAQ,KACRC,EAAM,KACNa,EAAS,KACTsS,EAAU,GACVtN,EAAS,GACTwa,EAAW,KACX/d,EAAO,EACPvB,EAAS,EACTvH,EAAQ,EACRiE,EAAOjI,KAAK6d,aACZiN,EAAQjB,EAAO5hB,KAAKob,MAAM,MAC1B5K,EAASoR,EAAO5hB,KAAKI,QAAQ,yDAA0D,QAEvFrI,KAAKypB,iBAAiB3N,KAAK+N,EAAO5hB,OAAS4hB,EAAOkB,YAClDtS,EAAS,4BAA8BA,EAAS,4BAEpDkE,EAAM,IAAIvQ,OAAO,WAAaqM,EAAS,cAAeoR,EAAOmB,WAAa,MAAQ,MAClFnB,EAASA,GAAU,GACnB,MAAQrhB,EAAOmU,EAAInU,KAAKP,GACfO,EAAK,IAIN+B,EAAQ,CACJuC,KAAMA,EACNvB,OAAQA,EAAS/C,EAAK,GAAGhE,OAASgE,EAAK,GAAGhE,QAE9CgG,EAAM,CACFsC,KAAMA,EAAOge,EAAMtmB,OAAS,EAC5B+G,OAAQuf,EAAMtmB,OAAS,EAAIsmB,EAAMzZ,OAAO7M,OAAS+G,EAAS/C,EAAK,GAAGhE,QAEtEsI,EAAOtC,EAAIsC,KACXvB,EAASf,EAAIe,OACbsf,EAAW,CACPtgB,MAAOA,EACPC,IAAKA,GAETmT,EAAQnS,KAAKqf,IACRxf,GAAU5D,EAAAA,WAAgB+C,EAAKsc,EAAKnT,eAAiB,IACtDtI,EAASwf,EACT7mB,EAAQ2Z,EAAQnZ,OAAS,EACzB6L,EAAOsN,EAAQnZ,OAAS,IAAK,KArBjCsI,IACAvB,EAAS,GAwBjB,OAAKoS,EAAQnZ,SAGR6G,GAAUsS,EAAQnZ,SACnBR,EAAQ,EACRqH,EAASsS,EAAQ,IAErB3d,KAAKirB,UAAY,CACbpB,OAAQA,EACRlM,QAASA,EACTtN,OAAQA,EACRrM,MAAOA,GAEJ,CACHgW,IAAKha,KAAKirB,UAAUjnB,MAAQ,EAC5B2Z,QAASA,EACTtS,OAAQA,IAfD,O,wBAkBf,WAAa,WACL6f,EAASlrB,KAAKwpB,SAASc,cAAc5C,UACzC1nB,KAAKirB,UAAU5a,OAAS,GACxB6a,EAAOxd,SAAQ,SAACuH,GACZ,IAAK,IAAI3J,EAAI,EAAGA,EAAI,EAAK2f,UAAUtN,QAAQnZ,OAAQ8G,IAAK,CACpD,IAAInJ,EAAO,EAAK8oB,UAAUtN,QAAQrS,GAClC,GAAiD,IAA7C7D,EAAAA,WAAgBwN,EAAM1K,MAAOpI,EAAKoI,OAAc,CAChD,EAAK0gB,UAAUjnB,MAAQsH,EACvB,EAAK2f,UAAU5a,OAAO/E,IAAK,EAC3B,a,2BAMhB,SAAcue,GAAQ,WAClB,GAAK7pB,KAAK4pB,YAAeC,EAGzB,OAAO,IAAIliB,SAAQ,SAACC,GAChB,IAAIujB,EAAkB,EAAKC,cAAc/oB,GAAK,GAAK,EACnD,EAAK+oB,cAAc/oB,GAAK8oB,EACxB,EAAK9R,WAAU,WACP,EAAK+R,cAAc/oB,KAAO8oB,KAG1B,EAAKvB,YAAcC,KACnBA,EAASA,GAAU,EAAKoB,UAAUpB,OAClC,EAAKc,cACL,EAAKjC,OAAO,CACRmB,OAAQA,KAGhBjiB,a,sBAIZ,WACI,QAAS5H,KAAKirB,Y,yBAMlB,SAAYI,GACJA,EACArrB,KAAKwpB,SAAS8B,qBAEdtrB,KAAKwpB,SAAS+B,aAElBvrB,KAAKirB,UAAY,O,yBAErB,WACQjrB,KAAKirB,YACLjrB,KAAKirB,UAAUjnB,OAAS,EACxBhE,KAAKirB,UAAU5a,OAAS,GACxBrQ,KAAKwpB,SAASoB,iB,2BAGtB,SAAcrF,GACV,IAAI5H,EAAU3d,KAAKirB,UAAUtN,QACzB3Z,EAAQhE,KAAKirB,UAAUjnB,MAC3BhE,KAAKirB,UAAUjnB,MAAQ2Z,EAAQnZ,OAAS,EACxC,IAAK,IAAI8G,EAAIqS,EAAQnZ,OAAS,EAAG8G,GAAK,EAAGA,IAAK,CAC1C,IAAInJ,EAAOwb,EAAQrS,GACfsR,EAAMnV,EAAAA,WAAgBtF,EAAKqI,IAAK+a,GACpC,GAAI3I,EAAM,IAAiB,IAAX5Y,GAAwB,IAAR4Y,EAAY,CACxC5c,KAAKirB,UAAUjnB,MAAQsH,EACvB,U,2BAIZ,SAAcia,GACV,IAAI5H,EAAU3d,KAAKirB,UAAUtN,QACzB3Z,EAAQhE,KAAKirB,UAAUjnB,MAC3BhE,KAAKirB,UAAUjnB,MAAQ,EACvB,IAAK,IAAIsH,EAAI,EAAGA,EAAIqS,EAAQnZ,OAAQ8G,IAAK,CACrC,IAAInJ,EAAOwb,EAAQrS,GACfsR,EAAMnV,EAAAA,WAAgBtF,EAAKqI,IAAK+a,GACpC,GAAI3I,EAAM,IAAiB,IAAX5Y,GAAwB,IAAR4Y,EAAY,CACxC5c,KAAKirB,UAAUjnB,MAAQsH,EACvB,U,uBAIZ,WACItL,KAAKirB,UAAUtN,QAAQjM,OAAO1R,KAAKirB,UAAUjnB,MAAO,GACpDhE,KAAKirB,UAAUjnB,U,mBAEnB,SAAMinB,GACFjrB,KAAKirB,UAAYA,EACbA,GACAjrB,KAAKwpB,SAASiB,SAASQ,EAAUtN,W,0BAGzC,WACI,OAAO3d,KAAKirB,Y,yBAEhB,WACI,OAAOjrB,KAAKirB,UAAUtN,QAAQ3d,KAAKirB,UAAUjnB,S,0BAEjD,SAAa+lB,EAAQC,GACjB,IAAIrM,EAAU3d,KAAKirB,UAAUtN,QACzBtS,EAAS,KACTrH,EAAQ,EACZ,GAAIhE,KAAKwrB,YAAcxrB,MAASgqB,EAUzB,CAEH,IAAI3Z,EAASrQ,KAAKirB,UAAU5a,OACxBob,EAAQ,EAERA,EADW,OAAX1B,GACS,EAED,EAEZ/lB,EAAQhE,KAAKirB,UAAUjnB,MAAQynB,EAC3BznB,GAAS2Z,EAAQnZ,OACjBR,EAAQ,EACDA,EAAQ,IACfA,EAAQ2Z,EAAQnZ,OAAS,GAGxB6L,EAAOrM,GAKRA,EAAQhE,KAAKirB,UAAUjnB,OAJvBqH,EAASsS,EAAQ3Z,GACjBqM,EAAOrM,IAAS,EAChBhE,KAAKirB,UAAUjnB,MAAQA,OA3BZ,OAAX+lB,EACA/pB,KAAK0rB,cAAc1rB,KAAK2T,cAExB3T,KAAK2rB,cAAc3rB,KAAK2T,cAE5B3P,EAAQhE,KAAKirB,UAAUjnB,MACvBqH,EAASrL,KAAKirB,UAAUtN,QAAQ3Z,GAChChE,KAAKirB,UAAU5a,OAAS,CAAE/E,GAAG,GA0BjC,MAAO,CACH0O,IAAKhW,EAAQ,EACbqH,OAAQA,EACRsS,QAASA,K,uBAGjB,WACI,GAAK3d,KAAKirB,UAGV,OAAOpd,OAAOkb,OAAO,GAAI/oB,KAAKirB,UAAUpB,U,6BAG5C,WACI,IAAIxe,EAAS,KACT0f,GAAY,EACZa,EAAa,GACb3W,EAAQjV,KAAKkqB,SAASV,SAASqC,oBAAoB7rB,KAAK2T,cAC5D,OAAI3T,KAAKkqB,WAAalqB,MAAQA,KAAKwpB,SAAS0B,OAAO/E,KAAO,EAC/C,MAEPlR,EACA2W,EAAa5rB,KAAK8rB,aAAa7W,EAAM1K,MAAO0K,EAAMzK,MAElDohB,EAAa5rB,KAAK+rB,aAAa9jB,KAC/B8iB,GAAY,GAEZa,IACAvgB,EAAS,CACLpD,KAAM2jB,EACNb,UAAWA,EACXC,WAAYD,IAGb1f,K,wBAEX,WACI,IAAIpD,EAAOjI,KAAKma,MAAMna,KAAK2T,aAAa7G,KAAO,GAAG7E,KAC9CmC,EAAM,GACNpG,EAAQhE,KAAK2T,aAAapI,OAC1BygB,EAAchoB,EACdioB,EAAYjoB,EACZ4Y,EAAM,KACV,MAAQA,EAAM5c,KAAKiO,YAAYzF,KAAKP,GAAQ,CACxC,GAAI2U,EAAI5Y,OAASA,GAAS4Y,EAAI5Y,MAAQ4Y,EAAI,GAAGpY,QAAUR,EAAO,CAC1DgoB,EAAcpP,EAAI5Y,MAClBioB,EAAYrP,EAAI5Y,MAAQ4Y,EAAI,GAAGpY,OAC/B4F,EAAMwS,EAAI,GACV,MACG,GAAIA,EAAI5Y,MAAQA,EACnB,MAKR,OAFAhE,KAAKiO,YAAY+O,UAAY,EAEtB,CACH/U,KAAMmC,EACN6K,MAAO,CACH1K,MAAO,CACHuC,KAAM9M,KAAK2T,aAAa7G,KACxBvB,OAAQygB,GAEZxhB,IAAK,CACDsC,KAAM9M,KAAK2T,aAAa7G,KACxBvB,OAAQ0gB,S,KC5UtBrE,GAAa,SAAUpL,EAAGC,GAC5B,IAAIG,EAAMnV,EAAAA,WAAgB+U,EAAEjS,MAAOkS,EAAElS,OACrC,OAAY,IAARqS,EACOnV,EAAAA,WAAgB+U,EAAEhS,IAAKiS,EAAEjS,KAE7BoS,G,cAIP,WAAY9F,EAAQtJ,IAAS,eACzBxN,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAKkrB,OAAS,IAAInF,GAAM6B,IACxB5nB,KAAKsqB,cAAgB,IAAIvE,GAAM6B,I,6CAEnC,SAAe9Q,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,SAAU,mBAAoB,wBACnErP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,UACtCxN,KAAKksB,eAAiB,SAACC,EAAM1qB,GACzB+L,EAAQtF,QAAQikB,EAAM1qB,IAE1BzB,KAAKosB,cAAgB,SAACD,EAAM1qB,GACxBqV,EAAO5O,QAAQikB,EAAM1qB,M,sBAG7B,SAASwT,GACL,IAAIwT,EAAKzoB,KAAKkrB,OAAOxC,OAAOzT,GAC5B,OAAOwT,GAAMA,EAAG7C,S,4BAEpB,SAAe9Y,GACX,IAAI6Q,EAAU,GACV8K,EAAKzoB,KAAKkrB,OAAOxC,OACjB,CAAE5b,KAAMA,EAAMvB,OAAQ,IACtB,SAAC9J,EAAOU,GACJ,OAAOV,EAAQU,EAAKoI,MAAMuC,QAE9B,GAEJ,GAAI2b,EAAI,CACJ,IAAIhnB,EAAQgnB,EAAG7C,OACf,MAAOnkB,EAAO,CACV,GAAIA,EAAM8I,QAAUuC,GAAQrL,EAAM+I,IAAIsC,OAASA,EAC3C6Q,EAAQnS,KAAK/J,QACV,GAAIA,EAAM8I,MAAMuC,KAAOA,EAC1B,MAEJrL,EAAQgnB,EAAG7C,QAGnB,OAAOjI,I,iCAGX,SAAoB4H,GAChB,IAAIla,EAASrL,KAAKkrB,OAAOxC,OAAOnD,GAAW,SAAC9jB,EAAOU,GAC/C,OAA2C,IAAvCsF,EAAAA,WAAgBhG,EAAOU,EAAKoI,QAAqD,IAArC9C,EAAAA,WAAgBhG,EAAOU,EAAKqI,KACjE,EAEJ/C,EAAAA,WAAgBhG,EAAOU,EAAKoI,UAEvC,OAAOc,GAAUA,EAAOua,S,mCAG5B,SAAsBL,GAClB,IAAIkD,EAAKzoB,KAAKkrB,OAAOxC,OACjBnD,GACA,SAAC9jB,EAAOU,GACJ,OAAOsF,EAAAA,WAAgBhG,EAAOU,EAAKoI,UAEvC,GAEJ,GAAIke,EAAI,CACJ,IAAIhnB,EAAQgnB,EAAG5C,OACf,GAAIpkB,GAASgG,EAAAA,WAAgBhG,EAAM+I,IAAK+a,IAAc,EAClD,OAAO9jB,EAIX,GAFAgnB,EAAG3H,QACHrf,EAAQgnB,EAAG7C,OACPnkB,GAAoD,GAA3CgG,EAAAA,WAAgBhG,EAAM8I,MAAOgb,GACtC,OAAO9jB,EAGf,OAAO,I,oBAEX,SAAOsoB,EAAQgB,GAAW,WACtB/qB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAAC6X,GAChC,IAAItQ,EAAQ,EAAK4W,oBAAoBtG,GACrC,GAAItQ,EAAO,CACP,IAAI1K,EAAQ0K,EAAM1K,MACdC,EAAMyK,EAAMzK,IAChB,EAAK2f,OAAOmC,WAAW/G,EAAWwE,EAAQgB,GAC3B,SAAXhB,EACItiB,EAAAA,WAAgB8d,EAAWtQ,EAAM1K,OAAS,EAC1CA,EAAQgb,EAER/a,EAAM+a,EAGN9d,EAAAA,WAAgB8d,EAAWtQ,EAAMzK,KAAO,EACxCA,EAAM+a,EAENhb,EAAQgb,EAGhB,EAAKgH,YAAYtX,EAAO,CACpB1K,MAAOA,EACPC,IAAKA,QAEN,CACH,IAAID,EAAQsD,OAAOkb,OAAO,GAAIxD,GAC1B/a,EAAM,EAAK2f,OAAOmC,WAAW/G,EAAWwE,EAAQgB,GACpD9V,EAAQ,EAAKuX,YAAYjiB,EAAOC,GAC5ByK,GACA,EAAKwV,SAAS,CACVlgB,MAAOA,EACPC,IAAKA,QAKrBxK,KAAKysB,qB,uBAET,WACI,IAAIjiB,EAAM,CACNsC,KAAM9M,KAAKma,MAAM3V,OACjB+G,OAAQvL,KAAKma,MAAM9I,OAAOpJ,KAAKzD,QAEnCxE,KAAKosB,cAAc,mBAAmB,GACtCpsB,KAAKmqB,OAAOI,aAAa/f,GACzBxK,KAAK0sB,SACD,CACI5f,KAAM,EACNvB,OAAQ,GAEZf,GAEJxK,KAAKysB,qB,gCAET,WAAqB,WACjBzsB,KAAKmqB,OAAOwC,iBACZ3sB,KAAKkrB,OAAOxd,SAAQ,SAACvL,GACjB,EAAKgoB,OAAOC,aAAajoB,EAAKqI,KACzBrI,EAAKI,SACNJ,EAAKI,QAAS,EACd,EAAK+nB,cAAc/Y,OAAOpP,OAGlCnC,KAAKysB,qB,uBAET,SAAUlH,GACN,IAAItQ,EAAQjV,KAAK6rB,oBAAoBtG,GACjCtQ,IAAUA,EAAM1S,SAChB0S,EAAM1S,QAAS,EACfvC,KAAKsqB,cAAc/Y,OAAO0D,IAE9BjV,KAAKysB,qB,sBAGT,SAASvB,GAAQ,WACTvN,EAAU,GACVvK,EAAO8X,aAAkBze,MAAQye,EAAS,CAACA,GAuC/C,OAtCA9X,EAAK1F,SAAQ,SAACuH,GACV,IAAI1K,EAAQ0K,EAAM1K,MACdC,EAAMyK,EAAMzK,IACZoiB,EAAOnlB,EAAAA,WAAgB8C,EAAOC,GAClC,GAAIoiB,EAAO,EAAG,CACV,IAAI/jB,EAAM0B,EACVA,EAAQC,EACRA,EAAM3B,OACH,IAAK+jB,EACR,OAEJ,IAAIrqB,EAAS,EAAK4nB,OAAO0C,uBAAuBtiB,EAAMuC,KAAMvC,EAAMgB,SAAW,EAAK4e,OAAO0C,uBAAuBriB,EAAIsC,KAAMtC,EAAIe,QAC9H0J,EAAQ,CACJ1K,MAAO,CACHuC,KAAMvC,EAAMuC,KACZvB,OAAQhB,EAAMgB,QAElBf,IAAK,CACDsC,KAAMtC,EAAIsC,KACVvB,OAAQf,EAAIe,QAEhBhJ,SAAUA,GAEd,IAAIuqB,EAAS,EAAKC,SAAS9X,GACxB6X,GACKA,EAAOvqB,SACPuqB,EAAOvqB,OAASA,EAChB,EAAK+nB,cAAc/Y,OAAOub,IAE9BnP,EAAQnS,KAAKshB,KAEb,EAAK5B,OAAO3Z,OAAO0D,GACnB1S,GAAU,EAAK+nB,cAAc/Y,OAAO0D,GACpC0I,EAAQnS,KAAKyJ,GACb,EAAK+X,YAAY/X,OAGzBjV,KAAKysB,mBACEvB,aAAkBze,MAAQkR,EAAUA,EAAQ,K,yBAEvD,SAAY1I,GACRA,EAAQjV,KAAKkrB,OAAO1C,OAAOvT,GACvBA,IACIA,EAAM1S,QACNvC,KAAKsqB,cAAc9B,OAAOvT,GAE9BjV,KAAKmqB,OAAO8C,aAAahY,EAAM1K,OAC/BvK,KAAKmqB,OAAO8C,aAAahY,EAAMzK,KAC/BxK,KAAKysB,sB,sBAQb,SAASliB,EAAOC,GACZ,IAAIoiB,EAAOnlB,EAAAA,WAAgB8C,EAAOC,GAClC,GAAIoiB,EAAO,EAAG,CACV,IAAI/jB,EAAM0B,EACVA,EAAQC,EACRA,EAAM3B,OACH,IAAK+jB,EACR,OAEJ,IAAIrqB,EAASvC,KAAKmqB,OAAO0C,uBAAuBtiB,EAAMuC,KAAMvC,EAAMgB,SAAWvL,KAAKmqB,OAAO0C,uBAAuBriB,EAAIsC,KAAMtC,EAAIe,QAC1H0J,EAAQ,CACR1K,MAAOsD,OAAOkb,OAAO,GAAIxe,GACzBC,IAAKqD,OAAOkb,OAAO,GAAIve,GACvBjI,SAAUA,GAMd,OAJAvC,KAAKurB,aACLvrB,KAAKkrB,OAAO3Z,OAAO0D,GACnB1S,GAAUvC,KAAKsqB,cAAc/Y,OAAO0D,GACpCjV,KAAKysB,mBACExX,I,uBAEX,SAAUsQ,GACN,IAAItQ,EAAQjV,KAAK6rB,oBAAoBtG,GACrCvlB,KAAKsqB,cAAc5c,SAAQ,SAACvL,GACxBA,EAAKI,QAAS,KAElBvC,KAAKsqB,cAAchZ,QACf2D,IACAA,EAAM1S,QAAS,EACfvC,KAAKsqB,cAAc/Y,OAAO0D,IAE9BjV,KAAKysB,qB,yBAET,SAAYlf,EAAQ0H,GAChB,IAAI1K,EAAQ0K,EAAM1K,MACdC,EAAMyK,EAAMzK,IACZoiB,EAAOnlB,EAAAA,WAAgB8C,EAAOC,GAClC,GAAIoiB,EAAO,EAAG,CACV,IAAI/jB,EAAM0B,EACVA,EAAQC,EACRA,EAAM3B,OACH,IAAK+jB,EACR,OAAO,EAEX5sB,KAAKkrB,OAAO1C,OAAOjb,GACnBA,EAAOhD,MAAMuC,KAAOvC,EAAMuC,KAC1BS,EAAOhD,MAAMgB,OAAShB,EAAMgB,OAC5BgC,EAAO/C,IAAIsC,KAAOtC,EAAIsC,KACtBS,EAAO/C,IAAIe,OAASf,EAAIe,OACxBvL,KAAKkrB,OAAO3Z,OAAOhE,GACnBvN,KAAKgtB,YAAYzf,GACjBvN,KAAKysB,qB,yBAET,SAAYxX,GAAO,WACXwT,EAAKzoB,KAAKkrB,OAAOxC,OAAOzT,GACxBiY,EAAO,GACPzrB,EAAQgnB,EAAG5C,OACXpkB,GAASgG,EAAAA,WAAgBhG,EAAM+I,IAAKyK,EAAM1K,OAAS,GAEnD2iB,EAAK1hB,KAAK/J,GAEdgnB,EAAG3H,QACH2H,EAAG7C,OACHnkB,EAAQgnB,EAAG7C,OACPnkB,GAASgG,EAAAA,WAAgBwN,EAAMzK,IAAK/I,EAAM8I,OAAS,GACnD2iB,EAAK1hB,KAAK/J,GAEdyrB,EAAKxf,SAAQ,SAACvL,GACV,EAAK+oB,OAAO1C,OAAOrmB,GACnB,EAAKmoB,cAAc9B,OAAOrmB,GAC1B,EAAKgoB,OAAO8C,aAAa9qB,EAAKoI,OAC9B,EAAK4f,OAAO8C,aAAa9qB,EAAKqI,U,yBAGtC,SAAYD,EAAOC,GACf,IAAIoiB,EAAOnlB,EAAAA,WAAgB8C,EAAOC,GAClC,GAAIoiB,EAAO,EAAG,CACV,IAAI/jB,EAAM0B,EACVA,EAAQC,EACRA,EAAM3B,EAEV,OAAa,IAAT+jB,EACO,KAEJ,CACHriB,MAAOA,EACPC,IAAKA,K,wBAIb,WACIxK,KAAKkrB,OAAO5Z,QACZtR,KAAKsqB,cAAchZ,QACnBtR,KAAKysB,qB,yBAET,WACIzsB,KAAKsqB,cAAc5c,SAAQ,SAACvL,GACxBA,EAAKI,QAAS,KAElBvC,KAAKsqB,cAAchZ,QACnBtR,KAAKysB,qB,gCAET,WAAqB,WACZzsB,KAAKsqB,cAAcnE,MAGpBnmB,KAAKkrB,OAAOxd,SAAQ,SAACvL,GACZA,EAAKI,QACN,EAAK2oB,OAAO1C,OAAOrmB,MAG3BnC,KAAKysB,oBAPLzsB,KAAKurB,e,mBAUb,SAAMtW,EAAOxH,GACTA,EAAaA,GAAc,GAC3B,IAAIpC,EAAS,CACTd,MAAOsD,OAAOkb,OAAO,GAAI9T,EAAM1K,OAC/BC,IAAKqD,OAAOkb,OAAO,GAAI9T,EAAMzK,MAKjC,OAHAiD,EAAWC,SAAQ,SAACtL,GAChBiJ,EAAOjJ,GAAO6S,EAAM7S,MAEjBiJ,M,KClVTuL,GAAO,CACTjH,KAAM,eACNwd,MAAO1lB,EAAAA,aACPkE,MAAO,M,cAGP,WAAYmL,EAAQtJ,IAAS,eACzBxN,KAAK+S,eAAe+D,EAAQtJ,GAC5BxN,KAAKqsB,eAAiB,IAAItG,GAAMte,EAAAA,YAChCzH,KAAKotB,aAAe,OACpBptB,KAAKiO,YAAcxG,EAAAA,eAAoBzH,KAAK+N,UAC5C/N,KAAKqtB,iBAAmB,IAAIjhB,OAAJ,YAAgBpM,KAAKiO,YAAYwK,OAAjC,MACxBzY,KAAKstB,gBAAkB,IAAIlhB,OAAJ,WAAepM,KAAKiO,YAAYwK,OAAhC,O,6CAE3B,SAAe3B,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,WAAY,eAAgB,WAAY,WAAY,kBAAmB,eAAgB,mBAAoB,gBAChJrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CAAC,Y,0BAG1C,SAAa+X,GACT,IAAIgI,EAAMvtB,KAAK6sB,uBAAuBtH,EAAUzY,KAAMyY,EAAUha,QAChE,OAAIgiB,GACAvtB,KAAKwtB,gBAAgBD,GACdA,IAEXhI,EAAY,CACRzY,KAAMyY,EAAUzY,KAChBvB,OAAQga,EAAUha,QAEtBvL,KAAKqsB,eAAe9a,OAAOgU,GAC3BvlB,KAAKwtB,gBAAgBjI,GACdA,K,4BAEX,WAAiB,WACbvlB,KAAKqsB,eAAe3e,SAAQ,SAACvL,GACzB,GAAIA,EAAK2K,KAAO,EAAG,CACf,IAAIjC,EAAQ1I,EAAKsrB,WAAa,EAAKC,YAAY,EAAKvT,MAAMhY,EAAK2K,KAAO,GAAG7E,KAAM,EAAG9F,EAAKoJ,QACnFA,EAAS,EAAKoiB,iBAAiB,EAAKxT,MAAMhY,EAAK2K,KAAO,GAAG7E,KAAM4C,GAC/D0a,EAAY,EAAK6E,aAAa,CAC9Btd,KAAM3K,EAAK2K,KAAO,EAClBvB,OAAQA,IAEZga,EAAUkI,UAAY5iB,EACtB,EAAK2iB,gBAAgBjI,S,4BAIjC,WAAiB,WACbvlB,KAAKqsB,eAAe3e,SAAQ,SAACvL,GACzB,GAAIA,EAAK2K,KAAO,EAAKqN,MAAM3V,OAAQ,CAC/B,IAAIqG,EAAQ1I,EAAKsrB,WAAa,EAAKC,YAAY,EAAKvT,MAAMhY,EAAK2K,KAAO,GAAG7E,KAAM,EAAG9F,EAAKoJ,QACnFA,EAAS,EAAKoiB,iBAAiB,EAAKxT,MAAMhY,EAAK2K,MAAM7E,KAAM4C,GAC3D0a,EAAY,EAAK6E,aAAa,CAC9Btd,KAAM3K,EAAK2K,KAAO,EAClBvB,OAAQA,IAEZga,EAAUkI,UAAY5iB,EACtB,EAAK2iB,gBAAgBjI,S,+BAIjC,WAAoB,WACZvlB,KAAKwpB,SAASc,cAAcnE,OAC5BnmB,KAAK2sB,iBACL3sB,KAAKwpB,SAASc,cAAc5c,SAAQ,SAACvL,GACjC,IAAIqX,EAAYrX,EAAKoI,MAAMuC,KACvB2M,EAAUtX,EAAKqI,IAAIsC,KACvB,MAAO0M,EAAYC,EACf,EAAK2Q,aAAa,CACdtd,KAAM0M,EACNjO,OAAQ,EAAK4O,MAAMX,EAAY,GAAGvR,KAAKzD,SAE3CgV,IAEJ,EAAKgU,gBACD,EAAKpD,aAAa,CACdtd,KAAM2M,EACNlO,OAAQ,EAAK4O,MAAMV,EAAU,GAAGxR,KAAKzD,aAIjDxE,KAAKkqB,SAASS,iB,0BAItB,SAAapF,GAKT,GAJAA,EAAY,CACRzY,KAAMyY,EAAUzY,KAChBvB,OAAQga,EAAUha,QAEU,GAA5BvL,KAAKqsB,eAAelG,KAAW,CAC/B,IAAIoH,EAAMvtB,KAAKqsB,eAAe7f,IAAI,GAClC,GAAwC,IAApC/E,EAAAA,WAAgB8lB,EAAKhI,GACrB,OAAOgI,EAMf,OAHAvtB,KAAKqsB,eAAe/a,QACpBtR,KAAKqsB,eAAe9a,OAAOgU,GAC3BvlB,KAAKwtB,gBAAgBjI,GACdA,I,6BAEX,SAAgBA,EAAWzY,EAAMvB,GAC7B,IAAIgiB,EAAMvtB,KAAK6sB,uBAAuBtH,EAAUzY,KAAMyY,EAAUha,QAahE,OAZIgiB,IAAQhI,GACRvlB,KAAKqsB,eAAe7D,OAAOjD,GAE/BA,EAAUzY,KAAOA,EACjByY,EAAUha,OAASA,EACnBvL,KAAKqsB,eAAe9a,OAAOgU,GACvBA,IAAcvlB,KAAK2T,aAEnB3T,KAAKwtB,gBAAgBxtB,KAAK2T,cAE1B3T,KAAK4tB,eAEFrI,I,0BAEX,SAAaA,GACTA,EAAYvlB,KAAK6sB,uBAAuBtH,EAAUzY,KAAMyY,EAAUha,QAC9Dga,IACAA,EAAUsI,KAAM,EAChB7tB,KAAKqsB,eAAe7D,OAAOjD,GACvBA,IAAcvlB,KAAK2T,cACnB3T,KAAKwtB,gBAAgB,MAEzBxtB,KAAK4tB,kB,iCAGb,SAAoB3Y,GAAO,WACnBwT,EAAKzoB,KAAKqsB,eAAe3D,OAAOzT,EAAM1K,MAAO,MAAM,GACvD,GAAIke,EAAI,CACJ,IAAIhnB,EAAQ,KACRqsB,EAAS,GACb,MAAQrsB,EAAQgnB,EAAG7C,OAAS,CACxB,IAAIhJ,EAAMnV,EAAAA,WAAgBhG,EAAOwT,EAAMzK,KACvC,GAAIoS,GAAO,EACP,MAEAnV,EAAAA,WAAgBhG,EAAOwT,EAAM1K,OAAS,GACtCujB,EAAOtiB,KAAK/J,GAGpBqsB,EAAOpgB,SAAQ,SAACvL,GACZA,EAAK0rB,KAAM,EACX,EAAKxB,eAAe7D,OAAOrmB,MAE/BnC,KAAK4tB,kB,4BAGb,WACI5tB,KAAKqsB,eAAe3e,SAAQ,SAACvL,GACzBA,EAAK0rB,KAAM,KAEf7tB,KAAKqsB,eAAe/a,QACpBtR,KAAKwtB,gBAAgB,Q,8BAEzB,SAAiB1gB,GACb,IAAI6Q,EAAU,GACVlc,EAAQ,KACRgnB,EAAKzoB,KAAKqsB,eAAe3D,OACzB,CACI5b,KAAMA,EACNvB,OAAQ,GAEZ,MACA,GAEJ,GAAIkd,EACA,MAAQhnB,EAAQgnB,EAAG7C,OACf,GAAInkB,EAAMqL,OAASA,EACf6Q,EAAQnS,KAAK/J,QACV,GAAIA,EAAMqL,KAAOA,EACpB,MAIZ,OAAO6Q,I,oCAEX,SAAuB7Q,EAAMvB,GACzB,IAAIkd,EAAKzoB,KAAKqsB,eAAe3D,OAAO,CAChC5b,KAAMA,EACNvB,OAAQA,IAEZ,OAAOkd,GAAMA,EAAG7C,S,wBAGpB,SAAWL,EAAWwE,EAAQgB,GAC1B,IAAI9iB,EAAOjI,KAAKma,MAAMoL,EAAUzY,KAAO,GAAG7E,KACtC6E,EAAOyY,EAAUzY,KACjBvB,EAASga,EAAUha,OAKvB,GAHc,OAAXwe,GAA8B,SAAXA,IAClBxE,EAAUkI,UAAY,GAEX,SAAX1D,EACAxe,EAAS,OACN,GAAe,QAAXwe,EACPxe,EAASvL,KAAKma,MAAMrN,EAAO,GAAG7E,KAAKzD,YAChC,GAAe,OAAXulB,GACP,GAAIjd,EAAO,EAAG,CACV,IAAIjC,EAAQ0a,EAAUkI,WAAaztB,KAAK0tB,YAAYzlB,EAAM,EAAGsD,GAC7Dga,EAAUkI,UAAY5iB,EACtBiC,IACA7E,EAAOjI,KAAKma,MAAMrN,EAAO,GAAG7E,KAC5BsD,EAASvL,KAAK2tB,iBAAiB1lB,EAAM4C,SAEtC,GAAe,SAAXkf,GACP,GAAIjd,EAAO9M,KAAKma,MAAM3V,OAAQ,CAC1B,IAAIqG,EAAQ0a,EAAUkI,WAAaztB,KAAK0tB,YAAYzlB,EAAM,EAAGsD,GAC7Dga,EAAUkI,UAAY5iB,EACtBiC,IACA7E,EAAOjI,KAAKma,MAAMrN,EAAO,GAAG7E,KAC5BsD,EAASvL,KAAK2tB,iBAAiB1lB,EAAM4C,SAEtC,GAAe,SAAXkf,EAAmB,CAC1B,MAAkB,IAAXxe,GAAgBuB,EAAO,EAC1BA,IACA7E,EAAOjI,KAAKma,MAAMrN,EAAO,GAAG7E,KAC5BsD,EAAStD,EAAKzD,OAElB,GAAI+G,EAAS,EACT,GAAIwf,EAAW,CAEX,MAAOxf,GAAUtD,EAAKsD,EAAS,GAAGZ,MAAMiM,GAAKjL,OACzCJ,IAEJ,GAAIA,EAAS,EAAG,CACZ,IAAIqR,EAAM,KACNmR,EAAUxiB,EACdA,IACAtD,EAAOA,EAAKyD,MAAM,EAAGqiB,GACrBnR,EAAM5c,KAAKstB,gBAAgB9kB,KAAKP,GAC5B2U,IACArR,EAASqR,EAAI5Y,aAGduhB,EAAUzY,OAASA,GAC1BvB,QAGL,CACH,MAAOA,IAAWtD,EAAKzD,QAAUsI,EAAO9M,KAAKma,MAAM3V,OAC/CsI,IACAvB,EAAS,EACTtD,EAAOjI,KAAKma,MAAMrN,EAAO,GAAG7E,KAEhC,GAAIsD,EAAStD,EAAKzD,OACd,GAAIumB,EAAW,CAEX,MAAOxf,EAAStD,EAAKzD,QAAUyD,EAAKsD,GAAQZ,MAAMiM,GAAKjL,OACnDJ,IAEAA,EAAStD,EAAKzD,SACdyD,EAAOA,EAAKyD,MAAMH,GAClBtD,EAAOjI,KAAKqtB,iBAAiB7kB,KAAKP,GAC9BA,GAAsB,GAAdA,EAAKjE,MACbuH,GAAUtD,EAAK,GAAGzD,OAElB+G,UAGDga,EAAUzY,OAASA,GAC1BvB,IAMZ,OAFAvL,KAAKguB,gBAAgBzI,EAAWzY,EAAMvB,GAE/B,CACHuB,KAAMA,EACNvB,OAAQA,K,gCAGhB,WACIvL,KAAKotB,aAAqC,SAAtBptB,KAAKotB,aAA0B,MAAQ,W,mBCnR/D,WAAYtW,EAAQtJ,IAAS,eACzBxN,KAAKiuB,QAAU,GACfjuB,KAAK+S,eAAe+D,EAAQtJ,G,6CAEhC,SAAesJ,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAAC,WACrCrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CACjC,gBACA,gBACA,aACA,eACA,aACA,eACA,mBACA,qBACA,aACA,aACA,c,kBAIR,WACI,GAAIxN,KAAKiuB,QAAQjqB,MAAQ,EAAG,CACxB,IAAI8N,EAAU9R,KAAKiuB,QAAQjuB,KAAKiuB,QAAQjqB,MAAQ,GAGhD,GAFAhE,KAAKkuB,UAAUpc,GACf9R,KAAKiuB,QAAQjqB,QACT8N,EAAQqc,OAAQ,CAEhB,IAAIC,EAAWpuB,KAAKiuB,QAAQjuB,KAAKiuB,QAAQjqB,MAAQ,GACjDoqB,GAAYA,EAASD,SAAWrc,EAAQqc,QAAUnuB,KAAKquB,W,kBAKnE,WACI,GAAIruB,KAAKiuB,QAAQjqB,MAAQhE,KAAKiuB,QAAQzpB,OAAQ,CAC1C,IAAIsN,EAAU9R,KAAKiuB,QAAQjuB,KAAKiuB,QAAQjqB,OAGxC,GAFAhE,KAAKiuB,QAAQjqB,QACbhE,KAAKkuB,UAAUpc,GACXA,EAAQqc,OAAQ,CAEhB,IAAIC,EAAWpuB,KAAKiuB,QAAQjuB,KAAKiuB,QAAQjqB,OACzCoqB,GAAYA,EAASD,SAAWrc,EAAQqc,QAAUnuB,KAAKsuB,W,uBAKnE,SAAUxc,GACN,IAAIyc,EAAczc,EAAQpN,OAASoN,aAAmBrF,MAAQqF,EAAQ,GAAGpN,KAAOoN,EAAQpN,MACxF,OAAQ6pB,GACJ,KAAK9mB,EAAAA,QAAAA,OACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAKwuB,cAAc/mB,EAAAA,QAAAA,UAAwBqK,GAC3C,MACJ,KAAKrK,EAAAA,QAAAA,OAED,GADAzH,KAAKmqB,OAAOwC,iBACR7a,aAAmBrF,MAAO,CAC1B,IAAIxE,EAAO,GACX6J,EAAQpE,SAAQ,SAACvL,GACb8F,EAAKuD,KAAKrJ,EAAK8F,SAEnBjI,KAAK6gB,cAAc5Y,EAAM6J,QAEzB9R,KAAK6gB,cAAc/O,EAAQ7J,KAAM6J,GAErC,MACJ,KAAKrK,EAAAA,QAAAA,YACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAKyuB,WAAW3c,GAChB,MACJ,KAAKrK,EAAAA,QAAAA,YACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK0uB,WAAW5c,GAChB,MACJ,KAAKrK,EAAAA,QAAAA,OACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK2uB,WAAW7c,GAChB,MACJ,KAAKrK,EAAAA,QAAAA,SACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK4uB,aAAa9c,GAClB,MACJ,KAAKrK,EAAAA,QAAAA,UACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK6uB,aAAa/c,GAClB,MACJ,KAAKrK,EAAAA,QAAAA,iBACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK8uB,mBAAmBhd,GACxB,MACJ,KAAKrK,EAAAA,QAAAA,QACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAK+uB,WAAWjd,GAChB,MACJ,KAAKrK,EAAAA,QAAAA,eACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAKgvB,iBAAiBld,GACtB,MACJ,KAAKrK,EAAAA,QAAAA,QACDzH,KAAKmqB,OAAOwC,iBACZ3sB,KAAKqI,QAAQyJ,EAAQ7J,KAAM6J,EAAQyT,UAAWzT,GAC9C,S,yBAIZ,SAAYA,GACR,MAAO9R,KAAKiuB,QAAQzpB,OAASxE,KAAKiuB,QAAQjqB,MACtChE,KAAKiuB,QAAQ9E,MAEjB,IAAIrC,EAAO9mB,KACPivB,EAAcjvB,KAAKiuB,QAAQjuB,KAAKiuB,QAAQjqB,MAAQ,GAEpD,GADA8N,EAAU9R,KAAKkvB,WAAWpd,GACtBmd,aAAuBxiB,OAASqF,aAAmBrF,OAASwiB,EAAYzqB,SAAWsN,EAAQtN,QAAUuV,KAAKC,MAAQha,KAAKmvB,gBAAkB,IACzI,GAAIC,EAAaH,IAAgBG,EAAatd,IAAYud,EAAWJ,EAAY,GAAInd,EAAQ,IACzF,IAAK,IAAIxG,EAAI,EAAGA,EAAI2jB,EAAYzqB,OAAQ8G,IACpCgkB,EAAaL,EAAY3jB,GAAIwG,EAAQxG,SAGzCtL,KAAKiuB,QAAQziB,KAAKsG,QAEfud,EAAWJ,EAAand,GAC/Bwd,EAAaL,EAAand,GAE1B9R,KAAKiuB,QAAQziB,KAAKsG,GAKtB,SAASsd,EAAaG,GAClB,IAAK,IAAIjkB,EAAI,EAAGA,EAAIikB,EAAY/qB,OAAQ8G,IACpC,GAAIikB,EAAYjkB,GAAG5G,OAAS6qB,EAAYjkB,EAAI,GAAG5G,KAC3C,OAAO,EAGf,OAAO,EAGX,SAAS2qB,EAAWJ,EAAand,GAE7B,IACKA,EAAQpN,MAAQ+C,EAAAA,QAAAA,QAAuBqK,EAAQpN,MAAQ+C,EAAAA,QAAAA,SACxDwnB,GACAA,EAAYvqB,MAAQoN,EAAQpN,MAC5BuqB,EAAYjH,aAAalb,MAAQgF,EAAQyT,UAAUzY,MACnDiN,KAAKC,MAAQ8M,EAAKqI,gBAAkB,IACtC,CACE,GAAIF,EAAYvqB,MAAQ+C,EAAAA,QAAAA,QACgD,GAAhEA,EAAAA,WAAgBwnB,EAAY1J,UAAWzT,EAAQkW,cAC/C,OAAO,EAGf,GAAIiH,EAAYvqB,MAAQ+C,EAAAA,QAAAA,SACgD,GAAhEA,EAAAA,WAAgBwnB,EAAY1J,UAAWzT,EAAQkW,eAAmF,GAA7DvgB,EAAAA,WAAgBwnB,EAAY1J,UAAWzT,EAAQyT,YACpH,OAAO,GAOvB,SAAS+J,EAAaL,EAAand,GAC3Bmd,EAAYvqB,OAAS+C,EAAAA,QAAAA,QACrBqK,EAAQkW,aAAazc,QAAU0jB,EAAY1J,UAAUha,OAAS0jB,EAAYjH,aAAazc,OACvF0jB,EAAYjH,aAAelW,EAAQkW,aACnCiH,EAAY1J,UAAYzT,EAAQyT,YAEhC0J,EAAY1J,UAAYzT,EAAQyT,UAC5BzT,EAAQH,UAAYlK,EAAAA,QAAAA,OACpBwnB,EAAYhnB,KAAOgnB,EAAYhnB,KAAO6J,EAAQ7J,KAE9CgnB,EAAYhnB,KAAO6J,EAAQ7J,KAAOgnB,EAAYhnB,MA7C1DjI,KAAKiuB,QAAQjqB,MAAQhE,KAAKiuB,QAAQzpB,OAClCxE,KAAKmvB,gBAAkBpV,KAAKC,Q,2BAkDhC,SAAclI,GAAS,WACf9N,EAAQhE,KAAKiuB,QAAQjqB,MACrB8N,aAAmBrF,MACnBqF,EAAQpE,SAAQ,SAACvL,EAAMqtB,GACnBrtB,EAAKwP,QAAU,EAAKsc,QAAQjqB,EAAQ,GAAGwrB,GAAQ7d,WAGnDG,EAAQH,QAAU3R,KAAKiuB,QAAQjqB,EAAQ,GAAG2N,QAE9C3R,KAAKiuB,QAAQjqB,EAAQ,GAAKhE,KAAKkvB,WAAWpd,K,wBAE9C,SAAWA,GAWP,OAVIA,aAAmBrF,OACnBqF,EAAQ/I,MAAK,SAACyT,EAAGC,GAGb,OAFAD,EAAIA,EAAE+I,UACN9I,EAAIA,EAAE8I,UACF/I,EAAE1P,OAAS2P,EAAE3P,KACN0P,EAAEjR,OAASkR,EAAElR,OAEjBiR,EAAE1P,KAAO2P,EAAE3P,QAGnBgF,M,KCpMT8E,I,QAAO,CACTjH,KAAM,eACN8f,UAAW,0BACXC,UAAW,gCACXC,SAAU,WACVxC,MAAO1lB,EAAAA,aACPmoB,OAAQ,WACRjkB,MAAO,OAGLkkB,GAAAA,WACF,WAAY/Y,IAAQ,eAChB9W,KAAK4a,OAASlS,OAAOonB,iBACrB9vB,KAAKmuB,OAAS,EACdnuB,KAAKma,MAAQ,GACbna,KAAK+vB,QAAU,GACf/vB,KAAKgwB,UAAY,IAAI/jB,IACrBjM,KAAKiwB,cAAgB,IAAIhkB,IACzBjM,KAAKkwB,gBAAkB,IAAIjkB,IAC3BjM,KAAK+S,eAAe+D,GACpB9W,KAAKmwB,W,6CAET,SAAerZ,GACXrP,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAChC,WACA,UACA,eACA,UACA,cACA,SACA,UACA,YACA,OACA,SACA,WACA,WACA,YACA,YACA,eACA,SACA,SACA,kBACA,YACA,aACA,cACA,UAEJ9W,KAAKosB,cAAgB,SAACD,EAAM1qB,GACxBqV,EAAO5O,QAAQikB,EAAM1qB,M,sBAG7B,WACIzB,KAAKma,MAAM3O,KAAK,CACZoP,OAAQ5a,KAAK4a,SACb3S,KAAM,GACN8M,KAAM,GACNlK,MAAO,EACPuP,OAAQ,GACRE,MAAO,GACPO,OAAQ,GACRN,UAAW,OAEfva,KAAKgwB,UAAUtjB,IAAI1M,KAAKma,MAAM,GAAGS,OAAQ5a,KAAKma,MAAM,M,qBAExD,SAAQgS,EAAM1qB,GACgB,oBAAfzB,KAAKmsB,KAGhBnsB,KAAKmsB,GAAQ1qB,K,2BAEjB,SAAcwG,EAAM6J,GAChB,IAAIse,EAAa,KACbC,EAAgB,GAChBlC,GAAS,EACb,GAAKrc,EAUDA,EAAQpE,SAAQ,SAACvL,GAEbkuB,EAAc7kB,KAAKrJ,EAAKojB,kBAZlB,CAEV,GAAIvlB,KAAKwpB,SAASc,cAAcnE,KAAM,CAClC,IAAImK,EAActwB,KAAKwuB,gBAEvB8B,EAAYnC,OAASnuB,KAAKmuB,SAC1BA,EAASmC,EAAYnC,OAEzBkC,EAAgBrwB,KAAKmqB,OAAOkC,eAAe3E,UAmB/C,OAZA0I,EAAapwB,KAAKuwB,oBAAoBtoB,EAAMooB,EAAeve,GAC3Dse,EAAWjC,OAASA,EACfrc,GAKD9R,KAAKiuB,QAAQuC,cAAcJ,GAC3BA,EAAWjC,OAASrc,EAAQqc,QAJ5BnuB,KAAKiuB,QAAQwC,YAAYL,GAM7BpwB,KAAKwtB,gBAAgBxtB,KAAKmqB,OAAOkC,eAAe7f,IAAI,IACpDxM,KAAKwrB,UAAUJ,gBACRgF,I,iCAEX,SAAoBnoB,EAAMooB,EAAeve,GAAS,WAC1C4e,EAAS,KACTC,EAAa,KACbP,EAAa,GACbQ,EAAQ3oB,aAAgBwE,MAAQxE,EAAOA,EAAKob,MAAM,WAClDwN,EAAY,EACZC,EAAc,EAuClB,OAtCA9wB,KAAKmqB,OAAOwC,iBACC,OAAT1kB,IACA2oB,EAAQ,CAAC,OAEbP,EAAc3iB,SAAQ,SAAC6X,EAAWvhB,GAC9B,IAAImhB,EAAQyL,EAAMpsB,SAAW6rB,EAAc7rB,OAASosB,EAAM5sB,GAASiE,EAC/D8oB,EAAcjf,GAAWA,EAAQ9N,IAAW,GAC5CgtB,EAASD,EAAWC,QAAU,QAC9BzuB,EAASwuB,EAAWxuB,SAAU,EAC9BgrB,EAAM,CACNzgB,KAAMyY,EAAUzY,KAChBvB,OAAQga,EAAUha,QAEtBgiB,EAAIzgB,MAAQ+jB,EACRH,GAAUnD,EAAIzgB,OAAS4jB,EAAO5jB,KAC9BygB,EAAIhiB,QAAUulB,EAEdA,EAAc,EAElBH,EAAa,EAAKM,eAAe9L,EAAOoI,GAAMzb,GAC9Cse,EAAW5kB,KAAKmlB,GAChBD,EAASC,EAAWpL,UACpBoL,EAAWK,OAASA,EACpBL,EAAWpuB,OAASA,EACpBsuB,GAAaF,EAAWpL,UAAUzY,KAAO6jB,EAAW3I,aAAalb,KACjEgkB,GAAeH,EAAWpL,UAAUha,OAASolB,EAAW3I,aAAazc,OACtD,UAAXylB,EACA,EAAK7G,OAAOC,aAAauG,EAAWpL,WAEpC,EAAK4E,OAAOC,aAAauG,EAAW3I,cAEpCzlB,GACA,EAAKinB,SAASiB,SAAS,CACnBlgB,MAAOomB,EAAW3I,aAClBxd,IAAKmmB,EAAWpL,eAIrB6K,I,4BAGX,SAAenoB,EAAMsd,EAAW2L,GAAc,WACtChX,EAAUla,KAAKma,MAAMoL,EAAUzY,KAAO,GACtCqkB,EAAcjX,EAAQjS,KACtBmpB,EAASvjB,OAAOkb,OAAO,GAAIxD,GAiB/B,GAhBAA,EAAUkI,UAAY,EACtBxlB,EAAOA,EAAKob,MAAM,WAClBpb,EAAOA,EAAKiT,KAAI,SAAC/Y,GAYb,OAXAA,EAAO,CACHyY,OAAQ,EAAKA,SACb3S,KAAM9F,EACN4S,KAAM,GACNlK,MAAO,EACPuP,OAAQ,KACRE,MAAO,KACPO,OAAQ,KACRN,UAAW,MAEf,EAAKyV,UAAUtjB,IAAIvK,EAAKyY,OAAQzY,GACzBA,KAEP8F,EAAKzD,OAAS,EAAG,CAEjB,IAAKyD,EAAK,GAAGA,MAAQipB,EAAc,CAC/B,IAAIG,EAASC,EAAWC,KAAKvxB,KAAMmxB,EAAanxB,KAAK6O,OAAOyZ,aAAa/C,EAAUzY,MAAM,IACrFukB,IACAppB,EAAK,GAAGA,KAAOopB,EAASppB,EAAK,GAAGA,KAAK+gB,YAI7CoI,EAAO7lB,OAAStD,EAAKA,EAAKzD,OAAS,GAAGyD,KAAKzD,OAC3CyD,EAAK,GAAGA,KAAOkpB,EAAYzlB,MAAM,EAAG6Z,EAAUha,QAAUtD,EAAK,GAAGA,KAChEA,EAAKA,EAAKzD,OAAS,GAAGyD,KAAOA,EAAKA,EAAKzD,OAAS,GAAGyD,KAAOkpB,EAAYzlB,MAAM6Z,EAAUha,QACtFvL,KAAKma,MAAQna,KAAKma,MACbzO,MAAM,EAAG6Z,EAAUzY,KAAO,GAC1B0kB,OAAOvpB,GACPupB,OAAOxxB,KAAKma,MAAMzO,MAAM6Z,EAAUzY,YAGvCskB,EAAO7lB,QAAUtD,EAAK,GAAGA,KAAKzD,OAC9ByD,EAAK,GAAGA,KAAOkpB,EAAYzlB,MAAM,EAAG6Z,EAAUha,QAAUtD,EAAK,GAAGA,KAAOkpB,EAAYzlB,MAAM6Z,EAAUha,QACnGvL,KAAKma,MAAMzI,OAAO6T,EAAUzY,KAAO,EAAG,EAAG7E,EAAK,IAElDmpB,EAAOtkB,MAAQ7E,EAAKzD,OAAS,EAC7BxE,KAAKosB,cAAc,UAAWpsB,KAAKma,MAAM3V,QACzCxE,KAAKyxB,KAAKC,qBAAqBnM,EAAUzY,KAAMskB,EAAOtkB,MACtD9M,KAAK2xB,UAAUD,qBAAqBnM,EAAUzY,KAAMskB,EAAOtkB,MAC3D9M,KAAK6O,OAAO6iB,qBAAqB7jB,OAAOkb,OAAO,GAAIxD,GAAY1X,OAAOkb,OAAO,GAAIqI,IACjFpxB,KAAK4xB,aAAa3pB,GAClBjI,KAAKsd,UAAU,IACftd,KAAK+gB,WAAW,MAChB/gB,KAAKF,QAAO,GACZE,KAAKkT,MAAM,UACX,IAAIyd,EAAa,CACbjsB,KAAM+C,EAAAA,QAAAA,OACN8d,UAAW1X,OAAOkb,OAAO,GAAIqI,GAC7BpJ,aAAcna,OAAOkb,OAAO,GAAIxD,IAEpC,OAAOoL,EAEP,SAASW,EAAWrpB,EAAM4pB,GACtB,IAAI/mB,EAAS,EACTumB,EAAS,GAETS,EAAW,OAAOtpB,KAAKP,GACvB6pB,IACAhnB,EAAS,MAAMtC,KAAKspB,EAAS,IAC7BhnB,EAAUA,GAAUA,EAAO,GAAGtG,QAAW,EACzCsG,GAAkBK,KAAK4mB,MAAMD,EAAS,GAAGttB,OAASsG,GAAU9K,KAAK2I,UAErEmC,GAAU+mB,EAAO,EAAI,EACrB,IAAK,IAAIvmB,EAAI,EAAGA,EAAIR,EAAQQ,IACxB+lB,GAAU,KAEd,OAAOA,K,2BAGf,SAAc1f,EAASG,GAAS,WACxBse,EAAa,GACb4B,EAAY,GAyChB,OAxCIlgB,EACAkgB,EAAYlgB,EAAQoJ,KAAI,SAAC/Y,GACrB,IAAI2iB,EAAM,CACNva,MAAOpI,EAAK6lB,aACZxd,IAAKrI,EAAKojB,UACVyL,OAAQ7uB,EAAK6uB,OACbzuB,OAAQJ,EAAKI,QAEjB,OAAOuiB,KAGX9kB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAACvL,GAChC,IAAI8S,EAAQ,EAAKuU,SAASqC,oBAAoB1pB,GAC1C8S,GAC2C,IAAvCxN,EAAAA,WAAgBwN,EAAM1K,MAAOpI,GAC7B8S,EAAM+b,OAAS,OAEf/b,EAAM+b,OAAS,QAEnBgB,EAAUxmB,KAAKyJ,IAEf+c,EAAUxmB,KAAKrJ,MAI3BiuB,EAAapwB,KAAKiyB,oBAAoBD,EAAWrgB,GAC5CG,GAKDse,EAAWjC,OAASrc,EAAQqc,OAC5BnuB,KAAKiuB,QAAQuC,cAAcJ,GAC3BA,EAAW1iB,SAAQ,SAACvL,GAChB,EAAKgoB,OAAOC,aAAajoB,EAAKojB,eANlC6K,EAAW5rB,QAAUxE,KAAKiuB,QAAQwC,YAAYL,GASlDpwB,KAAKwtB,gBAAgBxtB,KAAKmqB,OAAOkC,eAAe7f,IAAI,IACpDxM,KAAKkqB,SAASS,cACd3qB,KAAKwrB,UAAUJ,gBACRgF,I,iCAEX,SAAoB4B,EAAWrgB,GAC3B,IAAImV,EAAO9mB,KACPowB,EAAa,GACbO,EAAa,KACbD,EAAS,KACTG,EAAY,EACZC,EAAc,EASlB,OARA9wB,KAAKmqB,OAAOwC,iBACZqF,EAAUtkB,SAAQ,SAACvL,GACXA,EAAKoI,OAASpI,EAAKqI,IACnB0nB,EAAgB/vB,GAEhBgwB,EAAiBhwB,MAGlBiuB,EAEP,SAAS+B,EAAiB5M,GACtB,IAAIgI,EAAM,CACNzgB,KAAMyY,EAAUzY,KAChBvB,OAAQga,EAAUha,QAEtBgiB,EAAIzgB,MAAQ+jB,EACRH,GAAUnD,EAAIzgB,OAAS4jB,EAAO5jB,KAC9BygB,EAAIhiB,QAAUulB,EAEdA,EAAc,EAElBH,EAAa7J,EAAKsL,eAAe7E,EAAK5b,GACtCgf,EAAW1oB,MAAQmoB,EAAW5kB,KAAKmlB,GACnCD,EAASC,EAAWpL,UACpBsL,GAAaF,EAAW3I,aAAalb,KAAO4jB,EAAO5jB,KACnDgkB,GAAeH,EAAW3I,aAAazc,OAASmlB,EAAOnlB,OACvDub,EAAKqD,OAAOC,aAAa,CACrBtd,KAAM4jB,EAAO5jB,KACbvB,OAAQmlB,EAAOnlB,SAIvB,SAAS2mB,EAAgBrH,GACrB,IAAItgB,EAAQsgB,EAAStgB,MACjBC,EAAMqgB,EAASrgB,IACnBD,EAAMuC,MAAQ+jB,EACdrmB,EAAIsC,MAAQ+jB,EACRH,GAAUnmB,EAAMuC,OAAS4jB,EAAO5jB,MAChCvC,EAAMgB,QAAUulB,EACZvmB,EAAMuC,OAAStC,EAAIsC,KACnBtC,EAAIe,QAAUulB,EAEdA,EAAc,GAGlBA,EAAc,EAElBH,EAAa7J,EAAKsL,eAAevH,EAAUlZ,GAC3Cgf,EAAW1oB,MAAQmoB,EAAW5kB,KAAKmlB,GACnCD,EAASC,EAAWpL,UACpBsL,GAAaF,EAAW3I,aAAalb,KAAO4jB,EAAO5jB,KACnDgkB,GAAeH,EAAW3I,aAAazc,OAASmlB,EAAOnlB,OACvDub,EAAKqD,OAAOC,aAAa,CACrBtd,KAAM4jB,EAAO5jB,KACbvB,OAAQmlB,EAAOnlB,Y,4BAK3B,SAAega,EAAW5T,GAAS,WAC3BsD,EAAQ,KACR+b,EAASrf,IAAYlK,EAAAA,QAAAA,OAAsB,OAAS,QACxD8d,EAAUkI,UAAY,EAClBlI,EAAUhb,OAASgb,EAAU/a,MAE7ByK,EAAQsQ,EACRA,EAAYtQ,EAAMzK,IAClBwmB,EAAS/b,EAAM+b,QAEnB,IAAIzmB,EAAQ,KACR8nB,EAAWryB,KAAKma,MAAMoL,EAAUzY,KAAO,GACvC7E,EAAOoqB,EAASpqB,KAChBqqB,EAAa,GACbC,EAAY,CAACF,EAASzX,QACtB4X,EAAY3kB,OAAOkb,OAAO,GAAIxD,GAC9B6L,EAASvjB,OAAOkb,OAAO,GAAIxD,GAC/B,GAAItQ,EAAO,CAEP,IAAIzK,EAAMyK,EAAMzK,IACZioB,EAASzyB,KAAKma,MAAM3P,EAAIsC,KAAO,GACnCvC,EAAQ0K,EAAM1K,MACd8nB,EAAWryB,KAAKma,MAAM5P,EAAMuC,KAAO,GACnC7E,EAAOoqB,EAASpqB,KAChBqqB,EAAatyB,KAAK8rB,aAAa7W,EAAM1K,MAAO0K,EAAMzK,KAChC,GAAdD,EAAMuC,MAAatC,EAAIsC,MAAQ9M,KAAK0T,SAEpC6e,EAAY,CAACvyB,KAAK0yB,YAAY9X,QAC9B5a,KAAKgwB,UAAU2C,SAEfJ,EAAYvyB,KAAKma,MAAMzO,MAAMnB,EAAMuC,KAAO,EAAGtC,EAAIsC,MAAMoO,KAAI,SAAC/Y,GAExD,OADA,EAAK6tB,UAAUxH,OAAOrmB,EAAKyY,QACpBzY,EAAKyY,UAGpB5a,KAAKgwB,UAAUtjB,IAAI2lB,EAASzX,OAAQyX,GAChC9nB,EAAMuC,MAAQtC,EAAIsC,MAElB7E,EAAOA,EAAKyD,MAAM,EAAGnB,EAAMgB,QAAUtD,EAAKyD,MAAMlB,EAAIe,QACpD8mB,EAASpqB,KAAOA,IAGhBA,EAAOA,EAAKyD,MAAM,EAAGnB,EAAMgB,QAC3B8mB,EAASpqB,KAAOA,EAChBA,EAAOwqB,EAAOxqB,KACdA,EAAOA,EAAKyD,MAAMlB,EAAIe,QACtB8mB,EAASpqB,MAAQA,EACjBjI,KAAKma,MAAMzI,OAAOnH,EAAMuC,KAAMtC,EAAIsC,KAAOvC,EAAMuC,OAEnDskB,EAAOtkB,KAAOvC,EAAMuC,KACpBskB,EAAO7lB,OAAShB,EAAMgB,YACnB,GAAI9D,EAAAA,QAAAA,QAAuBkK,EAE1B4T,EAAUha,QAAUtD,EAAKzD,OAErB+gB,EAAUzY,KAAO9M,KAAKma,MAAM3V,SAC5BxE,KAAKgwB,UAAUxH,OAAOxoB,KAAKma,MAAMoL,EAAUzY,MAAM8N,QACjD3S,EAAOoqB,EAASpqB,KAAOjI,KAAKma,MAAMoL,EAAUzY,MAAM7E,KAClDjI,KAAKma,MAAMzI,OAAO6T,EAAUzY,KAAM,GAClCwlB,EAAa,KACbE,EAAY,CACR1lB,KAAMyY,EAAUzY,KAAO,EACvBvB,OAAQ,KAIhB+mB,EAAarqB,EAAKsd,EAAUha,QAC5BtD,EAAOA,EAAKyD,MAAM,EAAG6Z,EAAUha,QAAUtD,EAAKyD,MAAM6Z,EAAUha,OAAS,GACvEinB,EAAY,CACR1lB,KAAMyY,EAAUzY,KAChBvB,OAAQga,EAAUha,OAAS,IAGnC8mB,EAASpqB,KAAOA,MACb,CAEH,GAAwB,GAApBsd,EAAUha,QAEV,GAAIga,EAAUzY,KAAO,EAAG,CACpB,IAAIvB,EAASvL,KAAKma,MAAMoL,EAAUzY,KAAO,GAAG7E,KAAKzD,OACjDxE,KAAKgwB,UAAUxH,OAAOxoB,KAAKma,MAAMoL,EAAUzY,KAAO,GAAG8N,QACrD3S,EAAOjI,KAAKma,MAAMoL,EAAUzY,KAAO,GAAG7E,KAAOA,EAC7CjI,KAAKma,MAAMzI,OAAO6T,EAAUzY,KAAO,EAAG,GACtCwlB,EAAa,KACblB,EAAOtkB,KAAOyY,EAAUzY,KAAO,EAC/BskB,EAAO7lB,OAASA,QAGpB+mB,EAAarqB,EAAKsd,EAAUha,OAAS,GACrCtD,EAAOA,EAAKyD,MAAM,EAAG6Z,EAAUha,OAAS,GAAKtD,EAAKyD,MAAM6Z,EAAUha,QAClE6lB,EAAO7lB,OAASga,EAAUha,OAAS,EAEvC8mB,EAASpqB,KAAOA,EAEpBoqB,EAASxnB,MAAQ7K,KAAK0tB,YAAY2E,EAASpqB,MAC3CoqB,EAAStd,KAAO,GAChBsd,EAASjY,OAAS,KAClBiY,EAAS/X,MAAQ,KACjB+X,EAASxX,OAAS,KAClBwX,EAAS9X,UAAY,KACrBva,KAAKosB,cAAc,UAAWpsB,KAAKma,MAAM3V,QACzCxE,KAAKyxB,KAAKmB,qBAAqBJ,EAAU1lB,KAAMskB,EAAOtkB,MACtD9M,KAAK2xB,UAAUiB,qBAAqBJ,EAAU1lB,KAAMskB,EAAOtkB,MAC3D9M,KAAK6O,OAAO+jB,qBAAqB/kB,OAAOkb,OAAO,GAAIyJ,GAAY3kB,OAAOkb,OAAO,GAAIqI,IACjFpxB,KAAKsd,UAAU,IACftd,KAAK+gB,WAAW,MAChB/gB,KAAKF,QAAO,GACZE,KAAKkT,MAAM,UAEPmf,EAASxnB,OAAS7K,KAAK0yB,YAAY7nB,MACnC7K,KAAKosB,cAAc,cAAe,CAC9BxR,OAAQyX,EAASzX,OACjB3S,KAAMoqB,EAASpqB,KACf4C,MAAOwnB,EAASxnB,QAEb0nB,EAAUpmB,QAAQnM,KAAK0yB,YAAY9X,SAAW,GACrD5a,KAAK6yB,cAET,IAAIlC,EAAa,CACbjsB,KAAM+C,EAAAA,QAAAA,OACN8d,UAAW1X,OAAOkb,OAAO,GAAIqI,GAC7BpJ,aAAcna,OAAOkb,OAAO,GAAIyJ,GAChCvqB,KAAMqqB,EACN3gB,QAASA,EACTqf,OAAQA,EACRzuB,OAAQ0S,GAASA,EAAM1S,QAE3B,OAAOouB,I,yBAGX,WACI,IAAI7J,EAAO9mB,KACPgE,EAAQ,EACRye,EAAY1I,KAAKC,MACjB0Y,EAAc,CACd5lB,KAAM9M,KAAKma,MAAM,GAAGS,OACpB/P,MAAO,GAKX,SAASioB,IACL,MAAO9uB,EAAQ8iB,EAAK3M,MAAM3V,OAAQ,CAC9B,IAAIrC,EAAO2kB,EAAK3M,MAAMnW,GAStB,GARI7B,EAAK0I,MAAQ6nB,EAAY7nB,QACzB6nB,EAAc,CACV9X,OAAQzY,EAAKyY,OACb3S,KAAM9F,EAAK8F,KACX4C,MAAO1I,EAAK0I,QAGpB7G,IACI+V,KAAKC,MAAQyI,EAAY,GACzB,MAGJze,EAAQ8iB,EAAK3M,MAAM3V,OACnBsiB,EAAKiM,iBAAmB/X,YAAW,WAC/B8X,MACD,IAEHhM,EAAKsF,cAAc,cAAesG,GAvB1CvZ,aAAanZ,KAAK+yB,kBAClBD,M,0BA8BJ,SAAalC,GACT,IAAI9J,EAAO9mB,KACPgE,EAAQ,EACRye,EAAY1I,KAAKC,MACjB0Y,EAAc1yB,KAAK0yB,YAIvB,SAASM,IACL,MAAOhvB,EAAQ4sB,EAAMpsB,OAAQ,CACzB,IAAI0V,EAAU0W,EAAM5sB,GACpB,GAAI8iB,EAAKkJ,UAAUzjB,IAAI2N,EAAQU,QAAS,CACpC,IAAI/P,EAAQic,EAAK4G,YAAYxT,EAAQjS,MACrCiS,EAAQrP,MAAQA,EACZA,EAAQ6nB,EAAY7nB,QACpB6nB,EAAc,CACV9X,OAAQV,EAAQU,OAChB3S,KAAMiS,EAAQjS,KACd4C,MAAOA,IAKnB,GADA7G,IACI+V,KAAKC,MAAQyI,EAAY,GACzB,MAGJze,EAAQ4sB,EAAMpsB,OACdsiB,EAAKmM,kBAAoBjY,YAAW,WAChCgY,MACD,IAEHlM,EAAKsF,cAAc,cAAesG,GA3B1CvZ,aAAanZ,KAAKizB,mBAClBD,M,wBA8BJ,SAAWlhB,GACP9R,KAAKkzB,SAASphB,EAAS,Q,0BAE3B,SAAaA,GACT9R,KAAKkzB,SAASphB,EAAS,U,sBAE3B,SAASA,EAASiY,GAAQ,WAClBsG,EAAgB,GAChB8C,EAAiB,GACjBnvB,EAAQ,EACR0sB,EAAS,KACT0C,EAAe,KACfthB,GACAshB,EAAethB,EAAQshB,aACvB/C,EAAgBve,EAAQyT,YAExB6N,EAAepzB,KAAKkqB,SAASmJ,YAC7BhD,EAAgB,GAEhBrwB,KAAKmqB,OAAOkC,eAAe3E,UAAUha,SAAQ,SAACvL,GAC1C,IAAI8S,EAAQ,EAAKuU,SAASqC,oBAAoB1pB,GAC1CmxB,GAAO,EACPxmB,EAAOmI,EAAQA,EAAM1K,MAAMuC,KAAO3K,EAAK2K,KAC3C,GAAI4jB,EAAQ,CACR,IAAI6C,EAAU7C,EAAOlmB,IAAMkmB,EAAOlmB,IAAIsC,KAAO4jB,EAAO5jB,KAChDymB,EAAU,IAAMzmB,GAAQymB,IAAYzmB,IAEpCmI,GAAS,EAAKuU,SAASgK,YAAYve,GACnCqe,GAAO,GAGf,GAAIA,EAAM,CACN,IAAIG,EAAUxe,GAASA,EAAMzK,IAAIsC,MAASA,EAC5B,IAATA,GAAyB,OAAXid,GAAqB0J,IAAW,EAAK/f,SAAsB,SAAXqW,EAC/DuJ,GAAO,GAEHre,GACAA,EAAM+b,OAAgD,IAAvCvpB,EAAAA,WAAgBwN,EAAM1K,MAAOpI,GAAc,OAAS,QACnEuuB,EAASzb,GAETyb,EAASvuB,EAEbkuB,EAAc7kB,KAAKklB,SAKnC,MAAO1sB,EAAQqsB,EAAc7rB,OAAQ,CACjC,IAAI+oB,EAAM8C,EAAcrsB,GACpBiR,EAAQsY,EAAIhjB,MAAQgjB,EAAM,KAC9BvtB,KAAK0zB,UAAUnG,EAAKxD,GAEpB,IAAI0B,EAAmB,SAAX1B,EAAoB,GAAK,EACjC9U,GAEAA,EAAM1K,MAAMuC,KAAOmI,EAAM1K,MAAMuC,KAAO2e,EACtCxW,EAAMzK,IAAIsC,KAAOmI,EAAMzK,IAAIsC,KAAO2e,GAGlC8B,EAAIzgB,KAAOygB,EAAIzgB,KAAO2e,EAE1B0H,EAAe3nB,KAAKyJ,EAAQjV,KAAKwpB,SAASmK,MAAM1e,EAAO,CAAC,WAAapH,OAAOkb,OAAO,GAAIwE,IACvFvpB,IAEJ,GAAKmvB,EAAe3uB,OAApB,CAGAxE,KAAKkqB,SAASS,cACd3qB,KAAKmqB,OAAOwC,iBAEZwG,EAAezlB,SAAQ,SAACvL,GAChBA,EAAKoI,OACL,EAAK4f,OAAOC,aAA6B,SAAhBjoB,EAAK6uB,OAAoB7uB,EAAKoI,MAAQpI,EAAKqI,KACpE,EAAKgf,SAASiB,SAAStoB,IAEvB,EAAKgoB,OAAOC,aAAajoB,MAGjC,IAAIwuB,EAAa,CACbjsB,KAAiB,SAAXqlB,EAAoBtiB,EAAAA,QAAAA,OAAsBA,EAAAA,QAAAA,SAChD8d,UAAW4N,EACXC,aAAcA,GAEbthB,GAMD9R,KAAKiuB,QAAQuC,cAAcG,GAC3B3wB,KAAKkqB,SAASkB,cAActZ,EAAQshB,gBALpCpzB,KAAKiuB,QAAQwC,YAAYE,GACzB3wB,KAAKkqB,SAASkB,cAAcgI,IAMhCpzB,KAAKwrB,UAAUJ,mB,uBAEnB,SAAU7F,EAAWwE,GACjB,IAAI9U,EAAQsQ,EAAUhb,MAAQgb,EAAY,KACtCqO,EAAS,EACTC,EAAW,EACX5rB,EAAO,GAEPgN,GACAhN,EAAOjI,KAAKma,MACPzO,MAAMuJ,EAAM1K,MAAMuC,KAAO,EAAGmI,EAAMzK,IAAIsC,MACtCoO,KAAI,SAAC/Y,GACF,OAAOA,EAAK8F,QAEfnB,KAAK,MACK,SAAXijB,GACA6J,EAAS3e,EAAM1K,MAAMuC,KACrB+mB,EAAW5e,EAAMzK,IAAIsC,KAAO,EAC5B7E,EAAOjI,KAAKma,MAAM0Z,EAAW,GAAG5rB,KAAO,KAAOA,IAE9C2rB,EAAS3e,EAAM1K,MAAMuC,KAAO,EAC5B+mB,EAAW5e,EAAMzK,IAAIsC,KACrB7E,EAAOA,EAAO,KAAOjI,KAAKma,MAAMyZ,EAAS,GAAG3rB,QAGhD2rB,EAASrO,EAAUzY,MAAmB,SAAXid,EAAoB,EAAI,GACnD8J,EAAWD,EAAS,EACpB3rB,EAAOjI,KAAKma,MAAM0Z,EAAW,GAAG5rB,KAAO,KAAOjI,KAAKma,MAAMyZ,EAAS,GAAG3rB,MAEzE,IAAIsC,EAAQ,CACRuC,KAAM8mB,EACNroB,OAAQ,GAERf,EAAM,CACNsC,KAAM+mB,EACNtoB,OAAQvL,KAAKma,MAAM0Z,EAAW,GAAG5rB,KAAKzD,QAE1CxE,KAAKoyB,eAAe,CAChB7nB,MAAOA,EACPC,IAAKA,IAETxK,KAAKixB,eAAehpB,EAAMsC,K,wBAG9B,SAAWuH,GACP9R,KAAK8zB,SAAShiB,EAAS,Q,0BAG3B,SAAaA,GACT9R,KAAK8zB,SAAShiB,EAAS,U,sBAE3B,SAASA,EAASiY,GAAQ,WAClBgK,EAAa,GACb1D,EAAgB,GAChB8C,EAAiB,GACjBzC,EAAS,KACTE,EAAQ,GACRwC,EAAe,KACfthB,GACAshB,EAAethB,EAAQshB,aACvBW,EAAajiB,EAAQyT,YAErB6N,EAAepzB,KAAKkqB,SAASmJ,YAC7BU,EAAa,GAEb/zB,KAAKmqB,OAAOkC,eAAe3E,UAAUha,SAAQ,SAACvL,GAC1C,IAAI8S,EAAQ,EAAKuU,SAASqC,oBAAoB1pB,GAC1C2K,EAAQmI,GAASA,EAAM1K,MAAMuC,MAAS3K,EAAK2K,KAC3CwmB,GAAO,EACX,GAAI5C,EAAQ,CACR,IAAI6C,EAAU7C,EAAOlmB,IAAMkmB,EAAOlmB,IAAIsC,KAAO4jB,EAAO5jB,KAChDymB,IAAYzmB,IACZwmB,GAAO,GAGXA,IACIre,GACAA,EAAM+b,OAAgD,IAAvCvpB,EAAAA,WAAgBwN,EAAM1K,MAAOpI,GAAc,OAAS,QACnEuuB,EAASzb,GAETyb,EAASvuB,EAEb4xB,EAAWvoB,KAAKklB,QAI5BqD,EAAWrmB,SAAQ,SAACvL,GAChB,IAAI2K,EAAO,EACP7E,EAAO,GACP9F,EAAKqI,KACLsC,EAAO3K,EAAKoI,MAAMuC,KAAO,EACzB7E,EAAO,EAAKkS,MACPzO,MAAMvJ,EAAKoI,MAAMuC,KAAO,EAAG3K,EAAKqI,IAAIsC,MACpCoO,KAAI,SAAC/Y,GACF,OAAOA,EAAK8F,QAEfnB,KAAK,QAEVgG,EAAO3K,EAAK2K,KAAO,EACnB7E,EAAO,EAAKkS,MAAMhY,EAAK2K,KAAO,GAAG7E,MAErC6E,EAAOA,EAAO,EAAI,EAAIA,EACtB7E,EAAO,KAAOA,EACd2oB,EAAMplB,KAAKvD,GACXooB,EAAc7kB,KAAK,CAAEsB,KAAMA,EAAMvB,OAAQ,EAAK4O,MAAMrN,EAAO,GAAG7E,KAAKzD,YAEvExE,KAAKuwB,oBAAoBK,EAAOP,GAAe3iB,SAAQ,SAACvL,EAAM6B,GAC1D,IAAI8I,EAAO,EACP0lB,EAAYuB,EAAW/vB,GAK3B,GAJA8I,EAAO3K,EAAKojB,UAAUzY,KACP,SAAXid,IACAjd,GAAe0lB,EAAUjoB,MAAQioB,EAAUhoB,IAAIsC,KAAO0lB,EAAUjoB,MAAMuC,KAAO,EAAI,GAEjF0lB,EAAUjoB,MAAO,CACjB,IAAIkhB,EAAQ+G,EAAUhoB,IAAIsC,KAAO0lB,EAAUjoB,MAAMuC,KACjD0lB,EAAUhoB,IAAIsC,KAAOA,EACrB0lB,EAAUjoB,MAAMuC,KAAOA,EAAO2e,OAE9B+G,EAAU1lB,KAAOA,EAErBqmB,EAAe3nB,KAAKgnB,EAAUjoB,MAAQ,EAAKif,SAASmK,MAAMnB,EAAW,CAAC,WAAa3kB,OAAOkb,OAAO,GAAIyJ,OAEzGxyB,KAAKkqB,SAASS,cACd3qB,KAAKmqB,OAAOwC,iBAEZwG,EAAezlB,SAAQ,SAACvL,GAChBA,EAAKoI,OACL,EAAK4f,OAAOC,aAA6B,SAAhBjoB,EAAK6uB,OAAoB7uB,EAAKoI,MAAQpI,EAAKqI,KACpE,EAAKgf,SAASiB,SAAStoB,IAEvB,EAAKgoB,OAAOC,aAAajoB,MAGjC,IAAIwuB,EAAa,CACbjsB,KAAiB,SAAXqlB,EAAoBtiB,EAAAA,QAAAA,iBAAgCA,EAAAA,QAAAA,eAC1D8d,UAAW4N,EACXC,aAAcA,GAEbthB,GAMD9R,KAAKiuB,QAAQuC,cAAcG,GAC3B3wB,KAAKkqB,SAASkB,cAActZ,EAAQshB,gBALpCpzB,KAAKiuB,QAAQwC,YAAYE,GACzB3wB,KAAKkqB,SAASkB,cAAcgI,IAMhCpzB,KAAKwrB,UAAUJ,kB,8BAGnB,SAAiBtZ,GACb9R,KAAKg0B,eAAeliB,EAAS,Q,gCAGjC,SAAmBA,GACf9R,KAAKg0B,eAAeliB,EAAS,U,4BAEjC,SAAeA,EAASiY,GAAQ,WACxBgK,EAAa,GACb1D,EAAgB,GAChB8C,EAAiB,GACrBY,EAAajiB,EAAQyT,UACrBwO,EAAWrmB,SAAQ,SAACvL,GAChB,IAAIyxB,EAAS,EACTC,EAAW,EACX5e,EAAQ,KACR+W,EAAc,EACdC,EAAY,EACZ9pB,EAAKqI,KACLopB,EAASzxB,EAAKoI,MAAMuC,KAAO,EAC3B+mB,EAAW1xB,EAAKqI,IAAIsC,OAEpB8mB,EAASzxB,EAAK2K,KAAO,EACrB+mB,EAAW1xB,EAAK2K,MAEpBmf,EAAY,EAAK9R,MAAM0Z,EAAW,GAAG5rB,KAAKzD,OACtCovB,EAAS,GACTA,EAAS,EACLC,EAAW,EAAKngB,UAChBmgB,IACA5H,EAAY,IAGhBD,EAAc,EAAK7R,MAAMyZ,EAAS,GAAG3rB,KAAKzD,OAE9CyQ,EAAQ,CACJ1K,MAAO,CAAEuC,KAAM8mB,EAAQroB,OAAQygB,GAC/BxhB,IAAK,CAAEsC,KAAM+mB,EAAUtoB,OAAQ0gB,IAEnCoE,EAAc7kB,KAAKyJ,MAEvBjV,KAAKiyB,oBAAoB5B,GAAe3iB,SAAQ,SAACvL,EAAM6B,GACnD,IAAIwuB,EAAYuB,EAAW/vB,GAC3B,GAAIwuB,EAAUjoB,MAAO,CACjB,IAAIkhB,EAAQ+G,EAAUhoB,IAAIsC,KAAO0lB,EAAUjoB,MAAMuC,KAClC,OAAXid,GACAyI,EAAUjoB,MAAMuC,KAAO3K,EAAKojB,UAAUzY,MAAiC,IAAzB0lB,EAAUjoB,MAAMuC,KAAa,EAAI,GAC/E0lB,EAAUhoB,IAAIsC,KAAO0lB,EAAUjoB,MAAMuC,KAAO2e,IAE5C+G,EAAUhoB,IAAIsC,KAAO3K,EAAKojB,UAAUzY,KACpC0lB,EAAUjoB,MAAMuC,KAAO0lB,EAAUhoB,IAAIsC,KAAO2e,QAI5C+G,EAAU1lB,KADC,OAAXid,EACiB5nB,EAAKojB,UAAUzY,MAA2B,IAAnB0lB,EAAU1lB,KAAa,EAAI,GAElD3K,EAAKojB,UAAUzY,KAGxCqmB,EAAe3nB,KAAKgnB,EAAUjoB,MAAQ,EAAKif,SAASmK,MAAMnB,EAAW,CAAC,WAAa3kB,OAAOkb,OAAO,GAAIyJ,OAEzGxyB,KAAKkqB,SAASS,cACd3qB,KAAKmqB,OAAOwC,iBAEZwG,EAAezlB,SAAQ,SAACvL,GAChBA,EAAKoI,OACL,EAAK4f,OAAOC,aAA6B,SAAhBjoB,EAAK6uB,OAAoB7uB,EAAKoI,MAAQpI,EAAKqI,KACpE,EAAKgf,SAASiB,SAAStoB,IAEvB,EAAKgoB,OAAOC,aAAajoB,MAGjC,IAAIwuB,EAAa,CACbjsB,KAAiB,SAAXqlB,EAAoBtiB,EAAAA,QAAAA,QAAuBA,EAAAA,QAAAA,UACjD8d,UAAW4N,EACXC,aAActhB,EAAQshB,cAE1BpzB,KAAKiuB,QAAQuC,cAAcG,GAC3B3wB,KAAKkqB,SAASkB,cAActZ,EAAQshB,cACpCpzB,KAAKwrB,UAAUJ,kB,wBAGnB,SAAWtZ,GAAS,WACZshB,EAAethB,EAAQshB,aACvBW,EAAajiB,EAAQyT,UACrBqL,EAAQ9e,EAAQ7J,KAChBooB,EAAgB,GACpB0D,EAAWrmB,SAAQ,SAACvL,GAChB,IAAI2K,EAAO3K,EAAKoI,MAAQpI,EAAKoI,MAAMuC,KAAO,EAAI3K,EAAK2K,KAAO,EAC1DA,EAAOA,EAAO,EAAI,EAAIA,EACtBujB,EAAc7kB,KAAK,CAAEsB,KAAMA,EAAMvB,OAAQ,EAAK4O,MAAMrN,EAAO,GAAG7E,KAAKzD,YAEvExE,KAAKuwB,oBAAoBK,EAAOP,GAChCrwB,KAAKkqB,SAASS,cACd3qB,KAAKmqB,OAAOwC,iBACZoH,EAAWrmB,SAAQ,SAACvL,GACZA,EAAKoI,OACL,EAAK4f,OAAOC,aAA6B,SAAhBjoB,EAAK6uB,OAAoB7uB,EAAKoI,MAAQpI,EAAKqI,KACpE,EAAKgf,SAASiB,SAAStoB,IAEvB,EAAKgoB,OAAOC,aAAajoB,MAGjC,IAAIwuB,EAAa,CACbjsB,KAAM+C,EAAAA,QAAAA,YACN8d,UAAWwO,EACXX,aAAcA,GAGlBpzB,KAAKiuB,QAAQuC,cAAcG,GAC3B3wB,KAAKkqB,SAASkB,cAActZ,EAAQshB,cACpCpzB,KAAKwrB,UAAUJ,kB,wBAGnB,SAAWtZ,GAAS,WACZiiB,EAAa,GACb1D,EAAgB,GAChB8C,EAAiB,GACjBzC,EAAS,KACTE,EAAQ,GACRwC,EAAe,KACfthB,GACAshB,EAAethB,EAAQshB,aACvBW,EAAajiB,EAAQyT,YAErB6N,EAAepzB,KAAKkqB,SAASmJ,YAC7BrzB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAACvL,GAChC,IAAI8S,EAAQ,EAAKuU,SAASqC,oBAAoB1pB,GAC1C2K,EAAQmI,GAASA,EAAM1K,MAAMuC,MAAS3K,EAAK2K,KAC3CwmB,GAAO,EACX,GAAI5C,EAAQ,CACR,IAAI6C,EAAU7C,EAAOlmB,IAAMkmB,EAAOlmB,IAAIsC,KAAO4jB,EAAO5jB,KAChDymB,IAAYzmB,IACZwmB,GAAO,GAGXA,IACIre,GACAA,EAAM+b,OAAgD,IAAvCvpB,EAAAA,WAAgBwN,EAAM1K,MAAOpI,GAAc,OAAS,QACnEuuB,EAASzb,GAETyb,EAASvuB,EAEb4xB,EAAWvoB,KAAKklB,QAI5BqD,EAAWrmB,SAAQ,SAACvL,GAChB,IAAIyxB,EAAS,EACTC,EAAW,EACX5e,EAAQ,KACR+W,EAAc,EACdC,EAAY,EACZ9pB,EAAKqI,KACLopB,EAASzxB,EAAKoI,MAAMuC,KAAO,EAC3B+mB,EAAW1xB,EAAKqI,IAAIsC,OAEpB8mB,EAASzxB,EAAK2K,KAAO,EACrB+mB,EAAW1xB,EAAK2K,MAEpBmf,EAAY,EAAK9R,MAAM0Z,EAAW,GAAG5rB,KAAKzD,OACtCovB,EAAS,GACTA,EAAS,EACLC,EAAW,EAAKngB,UAChBmgB,IACA5H,EAAY,IAGhBD,EAAc,EAAK7R,MAAMyZ,EAAS,GAAG3rB,KAAKzD,OAE9CyQ,EAAQ,CACJ1K,MAAO,CAAEuC,KAAM8mB,EAAQroB,OAAQygB,GAC/BxhB,IAAK,CAAEsC,KAAM+mB,EAAUtoB,OAAQ0gB,IAEnC2E,EAAMplB,KAAK,EAAKsgB,aAAa7W,EAAM1K,MAAO0K,EAAMzK,MAChD6lB,EAAc7kB,KAAKyJ,MAEvBjV,KAAKiyB,oBAAoB5B,GAAe3iB,SAAQ,SAACvL,EAAM6B,GACnD,IAAIwuB,EAAYuB,EAAW/vB,GACvB8I,EAAO3K,EAAKojB,UAAUzY,KACtBvB,EAASwoB,EAAW/vB,GAAOuH,OAC3BinB,EAAUjoB,QACVgB,EAA8B,SAArBinB,EAAUxB,OAAoBwB,EAAUjoB,MAAMgB,OAASinB,EAAUhoB,IAAIe,QAElFA,EAASA,EAAS,EAAK4O,MAAMrN,EAAO,GAAG7E,KAAKzD,OAAS,EAAK2V,MAAMrN,EAAO,GAAG7E,KAAKzD,OAAS+G,EACxF4nB,EAAe3nB,KAAK,CAAEsB,KAAMA,EAAMvB,OAAQA,OAE9CvL,KAAKkqB,SAASS,cACd3qB,KAAKmqB,OAAOwC,iBACZwG,EAAezlB,SAAQ,SAACvL,GACpB,EAAKgoB,OAAOC,aAAajoB,MAE7B,IAAIwuB,EAAa,CACbjsB,KAAM+C,EAAAA,QAAAA,YACN8d,UAAWwO,EACX9rB,KAAM2oB,EACNwC,aAAcA,GAEbthB,GAKD9R,KAAKiuB,QAAQuC,cAAcG,GAC3B3wB,KAAKkqB,SAASkB,cAActZ,EAAQshB,eAJpCpzB,KAAKiuB,QAAQwC,YAAYE,GAM7B3wB,KAAKwrB,UAAUJ,kB,qBAEnB,SAAQwF,EAAO1F,GACX,IAAIkF,EAAa,KACbjC,EAASnuB,KAAKmuB,SAOlB,OANAiC,EAAapwB,KAAKiyB,oBAAoB/G,GACtCkF,EAAWjC,OAASA,EACpBnuB,KAAKiuB,QAAQwC,YAAYL,GACzBA,EAAapwB,KAAKuwB,oBAAoBK,EAAO5wB,KAAKmqB,OAAOkC,eAAe3E,WACxE0I,EAAWjC,OAASA,EACpBnuB,KAAKiuB,QAAQwC,YAAYL,GAClBpwB,KAAKwrB,UAAUJ,kB,wBAG1B,SAAW6I,GACP,IAAItkB,EAAOskB,EAAItkB,MAAQ,GACnBqT,EAAQiR,EAAIjR,OAAS,GACrBa,EAASoQ,EAAIpQ,QAAU,GACvBxY,EAASwY,EAASqQ,EAAWD,GAAOjR,EACpCkI,EAAS,KAab,SAASgJ,EAAWD,GAChB,IAAI5oB,EAAS,GACb,GAAI4oB,EAAIvvB,OAAS2b,GAAAA,WAAAA,YAA8B4T,EAAIvvB,OAAS2b,GAAAA,WAAAA,UACxD,IACI,IAAMwJ,EAAS,GACXoK,EAAIvvB,OAAS2b,GAAAA,WAAAA,YACbwJ,EAAOnlB,KAAO,cAElB2G,GAAS8oB,EAAAA,GAAAA,IAAOF,EAAI5oB,OAAQwe,GAC9B,MAAO9jB,GACLsF,EAAS4oB,EAAI5oB,YAEV4oB,EAAIvvB,OAAS2b,GAAAA,WAAAA,SACpBhV,GAAU4oB,EAAI5oB,OAAJ,aAAmB4oB,EAAI5oB,OAAvB,KAEVA,EAAS4oB,EAAI5oB,OAEjB,OAAOA,EAGX,SAAS+oB,IACL,IAAIlJ,EAAS,GASb,OARAlrB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAAC6X,GAChC,IAAItQ,EAAQ,KACZA,EAAQ,CACJ1K,MAAO,CAAEuC,KAAMyY,EAAUzY,KAAMvB,OAAQga,EAAUha,OAASoE,EAAKnL,QAC/DgG,IAAK,CAAEsC,KAAMyY,EAAUzY,KAAMvB,OAAQga,EAAUha,SAEnD2f,EAAO1f,KAAKyJ,MAETiW,EAGX,SAASmJ,IAAa,WAClB,GAAIJ,EAAIvvB,OAAS2b,GAAAA,WAAAA,UAA4B4T,EAAIvvB,OAAS2b,GAAAA,WAAAA,WAA4B,CAElF,IAAI7X,EAAOoO,GAAKgZ,OAAOpnB,KAAK6C,GAC5B,GAAI7C,EAIA,IAHA,IAAIP,EAAOoD,EAAOK,MAAMlD,EAAKxE,OACzBswB,EAAWrsB,EAAKob,MAAM,MACtBgJ,EAAiBrsB,KAAKmqB,OAAOkC,eAAe3E,UACvCpc,EAAI+gB,EAAe7nB,OAAS,EAAG8G,GAAK,EAAGA,IAAK,CACjD,IAAIia,EAAYgP,EAAahD,KAAKvxB,KAAMs0B,EAAUjI,EAAe/gB,IACjEtL,KAAKmqB,OAAO6D,gBAAgB3B,EAAe/gB,GAAIia,EAAUzY,KAAMyY,EAAUha,cAG1E0oB,EAAIvvB,OAAS2b,GAAAA,WAAAA,WAEpBrgB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAACvL,GAChC,EAAKgoB,OAAOmC,WAAWnqB,EAAM,WAKzC,SAASoyB,EAAaD,EAAU/O,GAC5B,IAAIzY,EAAOyY,EAAUzY,KACjBvB,EAASga,EAAUha,OAOvB,OANwB,IAApB+oB,EAAS9vB,OACT+G,GAAU+oB,EAAS,GAAG9vB,QAEtBsI,GAAQwnB,EAAS9vB,OAAS,EAC1B+G,EAASvL,KAAKma,MAAMrN,EAAO,GAAG7E,KAAKzD,OAAS8vB,EAAS,GAAG9vB,QAErD,CACHsI,KAAMA,EACNvB,OAAQA,GA7EZF,IAAWsE,IAIfub,EAASkJ,EAAW7C,KAAKvxB,MACzBA,KAAKqI,QAAQgD,EAAQ6f,GACrBmJ,EAAW9C,KAAKvxB,MACZi0B,EAAIvvB,OAAS2b,GAAAA,WAAAA,cAEbrgB,KAAKw0B,aAAa9L,Y,0BAyE1B,SAAane,EAAOC,GAChB,IAAIvC,EAAOjI,KAAKma,MAAM5P,EAAMuC,KAAO,GAAG7E,KACtC,GAAIsC,EAAMuC,MAAQtC,EAAIsC,KAAM,CACxB,IAAIhE,EAAM,GACVb,EAAOA,EAAKyD,MAAMnB,EAAMgB,QACxBzC,EAAM9I,KAAKma,MAAMzO,MAAMnB,EAAMuC,KAAMtC,EAAIsC,KAAO,GAC9ChE,EAAMA,EAAIoS,KAAI,SAAC/Y,GACX,OAAOA,EAAK8F,QAEhBA,GAAQa,EAAItE,OAAS,KAAOsE,EAAIhC,KAAK,MAAQ,GACzC0D,EAAIsC,MAAQ9M,KAAK0T,UACjBzL,GAAQ,KAAOjI,KAAKma,MAAM3P,EAAIsC,KAAO,GAAG7E,KAAKyD,MAAM,EAAGlB,EAAIe,cAG9DtD,EAAOA,EAAKyD,MAAMnB,EAAMgB,OAAQf,EAAIe,QAExC,OAAOtD,I,yBAGX,SAAYwsB,GAAK,WACTxsB,EAAO,GACPyoB,EAAS,KACTxF,EAAS,GAyCb,OAxCAlrB,KAAKmqB,OAAOkC,eAAe3e,SAAQ,SAACvL,GAChC,IAAI8S,EAAQ,EAAKuU,SAASqC,oBAAoB1pB,GAC1CoI,EAAQ,KACR0K,EACAiW,EAAO1f,KAAKyJ,GAGZyb,GAAUvuB,EAAK2K,OAAS4jB,EAAO5jB,OAI/BvC,EADApI,EAAK2K,KAAO,EACJ,CACJA,KAAM3K,EAAK2K,KAAO,EAClBvB,OAAQ,EAAK4O,MAAMhY,EAAK2K,KAAO,GAAG7E,KAAKzD,QAGnC,CACJsI,KAAM3K,EAAK2K,KACXvB,OAAQ,GAGhB0J,EAAQ,CACJ1K,MAAOA,EACPC,IAAK,CACDsC,KAAM3K,EAAK2K,KACXvB,OAAQ,EAAK4O,MAAMhY,EAAK2K,KAAO,GAAG7E,KAAKzD,SAG/C0mB,EAAO1f,KAAKyJ,GACZyb,EAASvuB,MAEb+oB,EAAOxd,SAAQ,SAACvL,GACZ,IAAIiI,EAAM,EAAK0hB,aAAa3pB,EAAKoI,MAAOpI,EAAKqI,KAC7CvC,EAAkB,OAAXmC,EAAI,GAAenC,GAAQmC,EAAQnC,GAAQ,KAAOmC,KAEzDqqB,IACAz0B,KAAKiuB,QAAQwC,YAAYzwB,KAAKiyB,oBAAoB/G,IAClDlrB,KAAKkqB,SAASS,cACd3qB,KAAKwrB,UAAUJ,iBAEZnjB,EAAKyD,MAAM,K,wBAEtB,WACI,OAAO1L,KAAKma,MACPe,KAAI,SAAC/Y,GACF,OAAOA,EAAK8F,QAEfnB,KAAK,U,EAjoCZ+oB,GAooCNA,GAAQ6E,SAAW,GAEnB,U,cCjpCI,WAAY5d,EAAQtJ,IAAS,eACzBxN,KAAK+S,eAAe+D,EAAQtJ,G,6CAEhC,SAAesJ,EAAQtJ,GACnB/F,EAAAA,iBAAsBzH,KAAM8W,EAAQ,CAChC,eACA,SACA,WACA,WACA,eACA,YACA,UACA,cACA,aACA,cACA,cACA,gBACA,aACA,aACA,UAEJrP,EAAAA,iBAAsBzH,KAAMwN,EAAS,CACjC,QACA,gBACA,gBACA,aACA,eACA,aACA,eACA,eAEJxN,KAAKosB,cAAgB,SAACD,EAAM1qB,GACxBqV,EAAO5O,QAAQikB,EAAM1qB,M,uBAG7B,SAAUsE,GACN,IAAI+gB,EAAO9mB,KACX,GAAI+F,EAAEiN,SAAWjN,EAAE4uB,SAAU,CAEzB,OADA5uB,EAAE9E,iBACM8E,EAAE4L,SACN,KAAK,GACD3R,KAAKwpB,SAASoL,OAAO,QAAQ,GAC7B,MACJ,KAAK,GACD50B,KAAK2uB,aACL,MACJ,KAAK,GACD3uB,KAAKwpB,SAASoL,OAAO,SAAS,GAC9B,MACJ,KAAK,GACD50B,KAAK4uB,eACL,MACJ,KAAK,GACD5uB,KAAK+uB,aACL,MACJ,KAAK,GACD/uB,KAAKyuB,aACL,MACJ,KAAK,GACD1oB,EAAE9E,iBACFjB,KAAKmqB,OAAO0K,oBACZ,MAER,OAAO,EACJ,GAAI9uB,EAAEiN,SAAWjN,EAAE+uB,OACtB,OAAQ/uB,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAKmqB,OAAO4K,iBACZ,MACJ,KAAK,GACDhvB,EAAE9E,iBACFjB,KAAKmqB,OAAO6K,iBACZ,WAEL,GAAIjvB,EAAE+uB,QAAU/uB,EAAE4uB,SACrB,OAAQ5uB,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAK6uB,eACL,WAEL,GAAI9oB,EAAEiN,QACT,OAAQjN,EAAE4L,SACN,KAAK,GACDsjB,EAAY,QAAQ,GACpB,MACJ,KAAK,GACDA,EAAY,SAAS,GACrB,MACJ,KAAK,GACDlvB,EAAE9E,iBACFjB,KAAKwpB,SAAS0L,YACd,MACJ,KAAK,GACDnvB,EAAE9E,iBACFjB,KAAKm1B,WAAW,QAChB,MACJ,KAAK,GACDpvB,EAAE9E,iBACFjB,KAAKo1B,aACL,MACJ,KAAK,GACDrvB,EAAE9E,iBACFjB,KAAKo1B,YAAW,GAChB,MACJ,KAAK,GACDp1B,KAAKkT,MAAM,QACX,MACJ,KAAK,GACL,KAAK,IACDnN,EAAE9E,iBACFjB,KAAKiuB,QAAQI,OACb,MACJ,KAAK,GACL,KAAK,IACDtoB,EAAE9E,iBACFjB,KAAKiuB,QAAQK,OACb,WAEL,GAAIvoB,EAAE4uB,SACT,OAAQ5uB,EAAE4L,SACN,KAAK,GACD3R,KAAKwpB,SAASoL,OAAO,QACrB,MACJ,KAAK,GACD50B,KAAKwpB,SAASoL,OAAO,MACrB,MACJ,KAAK,GACD50B,KAAKwpB,SAASoL,OAAO,SACrB,MACJ,KAAK,GACD50B,KAAKwpB,SAASoL,OAAO,QACrB,WAGR,OAAQ7uB,EAAE4L,SACN,KAAK,EACD5L,EAAE9E,iBACFjB,KAAKw0B,aAAalP,QAClB,MACJ,KAAK,GACD2P,EAAY,QACZ,MACJ,KAAK,GACDA,EAAY,OACZ,MACJ,KAAK,GACDA,EAAY,QACZ,MACJ,KAAK,GACGj1B,KAAKgW,aAAehW,KAAKgW,YAAYxR,OACrCsiB,EAAKuO,cAELJ,EAAY,MAEhB,MACJ,KAAK,GACDA,EAAY,SACZ,MACJ,KAAK,GACGj1B,KAAKgW,aAAehW,KAAKgW,YAAYxR,OACrCsiB,EAAKwO,cAELL,EAAY,QAEhB,MACJ,KAAK,GACL,KAAK,IACGj1B,KAAKgW,aAAehW,KAAKgW,YAAYxR,SACrCuB,EAAE9E,iBACFjB,KAAK4gB,iBAET,MACJ,KAAKnZ,EAAAA,QAAAA,OACDzH,KAAKwuB,cAAc/mB,EAAAA,QAAAA,QACnBzH,KAAKw0B,aAAa9L,SAClB,MACJ,KAAKjhB,EAAAA,QAAAA,UACDzH,KAAKwuB,cAAc/mB,EAAAA,QAAAA,WACnBzH,KAAKw0B,aAAa9L,SAClB,MAIZ,SAASuM,EAAYlL,EAAQgB,GAEpBjE,EAAK0C,SAASqC,oBAAoB/E,EAAKnT,eACxCmT,EAAKqD,OAAOkC,eAAe3e,SAAQ,SAAC6X,GAChCuB,EAAKqD,OAAOmC,WAAW/G,EAAWwE,EAAQgB,MAGlDjE,EAAK/F,WAAW,MAChB+F,EAAKoD,SAASS,cACd7D,EAAK0E,UAAUZ,mB,KC1MvB,GAAS,WAAa,IAAI7qB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,YAAYI,GAAG,CAAC,YAAc,CAAC,SAASI,GAAQA,EAAOC,kBAAmB,SAASD,GAAQA,EAAOE,oBAAqB,UAAY,SAASF,GAAQA,EAAOE,mBAAoB,YAAc,SAASF,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAM,CAACK,YAAY,8BAA8BiT,YAAY,CAAC,gBAAgB,KAAKpT,MAAM,CAAC,SAAW,MAAMO,GAAG,CAAC,MAAQb,EAAIw1B,cAAc,CAACp1B,EAAG,OAAO,CAACK,YAAY,WAAW6C,MAAM,CAAE,aAActD,EAAIy1B,eAAgB,cAAez1B,EAAIy1B,gBAAiB/hB,YAAY,CAAC,YAAY,QAAQpT,MAAM,CAAC,MAAQ,2BAA2BF,EAAG,MAAM,CAACsT,YAAY,CAAC,YAAY,MAAM,CAACtT,EAAG,MAAM,CAACK,YAAY,iBAAiB,CAACL,EAAG,MAAM,CAACK,YAAY,kBAAkB6C,MAAM,CAAE,YAAatD,EAAI01B,cAAe,CAACt1B,EAAG,WAAW,CAACmB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO1B,EAAQ,KAAE4B,WAAW,SAASpB,IAAI,SAASE,MAAM,CAAGmT,OAAQ7T,EAAI21B,aAAe,MAAQr1B,MAAM,CAAC,KAAO,OAAO,WAAa,SAASyU,SAAS,CAAC,MAAS/U,EAAQ,MAAGa,GAAG,CAAC,KAAO,SAASI,GAAQjB,EAAI01B,aAAc,GAAO,MAAQ,SAASz0B,GAAQjB,EAAI01B,aAAc,GAAM,QAAU11B,EAAI+V,UAAU,MAAQ,CAAC,SAAS9U,GAAWA,EAAOuM,OAAOooB,YAAqB51B,EAAIkI,KAAKjH,EAAOuM,OAAO9L,QAAO1B,EAAI8V,YAAY1V,EAAG,OAAO,CAACK,YAAY,mBAAmB6C,MAAM,CAAE,YAAatD,EAAIirB,YAAa3qB,MAAM,CAAC,MAAQ,qBAAqBO,GAAG,CAAC,MAAQb,EAAI61B,aAAa,CAAC71B,EAAI0D,GAAG,QAAQtD,EAAG,OAAO,CAACK,YAAY,4CAA4C6C,MAAM,CAAE,YAAatD,EAAIgrB,WAAY1qB,MAAM,CAAC,MAAQ,2BAA2BO,GAAG,CAAC,MAAQb,EAAI81B,iBAAkB91B,EAAS,MAAEI,EAAG,MAAM,CAACA,EAAG,OAAO,CAACJ,EAAI0D,GAAG1D,EAAI2D,GAAG3D,EAAIia,QAAQ7Z,EAAG,OAAO,CAACJ,EAAI0D,GAAG,UAAUtD,EAAG,OAAO,CAACJ,EAAI0D,GAAG1D,EAAI2D,GAAG3D,EAAIiL,YAAY7K,EAAG,OAAO,CAACK,YAAY,YAAY6C,MAAM,CAAE,YAAatD,EAAIkI,OAAQ,CAAClI,EAAI0D,GAAG,kBAAmB1D,EAAkB,eAAEI,EAAG,MAAM,CAACK,YAAY,mBAAmBiT,YAAY,CAAC,aAAa,QAAQ,CAACtT,EAAG,MAAM,CAACK,YAAY,kBAAkB6C,MAAM,CAAE,YAAatD,EAAI+1B,cAAe,CAAC31B,EAAG,WAAW,CAACmB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO1B,EAAe,YAAE4B,WAAW,gBAAgBpB,IAAI,SAASE,MAAM,CAAGmT,OAAQ7T,EAAIg2B,aAAe,MAAQ11B,MAAM,CAAC,KAAO,OAAO,WAAa,SAASyU,SAAS,CAAC,MAAS/U,EAAe,aAAGa,GAAG,CAAC,KAAO,SAASI,GAAQjB,EAAI+1B,aAAc,GAAO,MAAQ,SAAS90B,GAAQjB,EAAI+1B,aAAc,GAAM,QAAU/1B,EAAIi2B,WAAW,MAAQ,SAASh1B,GAAWA,EAAOuM,OAAOooB,YAAqB51B,EAAIk2B,YAAYj1B,EAAOuM,OAAO9L,aAAYtB,EAAG,OAAO,CAACK,YAAY,qCAAqC6C,MAAM,CAAE,gBAAiBtD,EAAIiL,MAAQ,EAAG,iBAA+B,GAAbjL,EAAIiL,OAAayI,YAAY,CAAC,eAAe,OAAOpT,MAAM,CAAC,MAAQ,iBAAiB,SAAW,MAAMO,GAAG,CAAC,MAAQb,EAAIsI,WAAWlI,EAAG,OAAO,CAACK,YAAY,yCAAyC6C,MAAM,CAAE,gBAAiBtD,EAAIiL,MAAQ,EAAG,iBAA+B,GAAbjL,EAAIiL,OAAayI,YAAY,CAAC,eAAe,OAAOpT,MAAM,CAAC,MAAQ,8BAA8B,SAAW,MAAMO,GAAG,CAAC,MAAQb,EAAIyP,gBAAgBzP,EAAIgB,OAAOZ,EAAG,MAAM,CAACK,YAAY,mBAAmB,CAACL,EAAG,OAAO,CAACK,YAAY,gCAAgC6C,MAAM,CAAE,gBAAiBtD,EAAIiL,MAAQ,EAAG,iBAA+B,GAAbjL,EAAIiL,OAAayI,YAAY,CAAC,eAAe,OAAOpT,MAAM,CAAC,MAAQ,8BAA8B,SAAW,MAAMO,GAAG,CAAC,MAAQb,EAAIm2B,WAAW,MAAQ,SAASl1B,GAAQjB,EAAIo2B,UAAW,GAAM,KAAO,SAASn1B,GAAQjB,EAAIo2B,UAAW,MAAUh2B,EAAG,OAAO,CAACK,YAAY,kCAAkC6C,MAAM,CAAE,gBAAiBtD,EAAIiL,MAAQ,EAAG,iBAA+B,GAAbjL,EAAIiL,OAAayI,YAAY,CAAC,eAAe,OAAOpT,MAAM,CAAC,MAAQ,oBAAoB,SAAW,MAAMO,GAAG,CAAC,MAAQb,EAAIq2B,WAAW,MAAQ,SAASp1B,GAAQjB,EAAIs2B,WAAY,GAAM,KAAO,SAASr1B,GAAQjB,EAAIs2B,WAAY,MAAUl2B,EAAG,OAAO,CAACK,YAAY,mCAAmCH,MAAM,CAAC,MAAQ,SAASO,GAAG,CAAC,MAAQb,EAAIu2B,cACvyH,GAAkB,GC2FtB,IACE,KAAF/0B,SACE,MAAFkD,CACI,IAAJuV,CACM,KAANtV,OACM,QAANC,GAEI,MAAJqG,CACM,KAANtG,OACM,QAANC,IAGE,KAZF,WAaI,MAAJ,CACM,KAANsD,GACM,YAANguB,GACM,gBAANT,EACM,WAANzK,EACM,YAANC,EACM,kBAANuL,EACM,kBAANC,EACM,aAANf,EACM,aAANK,EACM,UAANK,EACM,WAANE,EACM,aAANX,GACM,aAANK,KAGE,MAAF/wB,CACI,KADJ,WAEM,IAAN,wBACM,KAAN,6BAEI,YALJ,WAMM,IAAN,+BACM,KAAN,8BAGE,QAvCF,WAuCI,IAAJ,OACIE,GAAAA,CAAAA,UAAAA,GAAAA,WAAAA,SAAAA,GACJ,kCACA,WACU,EAAV,aACA,aACU,EAAV,kBAKE,QAAFC,CACI,SADJ,SACA2f,GACM,IAAN,WACQ,KAAR,SAGI,QANJ,WAOM,MAAN,CACQ,KAAR7c,KAAAA,KACQ,UAAR8iB,KAAAA,UACQ,WAARC,KAAAA,aAGI,OAbJ,WAaM,IAAN,OACA,oBACM,KAAN,YACM,KAAN,sBACA,iBAGQ,EAAR,gBACU,KAAV/iB,EAAAA,KACU,WAAV+iB,EAAAA,WACU,UAAVD,EAAAA,gBAII,WA3BJ,WA4BM,KAAN,4BACM,KAAN,QACM,KAAN,WAEI,YAhCJ,WAiCM,KAAN,0BACM,KAAN,QACM,KAAN,WAEI,YArCJ,WAsCM,KAAN,qCAEI,WAxCJ,WAyCA,YAGM,KAAN,eAEI,WA9CJ,WA+CA,YAGM,KAAN,eAEI,QApDJ,WAqDA,YAGM,KAAN,iBAAQ,KAAR9iB,KAAAA,eAEI,WA1DJ,WA2DA,YAGM,KAAN,oBAAQ,KAARA,KAAAA,eAEI,MAhEJ,WAiEM,KAAN,gBAEI,MAnEJ,WAmEM,IAAN,OACM,KAAN,qBACM,uBAANwuB,WACQ,EAAR,yBAGI,WAzEJ,WA0EM,KAAN,oBACM,KAAN,qBAEI,UA7EJ,SA6EA1wB,GACA,kCACQ,EAARA,iBACQ,KAAR,gBAGI,WAnFJ,SAmFAA,GACA,kCACQ,EAARA,iBACA,aACA,oBACY,KAAZ,aAEY,KAAZ,aAKI,QA/FJ,WA+FM,IAAN,OACM,aAANoT,KAAAA,aACM,KAAN,mCACQ,EAAR,WACA,QCjPqT,MCOjT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIpZ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,OAAOC,YAAY,+DAA+DC,MAAOV,EAAU,OAAEa,GAAG,CAAC,UAAY,SAASI,GAAQA,EAAOE,mBAAoB,MAAQ,SAASF,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAMJ,EAAImC,GAAInC,EAAW,SAAE,SAASoC,GAAM,OAAOhC,EAAG,MAAM,CAACK,YAAY,iCAAiC6C,MAAM,CAAC,YAAalB,EAAKI,QAAQ3B,GAAG,CAAC,UAAY,SAASI,GAAQ,OAAOjB,EAAIqE,QAAQjC,MAAS,CAAChC,EAAG,MAAM,CAACK,YAAY,qBAAqB,CAACL,EAAG,MAAM,CAACK,YAAY,yCAAyC6C,MAAM,CAAClB,EAAKqB,QAAQrD,EAAG,MAAM,CAACK,YAAY,mBAAmB,CAACL,EAAG,OAAO,CAAC2U,SAAS,CAAC,UAAY/U,EAAI2D,GAAG3D,EAAI22B,MAAMv0B,WAAchC,EAAG,MAAM,CAACK,YAAY,gBAAgB,CAACT,EAAI0D,GAAG1D,EAAI2D,GAAGvB,EAAK4iB,cAAa,MAC5zB,GAAkB,GCoBtB,IACE,KAAFxjB,UACE,MAAFkD,CACI,QAAJkyB,CACM,KAANjyB,MACM,QAANC,IAEI,OAAJC,CACM,KAANF,SAGE,KAXF,WAYI,MAAJ,CACM,SAANkyB,EACM,WAAN9xB,KAGE,SAAFC,CACI,MADJ,WAEM,OAAN,YACQ,IAAR,IACA,KAMQ,OALA,EAAR5C,OAAAA,SAAAA,SAAAA,GACU,GAAV4S,EAAAA,OAAAA,MAAAA,EAAAA,GACU,GAAVA,4BAAAA,OAAAA,EAAAA,OAAAA,GAAAA,WACU,EAAV/Q,EAAAA,KAEA,uBAIE,MAAFgB,CACI,SADJ,WAEM,IAAN,kBACA,oCACA,gCACQ,EAAR6xB,UAAAA,EAAAA,EAAAA,aACA,mCACQ,EAARA,UAAAA,EAAAA,KAAAA,cAIE,QA1CF,aA4CE,QAAF1xB,CACI,QADJ,SACAhD,GACM,KAAN,mBAEI,KAJJ,WAKM,IAAN,wBACM,KAAN,qBACM,GAAN6B,EACM,EAANA,EAAAA,EAAAA,KAAAA,QAAAA,OAAAA,EAAAA,EACM,KAAN,qBACM,KAAN,YAEI,KAZJ,WAaM,IAAN,wBACM,KAAN,qBACM,GAANA,EACM,EAANA,EAAAA,KAAAA,QAAAA,OAAAA,EAAAA,EAAAA,EACM,KAAN,qBACM,KAAN,YAEI,eApBJ,WAqBM,IAAN,kCACQ,GAAR,uBACU,OAAV,KCxFsT,MCQlT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,WACA,MAIF,GAAe,GAAiB,QCnB5B,GAAS,WAAa,IAAIjE,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,SAASC,MAAOV,EAAU,OAAEa,GAAG,CAAC,UAAY,SAASI,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAM,CAACK,YAAY,kBAAkB,CAACL,EAAG,MAAM,CAAC2U,SAAS,CAAC,UAAY/U,EAAI2D,GAAG3D,EAAI+2B,iBACjS,GAAkB,GCYtB,IACE,KAAFv1B,MACE,MAAFkD,CACI,QAAJqyB,OACI,OAAJlyB,CACM,KAANF,SAGE,KARF,WASI,MAAJ,IAGE,QAZF,aAcE,QAAFS,IC3BkT,MCO9S,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QC2HhC,eAEA,IACE,KAAF5D,SACE,WAAFiE,CACI,aAAJuxB,GACI,KAAJtxB,EACI,QAAJuxB,GACI,IAAJC,IAEE,MAAFxyB,CACI,GAAJpC,CACM,KAANqC,QAEI,OAAJnC,CACM,KAANmC,QACM,SAANC,IAGE,KAjBF,WAkBI,MAAJ,CACM,QAANuyB,CACQ,UAARvtB,KACQ,mBAARO,GACQ,UAARL,IAEM,aAAN8J,CACQ,KAAR7G,EACQ,OAARvB,GAEM,eAAN4rB,EACM,aAANC,EACM,SAANrpB,GACM,MAANspB,GACM,QAAN1uB,EACM,YAAN2uB,GACM,UAAN9d,EACM,IAAN3T,EACM,WAAN0xB,EACM,WAANC,EACM,UAANC,EACM,gBAAN/d,EACM,QAANhG,EACM,cAANU,OACM,aAANsjB,GACM,aAAN1iB,CACQ,MAARzK,GACQ,IAARC,IAEM,YAANkoB,CACQ,OAAR9X,KACQ,KAAR3S,GACQ,MAAR4C,GAEM,SAANhH,CACA,CACA,CACQ,KAARtC,MACQ,GAARmE,MACQ,SAARpB,UAEA,CACQ,KAAR/C,OACQ,GAARmE,OACQ,SAARpB,UAEA,CACQ,KAAR/C,QACQ,GAARmE,QACQ,SAARpB,YAIM,UAANR,CACQ,IAAR+B,MACQ,KAARD,MACQ,YAAR,SAEM,SAAN+Q,CACQ,IAAR9Q,MACQ,KAARD,OAEM,aAANqQ,CACQ,IAARpQ,MACQ,KAARD,OAEM,SAAN+xB,GACM,OAANC,GACM,YAAN5hB,GACM,WAANU,KACM,aAAN/Q,EACM,eAANkyB,EACM,YAANhjB,EACM,cAANijB,EACM,UAAN1hB,EACM,YAAND,IAGE,SAAFpR,CACI,QADJ,WAEM,OAAN,sCAEI,YAJJ,WAKM,OAAN,qEAEI,KAPJ,WAQM,OAAN,4EAEI,YAVJ,WAWM,OAAN,6BAEI,eAbJ,WAcM,OAAN,yDAEI,cAhBJ,WAiBM,OAAN,uBAEI,iBAnBJ,WAoBM,IAAN,IAMM,OALN,qBACQ,EAAR8F,EAAAA,iBAAAA,KAAAA,YAAAA,KAAAA,KAAAA,QAAAA,KAAAA,MAAAA,SACQ,GAARA,KAAAA,QAAAA,oBAEM,EAANA,KAAAA,aAAAA,MAAAA,EAAAA,KAAAA,aAAAA,MAAAA,EACA,QAEI,aA5BJ,WA6BM,IAAN,kBACA,WACM,GAAN,mBACQ,IAAR,8EACQ,EAARhF,KAAAA,OAAAA,gBAAAA,GAAAA,KAAAA,QAAAA,UACA,qEACU,EAAVA,KAAAA,UAAAA,KAAAA,aAAAA,OAAAA,EAAAA,KAAAA,QAAAA,WAGM,MAAN,CACQ,IAARA,EAAAA,KACQ,KAARD,EAAAA,OAGI,aA3CJ,WA2CM,IAAN,OACM,OAAN,YACQ,OAAR,0CAGI,YAhDJ,WAgDM,IAAN,OACM,OAAN,YACQ,OAAR,yCAGI,MArDJ,WAsDM,OAAN,uBAEI,UAxDJ,WAyDM,OAAN,cAGE,MAAFZ,CACI,SAAJ+I,SAAAA,GACM,KAAN,qCACQ,EAARmM,OAAAA,KACQ,EAARA,MAAAA,KACQ,EAARA,UAAAA,KACQ,EAARA,OAAAA,KACQ,EAARA,KAAAA,MAEM,KAAN,qBACM,KAAN,2BAEI,MAAJmd,WACM,KAAN,qCACQ,EAARnd,KAAAA,MAEM,KAAN,UAEI,QAAJvR,SAAAA,GACM,KAAN,SACM,KAAN,aAAQ,OAARiS,KAAQ,KAAR3S,GAAQ,MAAR4C,GACM,KAAN,8CAEI,QAAJ6I,SAAAA,GACM,KAAN,oBAEI,UAAJ8F,SAAAA,GACM,KAAN,SACM,KAAN,iCAEI,aAAJ7F,CACM,QAANokB,SAAAA,GACQjyB,EAAAA,MAAAA,gBAAAA,CACE,KAAVgH,EAAAA,EAAAA,KAAAA,IACU,OAAVvB,EAAAA,EAAAA,OAAAA,MAEQ,KAAR,sBAEM,MAANysB,GAEI,OAAJz1B,SAAAA,GACA,EACQ,KAAR,aAEQ,KAAR,sBAIE,QA5MF,WA6MI,KAAJ,WACI,KAAJ,eACI,KAAJ,aAEE,QAjNF,WAkNI,KAAJ,oDACI,KAAJ,aACI,KAAJ,mBAEE,UAtNF,WAuNI,KAAJ,eAEE,QAAF4C,CAEI,SAFJ,WAGM,KAAN,iBACM,GAANuvB,KAAAA,UAAAA,IAAAA,GAAAA,MACM,KAAN,kDACM,KAAN,sCACM,KAAN,iCACM,KAAN,yCACM,KAAN,mCACM,KAAN,oCACM,KAAN,qCACM,KAAN,mDACM,KAAN,sCACM,KAAN,qDACM,KAAN,qCACM,KAAN,mCACM,KAAN,uCACM,KAAN,4CACM,KAAN,kEAGI,UAtBJ,WAsBM,IAAN,OACM,KAAN,0BACQ,EAAR,8BAEM,KAAN,0BACQ,EAAR,gCAEMxvB,GAAAA,CAAAA,UAAAA,GAAAA,YAAAA,KAAAA,UAAAA,KACAA,GAAAA,CAAAA,UAAAA,GAAAA,UAAAA,KAAAA,UAAAA,MAEF,gBAhCJ,WAgCM,IAAN,OACA,kCACA,gBACU,EAAV,gBAGM,EAAN+yB,QAAAA,KAAAA,MAAAA,SAEI,aAxCJ,WAwCM,IAAN,OACMnyB,EAAAA,IACN,kBACA,kCACA,WACU,EAAV,YAEQ,EAAR,cAGMA,EAAAA,IACN,kBACA,kCACA,WACU,EAAV,aAIMA,EAAAA,IACN,aACA,iCACQ,EAAR,eACQ,EAAR,iBACQ,EAAR,sBAGMA,EAAAA,IACN,eACA,kCACQ,EAAR,oDACA,WACU,EAAV,SAEQ,EAAR,YAII,YA7EJ,WA8EMZ,GAAAA,CAAAA,UAAAA,OAAAA,YAAAA,KAAAA,UAAAA,KACAA,GAAAA,CAAAA,UAAAA,OAAAA,UAAAA,KAAAA,UAAAA,KACAY,EAAAA,KAAAA,kBAAAA,KAAAA,aAAAA,KACAA,EAAAA,KAAAA,kBAAAA,KAAAA,aAAAA,KACAA,EAAAA,KAAAA,aAAAA,KAAAA,aAAAA,KACAA,EAAAA,KAAAA,eAAAA,KAAAA,aAAAA,MAEF,WArFJ,WAqFM,IAAN,OACA,aACQ,KAAR,sBACU,EAAV,yBACU,EAAV,mBACU,EAAV,wCACU,EAAV,+EACU,EAAV,SACU,EAAV,YAKI,WAlGJ,WAkGM,IAAN,OAEM,GADA,KAAN,eACA,iCAIM,IAAN,qBAAM,CAGA,KAAN,mBACM,KAAN,iBACM,IAAN,eACQ,aAARqT,EAAAA,aACQ,EAAR,mCACU,EAAV,+BACU,MACV,MAEM,UAfE,KAAR,oBAkBI,WAvHJ,WAwHM,aAANA,KAAAA,aACM,KAAN,mBACM,KAAN,gBAGI,MA7HJ,WA6HM,IAAN,OACM,KAAN,uBACM,uBAANsd,WACQ,EAAR,2BAII,OApIJ,SAoIAyB,GAAM,IAAN,OACA,qBACM,KAAN,WACM,KAAN,sBACA,iBAGQ,EAAR,aACQ,EAAR,mBACQ,EAAR,uBACQ,EAAR,cACQ,EAAR,gBACQ,EAAR,sBACU,EAAV,cACY,OAAZtkB,EAAAA,MAAAA,SAAAA,aACY,MAAZ/I,EAAAA,MAAAA,SAAAA,qBAMI,WAzJJ,SAyJA+P,GACM,IAAN,OAEM,GAAN,GACQ,GAAR,qCACU,IAAV,kCACA,sCAEA,0EACY,OAAZ/M,OAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MACY,KAAZ,eACY,KAAZ,mBACY,KAAZ,6BACY,KAAZ,0BAVM,CAeA,KAAN,gCACM,KAAN,kCACM,KAAN,eACM,IAAN,qFACQ,IAAR,4BACA,WACA,SACA,+BACQ,KAAR,oBACQ,KAAR,iCACQ,KAAR,mCACA,EACU,EAAV2L,EAAAA,IAAAA,KAEU,KAIJ,SAAN,OACQ,IAAR,OACA,KACA,0BAEU,EAAV1F,QACA,8BAEU,EAAVA,QAEQ,IAAR,SAWQ,OAVR,IACA,2BACY,EAAZ3R,OAAAA,EAAAA,UAAAA,eAAAA,EAAAA,QACY,EAAZA,KAAAA,EAAAA,UAAAA,WAAAA,EAAAA,OAAAA,EAAAA,MACY,EAAZ4S,EAAAA,MAEY,EAAZA,EAAAA,UAAAA,EAAAA,OAGQ,EAARA,EAAAA,QAAAA,MAAAA,EAAAA,OACA,CACU,KAAVA,EACU,IAAVtM,EACU,OAAVqC,EACU,aAAVqtB,GACU,WAAVC,GACU,UAAVzjB,EACU,WAAVC,EACU,KAAVd,EACU,WAAVukB,IAIM,SAAN,KACQ,IAAR,8BACA,UACA,IACQ,GAAR,mCACU,OAAV,0CAEQ,GAAR,WAEU,IAAV,iBACA,IACY,EAAZvtB,MAAAA,KAAAA,EAAAA,IACY,EAAZA,GAAAA,EAAAA,GAAAA,QAAAA,EACY,GAAZA,KAAAA,MAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,cAEA,CAEU,IAAV,MACU,MAAV,MACY,GAAZ,qCACc,EAAdA,EAAAA,GACA,6BACgB,IAEF,MAEF,KAGJ,OAAR,IAGI,iBA/PJ,WA+PM,IAAN,OACA,+BACM,KAAN,qBACM,KAAN,gBACM,KAAN,sBACA,0BAGA,sBAOQ,EAAR,sBACQ,EAAR,iCACU,EAAV3I,UAAAA,EACU,EAAVA,aAAAA,GACU,EAAVA,WAAAA,MAEQ,EAAR,sCACU,EAAV,2BAEQ,EAAR,qCACU,IAAV,2CACA,iBAEA,aACc,EAAd,qBAGY,EAAZ,yBAtBU,uBAAVs0B,WACY,EAAZ,2BA2BI,kBArSJ,SAqSAxhB,EAAAL,GACM,IAAN,0BACA,8BACA,UACA,QACA,sCACA,WACM,EAANrK,KAAAA,KAAAA,YAAAA,EAAAA,EAAAA,EAAAA,QACA,eACQ,EAARA,MAAAA,KAAAA,YAAAA,EAAAA,EAAAA,OAAAA,EAAAA,SAAAA,IAEQ,EAARA,MAAAA,KAAAA,YAAAA,EAAAA,EAAAA,SAAAA,GACQ,EAARC,KAAAA,EACQ,EAARvC,KAAAA,UAAAA,MAAAA,EAAAA,KAAAA,GAAAA,KACQ,EAARuC,MAAAA,KAAAA,YAAAA,EAAAA,EAAAA,EAAAA,SAAAA,IAEM,EAAN8tB,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EACM,EAANC,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,KAAAA,EACM,IAAN,iBACQ,GAAR,uCACU,IAAV,wCACU,EAAVre,UAAAA,EACU,EAAVA,UAAAA,EACU,EAAVA,OAAAA,EAAAA,OAGA,6CACQ,KAAR,yDACU,KAAVtU,EAAAA,KACU,MAAViF,EAAAA,MACU,OAAVtI,EAAAA,OACU,UAAVqS,IAEA,iBACU,EAAVqX,EAAAA,QAEQ,EAARhX,QAAAA,KAAAA,sBAAAA,EAAAA,KAAAA,EAAAA,OAAAA,IAEA,4DACQ,KAAR,uDACU,KAAVrP,EAAAA,KACU,MAAViF,EAAAA,MACU,OAAVtI,EAAAA,OACU,UAAVqS,IAEQ,EAARK,QAAAA,KAAAA,sBAAAA,EAAAA,KAAAA,EAAAA,EAAAA,SAEA,mEACQ,KAAR,kBAGI,qBAxVJ,SAwVAnI,GAAM,IAAN,OAEM,GAAN,uCAAM,CAGA,IAAN,kCACM,EAAN6Q,SAAAA,SAAAA,GACQ,GAAR,UACU,IAAV,iBACA,eACA,iBACA,0BACc,EAAdsO,EAAAA,UAAAA,MAAAA,EAAAA,MAAAA,KAAAA,GAAAA,KAAAA,QAGY,EAAZD,EAEU,EAAV,mCAII,sBA7WJ,SA6WAlf,EAAAkf,EAAAC,GAEM,GAAN,uCAAM,CAGA,IAAN,4BACA,WACA,eACA,KACM,KAAN,0BACM,IAAN,wBACQ,IAAR,OACQ,GAAR,+BAQU,GAPV,gBACY,EAAZuM,KAAAA,CACc,WAAdpd,EAAAA,WACc,SAAdC,EACc,OAAdC,EAAAA,SAGA,cACY,EAAZkd,KAAAA,CACc,WAAdpd,EACc,SAAdC,EACc,OAAdC,IAEY,EAAZkd,KAAAA,CACc,WAAdpd,EACc,SAAdC,EAAAA,SACc,OAAdC,EAAAA,SAEY,EAAZkd,EAAAA,OAAAA,EAAAA,MAAAA,EAAAA,IACY,MAEA,EAAZA,KAAAA,CACc,WAAdpd,EACc,SAAdC,EAAAA,SACc,OAAdC,SAGA,iCACU,EAAVkd,KAAAA,CACY,WAAZpd,EAAAA,WACY,SAAZC,EAAAA,SACY,OAAZC,QAEA,kCACU,EAAVkd,KAAAA,CACY,WAAZpd,EAAAA,WACY,SAAZC,EACY,OAAZC,IAEU,EAAVkd,KAAAA,CACY,WAAZpd,EACY,SAAZC,EAAAA,SACY,OAAZC,EAAAA,SAEU,EAAVkd,EAAAA,OAAAA,EAAAA,MAAAA,EAAAA,IACU,MACV,oBACU,EAAVA,EAAAA,OAAAA,EAAAA,MAAAA,IACU,MAEA,EAAVA,KAAAA,IAGM,EAANte,KAAAA,KAAAA,UAAAA,WAAAA,EAAAA,EAAAA,MACM,KAAN,kDACM,KAAN,sBACQ,EAARA,SAAAA,OAGI,mBArbJ,WAubM,GADA,KAAN,4DACA,mBACQ,IAAR,OACA,OAEQ,EAARA,KAAAA,UAAAA,MAAAA,KAAAA,aAAAA,MAAAA,KAAAA,GACQ,EAARqT,KAAAA,aAAAA,MACQ,KAAR,0EACQ,KAAR,gEAEQ,EAARrT,KAAAA,UAAAA,MAAAA,KAAAA,aAAAA,IAAAA,KAAAA,GACQ,EAARqT,KAAAA,aAAAA,IACQ,KAAR,wEACQ,KAAR,gEAII,oBAvcJ,WAucM,IAAN,OACM,KAAN,uCACQ,EAAR,2BAEM,KAAN,2BAEI,qBA7cJ,SA6cAzgB,GACM,IAAN,4BACA,gBAGM,EAANoN,SAAAA,KACA,wCACQ,KAAR,uFAEM,EAANA,KAAAA,KAGI,aAzdJ,SAydAge,GAAM,IAAN,OACA,OACA,2BAYM,SAAN,KACQ,IAAR,KACQ,EAARpR,OAAAA,iBAAAA,EAAAA,KAAAA,SAAAA,SAAAA,GACU,EAAVuR,KAAAA,EAAAA,OAEQ,EAARl2B,WAAAA,EAGM,SAAN,KACQ,IAAR,IACQ,IAAR,MAeQ,OAZA,EAARyD,EAAAA,aAAAA,GAEA,wBACA,iEACY,EAAZkhB,MAAAA,SAAAA,WAAAA,EAAAA,EAAAA,QAAAA,mBAAAA,EAAAA,aAAAA,MACA,iBACY,EAAZA,MAAAA,SAAAA,WAAAA,EAAAA,IAGA,qBACU,EAAVA,WAAAA,GAEA,OApCM,KAAN,iBACM,KAAN,sBACA,6CAGQ,EAAR,iCACU,EAAV2R,MAEQ,EAAR,sBA+BI,YAngBJ,SAmgBA3rB,GAAM,IAAN,OAKM,SAAN,IAAQ,IAAR,OACA,yBACA,KACQ,EAAR4rB,KAAAA,uBAAAA,SACQ,KAAR,4BACU,IAAV,4BACA,OACU,KAAV,qBAAU,CAWA,GARA,EAAVC,IAAAA,EACU,EAAVze,EAAAA,UAAAA,MAAAA,EAAAA,KAAAA,GACA,YACY,EAAZ/X,QAAAA,EAAAA,MAEA,0BACY,EAAZA,OAAAA,EAAAA,KAAAA,OAAAA,IAEA,aACY,IAAZ,QACA,8CACc,EAAdA,UAAAA,EAAAA,OAAAA,EAAAA,GAAAA,OAEc,EAAdA,UAAAA,EAAAA,OAAAA,EAMU,GAHV,4BACY,EAAZA,UAAAA,EAAAA,KAAAA,QAEA,mBACY,EAAZy2B,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,UAAAA,OACA,CACY,EAAZA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,OAAAA,GACY,EAAZA,KAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,UAAAA,GACY,IAAZ,+BACc,EAAdC,KAAAA,EAAAA,EAAAA,QAMM,SAAN,WACQ,KAAR,yDAAQ,CAGA,IAAR,yBACA,4BACA,qBACA,IACQ,GAAR,GACU,IAAV,wGACU,EAAVjzB,EAAAA,GAAAA,WAAAA,KAAAA,YAAAA,EAAAA,KAAAA,EAAAA,WAAAA,GAEQ,IAAR,uDACA,qHACQ,EAAR8yB,KAAAA,0BAAAA,OAAAA,EAAAA,OAAAA,OAAAA,IAGM,SAAN,OACQ,KAAR,yDAAQ,CAGA,IAAR,yBACA,8FACQ,EAARA,KAAAA,0BAAAA,OAAAA,EAAAA,OAAAA,OAAAA,IApEM,KAAN,sBACQ,EAARI,KAAAA,OAuEI,SA5kBJ,SA4kBAhsB,GAAM,IAAN,OACA,0BACM,KAAN,QACA,IACQ,KAAR,2CACU,GAAV,6BACY,IAAZ,yBACY,EAAZyY,KAAAA,EACY,EAAZA,OAAAA,EAAAA,KAAAA,WAGQ,KAAR,mBACQ,KAAR,WAII,OA5lBJ,SA4lBAzY,GACM,KAAN,QACA,wBACQ,KAAR,mBACQ,KAAR,WAII,WApmBJ,SAomBAisB,GACM,IAAN,0BACM,IAAN,yEAAM,CAIA,GAAN,kBACQ,IAAR,mCACQ,GAAR,EAEU,EAAVC,SAAAA,CACY,WAAZhO,EAAAA,WACY,UAAZD,EAAAA,UACY,KAAZ9iB,EAAAA,YAEA,sBAEU,OAGJ,KAAN,iBACM,KAAN,wBACM,KAAN,YAAQ,OAAR4hB,EAAAA,YACM,EAANmP,SAAAA,CAAQ,iBAARxD,IACM,EAANwD,UAGI,WA/nBJ,SA+nBAjP,GACM,IAAN,OAEM,GADA,KAAN,iBAAQ,OAARA,IACA,oBACQ,GAAR,uCACU,IAAV,mCACA,IACY,KAAZ,wBACY,EAAZJ,KAAAA,UAAAA,OAAAA,CAAc,OAAdI,EAAc,UAAdC,UAGU,EAAVL,KAAAA,UAAAA,OAAAA,CAAY,OAAZI,EAAY,UAAZC,IAEA,IACU,KAAV,gBACU,KAAV,uBAII,WAlpBJ,SAkpBAtN,GACM,IAAN,2BACA,GACQ,KAAR,gBACQ,KAAR,qBAEQ,KAAR,eAGI,QA3pBJ,SA2pBAtN,GAAM,IAAN,OACM,GAAN,mCACQ,IAAR,+BACQ,KAAR,+CACU,EAAV,qBAGQ,KAAR,cAGI,WArqBJ,SAqqBAA,GAAM,IAAN,OACA,4BACQ,KAAR,2EACU,EAAV,wBACU,EAAV,kBAKI,YA9qBJ,WA+qBM,KAAN,sBAGI,YAlrBJ,WAmrBM,KAAN,sBAEI,cArrBJ,WAsrBM,IAAN,sCACM,KAAN,kCAEI,QAzrBJ,SAyrBA+c,EAAA1qB,GACA,8BAGM,KAAN,OAEI,gBA/rBJ,SA+rBAkS,GAAM,IAAN,OAEM,GADA,KAAN,iBAAQ,KAAR7G,EAAQ,OAARvB,GACA,GACQ,IAAR,8BACQ,KAAR,oBAEQ,KAAR,sBACU,GAAV,uBAAU,CAGA,IAAV,uDACA,wDACY,uBAAZkrB,WACc,EAAd,0DACc,EAAd,wEAEA,qBACY,uBAAZA,WACA,sBAEgB,EAAhB,iBACgB,EAAhB,sFAIU,EAAV,uBAKI,iBA7tBJ,WA8tBM,IAAN,8BACA,IACM,EAAN/iB,KAAAA,OAAAA,gBAAAA,GACM,EAANU,EAAAA,KAAAA,QAAAA,UACA,oBACQ,GAARA,KAAAA,aAAAA,OAAAA,KAAAA,QAAAA,WAEM,KAAN,sBAEI,aAvuBJ,SAuuBAqjB,GACM,IAAN,IACM,EAANje,KAAAA,MAAAA,EAAAA,KAAAA,QAAAA,WACM,IACA,KAAN,qCACM,KAAN,+BAEI,UA9uBJ,SA8uBAoe,GAMM,SAAN,OACQ,IAAR,IACQ,MAAR,YACU,IAAV,YACA,KACU,MAAV,2BACY,IAAZ,oBACY,EAAZA,GAAAA,aAAAA,EAAAA,GAAAA,OACY,EAAZ9uB,KAAAA,EAAAA,GAAAA,QACA,KACc,EAAd6uB,IAAAA,OAAAA,EAAAA,GAAAA,OAEc,EAAdA,GAAAA,EAAAA,GAAAA,OAEY,IAEF,EAAV7qB,GAAAA,KAAAA,MAAAA,OACU,EAAV6qB,GAAAA,EAAAA,KAAAA,SAtBM,KAAN,YACM,KAAN,SACM,EAANsB,KAAAA,KAAAA,KAAAA,SAAAA,GACM,KAAN,eAuBI,WAzwBJ,SAywBAtb,GAAM,IAAN,OACM,aAANxE,KAAAA,WAAAA,WACA,aACQ,EAARwE,SAAAA,SAAAA,GACU,EAAVxb,QAAAA,KAEQ,KAAR,cACQ,KAAR,yBACQ,KAAR,sBACU,IAAV,kCACA,mCACU,EAAV,mFACU,EAAV,iDACA,sEACY,EAAZ,yCAEA,0DACY,EAAZ,sBAEU,EAAV,uBACU,EAAV,4BAIQ,KAAR,4CACU,EAAV,mBACA,KAII,YAvyBJ,SAuyBAiI,EAAAG,EAAAC,GACM,OAAN,0FAGI,kBA3yBJ,SA2yBAsC,EAAAvC,EAAAC,GACM,OAAN,sDAGI,iBA/yBJ,SA+yBAvC,EAAAixB,GACM,IAEN,QAFA,IACA1nB,EAAAA,EAAAA,OAEM,MAAN,KAKQ,GAJA,EAARC,KAAAA,OAAAA,EAAAA,GAAAA,GACQ,EAAR5G,KAAAA,YAAAA,EAAAA,EAAAA,GACQ,EAARsuB,EAAAA,EAAAA,IAAAA,KAAAA,YAAAA,EAAAA,EAAAA,IAAAA,EACQ,EAARC,EAAAA,IAAAA,KAAAA,YAAAA,EAAAA,IAAAA,GAAAA,EACA,0BACU,EAAVxzB,EACU,MACV,IACU,EAAV4L,EAEU,EAAV5L,EAAAA,EAGM,OAAN,GAGI,cAp0BJ,SAo0BAG,GACM,IAAN,gBACA,wDACA,wBACM,IAAN,GACQ,GAAR,8BAIU,OAAV,KAHU,EAAV+G,KAAAA,UAAAA,MAAAA,OAMM,IAAN,4BACA,uBACM,GAAN,EAEA,CACQ,GAARvB,EACQ,IAAR,wBACU,IAAV,OACU,GAAV,oBACY,GAAZA,KAAAA,iBAAAA,EAAAA,KAAAA,MAAAA,EAAAA,WAAAA,EAAAA,UAAAA,EAAAA,SACY,aAPJ,EAARA,EAAAA,KAAAA,OAWM,MAAN,CACQ,KAARuB,EACQ,OAARvB,IAII,aAp2BJ,SAo2BAga,GACM,IAAN,iCACM,IAAN,2BACQ,OAAR,EAIM,IAFA,IAAN,uBACA,OACA,oBACQ,KAAR,0BAGU,MAFA,EAAV9J,EAAAA,GAKM,IAAN,uBACA4d,SAAA,YACAA,SAAA,wCACM,IAAN,SACQ,OAAR,EAEM,IAAN,sCACM,OAAN,qCAEI,SA33BJ,SA23BAvsB,EAAAvB,GACM,IAAN,4BACM,GAAN,aACQ,GAAR,6BACU,OAAV,gBAEQ,IAAR,8BACU,GAAV,kDACY,OAAZ,YAIM,OAAN,MAGI,cA14BJ,SA04BAxF,GAAM,IAAN,OACA,IACA,IACA,yBACA,aACM,KAAN,eACM,KAAN,sBACQ,EAARC,EAAAA,MAAAA,KAAAA,IAAAA,YACQ,EAARszB,EAAAA,MAAAA,KAAAA,IAAAA,aACA,wCACU,EAAV,qCAEU,EAAV,mCAEA,oCACU,EAAV,uCAEU,EAAV,qCAEQ,EAAR,YAII,YAj6BJ,SAi6BAC,GAAM,IAAN,OACM,OAAN,MACQ,IAAR,MACQ,IAAR,OACU9xB,EAAAA,eAAAA,KAAAA,UAAAA,YAAAA,QAAAA,EAAAA,KACA,MACF,IAAR,QACU,KAAV,uBACUA,EAAAA,gBAAAA,MAAAA,SAAAA,GACE,EAAZ,8BAEU,MAEJ,KAAN,eACM,KAAN,SAGI,YAl7BJ,SAk7BAtF,GACM,KAAN,wBACM,KAAN,iBACM,KAAN,SAGI,aAx7BJ,SAw7BA2K,GACA,6BACQ,KAAR,UAEQ,KAAR,aAII,eAh8BJ,SAg8BA/G,GACM,GAAN,WAAM,CAIA,IAAN,wBACA,OAKM,GAJA,KAAN,eACQ,KAARyzB,KAAAA,MACQ,MAARjvB,GAEA,0FAEQ,IAAR,yCAEQ,GAAR0K,KAAAA,SAAAA,YAAAA,GACQ,EAARsQ,KAAAA,OAAAA,aAAAA,QAEQ,EAARA,KAAAA,OAAAA,aAAAA,GAEA,aACU,KAAV,uBAGA,aACQ,KAAR,wBACA,oDAEU,KAAV,6BACU,KAAV,eAGM,KAAN,0BAEM,KAAN,yBACM,KAAN,UAEI,iBAr+BJ,SAq+BAxf,EAAA+G,GAGM,IAFA,IAAN,8EACA,iDACA,oBACQ,IAAR,UACA,YACA,kBACQ,GAAR,cACU,EAAV4V,KAAAA,KAAAA,EAAAA,EAAAA,KAAAA,aACU,OAIJ,SAAN,OAAQ,IAAR,OACA,yBACA,0BACA,aACA,kBACA,mBACQ,KAAR,4BACQ,KAAR,sBACA,4CACY,EAAZ7c,EAAAA,aAAAA,OAAAA,EAAAA,GAAAA,cAEU,EAAV,UACY,KAAZD,EAAAA,GAAAA,KACY,IAAZC,EAAAA,GAAAA,WAKI,eApgCJ,SAogCAE,GACM,GAAN,4DACQ,IAAR,wBACQ,GAAR,iDACU,IAAV,yCAEU,GAAVkP,KAAAA,SAAAA,YAAAA,GACU,KAAV,kDACU,KAAV,kDACY,KAAZnI,EAAAA,KACY,OAAZvB,EAAAA,SAEA,4BACY,KAAZ,kDACc,MAAdhB,KAAAA,cAAAA,MACc,IAAdC,IAGY,KAAZ,+CACc,MAAdD,KAAAA,cAAAA,MACc,IAAdC,IAIU,KAAV,yDAKM,SAAN,KACQ,IAAR,gBACA,+BACQ,KAAR,cACQ,GAARsC,KAAAA,iBAAAA,EAAAA,GANM,EAAN2sB,KAAAA,KAAAA,IASI,gBAxiCJ,WAyiCM,KAAN,eAGI,gBA5iCJ,SA4iCA1zB,GACM,IAAN,OACA,oCACM,GAAN,4DACQ,IAAR,qEACQ,EAAR+G,EAAAA,EAAAA,EAAAA,EACQ,EAARA,EAAAA,KAAAA,QAAAA,KAAAA,QAAAA,EACQ,qBAAR4sB,KAAAA,iBACA,yCAEU,EAAVC,OAAAA,EAAAA,QAAAA,EAAAA,IAAAA,KAAAA,aAAAA,QACA,gBAEU,EAAVA,KAAAA,EAAAA,IAAAA,EAAAA,SACA,iBAEU,EAAVA,OAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GACA,0CAEU,EAAVA,QAAAA,EAAAA,QAAAA,EAAAA,KAAAA,KAAAA,aAAAA,MAAAA,GAGM,SAAN,SACQ,IAAR,mDACA,wBACA,IAGQ,SAAR,OACU,IAAV,IACA,IACU,OAAV,GACY,IAAZ,KACc,GAAd3uB,EACc,EAAd8B,KAAAA,MAAAA,EAAAA,EAAAA,QAAAA,WACc,EAAdA,EAAAA,EACc,EAAdvB,EACc,MACF,IAAZ,OACc,GAAdP,EACc,EAAd8B,KAAAA,MAAAA,EAAAA,EAAAA,QAAAA,WACc,EAAdA,EAAAA,EACc,MACF,IAAZ,OACc,GAAd9B,EACc,EAAdO,KAAAA,MAAAA,EAAAA,EAAAA,QAAAA,WACc,EAAdA,EAAAA,EACc,MACF,IAAZ,QACc,GAAdP,EACc,EAAdO,KAAAA,MAAAA,EAAAA,EAAAA,QAAAA,WACc,EAAdA,EAAAA,EACc,MAEJ,EAAVuB,EAAAA,OAAAA,YAAAA,GACU,EAAVA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,QAAAA,EAAAA,QAAAA,EAEY,EADZ,WACAvB,EAAAA,UAAAA,MAAAA,EAAAA,GAAAA,KAAAA,OAEAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,UAAAA,MAAAA,EAAAA,GAAAA,KAAAA,OAAAA,EAAAA,UAAAA,MAAAA,EAAAA,GAAAA,KAAAA,OAAAA,EAEU,EAAVub,cAAAA,UAAAA,EAAAA,OAAAA,aAAAA,CACY,KAAZha,EACY,OAAZvB,IAEU,EAAVub,cAAAA,SAAAA,EAAAA,SAAAA,SAAAA,EAAAA,cAAAA,MAAAA,CACY,KAAZha,EACY,OAAZvB,IAEU,EAAVub,gBAAAA,uBAAAA,WACY,EAAZ8S,EAAAA,MA5CQ,EAARA,EAAAA,KAkDI,kBAxnCJ,SAwnCA7zB,GAEM,qBAAN2zB,KAAAA,iBACM,KAAN,mBACM,KAAN,uBACM,KAAN,0DAGI,SAhoCJ,SAgoCA3zB,GACM,KAAN,iCACM,KAAN,6BACM,KAAN,+BACM,KAAN,2CAGI,QAvoCJ,SAuoCAA,GACM,KAAN,iDACM,KAAN,oDAGI,mBA5oCJ,WA6oCM,aAANoT,KAAAA,qBACM,KAAN,qBAGI,iBAjpCJ,WAipCM,IAAN,OACM,GAAN,uBACQ,IAAR,gCACA,IACU,KAAV,2BACU,KAAV,sBACU,KAAV,yBAIM,KAAN,2CACQ,EAAR,sBACA,MAGI,QAhqCJ,WAiqCM,IAAN,uBACQ,IAAR,gCACA,IACU,KAAV,2BACU,KAAV,sBACU,KAAV,2BAKI,OA3qCJ,SA2qCApT,GACM,IAAN,2CACA,wCACM,EAAN2B,QAAAA,EAAAA,KAAAA,UAAAA,gBAEI,MAhrCJ,SAgrCA3B,GACM,IAAN,2CACA,wCACM,EAAN2B,QAAAA,EAAAA,KAAAA,UAAAA,aAAAA,KAGI,QAtrCJ,SAsrCA3B,GACM,IAAN,2CACA,wCACA,KACM,EAAN8zB,EAAAA,QAAAA,GACM,KAAN,4BAGI,QA9rCJ,WA+rCM,KAAN,cAGI,OAlsCJ,WAmsCM,KAAN,cAGI,UAtsCJ,SAssCA9zB,GACM,KAAN,uBAGI,SA1sCJ,SA0sCA8jB,GACM,KAAN,wBACM,KAAN,YAAQ,OAARA,KAEI,aA9sCJ,WA+sCM,KAAN,YAAQ,OAARE,UAEI,aAjtCJ,WAktCM,KAAN,YAAQ,OAARA,QAEI,cAptCJ,WAqtCM,KAAN,QACA,mCACQ,KAAR,8CAEM,KAAN,wBACM,KAAN,oBClkDqT,MCOjT,IAAY,OACd,GACA,EACA,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIhqB,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,4BAA4BC,MAAM,CAAGmT,OAAQ7T,EAAI6T,OAAS,MAAQhT,GAAG,CAAC,YAAc,SAASI,GAAQA,EAAOE,kBAAkBF,EAAOC,oBAAqB,CAACd,EAAG,MAAM,CAACK,YAAY,mCAAmC,CAACL,EAAG,MAAM,CAACK,YAAY,YAAY,CAACL,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAI+5B,SAAS,sBAAsB,CAAC35B,EAAG,OAAO,CAACJ,EAAI0D,GAAG,UAAW1D,EAAmB,gBAAEI,EAAG,OAAO,CAACE,MAAM,CAAC,YAAa,EAAK,SAAWN,EAAIg6B,aAAa,OAAS,CAAEn0B,KAAM,EAAGC,IAAK9F,EAAI0U,OAAQ7T,GAAG,CAAC,OAASb,EAAIi6B,oBAAoBj6B,EAAIgB,MAAM,GAAGZ,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAI+5B,SAAS,sBAAsB,CAAC35B,EAAG,OAAO,CAACJ,EAAI0D,GAAG,UAAW1D,EAAmB,gBAAEI,EAAG,OAAO,CAACE,MAAM,CAAC,YAAa,EAAK,SAAWN,EAAIk6B,aAAa,OAAS,CAAEr0B,KAAM,EAAGC,IAAK9F,EAAI0U,OAAQ7T,GAAG,CAAC,OAASb,EAAIm6B,oBAAoBn6B,EAAIgB,MAAM,GAAGZ,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAI+5B,SAAS,2BAA2B,CAAC35B,EAAG,OAAO,CAACJ,EAAI0D,GAAG,eAAgB1D,EAAwB,qBAAEI,EAAG,OAAO,CAACE,MAAM,CAAC,YAAa,EAAK,SAAWN,EAAIo6B,kBAAkB,OAAS,CAAEv0B,KAAM,EAAGC,IAAK9F,EAAI0U,OAAQ7T,GAAG,CAAC,OAASb,EAAIq6B,yBAAyBr6B,EAAIgB,MAAM,GAAGZ,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAI+5B,SAAS,4BAA4B,CAAC35B,EAAG,OAAO,CAACJ,EAAI0D,GAAG,gBAAiB1D,EAAyB,sBAAEI,EAAG,OAAO,CAACE,MAAM,CAAC,YAAa,EAAK,SAAWN,EAAIs6B,mBAAmB,OAAS,CAAEz0B,KAAM,EAAGC,IAAK9F,EAAI0U,OAAQ7T,GAAG,CAAC,OAASb,EAAIu6B,0BAA0Bv6B,EAAIgB,MAAM,KAAmB,QAAbhB,EAAIe,KAAgBX,EAAG,MAAM,CAACK,YAAY,aAAa,CAACL,EAAG,MAAM,CAACK,YAAY,oBAAoBiT,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ7S,GAAG,CAAC,MAAQb,EAAIw6B,aAAa,CAACp6B,EAAG,OAAO,CAACK,YAAY,+BAAgCT,EAAY,SAAEI,EAAG,MAAM,CAACK,YAAY,oBAAoBiT,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ7S,GAAG,CAAC,MAAQb,EAAIy6B,eAAe,CAACr6B,EAAG,OAAO,CAACK,YAAY,6BAA6BL,EAAG,MAAM,CAACK,YAAY,oBAAoBiT,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ7S,GAAG,CAAC,MAAQb,EAAI06B,aAAa,CAACt6B,EAAG,OAAO,CAACK,YAAY,6BAA6BL,EAAG,MAAM,CAACK,YAAY,2BAA2BiT,YAAY,CAAC,MAAQ,OAAO,OAAS,QAAQ7S,GAAG,CAAC,MAAQb,EAAI4D,UAAU,CAACxD,EAAG,OAAO,CAACK,YAAY,sBAAsBiT,YAAY,CAAC,YAAY,cAAc1T,EAAIgB,UAC3hF,GAAkB,G,cCOlB,WAAY25B,IAAU,eAClB16B,KAAK+S,eAAe2nB,G,6CAExB,SAAeA,GACXjzB,EAAAA,iBAAsBzH,KAAM06B,EAAU,CAClC,WACA,iB,uBAGR,SAAU30B,GACN,GAAIA,EAAEiN,QACF,GAAIhT,KAAKiT,OAEL,OADAjT,KAAKiT,QAAS,EACNlN,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAK26B,aACL,WAGR,OAAQ50B,EAAE4L,SACN,KAAK,GACD5L,EAAE9E,iBACFjB,KAAKiT,QAAS,EACd,MACJ,KAAK,GACDlN,EAAE9E,iBACFjB,KAAK46B,WACL,MACJ,KAAK,GACD70B,EAAE9E,iBACFjB,KAAK46B,SAAS,MAAM,GACpB,W,KCqCxB,uDACA,0BACA,6BAEA,IACE,KAAFr5B,WACE,MAAFkD,CACI,OAAJmP,CACM,KAANlP,OACM,QAANC,KAGE,WAAFa,CACI,KAAJC,GAEE,KAXF,WAYI,MAAJ,CACM,iBAANo1B,EACM,iBAANC,EACM,sBAANC,EACM,uBAANC,EACM,UAANC,EACM,KAANn6B,GAAAA,MAAAA,MACM,aAANi5B,CACA,CACA,CACQ,KAARx4B,WACQ,GAARmE,UACQ,SAARpB,YAIM,aAAN21B,CACA,CACA,CACQ,KAAR14B,OACQ,GAARmE,OACQ,SAARpB,UAEA,CACQ,KAAR/C,OACQ,GAARmE,OACQ,SAARpB,WAGA,CACA,CACQ,KAAR/C,MACQ,GAARmE,MACQ,SAARpB,UAEA,CACQ,KAAR/C,OACQ,GAARmE,OACQ,SAARpB,UAEA,CACQ,KAAR/C,QACQ,GAARmE,QACQ,SAARpB,WAGA,CACA,CACQ,KAAR/C,cACQ,GAARmE,aACQ,SAARpB,iBAGA,CACA,CACQ,KAAR/C,OACQ,GAARmE,OACQ,SAARpB,UAEA,CACQ,KAAR/C,UACQ,GAARmE,UACQ,SAARpB,YAIM,kBAAN61B,CACA,CACA,CACQ,KAAR54B,aACQ,GAARmE,YACQ,SAARpB,WAGA,CACA,CACQ,KAAR/C,eACQ,GAARmE,aACQ,SAARpB,gBAEA,CACQ,KAAR/C,iBACQ,GAARmE,eACQ,SAARpB,kBAEA,CACQ,KAAR/C,eACQ,GAARmE,aACQ,SAARpB,iBAEA,CACQ,KAAR/C,iBACQ,GAARmE,eACQ,SAARpB,oBAGA,CACA,CACQ,KAAR/C,mBACQ,GAARmE,iBACQ,SAARpB,eAEA,CACQ,KAAR/C,mBACQ,GAARmE,iBACQ,SAARpB,iBAEA,CACQ,KAAR/C,0BACQ,GAARmE,oBACQ,SAARpB,gBAEA,CACQ,KAAR/C,qBACQ,GAARmE,mBACQ,SAARpB,UAEA,CACQ,KAAR/C,yBACQ,GAARmE,mBACQ,SAARpB,WAEA,CACQ,KAAR/C,uBACQ,GAARmE,uBAGA,CACA,CACQ,KAARnE,mCACQ,GAARmE,qBACQ,QAARiM,UAIM,mBAAN0oB,CACA,CACA,CACQ,KAAR94B,cACQ,GAARmE,eAEA,CACQ,KAARnE,aACQ,GAARmE,uBAME,SAAFX,CACI,KADJ,WAEM,OAAN,oBAEI,OAJJ,WAKM,OAAN,qBAEI,QAPJ,WAQM,OAAN,uBAGE,OAAFm2B,CAAAA,eAAAA,gBAAAA,WAAAA,cACE,QA7KF,WA6KI,IAAJ,OACA,mBACM,KAAN,mBACA,CACQ,KAAR35B,YACQ,GAARmE,WACQ,SAARpB,UAEA,CACQ,KAAR/C,cACQ,GAARmE,aACQ,SAARpB,mBAII,KAAJ,sBACI,KAAJ,eACIY,GAAAA,CAAAA,QAAAA,GAAAA,WAAAA,SAAAA,GACE,EAAN,0BAGE,QAlMF,WAmMA,oBACM,KAAN,4BAGE,QAAFC,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,WACE,EAAR,mBACQ,EAAR,mBACQ,EAAR,wBACQ,EAAR,6BAGI,SATJ,SASAqmB,GACMrmB,EAAAA,MAAAA,cACA,KAAN,OAGI,WAdJ,WAeM,GAANq1B,YAGI,WAlBJ,WAmBM,GAANA,WACM,KAAN,aAGI,aAvBJ,WAwBM,GAANA,aACM,KAAN,aAGI,QA5BJ,WA6BM,GAANA,SAEI,iBA/BJ,SA+BAh5B,GACM,OAAN,MACQ,IAAR,UACU,KAAV,WACU,MACF,IAAR,WACU,KAAV,kBACU,MACF,IAAR,aACU,KAAV,aACU,MAEJ,KAAN,oBAEI,iBA7CJ,SA6CAA,GAAM,IAAN,OACM,GAAN,YAAM,CAIA,OAAN,MACQ,IAAR,OACU,KAAV,sBACU,MACF,IAAR,OACU,KAAV,sBACU,MACF,IAAR,MACUsF,EAAAA,eAAAA,KAAAA,QAAAA,aAAAA,IACA,MACF,IAAR,OACUA,EAAAA,eAAAA,KAAAA,QAAAA,eACA,MACF,IAAR,QACUA,EAAAA,gBAAAA,MAAAA,SAAAA,GACE,EAAZ,4BAEU,MACF,IAAR,aACU,KAAV,qBACU,MACF,IAAR,OACU,KAAV,oBACU,MACF,IAAR,UACU,KAAV,sBACU,MAEJ,KAAN,eACM,KAAN,wBAhCQ,KAAR,oBAkCI,sBAjFJ,SAiFAtF,GACM,GAAN,YAAM,CAIA,OAAN,MACQ,IAAR,YACU,KAAV,4BACU,MACF,IAAR,aACU,KAAV,qBACU,MACF,IAAR,eACU,KAAV,uBACU,MACF,IAAR,aACU,KAAV,qBACU,MACF,IAAR,eACU,KAAV,uBACU,MACF,IAAR,iBACU,KAAV,+BACU,MACF,IAAR,iBACU,KAAV,+BACU,MACF,IAAR,oBACU,KAAV,kCACU,MACF,IAAR,mBACU,KAAV,0BACU,MACF,IAAR,mBACU,KAAV,wBACU,MACF,IAAR,qBACU,KAAV,qCACU,MACF,IAAR,qBACU,KAAV,mCACU,EAAVA,QAAAA,KAAAA,OAAAA,OAAAA,aACU,EAAVA,KAAAA,UAAAA,OAAAA,QAAAA,EAAAA,QAAAA,OAAAA,MAAAA,0BACU,MAEJ,KAAN,eACM,KAAN,6BA5CQ,KAAR,yBA8CI,uBAjIJ,SAiIAA,GACM,OAAN,MACQ,IAAR,cACU,KAAV,kBACU,MACF,IAAR,kBACU,KAAV,kBAEM,KAAN,4BCjauT,MCOnT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIpC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACK,YAAY,6BAA6BC,MAAM,CAAGmT,OAAQ7T,EAAI6T,OAAS,MAAQhT,GAAG,CAAC,YAAc,SAASI,GAAQA,EAAOE,kBAAkBF,EAAOC,oBAAqB,CAACd,EAAG,MAAM,CAACK,YAAY,mCAAmC,CAACL,EAAG,MAAM,CAACK,YAAY,YAAY,CAAET,EAAa,UAAEI,EAAG,MAAM,CAACK,YAAY,YAAY,CAACL,EAAG,OAAO,CAACJ,EAAI0D,GAAG,QAAQ1D,EAAI2D,GAAG3D,EAAI+M,MAAM,YAAY/M,EAAI2D,GAAG3D,EAAIwL,aAAaxL,EAAIgB,OAAOZ,EAAG,MAAM,CAACK,YAAY,aAAa,CAAET,EAAa,UAAEI,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAIq7B,YAAYh6B,MAAM,KAAMC,cAAc,CAAClB,EAAG,OAAO,CAACJ,EAAI0D,GAAG,YAAY1D,EAAI2D,GAAG3D,EAAI4I,YAAYxI,EAAG,MAAM,CAACK,YAAY,UAAUiT,YAAY,CAAC,SAAW,WAAW,OAAS,SAAS,CAAE1T,EAAkB,eAAEI,EAAG,OAAO,CAACE,MAAM,CAAC,SAAWN,EAAIs7B,YAAY,OAAS,CAAEC,SAAU,YAAa,MAAQv7B,EAAI4I,SAAS/H,GAAG,CAAC,OAASb,EAAIw7B,mBAAmBx7B,EAAIgB,MAAM,KAAKhB,EAAIgB,KAAMhB,EAAa,UAAEI,EAAG,MAAM,CAACK,YAAY,oBAAoBI,GAAG,CAAC,UAAY,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAIy7B,aAAap6B,MAAM,KAAMC,cAAc,CAAClB,EAAG,OAAO,CAACJ,EAAI0D,GAAG1D,EAAI2D,GAAG3D,EAAI07B,kBAAkB17B,EAAIgB,YAC5tC,GAAkB,GCoCtB,IACE,KAAFQ,YACE,MAAFkD,CACI,OAAJmP,CACM,KAANlP,OACM,QAANC,IAEI,aAAJ9B,OAEE,WAAF2C,CACI,KAAJC,GAEE,KAZF,WAaI,MAAJ,CACM,KAANqH,EACM,OAANvB,EACM,QAAN5C,EACM,SAANoF,GACM,gBAAN2tB,EACM,WAANC,EACM,YAANN,GACM,UAANO,CAAAA,IACM,YAANC,KAGE,MAAF72B,CACI,aADJ,WAEM,IAAN,KACM,KAAN,kCACQ,EAAR62B,EAAAA,OAAAA,EAAAA,QAEM,KAAN,8BACM,KAAN,gBAGE,SAAF92B,CACI,YADJ,WAEM,OAAN,kCAGE,QAxCF,WAyCI,KAAJ,eACI,IAAJ,iBACM,KAAN,kBACQ,KAARxD,aAAAA,OAAAA,GACQ,MAARE,KAIE,QAjDF,aAkDE,QAAF0D,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,SAAAA,GACN,GACU,EAAV,oBACU,EAAV,kBACU,EAAV,YACU,EAAV,gBACU,EAAV,cAEU,EAAV,gBAGMA,EAAAA,IAAAA,iBAAAA,SAAAA,GACE,EAAR,YACQ,EAAR,mBAEMA,EAAAA,IAAAA,mBAAAA,SAAAA,GACE,EAAR,cAEMA,EAAAA,IAAAA,cAAAA,SAAAA,GACE,EAAR,sBAGI,YAxBJ,WAyBM,IAAN,sBACMA,EAAAA,MAAAA,cACA,KAAN,mBAEI,aA7BJ,WA8BMA,EAAAA,MAAAA,cACA,KAAN,2BAEI,gBAjCJ,SAiCA3D,GACA,wBACQ2D,EAAAA,MAAAA,kBAAAA,EAAAA,OACA,KAAR,iBAEM,KAAN,qBC7HwT,MCOpT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAI/F,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,UAAUC,YAAY,cAAcC,MAAM,CAAGoK,MAAO9K,EAAI8K,MAAQ,MAAQjK,GAAG,CAAC,YAAc,SAASI,GAAyD,OAAjDA,EAAOC,iBAAiBD,EAAOE,kBAAyBnB,EAAIoB,cAAcC,MAAM,KAAMC,YAAY,YAAc,SAASL,GAAQA,EAAOC,oBAAqB,CAACd,EAAG,MAAM,CAACK,YAAY,gBAAgBiT,YAAY,CAAC,SAAW,WAAW,CAACtT,EAAG,MAAM,CAACK,YAAY,4BAA4B,CAACT,EAAI0D,GAAG,cAActD,EAAG,YAAY,CAACE,MAAM,CAAC,KAAON,EAAIqT,SAAS,GAAGjT,EAAG,cAAc,CAACI,IAAI,gBAAgBJ,EAAG,MAAM,CAACK,YAAY,YAAYI,GAAG,CAAC,UAAYb,EAAI+7B,gBAAgB,IAC/pB,GAAkB,GCDlB,GAAS,WAAa,IAAI/7B,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,IAAI,OAAOC,YAAY,mCAAmCI,GAAG,CAAC,OAASb,EAAIkU,WAAW,CAAC9T,EAAG,MAAM,CAACsT,YAAY,CAAC,MAAQ,OAAO,SAAW,WAAW,CAACtT,EAAG,MAAM,CAACK,YAAY,YAAYC,MAAM,CAAGmT,OAAQ7T,EAAIg8B,gBAAkB,CAAC57B,EAAG,MAAM,CAACK,YAAY,oBAAoBC,MAAM,CAAGoF,IAAK9F,EAAI0U,OAAS1U,EAAImC,GAAInC,EAAc,YAAE,SAASoC,GAAM,OAAOhC,EAAG,MAAM,CAACK,YAAY,YAAYI,GAAG,CAAC,MAAQ,SAASI,GAAiC,OAAzBA,EAAOE,kBAAyBnB,EAAIwD,YAAYpB,MAAS,CAAChC,EAAG,MAAM,CAACK,YAAY,kCAAkC6C,MAAM,CAAClB,EAAKI,OAAS,YAAc,IAAI9B,MAAM,CAAG,eAAgBV,EAAIi8B,aAAa75B,IAAS9B,MAAM,CAAC,MAAQ8B,EAAKmB,MAAM1C,GAAG,CAAC,YAAc,SAASI,GAAQA,EAAOE,kBAAkBF,EAAOC,oBAAqB,CAAgB,QAAdkB,EAAKuC,KAAgB,CAAEvC,EAAS,KAAEhC,EAAG,OAAO,CAACK,YAAY,kCAAkCL,EAAG,OAAO,CAACK,YAAY,mCAAmCT,EAAIgB,KAAKZ,EAAG,MAAM,CAACK,YAAY,oCAAoC6C,MAAM,CAAClB,EAAKqB,OAAO,CAACrD,EAAG,OAAO,CAACK,YAAY,iBAAiBiT,YAAY,CAAC,cAAc,QAAQ,CAAC1T,EAAI0D,GAAG1D,EAAI2D,GAAGvB,EAAKZ,YAAY,QAAO,UACppC,GAAkB,GCoCtB,uDACA,QAEA,IACE,KAAFA,WACE,MAAFkD,CACI,KAAJ2O,CACM,KAAN1O,QAGE,OAAFw2B,CAAAA,YACE,KARF,WASI,MAAJ,CACM,WAANp2B,GACM,YAANm3B,GACM,WAANC,GACM,WAANC,GACM,UAAN3iB,EACM,gBAANE,MAGE,SAAF3U,CACI,KADJ,WAEM,OAAN,wCAEI,cAJJ,WAKM,OAAN,6CAEI,aAPJ,WAQM,OAAN,YACQ,OAAR,gCAIE,MAAFC,CACI,KADJ,WAEM,KAAN,cACM,KAAN,cACM,KAAN,2CACM,KAAN,WAGE,QAvCF,WAwCI,KAAJ,2CACI,KAAJ,gBAEE,QA3CF,WA4CI,KAAJ,0EACI,KAAJ,UAEE,QAAFG,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,eAAAA,WACE,EAAR,gCACU,EAAV3D,KAAAA,MAEQ,EAAR,YAEM2D,EAAAA,IAAAA,gBAAAA,WACE,EAAR,gCACU,EAAV3D,KAAAA,MAEQ,EAAR,YAEM2D,EAAAA,IAAAA,cAAAA,SAAAA,GACE,IAAR,YACA,oBACU,GAAVs2B,QAAAA,EACU,EAAV,eACA,QACU,GAAVA,QAAAA,EACU,GAAVA,UAII,OAzBJ,WA0BM,KAAN,yFACM,KAAN,gCACA,gBACU,EAAVj6B,KAAAA,EAAAA,cAAAA,EAAAA,YAAAA,EAAAA,KAAAA,EAAAA,SAAAA,KAAAA,EAAAA,KAAAA,EAAAA,MACU,EAAVA,KAAAA,EAAAA,KAAAA,6BAAAA,OAAAA,EAAAA,MAAAA,QAII,QAlCJ,SAkCAk6B,GAAM,IAAN,OACA,WACA,aACM,OAAN,yBACQ,IAAR,KAEQ,EAAR70B,QAAAA,EAAAA,CAAU,SAAV80B,SAAA,cACU,GAAV,EACY,MAAZ,EAEU,EAAVC,SAAAA,SAAAA,EAAAA,GACY,IAAZ,cACA,gBACA,GACc,KAAdh7B,EACc,KAAd+B,EACc,WAAdk5B,EACc,QAAdj6B,EACc,SAAd82B,IAEA,WACc,EAAdvU,KAAAA,QAEc,EAAdA,KAAAA,MACc,EAAdA,MAAAA,GAEY,EAAZnH,KAAAA,GACA,gBACc,EAAd/V,EAAAA,aAAAA,cAMI,aApEJ,SAoEA+V,GAcM,OAbA,EAANA,MAAAA,SAAAA,EAAAA,GACQ,MAAR,iCACA,EACA,iCAEA,cADA,EAGA,eACA,EAEA,KAGA,GAEI,cApFJ,SAoFAvK,EAAA4kB,GACM,IAAN,KAEM,OADA,EAANyE,EAAAA,GACA,EAEM,SAAN,OACQ,EAARrpB,SAAAA,SAAAA,GACU,EAAVjR,KAAAA,EAAAA,EACU,EAAVwb,KAAAA,GACA,2BACY,EAAZ8e,EAAAA,SAAAA,EAAAA,WAKI,UAnGJ,SAmGAn5B,GACM,IAAN,IAGM,SAAN,KACQ,IADA,IAAR,OACA,kCACU,IAAV,qBACU,GAAV,YACY,IAAZ,kBACA,cACA,iBACA,wBACA,MACc,EAAd4F,UAAAA,EAAAA,EACA,sBACc,EAAdA,UAAAA,EAAAA,KAAAA,YAEA,UACc,KAAd,eAEY,MACZ,0BACA,QACc,EAAdlF,EAAAA,EACc,KAAd,gCACgB,EAAhB04B,KAAAA,EAAAA,MAEc,QAzBR,EAANA,KAAAA,KAAAA,IA+BI,YApIJ,SAoIAv6B,GAAM,IAAN,OACM,GAAN,SAuBA,iBACQ,EAARA,MAAAA,EAAAA,KACQ,EAARw6B,KAAAA,KAAAA,SAnBQ,GALR,KACU,GAAVP,QAAAA,GAEQ,EAARj6B,QAAAA,EACQ,GAARi6B,EACA,gBAEU,GADA,EAAVj6B,MAAAA,EAAAA,MACA,SACY,OAAZ,uCACc,EAAdA,SAAAA,EACc,EAAdA,QAAAA,EACc,EAAdiN,SAAAA,SAAAA,GACgB,EAAhBwtB,KAAAA,EAAAA,KAAAA,KAEc,EAAdD,KAAAA,EAAAA,MAGY,EAAZA,KAAAA,KAAAA,QAGU,KAAV,YAMM,OAAN,kBAEM,SAAN,KACQ,GAAR,mBACU,GAAV,QACY,IAAZ,6BACY,KAAZ,2BACAjxB,MAAA,EAAA1H,EAAAA,GACAwtB,OAAA,uCACAA,OAAA,gCACA,CACY,IAAZ,+BACA,IACY,MAAZ,sEACc,IAEF,KAAZ,yBAEU,KAAV,YAII,SAtLJ,SAsLAzrB,GACM,IAAN,qBACM,KAAN,0CACM,KAAN,YChRuT,MCOnT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIhG,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAe,YAAE4B,WAAW,gBAAgBpB,IAAI,QAAQ,CAACJ,EAAG,OAAO,CAACI,IAAI,OAAOF,MAAM,CAAC,WAAY,EAAM,SAAWN,EAAI8D,SAAS,OAAS9D,EAAI+D,WAAWlD,GAAG,CAAC,OAASb,EAAI4C,iBAAiB,IACjV,GAAkB,GCoBtB,IACE,WAAF6C,CACI,KAAJC,GAEE,KAJF,WAKI,MAAJ,CACM,KAAN2N,GACM,SAANvP,GACM,aAAN8B,EACM,UAAN7B,CACQ,KAAR8B,OACQ,IAARC,UAIE,QAfF,WAgBI,MAAJ,CACM,SAANwN,KAAAA,OAGE,QApBF,WAqBI,KAAJ,gBAEE,QAAFlO,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,WACE,EAAR,kBAEMA,EAAAA,IAAAA,kBAAAA,WACE,EAAR,mBAGI,KATJ,SASAC,GAAM,IAAN,OACA,gCACM,KAAN,sBACQ,IACR,IACAC,EAAAA,MAAAA,KAAAA,IAAAA,YACQ,EAARszB,EAAAA,MAAAA,KAAAA,IAAAA,aACQ,IAAR,aACA,6BACU,EAAV,cACAvzB,EAAAA,QAAAA,EAAAA,IAAAA,EAAAA,KAEU,EAAV,mCAEQ,EAAR,yCAGI,aA1BJ,SA0BA5D,GACM,OAAN,OAEM,KAAN,kBCzE0T,MCOtT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QCShC,IACE,WAAFqD,CACI,SAAJq3B,GACI,YAAJC,IAEE,KALF,WAMI,MAAJ,CACM,MAANjyB,IACM,KAANuI,KAGE,QAXF,WAWI,IAAJ,OACI,MAAJ,CACM,YAAN2pB,WACQ,OAAR,UAIE,QAlBF,WAmBI,KAAJ,aAEE,QAAF53B,CACI,UADJ,WACM,IAAN,OACMD,GAAAA,CAAAA,UACNtE,GAAA,yBACQ,GAAR,YACU,IAAV,wCACA,wCACU,EAAViK,EAAAA,GAAAA,GAAAA,EACU,EAAVA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EACU,EAAV,QACU,EAAV,eAGAjK,GAAA,uBACQ,EAAR,kBAGI,cAjBJ,SAiBAmF,KAGI,YApBJ,SAoBAA,GACM,KAAN,iBACM,KAAN,cCtEsT,MCOlT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIhG,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAEJ,EAAW,QAAEI,EAAG,MAAM,CAACK,YAAY,sBAAsBT,EAAIgB,KAAKZ,EAAG,MAAM,CAACK,YAAY,YAAYC,MAAOV,EAAU,OAAEa,GAAG,CAAC,UAAY,SAASI,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAM,CAACK,YAAY,gBAAgB,CAACL,EAAG,MAAM,CAAC2U,SAAS,CAAC,UAAY/U,EAAI2D,GAAG3D,EAAIi9B,UAAU78B,EAAG,OAAO,CAACK,YAAY,mCAAmCI,GAAG,CAAC,MAAQb,EAAI4D,aAAaxD,EAAG,MAAM,CAACK,YAAY,kBAAkB,CAAET,EAAQ,KAAEI,EAAG,OAAO,CAACkD,MAAM,CAACtD,EAAIyD,MAAMiQ,YAAY,CAAC,eAAe,MAAM,MAAQ,OAAO,OAAS,UAAU1T,EAAIgB,KAAKZ,EAAG,MAAM,CAACA,EAAG,MAAM,CAAC2U,SAAS,CAAC,UAAY/U,EAAI2D,GAAG3D,EAAI+2B,gBAAgB32B,EAAG,MAAM,CAACK,YAAY,eAAe,CAACT,EAAImC,GAAInC,EAAQ,MAAE,SAASoC,GAAM,OAAOhC,EAAG,MAAM,CAACK,YAAY,aAAaI,GAAG,CAAC,MAAQ,SAASI,GAAQ,OAAOjB,EAAIk9B,WAAW96B,MAAS,CAACpC,EAAI0D,GAAG1D,EAAI2D,GAAGvB,EAAKZ,YAAWpB,EAAG,MAAM,CAACK,YAAY,aAAaI,GAAG,CAAC,MAAQ,SAASI,GAAQ,OAAOjB,EAAI4D,aAAa,CAAC5D,EAAI0D,GAAG,SAAS,QACv+B,GAAkB,GC0BtB,IACE,KAAFlC,SACE,MAAFkD,CACI,MAAJu4B,OACI,QAAJlG,OACI,KAAJoG,MACI,QAAJC,QACI,OAAJv4B,OACI,KAAJpB,OACI,UAAJ45B,QAEE,KAXF,WAYI,MAAJ,IAGE,QAfF,aAiBE,QAAFj4B,CACI,WADJ,SACAhD,GACM,EAANA,YAEI,QAJJ,WAKM,KAAN,kBCjDqT,MCOjT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIpC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACmB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO1B,EAAe,YAAE4B,WAAW,gBAAgBpB,IAAI,QAAQ,CAACJ,EAAG,OAAO,CAACI,IAAI,OAAOF,MAAM,CAAC,WAAY,EAAM,SAAWN,EAAI8D,SAAS,OAAS9D,EAAI+D,WAAWlD,GAAG,CAAC,OAASb,EAAI4C,iBAAiB,IACjV,GAAkB,GCoBtB,IACE,KAAFpB,aACE,WAAFiE,CACI,KAAJC,GAEE,MAAFhB,CACI,OAAJG,CACM,KAANF,SAGE,KAVF,WAWI,MAAJ,CACM,SAANb,GACM,aAAN8B,EACM,UAAN7B,CACQ,KAAR8B,MACQ,IAARC,SAIE,QApBF,WAqBI,KAAJ,gBAEE,QAAFV,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,WACE,EAAR,kBAEMA,EAAAA,IAAAA,iBAAAA,WACE,EAAR,mBAGI,aATJ,SASA3D,GACM,OAAN,OAEM,KAAN,gBAEI,KAdJ,SAcA4D,GAAM,IAAN,OACM,KAAN,eACM,KAAN,sBACQ,IAAR,6BACA,aACA,+BACA,gCAEAuzB,EAAAA,EAAAA,QACArzB,EAAAA,IAAAA,EAAAA,GAAAA,aAEU,EAAV,cACAF,EAAAA,QAAAA,EAAAA,IAAAA,EAAAA,KAEU,EAAV,mCAGAC,EAAAA,EAAAA,QACAC,EAAAA,KAAAA,EAAAA,GAAAA,YAEU,EAAV,eACAF,EAAAA,QAAAA,EAAAA,KAAAA,EAAAA,KAEU,EAAV,yCAII,KAzCJ,WA0CM,KAAN,kBCtFyT,MCOrT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QClB5B,GAAS,WAAa,IAAIhG,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAQF,EAAW,QAAEI,EAAG,MAAM,CAACK,YAAY,uBAAuBI,GAAG,CAAC,UAAY,SAASI,GAAQA,EAAOE,qBAAsB,CAACf,EAAG,MAAM,CAACA,EAAG,MAAM,CAACK,YAAY,iBAAiB,CAACL,EAAG,QAAQ,CAACmB,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO1B,EAAc,WAAE4B,WAAW,eAAepB,IAAI,QAAQF,MAAM,CAAC,KAAO,QAAQyU,SAAS,CAAC,MAAS/U,EAAc,YAAGa,GAAG,CAAC,MAAQ,SAASI,GAAWA,EAAOuM,OAAOooB,YAAqB51B,EAAI6rB,WAAW5qB,EAAOuM,OAAO9L,aAAYtB,EAAG,MAAM,CAACA,EAAG,OAAO,CAACK,YAAY,mCAAmCiT,YAAY,CAAC,SAAW,YAAYpT,MAAM,CAAC,WAAY,EAAK,SAAWN,EAAIs9B,QAAQ,MAAQt9B,EAAI0B,MAAM,WAAa,SAASb,GAAG,CAAC,OAASb,EAAIu9B,aAAa,OAAOv9B,EAAIgB,MAC3wB,GAAkB,G,gCCShBmF,GAAUC,OAAOD,SAAWC,OAAOC,OAAOF,SAAW,aACrD5C,GAAO4C,GAAQ,QACfq3B,GAAa,CACfC,WAAY,QACZC,WAAY,mBACZC,UAAW,c,cAIX,cAAc,e,wCACd,SAAUhhB,GAAQ,WACVrR,EAAS,CAAEsyB,YAAa,GAAI/2B,OAAQ,IACxC,OAAOg3B,EAAWrM,KAAKvxB,KAAM0c,EAAOpZ,MAAMgM,MAAK,WAC3C,IAAIuuB,EAAM,GACV,EAAKC,gBAAgBzyB,EAAQqR,EAAOhY,MACpCm5B,EAAM,EAAKE,SAAS1yB,GACpB,EAAK2yB,UAAUH,GACfp3B,EAAAA,SAAsB,CAClBhF,MAAOib,EAAOjb,MACdiD,KAAMgY,EAAOhY,KACbpB,KAAMoZ,EAAOpZ,MAEjBwC,EAAAA,MAAe,eAAgB4W,EAAOjb,UAG1C,SAASm8B,EAAWvuB,GAAU,WAC1B,OAAO5H,EAAAA,aAAkB4H,GAAUC,MAAK,SAACF,GACrC,GAAIA,EAAK6uB,QACL,OAAOL,EAAWrM,KAAK,EAAMjuB,GAAKwD,KAAKuI,EAAU,MAAQD,EAAK6uB,UAAU3uB,MAAK,WACzE4uB,EAAW9uB,MAGf8uB,EAAW9uB,MAKvB,SAAS8uB,EAAW9uB,GAAM,MACtBA,EAAKuuB,cAAe,EAAAtyB,EAAOsyB,aAAYnyB,KAAnB,iBAA2B4D,EAAKuuB,cACpDvuB,EAAKxI,QAAUiH,OAAOkb,OAAO1d,EAAOzE,OAAQwI,EAAKxI,W,2BAGzD,SAAc8V,GACV,IAAKA,EAAOpZ,KAMR,OALAmD,EAAAA,aAA0B,CACtBhF,MAAOib,EAAOjb,OAElBgF,EAAAA,YAAyB,KACzBX,EAAAA,MAAe,eACR6B,QAAQC,UAEnB,IAAIg0B,EAAYn1B,EAAAA,aACZo1B,EAAc,GASlB,OARAD,EAAUluB,SAAQ,SAACvL,GACXA,EAAKg8B,aACLtC,EAAY15B,EAAKV,OAASU,EAAKg8B,WAAWjjB,KAAI,SAACnV,GAC3C,OAAOA,EAAE2F,MAAM,UAKpBkyB,EAAWrM,KAAKvxB,KAAM0c,EAAOpZ,MAEpC,SAASs6B,EAAWvuB,GAAU,WAC1B,OAAO5H,EAAAA,aAAkB4H,GAAUC,MAAK,SAACF,GACrC,IAAIgvB,EAAQhvB,EAAKgvB,OAAS,GACtBP,EAAM,GAqBV,IAAK,IAAIr6B,KApBT46B,EAAM1wB,SAAQ,SAAC2wB,GACX,IAAIC,EAAW,oBACfD,EAAKE,IAAI7wB,SAAQ,SAAC6wB,EAAKv6B,GACnB,IAAIkJ,EAAM5J,GAAKwD,KAAKuI,EAAU,MAAQkvB,EAAIj7B,MAC1C4J,EAAMA,EAAI7E,QAAQ,MAAO,KACzBi2B,GAAY,kBAAJ,OAAsBpxB,EAAtB,MACRoxB,GAAY,YAAJ,OAAgBC,EAAIC,OAApB,MACRF,GAAYt6B,EAAQq6B,EAAOE,EAAI/5B,OAAS,EAAI,KAAO,MAEvD85B,GAAY,MACZA,GAAY,eAAJ,OAAmBD,EAAKh8B,GAAxB,OACRi8B,GAAY,cAAJ,OAAkBD,EAAK59B,MAAvB,OACR69B,GAAY,eAAJ,OAAmBD,EAAKI,OAAxB,OACRH,GAAY,MACZT,GAAOS,EACPT,GAAO,2BACPA,GAAO,eAAJ,OAAmBQ,EAAKh8B,GAAxB,OACHw7B,GAAO,aAAJ,OAAiBQ,EAAKlY,KAAtB,OACH0X,GAAO,SAEMzuB,EAAKsvB,gBAAiB,CAGnC,GAFAb,GAAO,iBAAJ,OAAqBr6B,EAArB,eACHA,EAAO4L,EAAKsvB,gBAAgBl7B,GACxBA,EAAKm7B,cACLd,GAAO,kBACPA,GAAO,YAAJ,OAAgBr6B,EAAKm7B,cAArB,QACHd,GAAO,SAAJ,OAAar6B,EAAKo7B,UAAlB,YACA,GAAIp7B,EAAKq7B,SAAU,CACtB,IAAIC,EAASx7B,GAAKwD,KAAKuI,EAAU,MAAQ7L,EAAKq7B,UAC9CC,EAASA,EAAOz2B,QAAQ,MAAO,KAC/Bw1B,GAAO,cACPA,GAAO,kCAAJ,OAAsCiB,EAAtC,KAEPjB,GAAO,MAEX,EAAKkB,WAAWlB,GAChBzuB,EAAKN,UAAYM,EAAKN,WAAa,GACnCM,EAAKL,eAAiBK,EAAKL,gBAAkB,GAC7CiwB,EAAmB5vB,GACnB3I,EAAAA,aAA0B,CACtBhF,MAAOib,EAAOjb,MACd6B,KAAMoZ,EAAOpZ,MAEjBmD,EAAAA,YAAyB2I,EACzBtJ,EAAAA,MAAe,cAAe4W,EAAOjb,UAI7C,SAASu9B,EAAmB5vB,GAExB,GADAA,EAAK6vB,aAAeC,EAAkB9vB,EAAK6vB,YAAa7vB,EAAKL,gBACzDK,EAAKT,MAAO,CAIZ,IAAK,IAAIvM,KAHTgN,EAAKT,MAAMI,eAAiBK,EAAKT,MAAMI,gBAAkB,GACzDK,EAAKT,MAAMG,UAAYM,EAAKT,MAAMG,WAAa,GAC/CM,EAAKT,MAAMswB,aAAeC,EAAkB9vB,EAAKT,MAAMswB,YAAa7vB,EAAKT,MAAMI,gBAC/DK,EAAKL,eACjBK,EAAKT,MAAMI,eAAe3M,GAAOgN,EAAKT,MAAMI,eAAe3M,IAAQgN,EAAKL,eAAe3M,GAE3F,IAAK,IAAIA,KAAOgN,EAAKN,UACjBM,EAAKT,MAAMG,UAAU1M,GAAOgN,EAAKT,MAAMG,UAAU1M,IAAQgN,EAAKN,UAAU1M,QAG5EgN,EAAKT,MAAQ,CACTI,eAAgBK,EAAKL,eACrBD,UAAWM,EAAKN,WAK5B,SAASowB,EAAkBD,EAAalwB,GAAgB,eAC3C3M,GACL,IAAI+7B,EAAatC,EAAYz5B,GACzBX,EAAQw9B,EAAY78B,GACpB+7B,GACAA,EAAWzwB,SAAQ,SAACvL,GAChB4M,EAAe5M,GAAQV,MALnC,IAAK,IAAIW,KAAO68B,EAAa,EAApB78B,M,sBAWjB,SAASgN,GACL,IAAIyuB,EAAM,GACNriB,EAAU,EACVpU,EAAiB,GACjB+3B,EAAS,MACTC,EAAO,OACX,GAAIhwB,EAAKxI,OAAQ,CAEb,IAAK,IAAIxE,KADTy7B,GAAO,WACSzuB,EAAKxI,OACjBi3B,GAAO,QAAJ,OAAYz7B,EAAIiG,QAAQ,MAAO,KAA/B,aAAwC+G,EAAKxI,OAAOxE,GAApD,OAEPy7B,GAAO,MA0CX,OAxCIzuB,EAAKuuB,aACLvuB,EAAKuuB,YAAYjwB,SAAQ,SAAC+N,GACtB,GAAKA,EAAMC,MAAX,CAGA,IAAIP,EAAW,GACXO,EAAQD,EAAMC,iBAAiBjP,MAAQgP,EAAMC,MAAM5U,KAAK,KAAO2U,EAAMC,MAezE,IAAK,IAAIyQ,KAdTzQ,EAAQA,EAAMrT,QAAQ,OAAQ,KAC9BqT,EAAQA,EAAM2H,MAAM,YACpB3H,EAAMhO,SAAQ,SAACgO,EAAO1X,GAClBmX,EAAS3P,KAAT,oBAA2BgQ,IAC3BpU,EAAeoE,KAAK,CAChBgQ,QAASA,EACTE,MAAOA,EACPJ,OAAQI,EAAM2H,MAAM,KACpBgc,MAAOC,EAAU5jB,KAErBF,OAEJL,EAAWA,EAASrU,KAAK,KACzB+2B,GAAO,GAAJ,OAAO1iB,EAAP,OACcM,EAAM8jB,SACnB1B,GAAO,GAAJ,OAAON,GAAWpR,GAAlB,YAA2B1Q,EAAM8jB,SAASpT,GAA1C,OAEP0R,GAAO,UAGfz2B,EAAe2B,MAAK,SAACyT,EAAGC,GACpB,OAAOA,EAAE4iB,MAAQ7iB,EAAE6iB,SAEvBj4B,EAAesG,SAAQ,SAACvL,GAChBA,EAAKmZ,OAAO9W,OAAS,EACrBrC,EAAK0Z,OAAS1Z,EAAKmZ,OAAOxU,KAAK,wCAE/B3E,EAAK0Z,OAAS1Z,EAAKuZ,MAEvBvZ,EAAK0Z,OAAS,IAAIzP,OAAOjK,EAAK0Z,WAElCpV,EAAAA,eAA4BW,EAC5BX,EAAAA,OAAoB2I,EAAKxI,OAClBi3B,EAEP,SAASyB,EAAU5jB,GACf,IAAI8jB,EAAM9jB,EAAM/Q,MAAMw0B,GAClBznB,EAAIgE,EAAM/Q,MAAMy0B,GAGpB,OAFAI,EAAOA,GAAOA,EAAIh7B,QAAW,EAC7BkT,EAAKA,GAAgB,IAAXA,EAAElT,QAAkB,EACvBg7B,EAAM9nB,K,uBAGrB,SAAUmmB,GACFp3B,EAAAA,YACAA,EAAAA,WAAAA,SAEJA,EAAAA,WAAwBg5B,SAASC,cAAc,SAC/Cj5B,EAAAA,WAAAA,KAA6B,WAC7BA,EAAAA,WAAAA,YAAkCg5B,SAASE,eAAe9B,IAC1D4B,SAASG,qBAAqB,QAAQ,GAAGC,YAAYp5B,EAAAA,c,wBAEzD,SAAWo3B,GACHp3B,EAAAA,WACAA,EAAAA,UAAAA,SAEJA,EAAAA,UAAuBg5B,SAASC,cAAc,SAC9Cj5B,EAAAA,UAAAA,KAA4B,WAC5BA,EAAAA,UAAAA,YAAiCg5B,SAASE,eAAe9B,IACzD4B,SAASG,qBAAqB,QAAQ,GAAGC,YAAYp5B,EAAAA,a,6BAEzD,SAAgB4E,EAAQ3G,GACpB,IAAIo7B,EAAc,cACdtC,EAAa,GACbC,EAAa,GACbsC,EAAc,GACdC,EAAiB,GACjBC,EAAuB,GACvBC,EAAmB,UAATx7B,GAA6B,mBAATA,EAC9By7B,EAAgB,mBAATz7B,GAAsC,kBAATA,EAiBxC,SAAS07B,IACA/0B,EAAOzE,OAAO,gBACXyE,EAAOzE,OAAO,qBACdyE,EAAOzE,OAAO,cAAgBy5B,IAAAA,CAAOh1B,EAAOzE,OAAO,sBAAsB05B,MAAM,IAAKzC,MAEpFxyB,EAAOzE,OAAO,cADPs5B,EACuB,UAEA,sBAGjC70B,EAAOzE,OAAO,qBACfyE,EAAOzE,OAAO,mBAAqB,WAElCyE,EAAOzE,OAAO,gBACXyE,EAAOzE,OAAO,qBACdyE,EAAOzE,OAAO,cAAgBy5B,IAAAA,CAAOh1B,EAAOzE,OAAO,sBAAsB05B,MAAM,IAAKzC,MAEpFxyB,EAAOzE,OAAO,cADPs5B,EACuB,OACvBC,EACuB,OAEA,kBAGjC90B,EAAOzE,OAAO,iBAGPyE,EAAOzE,OAAO,eAFlBu5B,EACID,EAC+B,UAEA,UAGJ,WAGlC70B,EAAOzE,OAAO,oBAGPyE,EAAOzE,OAAO,kBAFlBu5B,EACID,EACkC,UAEA,UAGJJ,GAGrCz0B,EAAOzE,OAAO,0BAEXyE,EAAOzE,OAAO,wBADdu5B,EACwC90B,EAAOzE,OAAO,eAEdk5B,GAG3Cz0B,EAAOzE,OAAO,mBAEXyE,EAAOzE,OAAO,iBADdu5B,EACiCL,EAC1BI,EAC0B,mBAEA,oBAGpC70B,EAAOzE,OAAO,sBAEXyE,EAAOzE,OAAO,oBADdu5B,EACoC90B,EAAOzE,OAAO,wBAEdyE,EAAOzE,OAAO,gBAGrDyE,EAAOzE,OAAO,0BACfyE,EAAOzE,OAAO,wBAA0ByE,EAAOzE,OAAO,gBAE1D62B,EAAapyB,EAAOzE,OAAO,cAC3B42B,EAAanyB,EAAOzE,OAAO,cAC3Bm5B,EAAc10B,EAAOzE,OAAO,eAC5Bo5B,EAAiB30B,EAAOzE,OAAO,kBAC/Bq5B,EAAuB50B,EAAOzE,OAAO,wBAEzC,SAAS25B,IACAl1B,EAAOzE,OAAO,sBACfyE,EAAOzE,OAAO,oBAAsBk5B,GAEnCz0B,EAAOzE,OAAO,gCAEXyE,EAAOzE,OAAO,8BADdu5B,EAC8CE,IAAAA,CAAOL,GAAgBM,MAAM,IAAKzC,MACzEqC,EACuC,2BAEA,6BAGjD70B,EAAOzE,OAAO,qCAEXyE,EAAOzE,OAAO,mCADdu5B,EACmDE,IAAAA,CAAOL,GAAgBM,MAAM,IAAKzC,MAC9EqC,EAC4C,2BAEA,6BAGtD70B,EAAOzE,OAAO,sCAEXyE,EAAOzE,OAAO,oCADdu5B,EACoDH,EAC7CE,EAC6C,qBAEA,6BAKhE,SAASM,IACAn1B,EAAOzE,OAAO,qBACfyE,EAAOzE,OAAO,mBAAqBo5B,GAElC30B,EAAOzE,OAAO,+BACfyE,EAAOzE,OAAO,6BAA+B42B,GAE5CnyB,EAAOzE,OAAO,+BACXu5B,EACA90B,EAAOzE,OAAO,6BAA+Bk5B,EACtCI,IACP70B,EAAOzE,OAAO,6BAA+B,uBAGhDyE,EAAOzE,OAAO,iCACfyE,EAAOzE,OAAO,+BAAiC42B,GAE9CnyB,EAAOzE,OAAO,iCAEXyE,EAAOzE,OAAO,+BADdu5B,EAC+CL,EACxCI,EACwC,kBAEA,yBAGlD70B,EAAOzE,OAAO,6BAEXyE,EAAOzE,OAAO,2BADdu5B,EAC2CF,EAEAH,GAKvD,SAASW,IACAp1B,EAAOzE,OAAO,yBAEXyE,EAAOzE,OAAO,uBADdu5B,EACuC1C,EAChCyC,EACgC,OAEA,kBAG1C70B,EAAOzE,OAAO,yBACfyE,EAAOzE,OAAO,uBAAyB42B,GAEtCnyB,EAAOzE,OAAO,qBACfyE,EAAOzE,OAAO,mBAAqBo5B,GAI3C,SAASU,IACAr1B,EAAOzE,OAAO,8BAEXyE,EAAOzE,OAAO,4BADdu5B,EAC4CH,EAEAxC,GAG/CnyB,EAAOzE,OAAO,oCACXu5B,EACA90B,EAAOzE,OAAO,kCAAoCk5B,GAElDz0B,EAAOzE,OAAO,kCAAoC,UAClDyE,EAAOzE,OAAO,kCAAoC,SAGrDyE,EAAOzE,OAAO,oCAEXyE,EAAOzE,OAAO,kCADdu5B,EACkD3C,EAC3C0C,EAC2C,mBAEA,uBAGrD70B,EAAOzE,OAAO,0BACfyE,EAAOzE,OAAO,wBAA0B42B,GAEvCnyB,EAAOzE,OAAO,0BAEXyE,EAAOzE,OAAO,wBADdu5B,EACwCL,EACjCI,EACiC,kBAEA,yBAG3C70B,EAAOzE,OAAO,oCACXyE,EAAOzE,OAAO,gCACdyE,EAAOzE,OAAO,kCAAoCyE,EAAOzE,OAAO,gCACzDu5B,EACP90B,EAAOzE,OAAO,kCAAoCk5B,GAElDz0B,EAAOzE,OAAO,kCAAoC,UAClDyE,EAAOzE,OAAO,kCAAoC,SAGrDyE,EAAOzE,OAAO,oCACXyE,EAAOzE,OAAO,gCACdyE,EAAOzE,OAAO,kCAAoCyE,EAAOzE,OAAO,gCAEhEyE,EAAOzE,OAAO,kCAAoCyE,EAAOzE,OAAO,mCAK5E,SAAS+5B,IACAt1B,EAAOzE,OAAO,qBAEXyE,EAAOzE,OAAO,mBADdu5B,EACmC3C,EAC5B0C,EAC4B,mBAEA,uBAGtC70B,EAAOzE,OAAO,qBACfyE,EAAOzE,OAAO,mBAAqByE,EAAOzE,OAAO,wBAEhDyE,EAAOzE,OAAO,iBACfyE,EAAOzE,OAAO,eAAiBo5B,GAE9B30B,EAAOzE,OAAO,8BACfyE,EAAOzE,OAAO,4BAA8ByE,EAAOzE,OAAO,mCAEzDyE,EAAOzE,OAAO,8BACfyE,EAAOzE,OAAO,4BAA8ByE,EAAOzE,OAAO,mCAEzDyE,EAAOzE,OAAO,0BACfyE,EAAOzE,OAAO,wBAA0Bq5B,GAEvC50B,EAAOzE,OAAO,8BAEXyE,EAAOzE,OAAO,4BADdu5B,EAC4CH,EACrCE,EACqC,kBAEA,yBAKxD,SAASU,IACAv1B,EAAOzE,OAAO,0BAEXyE,EAAOzE,OAAO,wBADdu5B,EACwC3C,EAEA,QAG3CnyB,EAAOzE,OAAO,0BAEXyE,EAAOzE,OAAO,wBADds5B,IAAYC,EAC4B,mBAEAL,GAG3Cz0B,EAAOzE,OAAO,sBACfyE,EAAOzE,OAAO,oBAAsBo5B,GAEnC30B,EAAOzE,OAAO,mCACfyE,EAAOzE,OAAO,iCAAmCk5B,GAEhDz0B,EAAOzE,OAAO,oCACfyE,EAAOzE,OAAO,kCAAoCk5B,GAI1D,SAASe,IACAx1B,EAAOzE,OAAO,wBACfyE,EAAOzE,OAAO,sBAAwB42B,GAErCnyB,EAAOzE,OAAO,6BACfyE,EAAOzE,OAAO,2BAA6B42B,GAE1CnyB,EAAOzE,OAAO,wBAEXyE,EAAOzE,OAAO,sBADdu5B,EACsCL,EAC/BI,EAC+B,OAEA,kBAGzC70B,EAAOzE,OAAO,oBACfyE,EAAOzE,OAAO,kBAAoBo5B,GAI1C,SAASc,IACAz1B,EAAOzE,OAAO,uBACfyE,EAAOzE,OAAO,qBAAuB42B,GAEpCnyB,EAAOzE,OAAO,uBAEXyE,EAAOzE,OAAO,qBADdu5B,EACqC1C,EAC9ByC,EAC8B,OAEA,iBAGxC70B,EAAOzE,OAAO,iCACfyE,EAAOzE,OAAO,+BAAiCy5B,IAAAA,CAAOh1B,EAAOzE,OAAO,sBAAsB05B,MAAM,IAAKzC,OAEpGxyB,EAAOzE,OAAO,uCACfyE,EAAOzE,OAAO,qCAAuCyE,EAAOzE,OAAO,sBAElEyE,EAAOzE,OAAO,6BACfyE,EAAOzE,OAAO,2BAA6ByE,EAAOzE,OAAO,sBAExDyE,EAAOzE,OAAO,+BACXu5B,IACA90B,EAAOzE,OAAO,8BAAgC42B,GAGjDnyB,EAAOzE,OAAO,gCAEXyE,EAAOzE,OAAO,8BADdu5B,EAC8CJ,EAEAM,IAAAA,CAAON,GAAaO,MAAM,IAAKzC,OAGhFxyB,EAAOzE,OAAO,yCACfyE,EAAOzE,OAAO,uCAAyCk5B,GAEtDz0B,EAAOzE,OAAO,qCACXu5B,EACA90B,EAAOzE,OAAO,mCAAqCq5B,EAC5C50B,EAAOzE,OAAO,yCAA2Ck5B,IAChEz0B,EAAOzE,OAAO,mCAAqCm5B,IAGtD10B,EAAOzE,OAAO,gCACfyE,EAAOzE,OAAO,8BAAgCyE,EAAOzE,OAAO,+BAE3DyE,EAAOzE,OAAO,4BACfyE,EAAOzE,OAAO,0BAA4Bk5B,GAEzCz0B,EAAOzE,OAAO,yCACfyE,EAAOzE,OAAO,uCAAyCyE,EAAOzE,OAAO,wCAEpEyE,EAAOzE,OAAO,qCACfyE,EAAOzE,OAAO,mCAAqCyE,EAAOzE,OAAO,oCAEhEyE,EAAOzE,OAAO,oCACfyE,EAAOzE,OAAO,kCAAoCk5B,GAEjDz0B,EAAOzE,OAAO,gCACXyE,EAAOzE,OAAO,oCAAsCk5B,EACpDz0B,EAAOzE,OAAO,8BAAgCk5B,EAE9Cz0B,EAAOzE,OAAO,8BADPu5B,EACuCF,EACvCC,EACuC,kBAEA,yBAGjD70B,EAAOzE,OAAO,iCAEXyE,EAAOzE,OAAO,+BADdu5B,EAC+C90B,EAAOzE,OAAO,qBACtDs5B,EACwC,kBAEA,yBAGlD70B,EAAOzE,OAAO,kCACfyE,EAAOzE,OAAO,gCAAkCyE,EAAOzE,OAAO,gCAE7DyE,EAAOzE,OAAO,mCACfyE,EAAOzE,OAAO,iCAAmCk5B,GAEhDz0B,EAAOzE,OAAO,+BACXyE,EAAOzE,OAAO,mCAAqCk5B,EACnDz0B,EAAOzE,OAAO,6BAA+By5B,IAAAA,CAAOh1B,EAAOzE,OAAO,sBAAsB05B,MAAM,IAAKzC,MAEnGxyB,EAAOzE,OAAO,6BAA+Bk5B,GAKzD,SAASiB,IACA11B,EAAOzE,OAAO,sCAEXyE,EAAOzE,OAAO,oCADdu5B,EACoDL,EAEAz0B,EAAOzE,OAAO,uBAGrEyE,EAAOzE,OAAO,sCACfyE,EAAOzE,OAAO,oCAAsCo5B,GAEnD30B,EAAOzE,OAAO,gBACfyE,EAAOzE,OAAO,cAAgBo5B,GAE7B30B,EAAOzE,OAAO,0BAEXyE,EAAOzE,OAAO,wBADdu5B,EACwC3C,EACjC0C,EACiC,mBAEA,QAG3C70B,EAAOzE,OAAO,0BACfyE,EAAOzE,OAAO,wBAA0ByE,EAAOzE,OAAO,sBAErDyE,EAAOzE,OAAO,4BAEXyE,EAAOzE,OAAO,0BADdu5B,EAC0C3C,EACnC0C,EACmC,wBAEA,4BAG7C70B,EAAOzE,OAAO,4BAEXyE,EAAOzE,OAAO,0BADdu5B,EAC0CL,EACnCI,EACmC,qBAEA,mBAG7C70B,EAAOzE,OAAO,sBACfyE,EAAOzE,OAAO,oBAAsBk5B,GAEnCz0B,EAAOzE,OAAO,yBACfyE,EAAOzE,OAAO,uBAAyBk5B,GAEtCz0B,EAAOzE,OAAO,yBACfyE,EAAOzE,OAAO,uBAAyByE,EAAOzE,OAAO,2BAEpDyE,EAAOzE,OAAO,yBACfyE,EAAOzE,OAAO,uBAAyBk5B,GAEtCz0B,EAAOzE,OAAO,qBACfyE,EAAOzE,OAAO,mBAAqBk5B,GAI3C,SAASkB,IACA31B,EAAOzE,OAAO,6BACfyE,EAAOzE,OAAO,2BAA6ByE,EAAOzE,OAAO,sBAExDyE,EAAOzE,OAAO,6BAEXyE,EAAOzE,OAAO,2BADdu5B,EAC2C1C,EACpCyC,EACoC,OAEA,iBAG9C70B,EAAOzE,OAAO,yBAEXyE,EAAOzE,OAAO,uBADdu5B,EACuCH,EAEAF,GAG1Cz0B,EAAOzE,OAAO,oCACfyE,EAAOzE,OAAO,kCAAoCyE,EAAOzE,OAAO,4BAE/DyE,EAAOzE,OAAO,oCACfyE,EAAOzE,OAAO,kCAAoCyE,EAAOzE,OAAO,4BAE/DyE,EAAOzE,OAAO,gCACfyE,EAAOzE,OAAO,8BAAgCyE,EAAOzE,OAAO,wBAE5DyE,EAAOzE,OAAO,gCAAkCk5B,EAChDz0B,EAAOzE,OAAO,8BAAgCyE,EAAOzE,OAAO,iBAE5DyE,EAAOzE,OAAO,8BAAgCk5B,EAE7Cz0B,EAAOzE,OAAO,4CACfyE,EAAOzE,OAAO,0CAA4CyE,EAAOzE,OAAO,sBAEvEyE,EAAOzE,OAAO,4CACfyE,EAAOzE,OAAO,0CAA4CyE,EAAOzE,OAAO,mCAEvEyE,EAAOzE,OAAO,6CACfyE,EAAOzE,OAAO,2CAA6CyE,EAAOzE,OAAO,6BAExEyE,EAAOzE,OAAO,kDACfyE,EAAOzE,OAAO,gDAAkDyE,EAAOzE,OAAO,6BAItF,SAASq6B,IACA51B,EAAOzE,OAAO,sBACfyE,EAAOzE,OAAO,oBAAsB42B,GAEnCnyB,EAAOzE,OAAO,sBAEXyE,EAAOzE,OAAO,oBADdu5B,EACoCL,EAC7BI,EAC6B,OAEAzC,GAGvCpyB,EAAOzE,OAAO,kBACXyE,EAAOzE,OAAO,sBAAwBk5B,EACtCz0B,EAAOzE,OAAO,gBAAkB,UAEhCyE,EAAOzE,OAAO,gBAAkBk5B,GAGnCz0B,EAAOzE,OAAO,kCACfyE,EAAOzE,OAAO,gCAAkC42B,GAE/CnyB,EAAOzE,OAAO,kCAEXyE,EAAOzE,OAAO,gCADdu5B,EACgDL,EAEAO,IAAAA,CAAON,GAAaO,MAAM,IAAKzC,OAGlFxyB,EAAOzE,OAAO,8BACfyE,EAAOzE,OAAO,4BAA8Bk5B,GAE3Cz0B,EAAOzE,OAAO,iCAEXyE,EAAOzE,OAAO,+BADdu5B,EAC+CL,EACxCI,EACwC,kBAEA,yBAK3D,SAASgB,IACA71B,EAAOzE,OAAO,6BAEXyE,EAAOzE,OAAO,2BADdu5B,EAC2CL,EACpCI,EACoC,kBAEA,yBAG9C70B,EAAOzE,OAAO,8BACfyE,EAAOzE,OAAO,4BAA8Bk5B,GAE3Cz0B,EAAOzE,OAAO,0BACfyE,EAAOzE,OAAO,wBAA0Bq5B,GAnkBhDG,IACAG,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,Q,KCrOR,IACE,KAAF3/B,WACE,WAAFiE,CACI,KAAJC,GAEE,KALF,WAMI,MAAJ,CACM,WAANmmB,GACM,QAANyR,GACM,SAAN8D,IAGE,MAAFn8B,CACI,WADJ,WAEM,KAAN,eAGE,QAjBF,WAkBI,KAAJ,aACI,KAAJ,gBAEE,QAAFG,CACI,aADJ,WACM,IAAN,OACMW,EAAAA,IAAAA,cAAAA,WACE,EAAR,cAEMA,EAAAA,IAAAA,iBAAAA,SAAAA,GACE,EAAR,WACQ,EAAR,cACQ,EAAR,wBACQ,EAAR,eACA,yDACU,EAAV,iCAEQ,EAAR,aACQ,uBAAR2wB,WACU,EAAV,2BAII,WAnBJ,WAmBM,IAAN,OACM,GAAN,iBACQ,IAAR,KACQ,KAAR,sCACU,IAAV,uCACA,GACY,EAAZ8C,KAAAA,CAAAA,EAAAA,OAGQ,EAARA,EACAxwB,MAAA,cACU,OAAV,yBAEAmS,KAAA,YACU,OAAV,QAEQ,KAAR,iBAEQ,KAAR,oCAGI,SAxCJ,SAwCA/Y,GACM,OAAN,MACQ,IAAR,cACU,KAAV,mBACU,MACF,IAAR,kBACU,KAAV,uBACU,MACF,IAAR,iBACU2D,EAAAA,MAAAA,kBAAAA,EAAAA,OACA,MAEJ,KAAN,cCxGuT,MCOnT,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QCkDhC,uDACA,YACA,cACA,0BACA,eAEA,IACE,WAAFN,CACI,OAAJ47B,GACI,UAAJC,EACI,SAAJC,GACI,UAAJC,GACI,QAAJC,GACI,OAAJC,GACI,WAAJC,GACI,SAAJC,IAEE,KAXF,WAYI,MAAJ,CACM,eAANC,GAAAA,KAAAA,EAAAA,QAAAA,mBACM,aAAN/+B,GACM,aAAND,GACM,aAANF,GACM,MAANm/B,KACM,QAANC,EACM,WAANC,EACM,WAANrgC,GACM,YAANyB,GACM,cAANH,GACM,eAANg/B,EACM,WAANj/B,GACM,WAANE,GACM,gBAANC,GACM,KAANpC,GAAAA,MAAAA,SAGE,SAAFiE,CACI,cADJ,WAEM,OAAN,wBAEI,cAJJ,WAKM,OAAN,yBAGE,QAtCF,WAsCI,IAAJ,OACI,MAAJ,CACM,aAANk9B,WACQ,OAAR,kBAEM,cAANC,WACQ,OAAR,mBAEM,SAANtH,SAAAA,EAAAA,GACQ,EAAR,eAEM,WAAND,WACQ,EAAR,gBAIE,QAtDF,WAwDI,GADA,OAAJx0B,WAAAA,EACA,mBACM,IAAN,wBACM,EAANg1B,GAAAA,QAAAA,WACQr1B,EAAAA,MAAAA,iBAGJ,KAAJ,gBAEE,QAhEF,WAgEI,IAAJ,OACI,OAAJK,KAAAA,KACI,IAAJ,SACI,EAAJkxB,UAAAA,EAAAA,UACI,EAAJA,cAAAA,EAAAA,cACI,KAAJ,WACI,KAAJ,mCACM,IAAN,cACA,WACA,eACA,kBACM,EAAN8K,KAAAA,CAAQ,KAAR5gC,aAAQ,MAARE,GAAQ,SAARyC,IACMuC,EAAAA,aAAAA,EAAAA,QACAA,EAAAA,cAAAA,EAAAA,QACAA,EAAAA,OAAAA,EAAAA,QACAA,EAAAA,WAAAA,EAAAA,QACA,EAAN,eACM,EAAN,oBAGE,QAAFtB,CACI,aADJ,WACM,IAAN,OACA,cACQ,EAAR,gCACU,GAAV,GACY,IAAZ,wDACY,EAAZhD,KAAAA,EAAAA,6BAAAA,OAAAA,GAAAA,QAEY,EAAZA,KAAAA,MAGQ,EAAR,qBAEM2D,EAAAA,IAAAA,cAAAA,GACAA,EAAAA,IAAAA,eAAAA,IAEF,cAhBJ,SAgBAC,KAII,gBApBJ,WAqBMD,EAAAA,MAAAA,eAEF,YAvBJ,SAuBAzD,GACM,IAAN,qBACA,SAQQ,KAAR,wBAPQ,KAAR,gCACU,EAAVF,QAAAA,KAEQ,EAAR+S,QAAAA,EACQ,KAAR,QACQ,KAAR,iBAKI,WApCJ,SAoCA7S,GAAM,IAAN,OACM,GAAN,WAAM,CAGA,IAAN,iCACA,6BACA,QA+BQ,EAAR+/B,KAAAA,MA9BQ,KAAR,YACU,QAAVtL,kBACU,QAAVuL,EACU,KAAV7+B,eACU,UAAV45B,kBACU,KAAVF,CACA,CACY,KAAZ37B,KACY,SAAZghB,WACA,eACgB,EAAhB,+BACkB,EAAlB6f,KAAAA,GACkB,EAAlB,oBAGgB,EAAhBA,KAAAA,GACgB,EAAhB,mBAIA,CACY,KAAZ7gC,MACY,SAAZghB,WACc,EAAd6f,KAAAA,GACc,EAAd,qBASM,SAAN,IACQ,KAAR,uBACQ1N,GAAAA,GAAAA,KACR,UACU,EAAVxf,QAAAA,EACU,EAAVA,KAAAA,WAAAA,IAAAA,KAAAA,WAAAA,EAAAA,GACA,EACY,KAAZ,mBAEY,KAAZ,WACYpP,EAAAA,MAAAA,aAAAA,QAGF,KAAV,yBAII,WA7FJ,WA6FM,IAAN,OACM,KAAN,+CACQ,OAAR,WAEM,KAAN,gCACQ,EAAR,oBAEM,KAAN,YAEI,aAtGJ,WAsGM,IAAN,OACM,KAAN,wCACA,SACU,EAAV,qBAII,cA7GJ,SA6GAzD,GACM,IAAN,OACM,EAANA,GAAAA,KAAAA,MACM,MAAN,sBACQ,GAAR,SAGU,MAFA,KAAV,mBAMI,eAxHJ,SAwHAA,GACM,IAAN,OACM,EAANA,GAAAA,KAAAA,MACM,MAAN,0BACQ,GAAR,SAGU,MAFA,KAAV,mBAMI,aAnIJ,SAmIAF,GACM,IAAN,OACM,OAAN,MACQ,IAAR,cACU,EAAVk7B,EAAAA,OAAAA,KAAAA,SAAAA,GACY,OAAZ,mBACc,OAAd,eAAgB,GAAhB33B,eAAA,SAGUI,EAAAA,MAAAA,gBAAAA,CACE,QAAZu3B,EACY,MAAZ57B,EAAAA,SAAAA,QAEU,MACF,IAAR,kBACU,EAAV47B,EAAAA,WAAAA,KAAAA,SAAAA,GACY,OAAZ,eAAc,GAAd33B,mBAAA,MAEU,EAAV23B,KAAAA,CACY,KAAZ97B,OACY,MAAZE,OACY,GAAZiE,oBAEUI,EAAAA,MAAAA,gBAAAA,CACE,QAAZu3B,EACY,MAAZ57B,EAAAA,aAAAA,QAEU,QAGN,iBAjKJ,WAkKM,IAAN,kCACQ,MAAR,CACU,GAAViE,iBACU,KAAVnE,EAAAA,MAAAA,EAAAA,SAAAA,IAAAA,OAAAA,EAAAA,SAAAA,KAAAA,IACU,MAAVE,EAAAA,UAGMqE,EAAAA,MAAAA,gBAAAA,CACE,QAARu3B,EACQ,MAAR57B,KAAAA,OAAAA,KAAAA,eAAAA,YAGI,aA9KJ,SA8KAY,GACM,IAAN,qBACM,EAAN6S,OAAAA,GAEI,WAlLJ,SAkLA7S,GAAM,IAAN,OACA,qBACM,GAAN,kBACQ,OAAR,kBAEM,IAAN,SACQ,GAAR,OAGU,OAFA,KAAV,qCACU,EAAV6S,OAAAA,EACA,kBAEU,IAAV,wBACA,GACY,MAAZ8nB,aACY,YAAZsF,MAEU,OAAV,gDACY,GAAZ,wBAMc,OAAd,iBALc,EAAdptB,KAAAA,EAAAA,SACc,EAAdA,KAAAA,EAAAA,KAAAA,MAAAA,aAAAA,GACc,EAAd,qCACc,EAAdA,OAAAA,OAQI,cA/MJ,WAgNM,KAAN,kBAEI,WAlNJ,WAkNM,IAAN,OACM,KAAN,gCACA,IACU,EAAV,qBACU,EAAV,cACU,EAAV,gBAII,YA3NJ,WA4NM,IAAN,wBACA,GACQ,MAAR8nB,QACQ,WAARvvB,CAAAA,gBAAAA,oBAEM,OAAN,UACA80B,eAAAC,EAAAC,GACAnzB,MAAA,YACQ,IAAR,KACQ,IAAR,wBAYU,OAXA,EAAVjE,UAAAA,SAAAA,SAAAA,GACY,IAAZ,GACc,KAAd9J,EAAAA,MAAAA,aAAAA,GACc,KAAd+B,EACc,KAAdoB,MACc,QAAdnC,EACc,MAAdmgC,EACc,SAAdrJ,IAEY,EAAZ1b,KAAAA,OAAAA,OAAAA,GAAAA,OAEA,KAGAglB,OAAA,YACQ,QAARnlB,IAAAA,OAGI,SAxPJ,SAwPAolB,EAAAC,GAAM,IAAN,OACA,+BACM,GAAN,EAiCQ,EAARC,KAAAA,UAjCA,CACQ,IAAR,KACA,kDAKQ,GAJR,yBACU,EAAV5tB,KAAAA,WAAAA,KAAAA,OACU,EAAVlR,KAAAA,WAAAA,QAAAA,IAEA,EAEU,KAAV,8BACA,IACc,EAAdkR,EAAAA,GACc,EAAd,2EACc,EAAd4tB,KAAAA,WAGA,CASU,GARA,EAAV5tB,CACY,GAAZ7S,KAAAA,UACY,KAAZd,EACY,KAAZ+B,GAAAA,EAAAA,MAAAA,GACY,KAAZE,GAAAA,EAAAA,MAAAA,GACY,OAAZI,EACY,QAAZrB,IAEA,QACY,IAAZ,oDACY,EAAZ2S,KAAAA,EAAAA,6BAAAA,OAAAA,GAAAA,GAEU,KAAV,2BACU,EAAV4tB,KAAAA,OAMM,SAAN,IAAQ,IAAR,OACQ,KAAR,sBACA,sBACYt7B,GAAAA,SAAAA,EAAAA,KAAAA,CAAE,SAAd80B,SAAA,cACc,GAAd,EACgB,MAAhB,EAEc,EAAd,kCACc,EAAdpnB,OAAAA,EACc,EAAdA,QAAAA,KAGU,EAAV,kBACU,EAAV,qBAII,UA/SJ,WA+SM,IAAN,OACA,wBACA,GACQ,MAAR8nB,OACQ,WAARvvB,CAAAA,WAAAA,oBAEM,OAAN,UACA80B,eAAAC,EAAAC,GACAnzB,MAAA,YACQ,IAAR,KACQ,IAAR,wBAcU,OAbA,EAAVjE,UAAAA,SAAAA,SAAAA,GACY,IAAZ,mDACY,EAAZ7H,EAAAA,6BAAAA,OAAAA,GAAAA,GACY,IAAZ,GACc,GAAdnB,EAAAA,UACc,KAAdd,EAAAA,MAAAA,aAAAA,GACc,KAAd+B,EACc,KAAdE,EACc,OAAdI,EACc,QAAdrB,GAEY,EAAZob,KAAAA,OAAAA,OAAAA,GAAAA,OAEA,KAGAglB,OAAA,YACQ,QAARnlB,IAAAA,OAGI,aA9UJ,WA+UM,KAAN,yBACQ,OAAR,gBACA,gBACA,EACA,cACA,GAEA,EAGA,gBACA,EAEA,MAGI,WA/VJ,SA+VAd,GACM,KAAN,wBACM,KAAN,4BACM,KAAN,kBACM,KAAN,iBACM,KAAN,gCACM,KAAN,uBAEI,UAvWJ,SAuWApZ,EAAA2E,GACMT,GAAAA,cAAAA,EAAAA,EAAAA,CAAE,SAAR80B,WAEI,aA1WJ,WA0WM,IAAN,OACA,0BACM,KAAN,kBACM,KAAN,sBACQ,GAAR,sBAAQ,CAGA,IAAR,mBACA,wBACQx2B,EAAAA,MAAAA,aAAAA,CACE,KAAVxC,EAAAA,KACU,SAAVyK,EAAAA,SACU,QAAVpF,EAAAA,QACU,KAAVmE,EAAAA,aAAAA,EAAAA,aAAAA,KAAAA,IACU,OAAVvB,EAAAA,aAAAA,EAAAA,aAAAA,OAAAA,WAKI,cA7XJ,WA6XM,IAAN,OACM,GAAN,YACQ,IAAR,8BACA,2BACQ,IAAR,EACU,OAEF,IANA,IAAR,WAMAD,GACU,IAAV,oBACU,GAAV,4CAIY,OAHA,EAAZ,sBACcxF,EAAAA,MAAAA,kBAAAA,EAAAA,UAEd,SANA,oCAAU,IAAV,OAAU,GAAV,YAMA,SAMI,eAhZJ,WAgZM,IAAN,OACA,KACA,KACA,gBACA,KACA,KACM,OAAN,yBAEQ0B,GAAAA,QAAAA,EAAAA,eAAAA,CAAE,SAAV80B,SAAA,cACU,GAAV,EACY,MAAZ,EAEU,IAAV,KACU,EAAVC,SAAAA,SAAAA,EAAAA,GACY,IAAZ,8BACA,8BACA,kCACA,iBACc,EAAdwG,KACAC,EAAAA,GAAAA,MAAAA,WACgB,OAAhB,WAGA,kBACc,EAAdD,KAAAA,EAAAA,EAAAA,OAGU,QAAVp7B,IAAAA,GAAAA,MAAAA,WACY,EAAZV,EAAAA,QAAAA,SAAAA,GACc,OAAd,YAEY,EAAZW,CACc,UAAdg0B,EACc,cAAdz0B,EACc,OAAdF,EACc,WAAdC,aAMM,SAAN,KACQ,OAAR,oCACU,EAAV+7B,KAIM,SAAN,OACQ,OAAR,oCACU,IAAV,gBACU,EAAVC,EAAAA,GACU,EAAVC,EAAAA,GACU,EAAVC,EAAAA,MAIM,SAAN,OACQ,IAAR,aACA,kBACQ,EAARhwB,KAAAA,SAAAA,GACU,IAAV,wBACY,IAAZ,OAMY,GALA,EAAZjM,KAAAA,CACc,UAAd6G,EAAAA,UACc,KAAd1K,GAAAA,KAAAA,EAAAA,EAAAA,MACc,WAAdyU,EAAAA,cAAAA,GAAAA,KAAAA,EAAAA,EAAAA,eAAAA,KAEA,mBACc,IAAd,0BACc,EAAdxW,GAAAA,EAAAA,SACc,EAAdq6B,KAAAA,CACgB,KAAhBr6B,EACgB,MAAhBE,EAAAA,SACgB,SAAhBsM,EAAAA,SACgB,UAAhBC,EAAAA,UACgB,KAAhB1K,GAAAA,KAAAA,EAAAA,EAAAA,MACgB,WAAhByU,EAAAA,cAAAA,GAAAA,KAAAA,EAAAA,EAAAA,eAAAA,GACgB,WAAhBomB,EAAAA,aAEc,WAMR,SAAN,OACQ,IAAR,eACQ,EAAR/qB,KAAAA,SAAAA,GACU,IAAV,UACA,IACA,aACU,OAAV,WACY,IAAZ,UACc,EAAd1O,OACc,EAAdV,EACc,MACF,IAAZ,WACc,EAAdU,iBACc,EAAdV,EACc,MACF,IAAZ,WACc,EAAdU,gBACc,EAAdV,EACc,MAEJ,EAAViD,GAAAA,KAAAA,CACY,KAAZ1F,EAAAA,IAAAA,EACY,MAAZE,GAAAA,EAAAA,GACY,KAAZiD,EACY,KAAZpB,GAAAA,KAAAA,EAAAA,EAAAA,WAKM,SAAN,OACQ,IAAR,mBACQ,EAAR8P,KAAAA,SAAAA,GACU,IAAV,aACU,EAAVlM,KAAAA,CACY,KAAZ3F,GAAAA,EAAAA,GACY,MAAZE,EAAAA,IAAAA,EACY,KAAZ6B,GAAAA,KAAAA,EAAAA,EAAAA,WAKM,SAAN,KAKQ,OAJA,EAAR/B,GAAAA,GACA,kCACU,EAAVA,EAAAA,EAAAA,MAAAA,GAAAA,KAAAA,GAEA,IAGI,WAthBJ,SAshBAc,GACM,IAAN,qCACQ,GAAR,0BACU,OAAV,oBAII,aA7hBJ,SA6hBAiB,GACM,IAAN,qCACQ,GAAR,4BACU,OAAV,oBAII,UApiBJ,SAoiBAjB,GACM,IAAN,iCACM,OAAN,SAEI,aAxiBJ,WAyiBM,OAAN,4BAEI,WA3iBJ,SA2iBAA,GACM,OAAN,OAEI,cA9iBJ,WA+iBM,OAAN,+BC7sBqT,MCOjT,IAAY,OACd,GACA,EACA,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QCVhC,IACE,KAAFd,MACE,WAAFiE,CACI,OAAJ69B,KCXyS,MCOrS,IAAY,OACd,GACAvjC,EACAQ,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,Q,sBCbhCiF,EAAAA,EAAAA,OAAAA,eAA2B,EAC3BA,EAAAA,EAAAA,UAAAA,MAAsB+9B,KAAAA,OAAa,CAC/BC,QAAS,IACTC,iBAAiB,EACjBC,QAAS,CACL,eAAgB,qCAIxB,IAAIl+B,EAAAA,EAAI,CACJzF,OAAQ,SAAC4jC,GAAD,OAAOA,EAAEC,OAClBC,OAAO,UCfNC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBpf,IAAjBqf,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,IAOV,OAHAE,EAAoBJ,GAAUxS,KAAK2S,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,QAIfH,EAAoBM,EAAID,E,WCzBxB,IAAIE,EAAW,GACfP,EAAoBQ,EAAI,SAASj5B,EAAQk5B,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAexc,EAAAA,EACnB,IAAS5c,EAAI,EAAGA,EAAI+4B,EAAS7/B,OAAQ8G,IAAK,CACrCi5B,EAAWF,EAAS/4B,GAAG,GACvBk5B,EAAKH,EAAS/4B,GAAG,GACjBm5B,EAAWJ,EAAS/4B,GAAG,GAE3B,IAJA,IAGIq5B,GAAY,EACP9d,EAAI,EAAGA,EAAI0d,EAAS//B,OAAQqiB,MACpB,EAAX4d,GAAsBC,GAAgBD,IAAa52B,OAAOmD,KAAK8yB,EAAoBQ,GAAGM,OAAM,SAASxiC,GAAO,OAAO0hC,EAAoBQ,EAAEliC,GAAKmiC,EAAS1d,OAC3J0d,EAAS7yB,OAAOmV,IAAK,IAErB8d,GAAY,EACTF,EAAWC,IAAcA,EAAeD,IAG7C,GAAGE,EAAW,CACbN,EAAS3yB,OAAOpG,IAAK,GACrB,IAAI/C,EAAIi8B,SACE7f,IAANpc,IAAiB8C,EAAS9C,IAGhC,OAAO8C,EAzBNo5B,EAAWA,GAAY,EACvB,IAAI,IAAIn5B,EAAI+4B,EAAS7/B,OAAQ8G,EAAI,GAAK+4B,EAAS/4B,EAAI,GAAG,GAAKm5B,EAAUn5B,IAAK+4B,EAAS/4B,GAAK+4B,EAAS/4B,EAAI,GACrG+4B,EAAS/4B,GAAK,CAACi5B,EAAUC,EAAIC,I,cCJ/BX,EAAoBe,EAAI,SAASX,GAChC,IAAIY,EAASZ,GAAUA,EAAOa,WAC7B,WAAa,OAAOb,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADAJ,EAAoBkB,EAAEF,EAAQ,CAAEtoB,EAAGsoB,IAC5BA,G,cCLRhB,EAAoBkB,EAAI,SAASf,EAASgB,GACzC,IAAI,IAAI7iC,KAAO6iC,EACXnB,EAAoBoB,EAAED,EAAY7iC,KAAS0hC,EAAoBoB,EAAEjB,EAAS7hC,IAC5EyL,OAAOs3B,eAAelB,EAAS7hC,EAAK,CAAEgjC,YAAY,EAAM54B,IAAKy4B,EAAW7iC,M,cCJ3E0hC,EAAoBuB,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOtlC,MAAQ,IAAIulC,SAAS,cAAb,GACd,MAAOx/B,GACR,GAAsB,kBAAXI,OAAqB,OAAOA,QALjB,G,cCAxB29B,EAAoBoB,EAAI,SAASpgB,EAAKqH,GAAQ,OAAOte,OAAOuD,UAAUo0B,eAAejU,KAAKzM,EAAKqH,I,cCK/F,IAAIsZ,EAAkB,CACrB,IAAK,GAaN3B,EAAoBQ,EAAEzd,EAAI,SAAS6e,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4Bx2B,GAC/D,IAKI20B,EAAU2B,EALVnB,EAAWn1B,EAAK,GAChBy2B,EAAcz2B,EAAK,GACnB02B,EAAU12B,EAAK,GAGI9D,EAAI,EAC3B,GAAGi5B,EAASwB,MAAK,SAAS1jC,GAAM,OAA+B,IAAxBojC,EAAgBpjC,MAAe,CACrE,IAAI0hC,KAAY8B,EACZ/B,EAAoBoB,EAAEW,EAAa9B,KACrCD,EAAoBM,EAAEL,GAAY8B,EAAY9B,IAGhD,GAAG+B,EAAS,IAAIz6B,EAASy6B,EAAQhC,GAGlC,IADG8B,GAA4BA,EAA2Bx2B,GACrD9D,EAAIi5B,EAAS//B,OAAQ8G,IACzBo6B,EAAUnB,EAASj5B,GAChBw4B,EAAoBoB,EAAEO,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO5B,EAAoBQ,EAAEj5B,IAG1B26B,EAAqBC,KAAK,yBAA2BA,KAAK,0BAA4B,GAC1FD,EAAmBt4B,QAAQi4B,EAAqB/3B,KAAK,KAAM,IAC3Do4B,EAAmBx6B,KAAOm6B,EAAqB/3B,KAAK,KAAMo4B,EAAmBx6B,KAAKoC,KAAKo4B,I,GC/CvF,IAAIE,EAAsBpC,EAAoBQ,OAAE3f,EAAW,CAAC,MAAM,WAAa,OAAOmf,EAAoB,QAC1GoC,EAAsBpC,EAAoBQ,EAAE4B,I","sources":["webpack://my-editor/./src/App.vue?862d","webpack://my-editor/./src/components/Window.vue?a44c","webpack://my-editor/./src/components/EditorBar.vue?d5d5","webpack://my-editor/./src/components/EditorBarMenu.vue?6fa6","webpack://my-editor/./src/components/Menu.vue?63c5","webpack://my-editor/src/components/Menu.vue","webpack://my-editor/./src/components/Menu.vue?6e3a","webpack://my-editor/./src/components/Menu.vue","webpack://my-editor/./src/event.js","webpack://my-editor/src/components/EditorBarMenu.vue","webpack://my-editor/./src/components/EditorBarMenu.vue?cbf0","webpack://my-editor/./src/components/EditorBarMenu.vue","webpack://my-editor/./src/data/globalData.js","webpack://my-editor/./src/common/util.js","webpack://my-editor/./src/module/shortcut/editor-bar.js","webpack://my-editor/src/components/EditorBar.vue","webpack://my-editor/./src/components/EditorBar.vue?3f41","webpack://my-editor/./src/components/EditorBar.vue","webpack://my-editor/./src/components/Editor.vue?cec4","webpack://my-editor/./src/module/tokenizer/index.js","webpack://my-editor/./src/module/lint/index.js","webpack://my-editor/./src/data/enum.js","webpack://my-editor/./src/module/autocomplete/index.js","webpack://my-editor/./src/common/btree.js","webpack://my-editor/./src/module/fold/index.js","webpack://my-editor/./src/module/search/index.js","webpack://my-editor/./src/module/select/index.js","webpack://my-editor/./src/module/cursor/index.js","webpack://my-editor/./src/module/history/index.js","webpack://my-editor/./src/module/context/index.js","webpack://my-editor/./src/module/shortcut/editor.js","webpack://my-editor/./src/components/Search.vue?2ea8","webpack://my-editor/src/components/Search.vue","webpack://my-editor/./src/components/Search.vue?fccb","webpack://my-editor/./src/components/Search.vue","webpack://my-editor/./src/components/AutoTip.vue?d675","webpack://my-editor/src/components/AutoTip.vue","webpack://my-editor/./src/components/AutoTip.vue?eaef","webpack://my-editor/./src/components/AutoTip.vue","webpack://my-editor/./src/components/Tip.vue?9a48","webpack://my-editor/src/components/Tip.vue","webpack://my-editor/./src/components/Tip.vue?76a9","webpack://my-editor/./src/components/Tip.vue","webpack://my-editor/src/components/Editor.vue","webpack://my-editor/./src/components/Editor.vue?010b","webpack://my-editor/./src/components/Editor.vue","webpack://my-editor/./src/components/TitleBar.vue?03aa","webpack://my-editor/./src/module/shortcut/menu-bar.js","webpack://my-editor/src/components/TitleBar.vue","webpack://my-editor/./src/components/TitleBar.vue?06d6","webpack://my-editor/./src/components/TitleBar.vue","webpack://my-editor/./src/components/StatusBar.vue?eafc","webpack://my-editor/src/components/StatusBar.vue","webpack://my-editor/./src/components/StatusBar.vue?4fcb","webpack://my-editor/./src/components/StatusBar.vue","webpack://my-editor/./src/components/SideBar.vue?f67e","webpack://my-editor/./src/components/SideTree.vue?ccf9","webpack://my-editor/src/components/SideTree.vue","webpack://my-editor/./src/components/SideTree.vue?37e6","webpack://my-editor/./src/components/SideTree.vue","webpack://my-editor/./src/components/SideBarMenu.vue?cf1a","webpack://my-editor/src/components/SideBarMenu.vue","webpack://my-editor/./src/components/SideBarMenu.vue?4351","webpack://my-editor/./src/components/SideBarMenu.vue","webpack://my-editor/src/components/SideBar.vue","webpack://my-editor/./src/components/SideBar.vue?4820","webpack://my-editor/./src/components/SideBar.vue","webpack://my-editor/./src/components/Dialog.vue?ff40","webpack://my-editor/src/components/Dialog.vue","webpack://my-editor/./src/components/Dialog.vue?8ac2","webpack://my-editor/./src/components/Dialog.vue","webpack://my-editor/./src/components/WindowMenu.vue?3724","webpack://my-editor/src/components/WindowMenu.vue","webpack://my-editor/./src/components/WindowMenu.vue?98a5","webpack://my-editor/./src/components/WindowMenu.vue","webpack://my-editor/./src/components/CmdPanel.vue?8ddc","webpack://my-editor/./src/module/theme/index.js","webpack://my-editor/src/components/CmdPanel.vue","webpack://my-editor/./src/components/CmdPanel.vue?4f19","webpack://my-editor/./src/components/CmdPanel.vue","webpack://my-editor/src/components/Window.vue","webpack://my-editor/./src/components/Window.vue?4e7f","webpack://my-editor/./src/components/Window.vue","webpack://my-editor/src/App.vue","webpack://my-editor/./src/App.vue?6d50","webpack://my-editor/./src/App.vue","webpack://my-editor/./src/main.js","webpack://my-editor/webpack/bootstrap","webpack://my-editor/webpack/runtime/chunk loaded","webpack://my-editor/webpack/runtime/compat get default export","webpack://my-editor/webpack/runtime/define property getters","webpack://my-editor/webpack/runtime/global","webpack://my-editor/webpack/runtime/hasOwnProperty shorthand","webpack://my-editor/webpack/runtime/jsonp chunk loading","webpack://my-editor/webpack/startup"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Window')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"window\",staticClass:\"my-window\",style:({\n        'padding-top': _vm._topBarHeight,\n        'padding-bottom': _vm._statusHeight,\n    }),on:{\"mousedown\":_vm.onWindMouseDown}},[(_vm.mode === 'app')?_c('side-bar',{ref:\"sideBar\"}):_vm._e(),_c('div',{ref:\"rightWrap\",staticClass:\"my-right-wrap\",on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)}}},[_c('editor-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.editorList.length),expression:\"editorList.length\"}],attrs:{\"editorList\":_vm.editorList},on:{\"change\":_vm.onChangeTab,\"close\":_vm.onCloseTab,\"close-all\":_vm.onCloseAll,\"close-saved\":_vm.onCloseSaved,\"close-to-left\":_vm.onCloseToLeft,\"close-to-right\":_vm.onCloseToRight}}),_vm._l((_vm.editorList),function(item){return [_c('editor',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.active),expression:\"item.active\"}],key:item.id,ref:'editor' + item.id,refInFor:true,attrs:{\"active\":item.active,\"id\":item.id},on:{\"change\":function($event){return _vm.onFileChange(item.id)},\"save\":function($event){return _vm.onSaveFile(item.id)}}})]}),_c('window-menu',{ref:\"winMenu\"})],2),_c('title-bar',{ref:\"titleBar\",attrs:{\"height\":_vm.topBarHeight},on:{\"change\":_vm.onMenuChange}}),_c('status-bar',{ref:\"statusBar\",attrs:{\"height\":_vm.statusHeight,\"languageList\":_vm.languageList},on:{\"select-langeuage\":_vm.onSelectLanguage}}),_c('cmd-panel'),_c('Dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dialogVisible),expression:\"dialogVisible\"}],attrs:{\"btns\":_vm.dialogBtns,\"content\":_vm.dialogContent,\"icon\":this.dialogIcon,\"icon-color\":this.dialogIconColor,\"overlay\":true,\"title\":_vm.dialogTilte},on:{\"close\":_vm.onDialogClose}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editorBar\",staticClass:\"my-editor-bar\",on:{\"selectstart\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"bar-scroller my-scroll-overlay my-scroll-mini\"},_vm._l((_vm.editorList),function(item){return _c('div',{staticClass:\"bar-item my-hover\",class:[item.active ? 'my-active' : ''],attrs:{\"title\":item.path},on:{\"click\":function($event){return _vm.onClickItem(item.id)},\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu($event, item.id)}}},[_c('div',{staticClass:\"bar-content\",class:[item.icon]},[_c('span',{staticClass:\"bar-text\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"bar-icon\"},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.saved),expression:\"item.saved\"}],staticClass:\"bar-close-icon iconfont icon-close\",attrs:{\"title\":\"close\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.onClose(item.id)}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!item.saved),expression:\"!item.saved\"}],staticClass:\"bar-dot\"})])])])}),0),_c('editor-bar-menu',{ref:\"editorBarMenu\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrap\"},[_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"scroller\",staticClass:\"my-menu my-shadow my-border\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.visible),expression:\"visible\"}],ref:\"content\"},[_vm._l((_vm.myMenuList),function(group,index){return [_c('div',{staticClass:\"my-menu-group\"},_vm._l((group),function(item){return _c('div',{staticClass:\"my-menu-item my-center-between my-hover\",class:{\n                        'my-active': _vm.checkable && item.checked,\n                        disabled: item.disabled,\n                    },on:{\"mousedown\":function($event){return _vm.onClick(item)},\"mouseover\":function($event){return _vm.onHover(item)}}},[_c('div',{staticClass:\"my-menu-title\"},[_vm._v(_vm._s(item.name))]),(item.shortcut)?_c('div',{staticClass:\"my-menu-shortcut\"},[_vm._v(\" \"+_vm._s(item.shortcut)+\" \")]):_vm._e()])}),0),(index < _vm.myMenuList.length - 1)?_c('div',{staticClass:\"my-separator\"}):_vm._e()]})],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"styles\" @mousedown.stop class=\"my-menu my-shadow my-border\" ref=\"scroller\">\r\n        <div v-show=\"visible\" ref=\"content\">\r\n            <template v-for=\"(group, index) in myMenuList\">\r\n                <div class=\"my-menu-group\">\r\n                    <div\r\n                        :class=\"{\r\n                            'my-active': checkable && item.checked,\r\n                            disabled: item.disabled,\r\n                        }\"\r\n                        @mousedown=\"onClick(item)\"\r\n                        @mouseover=\"onHover(item)\"\r\n                        class=\"my-menu-item my-center-between my-hover\"\r\n                        v-for=\"item in group\"\r\n                    >\r\n                        <div class=\"my-menu-title\">{{ item.name }}</div>\r\n                        <div class=\"my-menu-shortcut\" v-if=\"item.shortcut\">\r\n                            {{ item.shortcut }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"my-separator\" v-if=\"index < myMenuList.length - 1\"></div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: 'Menu',\r\n    props: {\r\n        menuList: {\r\n            type: Array,\r\n            default: [],\r\n        },\r\n        styles: {\r\n            type: Object,\r\n        },\r\n        checkable: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        hoverCheck: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        value: {\r\n            type: [Number, String],\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            index: -1,\r\n            itemHeight: 26,\r\n            myMenuList: [],\r\n        };\r\n    },\r\n    computed: {\r\n        visible() {\r\n            for (let i = 0; i < this.myMenuList.length; i++) {\r\n                if (this.myMenuList[i].length) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n    },\r\n    watch: {\r\n        menuList() {\r\n            this.initMenu();\r\n        },\r\n        value(newVal) {\r\n            this.setChecked(newVal);\r\n        },\r\n        index() {\r\n            this.$nextTick(() => {\r\n                this.scrollToIndex();\r\n            });\r\n        },\r\n    },\r\n    created() {\r\n        this.initMenu();\r\n    },\r\n    mounted() {\r\n        this.keydownFn = (e) => {\r\n            if (this.$refs.content.clientHeight) {\r\n                if (e.keyCode === 38) {\r\n                    this.setCheckedByIndex(this.index - 1);\r\n                } else if (e.keyCode === 40) {\r\n                    this.setCheckedByIndex(this.index + 1);\r\n                } else if (e.keyCode === 13) {\r\n                    if (this.index > -1) {\r\n                        this.$emit('change', this.indexMap[this.index]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        $(window).on('keydown', this.keydownFn);\r\n    },\r\n    destroyed() {\r\n        $(window).unbind('keydown', this.keydownFn);\r\n    },\r\n    methods: {\r\n        initMenu() {\r\n            let index = -1;\r\n            let menuList = this.menuList;\r\n            this.index = -1;\r\n            this.maxIndex = -1;\r\n            this.indexMap = {};\r\n            if (menuList[0] && !(menuList[0] instanceof Array)) {\r\n                menuList = [menuList];\r\n            }\r\n            this.myMenuList = menuList.map((group) => {\r\n                return group.map((item) => {\r\n                    item = Object.assign({}, item);\r\n                    item.value = item.value === undefined ? item.name : item.value;\r\n                    item.checked = item.value === this.value;\r\n                    this.indexMap[++index] = item;\r\n                    this.maxIndex = index;\r\n                    if (item.checked) {\r\n                        this.index = index;\r\n                    }\r\n                    return item;\r\n                });\r\n            });\r\n        },\r\n        scrollToIndex() {\r\n            let $scroller = this.$refs.scroller;\r\n            let height = (this.index + 1) * this.itemHeight;\r\n            if ($scroller && height > $scroller.clientHeight + $scroller.scrollTop) {\r\n                $scroller.scrollTop = height - $scroller.clientHeight;\r\n            } else if ($scroller && height < $scroller.scrollTop + this.itemHeight) {\r\n                $scroller.scrollTop = height - this.itemHeight;\r\n            }\r\n        },\r\n        onClick(item) {\r\n            if (item.disabled) {\r\n                return;\r\n            }\r\n            this.clearChecked();\r\n            item.checked = true;\r\n            this.$emit('change', item);\r\n        },\r\n        onHover(item) {\r\n            this.hoverCheck && this.setChecked(item.value);\r\n        },\r\n        setChecked(value) {\r\n            let index = -1;\r\n            this.myMenuList.forEach((group) => {\r\n                group.forEach((item) => {\r\n                    item.checked = item.value === value;\r\n                    index++;\r\n                    if (item.checked) {\r\n                        this.index = index;\r\n                    }\r\n                });\r\n            });\r\n            this.myMenuList.splice();\r\n        },\r\n        setCheckedByIndex(index) {\r\n            this.clearChecked();\r\n            if (index < 0) {\r\n                index = this.maxIndex;\r\n            } else if (index > this.maxIndex) {\r\n                index = 0;\r\n            }\r\n            this.indexMap[index].checked = true;\r\n            this.index = index;\r\n            this.myMenuList.splice();\r\n        },\r\n        clearChecked() {\r\n            this.myMenuList.forEach((group) => {\r\n                group.forEach((item) => {\r\n                    item.checked = false;\r\n                });\r\n            });\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Menu.vue?vue&type=template&id=88f3abd8&\"\nimport script from \"./Menu.vue?vue&type=script&lang=js&\"\nexport * from \"./Menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\n\r\nconst bus = new Vue();\r\n\r\nexport default bus;","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n            v-show=\"menuVisible\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from \"jquery\";\r\nimport Menu from \"./Menu\";\r\nimport EventBus from \"@/event\";\r\n\r\nexport default {\r\n    name: \"EditorBar\",\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            menuList: [\r\n                [\r\n                    {\r\n                        name: \"Close\",\r\n                        op: \"close\",\r\n                        shortcut: \"Ctrl+F4\",\r\n                    },\r\n                    {\r\n                        name: \"Close to the Left\",\r\n                        op: \"closeToLeft\",\r\n                    },\r\n                    {\r\n                        name: \"Close to the Right\",\r\n                        op: \"closeToRight\",\r\n                    },\r\n                    {\r\n                        name: \"Close Saved\",\r\n                        op: \"closeSaved\",\r\n                        shortcut: \"Ctrl+K U\",\r\n                    },\r\n                    {\r\n                        name: \"Close All\",\r\n                        op: \"closeAll\",\r\n                        shortcut: \"Ctrl+K W\",\r\n                    },\r\n                ],\r\n            ],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"10px\",\r\n                top: \"40px\",\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n        },\r\n        show(e, id) {\r\n            this.tabId = id;\r\n            this.menuVisible = true;\r\n            let $parent = $(this.$refs.wrap).parent();\r\n            this.$nextTick(() => {\r\n                let offset = $parent.offset();\r\n                let menuWidth = this.$refs.menu.$el.clientWidth;\r\n                if (\r\n                    menuWidth + e.clientX >\r\n                    offset.left + $parent[0].clientWidth\r\n                ) {\r\n                    this.menuStyle.left =\r\n                        e.clientX - offset.left - menuWidth + \"px\";\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n                }\r\n                this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n                case \"close\":\r\n                    this.$parent.$emit(\"close\", this.tabId);\r\n                    break;\r\n                case \"closeToLeft\":\r\n                    this.$parent.$emit(\"close-to-left\", this.tabId);\r\n                    break;\r\n                case \"closeToRight\":\r\n                    this.$parent.$emit(\"close-to-right\", this.tabId);\r\n                    break;\r\n                case \"closeSaved\":\r\n                    this.$parent.$emit(\"close-saved\", this.tabId);\r\n                    break;\r\n                case \"closeAll\":\r\n                    this.$parent.$emit(\"close-all\", this.tabId);\r\n                    break;\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBarMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBarMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditorBarMenu.vue?vue&type=template&id=dd126106&\"\nimport script from \"./EditorBarMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./EditorBarMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const require = window.require || window.parent.require || function () {};\r\nconst remote = require('@electron/remote');\r\nconst path = require('path');\r\nconst dirname = remote.app.getAppPath();\r\n\r\nconst globalData = {\r\n    dirname: dirname,\r\n    scopeIdMap: {},\r\n    scopeReg: null,\r\n    colors: {},\r\n    nowTheme: {\r\n        value: 'Default Dark+',\r\n        type: 'dark',\r\n        path: path.join(dirname, 'main/extensions/theme-monokai/themes/monokai-color-theme.json'),\r\n    },\r\n    nowIconTheme: {\r\n        value: 'vs-seti',\r\n        path: path.join(dirname, 'main/extensions/theme-seti/icons/vs-seti-icon-theme.json'),\r\n    },\r\n    nowIconData: {},\r\n    themes: [],\r\n    iconThemes: [],\r\n    languageList: [],\r\n    scopeFileList: [],\r\n    scopeTokenList: [],\r\n    grammars: {},\r\n    sourceWordMap: {},\r\n    defaultWordPattern: \"(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\`\\\\~\\\\!\\\\@\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\'\\\\\\\"\\\\,\\\\.\\\\<\\\\>/\\\\?\\\\s]+)\"\r\n};\r\n\r\nexport default globalData;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2020-10-31 13:48:50\r\n * @Description: 工具类\r\n */\r\nimport globalData from '@/data/globalData';\r\nimport $ from 'jquery';\r\nimport stripJsonComments from 'strip-json-comments';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\n\r\nclass Util {\r\n    static readClipboard() {\r\n        if (window.clipboardData) {\r\n            return new Promise((resolve) => {\r\n                resolve(clipboardData.getData('Text'));\r\n            });\r\n        } else if (navigator.clipboard) {\r\n            return navigator.clipboard.readText();\r\n        }\r\n    }\r\n    static writeClipboard(text) {\r\n        if (window.clipboardData) {\r\n            clipboardData.setData('Text', text);\r\n        } else if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(text);\r\n        }\r\n    }\r\n    //获取数字\r\n    static getNum(value) {\r\n        value = String(value);\r\n        value = value.replace(/[^0123456789\\.]/g, '');\r\n        var regex = /^\\d+(\\.\\d*)?$/;\r\n        var r = regex.exec(value);\r\n        var num = (r && r[0]) || '';\r\n        if (num) {\r\n            num = Number(r[0]);\r\n        }\r\n        return num;\r\n    }\r\n    //生成指定个数的空白符\r\n    static space(tabSize) {\r\n        var val = '';\r\n        for (var tmp = 0; tmp < tabSize; tmp++) {\r\n            val += ' ';\r\n        }\r\n        return val;\r\n    }\r\n    //数组数字排序\r\n    static sortNum(arr) {\r\n        arr.sort(function (arg1, arg2) {\r\n            return Number(arg1) - Number(arg2);\r\n        });\r\n    }\r\n    //获取字符宽度\r\n    static getCharWidth(wrap) {\r\n        var str1 = '------------------------------------------------------------------------------------';\r\n        var str2 = '一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一';\r\n        var id1 = 'char-width-' + Util.getUUID();\r\n        var id2 = 'char-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-line\">\r\n        <div class=\"my-code\"><span id=\"${id1}\">${str1}</span><span id=\"${id2}\">${str2}</span></div>\r\n        </div>`);\r\n        $(wrap).append($tempDom);\r\n        var dom = $('#' + id1)[0];\r\n        var charWidth = dom.scrollWidth / str1.length;\r\n        var charHight = dom.clientHeight;\r\n        var fontSize = window.getComputedStyle ? window.getComputedStyle(dom, null).fontSize : dom.currentStyle.fontSize;\r\n        var fullAngleCharWidth = $('#' + id2)[0].scrollWidth / str2.length;\r\n        $tempDom.remove();\r\n        return {\r\n            charWidth: charWidth,\r\n            fullAngleCharWidth: fullAngleCharWidth,\r\n            charHight: charHight,\r\n            fontSize: fontSize,\r\n        };\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {number} charW     半角符号/文字宽度\r\n     * @param  {number} fullCharW 全角符号/文字宽度\r\n     * @param  {number} tabSize   tab符所占宽度\r\n     * @param  {number} start     文本开始索引\r\n     * @param  {number} end       文本结束索引\r\n     * @return {number}           文本真实宽度\r\n     */\r\n    static getStrWidth(str, charW, fullCharW, tabSize, start, end) {\r\n        tabSize = tabSize || 4;\r\n        if (typeof start != 'undefined') {\r\n            str = str.substr(start);\r\n        }\r\n        if (typeof end != 'undefined') {\r\n            str = str.substring(0, end - start);\r\n        }\r\n        var match = str.match(this.fullAngleReg);\r\n        var width = str.length * charW;\r\n        var tabNum = str.match(/\\t/g);\r\n        tabNum = (tabNum && tabNum.length) || 0;\r\n        match = (match && match.length) || 0;\r\n        if (match) {\r\n            match = match - tabNum;\r\n            width = match * fullCharW + (str.length - match) * charW;\r\n            width += tabNum * charW * (tabSize - 1);\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {DOM} wrap     容器\r\n     */\r\n    static getStrExactWidth(str, tabSize, wrap) {\r\n        Util.getStrExactWidth.count = Util.getStrExactWidth.count || 0;\r\n        Util.getStrExactWidth.count++;\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n        var id = 'str-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-line my-temp-text\" style=\"visibility:hidden\">\r\n        <div class=\"my-code\" id=\"${id}\">${_splitStr(str)}</div>\r\n        </div>`);\r\n        $(wrap).append($tempDom);\r\n        var dom = $('#' + id)[0];\r\n        var charWidth = dom.clientWidth;\r\n        $('.my-temp-text').remove();\r\n        // if (Util.getStrExactWidth.count > 5) { //避免频繁删除dom导致浏览器卡顿\r\n        //     $('.my-temp-text').remove();\r\n        // } else {\r\n        //     clearTimeout(Util.getStrExactWidth.timer);\r\n        //     Util.getStrExactWidth.timer = setTimeout(() => {\r\n        //         $('.my-temp-text').remove();\r\n        //     }, 500);\r\n        // }\r\n        return charWidth;\r\n\r\n        function _splitStr(str) {\r\n            let count = Math.floor(str.length / 100);\r\n            let result = [];\r\n            for (let i = 0; i < count; i++) {\r\n                let column = i * 100;\r\n                result.push(Util.htmlTrans(str.slice(column, column + 100)));\r\n            }\r\n            count = count * 100;\r\n            if (count < str.length) {\r\n                result.push(Util.htmlTrans(str.slice(count)));\r\n            }\r\n            return `<span>${result.join('</span><span>').replace(/\\t/g, Util.space(tabSize || 4))}</span>`;\r\n        }\r\n    }\r\n    //<,>转义\r\n    static htmlTrans(cont) {\r\n        cont = cont.replace(/\\&\\#/g, '&amp;#');\r\n        return cont.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n    }\r\n    // 深度克隆\r\n    static deepAssign(targetObj, originObj, noDeepKeys) {\r\n        return _assign(targetObj, originObj, noDeepKeys, new Map());\r\n\r\n        function _assign(targetObj, originObj, noDeepKeys, assigned) {\r\n            noDeepKeys = noDeepKeys || [];\r\n            for (var key in originObj) {\r\n                var value = originObj[key];\r\n                if (noDeepKeys.indexOf(key) > -1) {\r\n                    targetObj[key] = value;\r\n                    continue;\r\n                }\r\n                if (typeof value === 'object' && !(value instanceof RegExp) && value !== null && (!value.nodeName || !value.nodeType)) {\r\n                    if (assigned.has(value)) {\r\n                        targetObj[key] = assigned.get(value);\r\n                    } else {\r\n                        let tmp = null;\r\n                        if (value instanceof Array) {\r\n                            tmp = targetObj[key] || [];\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, noDeepKeys, new Map(assigned));\r\n                        } else {\r\n                            tmp = targetObj[key] || {};\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, noDeepKeys, new Map(assigned));\r\n                        }\r\n                    }\r\n                } else {\r\n                    targetObj[key] = value;\r\n                }\r\n            }\r\n            return targetObj;\r\n        }\r\n    }\r\n    static getUUID(len) {\r\n        len = len || 16;\r\n        var str = '';\r\n        for (var i = 0; i < len; i++) {\r\n            str += ((Math.random() * 16) | 0).toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 比较坐标的前后\r\n     * @param {Object} start\r\n     * @param {Object} end\r\n     */\r\n    static comparePos(start, end) {\r\n        if (start.line > end.line || (start.line == end.line && start.column > end.column)) {\r\n            return 1;\r\n        } else if (start.line == end.line && start.column == end.column) {\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    static createWorker(funStr) {\r\n        var blob = new Blob([funStr]);\r\n        var url = window.URL.createObjectURL(blob);\r\n        var worker = new Worker(url);\r\n        return worker;\r\n    }\r\n    static defineProperties(target, context, properties) {\r\n        let result = {};\r\n        properties.forEach((property) => {\r\n            result[property] = {\r\n                get: function () {\r\n                    if (typeof context[property] == 'function') {\r\n                        return context[property].bind(context);\r\n                    } else {\r\n                        return context[property];\r\n                    }\r\n                },\r\n            };\r\n        });\r\n        Object.defineProperties(target, result);\r\n    }\r\n    static getLanguageById(languageList, language) {\r\n        for (let i = 0; i < languageList.length; i++) {\r\n            if (languageList[i].language === language) {\r\n                return languageList[i];\r\n            }\r\n        }\r\n    }\r\n    static getLanguageByScopeName(languageList, scopeName) {\r\n        for (let i = 0; i < languageList.length; i++) {\r\n            if (languageList[i].scopeName === scopeName) {\r\n                return languageList[i];\r\n            }\r\n        }\r\n    }\r\n    static getWordPattern(language) {\r\n        let wordPattern = globalData.defaultWordPattern;\r\n        language = Util.getLanguageById(globalData.languageList, language);\r\n        if (language) {\r\n            let _wordPattern = globalData.sourceWordMap[language.scopeName];\r\n            _wordPattern = _wordPattern && _wordPattern.pattern;\r\n            wordPattern = _wordPattern || wordPattern;\r\n        }\r\n        return new RegExp(wordPattern);\r\n    }\r\n    static getIconByPath(iconData, path, type, fileType, opened) {\r\n        let fileName = /[^\\\\\\/]+$/.exec(path);\r\n        let suffix1 = '';\r\n        let suffix2 = '';\r\n        fileName = fileName && fileName[0];\r\n        if (!iconData) {\r\n            return '';\r\n        }\r\n        if (fileName) {\r\n            suffix1 = /(?<=\\.)[^\\.]+$/.exec(fileName);\r\n            suffix2 = /(?<=\\.)[^\\.]+\\.[^\\.]+$/.exec(fileName);\r\n            suffix1 = suffix1 && suffix1[0];\r\n            suffix2 = suffix2 && suffix2[0];\r\n        }\r\n        if (type === 'light' || type === 'contrast light') {\r\n            iconData = iconData.light;\r\n        }\r\n        if (fileType === 'dir') {\r\n            return opened ? iconData.folderExpanded : iconData.folder;\r\n        }\r\n        if (iconData.fileNames && iconData.fileNames[fileName]) {\r\n            return iconData.fileNames[fileName];\r\n        }\r\n        if (iconData.fileExtensions && iconData.fileExtensions[suffix2]) {\r\n            return iconData.fileExtensions[suffix2];\r\n        }\r\n        if (iconData.fileExtensions && iconData.fileExtensions[suffix1]) {\r\n            return iconData.fileExtensions[suffix1];\r\n        }\r\n        return iconData.file;\r\n    }\r\n    static readFile(path) {\r\n        return new Promise((resolve, reject) => {\r\n            fs.readFile(path, (error, data) => (error ? reject(error) : resolve(data)));\r\n        });\r\n    }\r\n    static loadJsonFile(fullPath) {\r\n        return Util.readFile(fullPath).then((data) => {\r\n            data = data.toString();\r\n            data = stripJsonComments(data);\r\n            data = data.replaceAll(/\\,(?=\\s*(?:(?:\\r\\n|\\n|\\r))*\\s*[\\]\\}])/g, '');\r\n            data = JSON.parse(data);\r\n            return data;\r\n        });\r\n    }\r\n    /**\r\n     * 模糊匹配【word是否存在于target中】\r\n     * @param {String} word 被搜索的单词\r\n     * @param {String} target 模板单词\r\n     */\r\n    static fuzzyMatch(word, target, fullMatch) {\r\n        let wordMap = {};\r\n        let towMap = {};\r\n        let wordLength = 0;\r\n        let score = 0;\r\n        let preFinedChar = '';\r\n        let preFinedOriginChar = '';\r\n        let preFinded = false;\r\n        let targetMap = {};\r\n        let count = 0;\r\n        let indexs = [];\r\n        let result = null;\r\n        let _target = target.toLowerCase();\r\n        if (word === target) {\r\n            return fullMatch ? { score: 100, indexs: [] } : null;\r\n        }\r\n        _setMap();\r\n        for (let i = 0; i < target.length; i++) {\r\n            let originChar = target[i];\r\n            let char = _target[i];\r\n            if (\r\n                wordMap[char] &&\r\n                //保证前后字符顺序最多只出现一个位置颠倒且颠倒的两个字符必须相邻\r\n                (!preFinedChar || towMap[preFinedChar + char] || (towMap[char + preFinedChar] && preFinded))\r\n            ) {\r\n                if (!targetMap[char] || targetMap[char] < wordMap[char]) {\r\n                    targetMap[char] = targetMap[char] ? targetMap[char] + 1 : 1;\r\n                    indexs.push(i);\r\n                    if (char === '_' || char === '$') {\r\n                        //检测到连接符+10分\r\n                        score += 10;\r\n                    } else if (preFinded) {\r\n                        //检测到连续匹配\r\n                        score += 5;\r\n                        if (towMap[preFinedChar + char]) {\r\n                            //连续匹配且顺序正确\r\n                            score += 1;\r\n                            if (_humpCheck(preFinedOriginChar, originChar) && preFinded) {\r\n                                //检测到驼峰命名+10分\r\n                                score += 5;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (_complete(char)) {\r\n                        return result;\r\n                    }\r\n                    if (!towMap[char + preFinedChar] || towMap[preFinedChar + char]) {\r\n                        preFinedChar = char;\r\n                        preFinedOriginChar = originChar;\r\n                    }\r\n                    preFinded = true;\r\n                } else {\r\n                    //检测到字符不匹配-1分\r\n                    score--;\r\n                    preFinded = char === preFinedChar;\r\n                }\r\n            } else {\r\n                if (!count && score > -9) {\r\n                    //检测到前三个首字符不匹配-3分\r\n                    score -= 3;\r\n                } else {\r\n                    //检测到字符不匹配-1分\r\n                    score--;\r\n                }\r\n                preFinded = char === preFinedChar;\r\n            }\r\n        }\r\n\r\n        // 预处理搜素单词\r\n        function _setMap() {\r\n            if (Util.fuzzyMatch.cache && Util.fuzzyMatch.cache.word === word) {\r\n                wordMap = Util.fuzzyMatch.cache.wordMap;\r\n                towMap = Util.fuzzyMatch.cache.towMap;\r\n                wordLength = Util.fuzzyMatch.cache.wordLength;\r\n                return;\r\n            }\r\n            let preChar = '';\r\n            for (let i = 0; i < word.length; i++) {\r\n                let char = word[i].toLowerCase();\r\n                wordMap[char] = wordMap[char] ? wordMap[char] + 1 : 1;\r\n                if (i > 0) {\r\n                    towMap[preChar + char] = true;\r\n                }\r\n                preChar = char;\r\n            }\r\n            wordLength = Object.keys(wordMap).length;\r\n            Util.fuzzyMatch.cache = {\r\n                word: word,\r\n                wordMap: wordMap,\r\n                towMap: towMap,\r\n                wordLength: wordLength,\r\n            };\r\n        }\r\n\r\n        // 检查驼峰命名\r\n        function _humpCheck(preChar, char) {\r\n            let preCode = preChar.charCodeAt(0);\r\n            let charCode = char.charCodeAt(0);\r\n            if ((preCode < 97 && charCode >= 97) || (charCode < 97 && preCode >= 97)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // 检查是否匹配完成\r\n        function _complete(char) {\r\n            if (targetMap[char] === wordMap[char]) {\r\n                if (++count === wordLength) {\r\n                    result = {\r\n                        score: score,\r\n                        indexs: indexs,\r\n                    };\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nArray.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n};\r\nArray.prototype.empty = function () {\r\n    this.length = 0;\r\n    return this;\r\n};\r\nArray.prototype.insert = function (item, sort) {\r\n    if (sort && this.length) {\r\n        let left = 0,\r\n            right = this.length - 1;\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (sort(item, this[mid]) > 0) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid;\r\n            }\r\n        }\r\n        if (sort(item, this[left]) < 0) {\r\n            left--;\r\n        }\r\n        this.splice(left + 1, 0, item);\r\n    } else {\r\n        this.push(item);\r\n    }\r\n};\r\nString.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n};\r\n//全角符号和中文字符\r\nUtil.fullAngleReg =\r\n    /[\\x00-\\x1f\\x80-\\xa0\\xad\\u1680\\u180E\\u2000-\\u200f\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF\\uFFF9-\\uFFFC]|[\\u1100-\\u115F\\u11A3-\\u11A7\\u11FA-\\u11FF\\u2329-\\u232A\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3000-\\u303E\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u3190-\\u31BA\\u31C0-\\u31E3\\u31F0-\\u321E\\u3220-\\u3247\\u3250-\\u32FE\\u3300-\\u4DBF\\u4E00-\\uA48C\\uA490-\\uA4C6\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFAFF\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFF01-\\uFF60\\uFFE0-\\uFFE6]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nUtil.keyCode = {\r\n    DELETE: 46,\r\n    BACKSPACE: 8,\r\n};\r\nUtil.command = {\r\n    DELETE: 'delete',\r\n    INSERT: 'insert',\r\n    MOVEUP: 'moveLineUp',\r\n    MOVEDOWN: 'moveLineDown',\r\n    COPY_UP: 'copyLineUp',\r\n    COPY_DOWN: 'copyLineDown',\r\n    DELETE_COPY_UP: 'deleteCopyLineUp',\r\n    DELETE_COPY_DOWN: 'deleteCopyLineDown',\r\n    REPLACE: 'replace',\r\n    INSERT_LINE: 'insertLine',\r\n    DELETE_LINE: 'deleteLine',\r\n    REPLACE: 'replace',\r\n};\r\nUtil.constData = {\r\n    LINE_COMMENT: 'line-comment',\r\n    BLOCK_COMMENT: 'block-comment',\r\n    BRACKET: 'bracket',\r\n    TAG: 'tag',\r\n};\r\nexport default Util;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editorBar) {\r\n        this.initProperties(editorBar);\r\n    }\r\n    initProperties(editorBar) {\r\n        Util.defineProperties(this, editorBar, [\r\n            '$emit',\r\n        ]);\r\n    }\r\n    onKeyDown(e) {\r\n        if (e.ctrlKey) {\r\n            if (this.pressK) {\r\n                this.pressK = false;\r\n                switch (e.keyCode) {\r\n                    case 85: //Ctrl+U\r\n                        e.preventDefault();\r\n                        this.$emit('close-saved');\r\n                        break;\r\n                    case 87: //Ctrl+W\r\n                        e.preventDefault();\r\n                        this.$emit('close-all');\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (e.keyCode) {\r\n                    case 75: //Ctrl+K\r\n                        e.preventDefault();\r\n                        this.pressK = true;\r\n                        break;\r\n                    case 115: //Ctrl+F4\r\n                        e.preventDefault();\r\n                        this.$emit('close');\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @selectstart.prevent class=\"my-editor-bar\" ref=\"editorBar\">\r\n        <div class=\"bar-scroller my-scroll-overlay my-scroll-mini\">\r\n            <div\r\n                :class=\"[item.active ? 'my-active' : '']\"\r\n                :title=\"item.path\"\r\n                @click=\"onClickItem(item.id)\"\r\n                @contextmenu.prevent.stop=\"onContextmenu($event, item.id)\"\r\n                class=\"bar-item my-hover\"\r\n                v-for=\"item in editorList\"\r\n            >\r\n                <div class=\"bar-content\" :class=\"[item.icon]\">\r\n                    <span class=\"bar-text\">{{ item.name }}</span>\r\n                    <div class=\"bar-icon\">\r\n                        <span @click.stop=\"onClose(item.id)\" class=\"bar-close-icon iconfont icon-close\" title=\"close\" v-show=\"item.saved\"></span>\r\n                        <span class=\"bar-dot\" v-show=\"!item.saved\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <editor-bar-menu ref=\"editorBarMenu\"></editor-bar-menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EditorBarMenu from './EditorBarMenu';\r\nimport ShortCut from '@/module/shortcut/editor-bar';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n    name: 'EditorBar',\r\n    components: {\r\n        EditorBarMenu,\r\n    },\r\n    props: {\r\n        editorList: {\r\n            type: Array,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            list: [],\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            rootList: this.list,\r\n        };\r\n    },\r\n    created() {\r\n        this.shortcut = new ShortCut(this);\r\n        this.initEventBus();\r\n        $(window).on('keydown', (e) => {\r\n            this.shortcut.onKeyDown(e);\r\n        });\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('tab-change', (data) => {\r\n                this.$nextTick(() => {\r\n                    let $tab = $(this.$refs.editorBar).find('div.my-active');\r\n                    $tab.length && $tab[0].scrollIntoView();\r\n                });\r\n            });\r\n        },\r\n        onClickItem(id) {\r\n            this.$emit('change', id);\r\n        },\r\n        onClose(id) {\r\n            this.$emit('close', id);\r\n        },\r\n        onContextmenu(e, id) {\r\n            this.$refs.editorBarMenu.show(e, id);\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditorBar.vue?vue&type=template&id=7451f082&\"\nimport script from \"./EditorBar.vue?vue&type=script&lang=js&\"\nexport * from \"./EditorBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editor\",staticClass:\"my-editor-wrap\",on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)},\"selectstart\":function($event){$event.preventDefault();},\"wheel\":function($event){$event.preventDefault();return _vm.onWheel.apply(null, arguments)}}},[(_vm.active)?_c('div',{staticClass:\"my-nums\",style:({ top: _vm._numTop })},[_c('div',{staticClass:\"my-num\",staticStyle:{\"visibility\":\"hidden\"}},[_vm._v(_vm._s(_vm.maxLine))]),_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-num\",class:{ 'my-active': _vm.nowCursorPos.line === line.num },style:({ height: _vm._lineHeight, 'line-height': _vm._lineHeight })},[_c('span',{staticClass:\"num\"},[_vm._v(_vm._s(line.num))]),(line.fold)?_c('span',{staticClass:\"my-fold my-center-center\",class:['iconfont', line.fold == 'open' ? 'my-fold-open icon-down1' : 'my-fold-close icon-right'],on:{\"click\":function($event){return _vm.onToggleFold(line.num)}}}):_vm._e()])})],2):_vm._e(),_c('div',{staticClass:\"my-content-wrap\",style:({ 'box-shadow': _vm._leftShadow })},[_c('div',{ref:\"scroller\",staticClass:\"my-scroller my-scroll-overlay\",on:{\"scroll\":_vm.onScroll}},[_c('div',{ref:\"content\",staticClass:\"my-content\",style:({ minWidth: _vm._contentMinWidth, height: _vm.contentHeight }),on:{\"mousedown\":_vm.onContentMdown,\"mousemove\":_vm.onContentMmove,\"mouseleave\":_vm.onContentMLeave,\"selectend\":function($event){$event.preventDefault();return _vm.onSelectend.apply(null, arguments)}}},[(_vm.active)?_c('div',{ref:\"render\",staticClass:\"my-render\",style:({ top: _vm._top })},_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-line\",class:{ 'my-active': _vm._activeLine(line.num) },style:({ height: _vm._lineHeight, 'line-height': _vm._lineHeight }),attrs:{\"data-line\":line.num,\"id\":'line_' + line.num}},[_c('div',{staticClass:\"my-code\",class:[\n                                line.active ? 'my-active' : '',\n                                line.selected ? (line.isFsearch ? 'my-search-bg' : 'my-select-bg') : '',\n                                line.selected && _vm.selectedFg ? 'my-select-fg' : '',\n                                line.fold == 'close' ? 'fold-close' : '' ],attrs:{\"data-line\":line.num},domProps:{\"innerHTML\":_vm._s(line.html)}}),(_vm.bracketMatch && line.num == _vm.bracketMatch.start.line)?_c('div',{staticClass:\"my-bracket-match\",style:({ left: _vm.bracketMatch.start.left + 'px', width: _vm.bracketMatch.start.width + 'px' })}):_vm._e(),(_vm.bracketMatch && line.num == _vm.bracketMatch.end.line)?_c('div',{staticClass:\"my-bracket-match\",style:({ left: _vm.bracketMatch.end.left + 'px', width: _vm.bracketMatch.end.width + 'px' })}):_vm._e(),_vm._l((line.selectStarts),function(range){return _c('div',{staticClass:\"my-line-bg my-select-bg\",class:{ 'my-active': range.active, 'my-search-bg': range.isFsearch },style:({ left: range.left + 'px', width: range.width + 'px' })})}),_vm._l((line.selectEnds),function(range){return _c('div',{staticClass:\"my-line-bg my-select-bg\",class:{ 'my-active': range.active, 'my-search-bg': range.isFsearch },style:({ left: range.left + 'px', width: range.width + 'px' })})}),_vm._l((line.tabNum),function(tab){return _c('span',{staticClass:\"my-tab-line\",style:({ left: _vm._tabLineLeft(tab) })})}),_vm._l((line.cursorList),function(left){return _c('div',{staticClass:\"my-cursor\",staticStyle:{\"top\":\"0px\"},style:({ height: _vm._lineHeight, left: left, visibility: _vm._cursorVisible })})})],2)}),0):_vm._e(),_c('textarea',{ref:\"textarea\",staticClass:\"my-textarea\",style:({ top: _vm._textAreaPos.top, left: _vm._textAreaPos.left }),on:{\"blur\":_vm.onBlur,\"compositionend\":_vm.onCompositionend,\"compositionstart\":_vm.onCompositionstart,\"copy\":function($event){$event.preventDefault();return _vm.onCopy.apply(null, arguments)},\"cut\":function($event){$event.preventDefault();return _vm.onCut.apply(null, arguments)},\"focus\":_vm.onFocus,\"input\":_vm.onInput,\"keydown\":_vm.onKeyDown,\"paste\":function($event){$event.preventDefault();return _vm.onPaste.apply(null, arguments)}}}),_c('auto-tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.autoTipList && _vm.autoTipList.length),expression:\"autoTipList && autoTipList.length\"}],ref:\"autoTip\",attrs:{\"styles\":_vm.autoTipStyle,\"tipList\":_vm.autoTipList},on:{\"change\":_vm.onClickAuto}})],1)]),_c('search-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchVisible),expression:\"searchVisible\"}],ref:\"searchDialog\",attrs:{\"count\":_vm.searchCount,\"now\":_vm.searchNow},on:{\"close\":_vm.onCloseSearch,\"next\":function($event){return _vm.onSearchNext()},\"prev\":function($event){return _vm.onSearchPrev()},\"replace\":_vm.replace,\"replaceAll\":_vm.replaceAll,\"search\":_vm.onSearch}})],1),_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onClickMenu}}),_c('tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tipContent),expression:\"tipContent\"}],ref:\"tip\",attrs:{\"content\":_vm.tipContent,\"styles\":_vm.tipStyle}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-15 11:39:41\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\nimport * as vsctm from 'vscode-textmate';\r\nimport * as oniguruma from 'vscode-oniguruma';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst regs = {\r\n    stringToken: /(\\.|^)string(\\.|$)/,\r\n};\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.currentLine = 1;\r\n        this.initRegistry();\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initRegistry() {\r\n        const wasmBin = fs.readFileSync(path.join(globalData.dirname, 'main/lib/onig.wasm')).buffer;\r\n        const vscodeOnigurumaLib = oniguruma.loadWASM(wasmBin).then(() => {\r\n            return {\r\n                createOnigScanner(patterns) {\r\n                    return new oniguruma.OnigScanner(patterns);\r\n                },\r\n                createOnigString(s) {\r\n                    return new oniguruma.OnigString(s);\r\n                },\r\n            };\r\n        });\r\n        this.registry = new vsctm.Registry({\r\n            onigLib: vscodeOnigurumaLib,\r\n            loadGrammar: (scopeName) => {\r\n                let language = Util.getLanguageByScopeName(globalData.scopeFileList, scopeName);\r\n                if (language) {\r\n                    if (language.configPath) {\r\n                        return Util.loadJsonFile(language.configPath).then((data) => {\r\n                            // 每种语言都有对应的折叠标记\r\n                            this.sourceFoldMap[language.scopeName] = {};\r\n                            globalData.sourceWordMap[language.scopeName] = data.wordPattern;\r\n                            // 是否存在标记性语言\r\n                            this.hasTextGrammar = this.hasTextGrammar || language.scopeName.startsWith('text');\r\n                            this.initLanguageConifg(this.sourceFoldMap[language.scopeName], data);\r\n                            return Util.readFile(language.path).then((data) => vsctm.parseRawGrammar(data.toString(), language.path));\r\n                        });\r\n                    } else {\r\n                        return Util.readFile(language.path).then((data) => vsctm.parseRawGrammar(data.toString(), language.path));\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n        });\r\n    }\r\n    initLanguage(language) {\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.grammar = null;\r\n        this.foldType = 1;\r\n        this.sourceFoldMap = {};\r\n        this.hasTextGrammar = false;\r\n        this.currentLine = 1;\r\n        language = Util.getLanguageById(globalData.languageList, language);\r\n        this.scopeName = (language && language.scopeName) || '';\r\n        if (this.scopeName) {\r\n            if (globalData.grammars[this.scopeName]) {\r\n                let grammarData = globalData.grammars[this.scopeName];\r\n                this.grammar = grammarData.grammar;\r\n                this.sourceFoldMap = grammarData.sourceFoldMap;\r\n                this.hasTextGrammar = grammarData.hasTextGrammar;\r\n            } else {\r\n                return this.registry.loadGrammar(this.scopeName).then((grammar) => {\r\n                    this.grammar = grammar;\r\n                    globalData.grammars[this.scopeName] = {\r\n                        grammar: grammar,\r\n                        sourceFoldMap: this.sourceFoldMap,\r\n                        hasTextGrammar: this.hasTextGrammar,\r\n                    };\r\n                    this.tokenizeVisibleLins();\r\n                });\r\n            }\r\n        }\r\n        this.tokenizeVisibleLins();\r\n        return Promise.resolve();\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['startLine', 'maxVisibleLines', 'maxLine', 'renderLine', 'folder', '$nextTick']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    initLanguageConifg(foldMap, data) {\r\n        let source = [];\r\n        foldMap.__comments__ = {\r\n            lineComment: '',\r\n            blockComment: [],\r\n        };\r\n        if (data.comments) {\r\n            if (data.comments.lineComment) {\r\n                source.push(data.comments.lineComment);\r\n                foldMap[data.comments.lineComment] = 0;\r\n                foldMap.__comments__.lineComment = data.comments.lineComment;\r\n            }\r\n            if (data.comments.blockComment) {\r\n                source.push(data.comments.blockComment[0]);\r\n                source.push(data.comments.blockComment[1]);\r\n                foldMap[data.comments.blockComment[0]] = -this.foldType;\r\n                foldMap[data.comments.blockComment[1]] = this.foldType;\r\n                foldMap.__comments__.blockComment = data.comments.blockComment;\r\n                foldMap.__endCommentReg__ = new RegExp(data.comments.blockComment[1].replace(/[\\{\\}\\(\\)\\[\\]\\&\\?\\+\\*\\\\]/g, '\\\\$&'), 'g');\r\n                this.foldType++;\r\n            }\r\n        }\r\n        if (data.brackets) {\r\n            data.brackets.forEach((item) => {\r\n                if (foldMap[item[0]]) {\r\n                    //相同的前缀\r\n                    if (!foldMap[item[1]]) {\r\n                        source.push(item[1]);\r\n                        foldMap[item[1]] = -foldMap[item[0]];\r\n                    }\r\n                } else if (foldMap[item[1]]) {\r\n                    //相同的后缀\r\n                    if (!foldMap[item[0]]) {\r\n                        source.push(item[0]);\r\n                        foldMap[item[0]] = -foldMap[item[1]];\r\n                    }\r\n                } else {\r\n                    source.push(item[0]);\r\n                    source.push(item[1]);\r\n                    foldMap[item[0]] = -this.foldType;\r\n                    foldMap[item[1]] = this.foldType;\r\n                    this.foldType++;\r\n                }\r\n            });\r\n        }\r\n        source = source.join('|');\r\n        source = source.replace(/[\\{\\}\\(\\)\\[\\]\\&\\?\\+\\*\\\\]/g, '\\\\$&');\r\n        foldMap.__foldReg__ = new RegExp(source, 'g');\r\n    }\r\n    onInsertContentAfter(nowLine, newLine) {\r\n        if (nowLine <= this.currentLine) {\r\n            this.currentLine = nowLine;\r\n            clearTimeout(this.tokenizeLinesTimer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== nowLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(nowLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onDeleteContentAfter(nowLine, newLine) {\r\n        if (newLine <= this.currentLine) {\r\n            this.currentLine = newLine;\r\n            clearTimeout(this.tokenizeLinesTimer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== newLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(newLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    tokenizeVisibleLins() {\r\n        let tokenizeVisibleLinsId = this.tokenizeVisibleLinsId + 1 || 1;\r\n        this.tokenizeVisibleLinsId = tokenizeVisibleLinsId;\r\n        this.$nextTick(() => {\r\n            if (this.tokenizeVisibleLinsId !== tokenizeVisibleLinsId) {\r\n                return;\r\n            }\r\n            let currentLine = this.currentLine;\r\n            let startLine = this.startLine;\r\n            let endLine = this.startLine + this.maxVisibleLines;\r\n            endLine = this.folder.getRealLine(endLine);\r\n            // 先渲染可视范围内的行\r\n            this.asyncTokenizeLines(startLine, endLine).then(() => {\r\n                startLine = this.startLine - 2000;\r\n                startLine = startLine < 1 ? 1 : startLine;\r\n                // 考虑到当前行可能处于内嵌语法种，渲染前2000行\r\n                if (startLine > currentLine) {\r\n                    this.asyncTokenizeLines(startLine, endLine).then(() => {\r\n                        this.tokenizeLines(currentLine);\r\n                    });\r\n                } else {\r\n                    this.tokenizeLines(currentLine);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    asyncTokenizeLines(startLine, endLine) {\r\n        return new Promise((resolve) => {\r\n            this.tokenizeLines(startLine, endLine, resolve);\r\n        });\r\n    }\r\n    tokenizeLines(startLine, endLine, resolve) {\r\n        let processedLines = 0;\r\n        let processedTime = Date.now();\r\n        endLine = endLine || this.maxLine;\r\n        endLine = endLine > this.maxLine ? this.maxLine : endLine;\r\n        cancelIdleCallback(this.tokenizeLinesTimer);\r\n        if (this.scopeName && !this.grammar) {\r\n            this.tokenizeLinesTimer = setTimeout(() => {\r\n                this.tokenizeLines(startLine, endLine, resolve);\r\n            });\r\n            return;\r\n        }\r\n        while (startLine <= endLine) {\r\n            let lineObj = this.htmls[startLine - 1];\r\n            if (!lineObj.tokens) {\r\n                //文本超过一万时跳过高亮\r\n                let data = this.tokenizeLine(startLine);\r\n                lineObj.tokens = data.tokens;\r\n                lineObj.folds = data.folds;\r\n                lineObj.stateFold = data.stateFold;\r\n                if (this.checkLineVisible(startLine)) {\r\n                    lineObj.tokens = this.splitLongToken(lineObj.tokens);\r\n                    lineObj.html = this.createHtml(lineObj.tokens, lineObj.text);\r\n                    this.renderLine(lineObj.lineId);\r\n                }\r\n                if (!lineObj.states || (lineObj.states.equals && !lineObj.states.equals(data.states)) || lineObj.states.toString() !== data.states.toString()) {\r\n                    lineObj.states = data.states;\r\n                    lineObj = this.htmls[startLine];\r\n                    if (lineObj) {\r\n                        lineObj.tokens = null;\r\n                        lineObj.html = '';\r\n                    }\r\n                }\r\n                processedLines++;\r\n                // 避免卡顿\r\n                if (processedLines % 5 == 0 && Date.now() - processedTime >= 20) {\r\n                    startLine++;\r\n                    break;\r\n                }\r\n            }\r\n            startLine++;\r\n        }\r\n        this.currentLine = startLine;\r\n        if (startLine <= endLine) {\r\n            this.tokenizeLinesTimer = requestIdleCallback(() => {\r\n                this.tokenizeLines(startLine, endLine, resolve);\r\n            });\r\n        } else if (resolve) {\r\n            resolve();\r\n        }\r\n    }\r\n    createHtml(tokens, lineText) {\r\n        return tokens\r\n            .map((item) => {\r\n                let selector = '';\r\n                let value = lineText.substring(item.startIndex, item.endIndex);\r\n                if (item.scopes[0] === 'plain') {\r\n                    selector = 'my-plain';\r\n                } else if (item.scopes[0] === 'selected') {\r\n                    selector = 'my-select-fg';\r\n                } else {\r\n                    selector = _getSelector(item);\r\n                    selector = (selector && `my-scope-${selector.scopeId}`) || '';\r\n                }\r\n                return `<span class=\"${selector}\" data-column=\"${item.startIndex}\">${Util.htmlTrans(value)}</span>`;\r\n            })\r\n            .join('');\r\n\r\n        function _getSelector(token) {\r\n            let result = null;\r\n            let scopes = token.scopes;\r\n            token.scope = scopes.join(' ');\r\n            outerLoop: for (let i = scopes.length - 1; i >= 0; i--) {\r\n                let scope = scopes[i];\r\n                for (let i = 0; i < globalData.scopeTokenList.length; i++) {\r\n                    let item = globalData.scopeTokenList[i];\r\n                    let _scope = item.scopes.peek();\r\n                    if (scope.indexOf(_scope) > -1) {\r\n                        if (item.regexp.test(token.scope)) {\r\n                            result = item;\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    tokenizeLine(line) {\r\n        let lineText = this.htmls[line - 1].text;\r\n        let folds = [];\r\n        if (lineText.length > 10000 || !this.scopeName) {\r\n            return {\r\n                tokens: [\r\n                    {\r\n                        scopes: ['plain'],\r\n                        startIndex: 0,\r\n                        endIndex: lineText.length,\r\n                    },\r\n                ],\r\n                folds: [],\r\n                states: vsctm.INITIAL,\r\n            };\r\n        }\r\n        let states = (line > 1 && this.htmls[line - 2].states) || vsctm.INITIAL;\r\n        let lineTokens = this.grammar.tokenizeLine(lineText, states);\r\n        let stateFold = this.addFold(line, lineTokens.tokens, folds);\r\n        lineTokens.tokens.peek().endIndex = lineText.length; //某些情况下，会大于lineText.length\r\n        return {\r\n            tokens: lineTokens.tokens,\r\n            states: lineTokens.ruleStack,\r\n            folds: folds,\r\n            stateFold: stateFold,\r\n        };\r\n    }\r\n    addFold(line, tokens, folds) {\r\n        let scopeName = '';\r\n        let startIndex = 0;\r\n        let existTag = false;\r\n        let lineText = this.htmls[line - 1].text;\r\n        let stateFold = line > 1 ? this.htmls[line - 2].stateFold : null;\r\n        //给字符串token打上标记\r\n        tokens.forEach((token) => {\r\n            if (regs.stringToken.test(token.scopes.join('.'))) {\r\n                token.isString = true;\r\n            }\r\n        });\r\n        outerLoop: for (let index = 0; index < tokens.length; index++) {\r\n            let token = tokens[index];\r\n            let _scopeName = '';\r\n            let foldMap = null;\r\n            for (let i = token.scopes.length - 1; i >= 0; i--) {\r\n                foldMap = this.sourceFoldMap[token.scopes[i]];\r\n                if (!foldMap) {\r\n                    continue;\r\n                }\r\n                _scopeName = token.scopes[i];\r\n                if (scopeName || index === tokens.length - 1) {\r\n                    if (_scopeName !== scopeName || index === tokens.length - 1) {\r\n                        let endIndex = index === tokens.length - 1 ? token.endIndex : token.startIndex;\r\n                        let lastFold = this.addBracket({\r\n                            tokens: tokens,\r\n                            line: line,\r\n                            foldMap: foldMap,\r\n                            folds: folds,\r\n                            startIndex: startIndex,\r\n                            endIndex: endIndex,\r\n                            stateFold: stateFold,\r\n                            lineText: lineText,\r\n                        });\r\n                        // 单行注释\r\n                        if (lastFold && lastFold.type === Util.constData.LINE_COMMENT) {\r\n                            break outerLoop;\r\n                        }\r\n                        scopeName = token.scopes[i];\r\n                        startIndex = token.startIndex;\r\n                    }\r\n                } else {\r\n                    scopeName = token.scopes[i];\r\n                    startIndex = token.startIndex;\r\n                }\r\n                break;\r\n            }\r\n            if (\r\n                this.addTagFold({\r\n                    token: token,\r\n                    foldMap: foldMap,\r\n                    folds: folds,\r\n                    lineText: lineText,\r\n                })\r\n            ) {\r\n                existTag = true;\r\n            }\r\n        }\r\n        if (existTag) {\r\n            folds.sort((a, b) => {\r\n                return a.startIndex - b.startIndex;\r\n            });\r\n        }\r\n        if (folds.length) {\r\n            return folds.peek().type === Util.constData.BLOCK_COMMENT ? folds.peek() : null;\r\n        } else {\r\n            return stateFold;\r\n        }\r\n    }\r\n    addBracket(option) {\r\n        let tokens = option.tokens;\r\n        let foldMap = option.foldMap;\r\n        let folds = option.folds;\r\n        let startIndex = option.startIndex;\r\n        let endIndex = option.endIndex;\r\n        let stateFold = option.stateFold;\r\n        let text = option.lineText.slice(startIndex, endIndex);\r\n        let reg = foldMap.__foldReg__;\r\n        let res = null;\r\n        let preFold = null;\r\n        if (folds.length) {\r\n            preFold = folds.peek();\r\n        } else {\r\n            preFold = stateFold;\r\n        }\r\n        if (preFold && preFold.type === Util.constData.BLOCK_COMMENT && preFold.side < 0) {\r\n            reg = foldMap.__endCommentReg__;\r\n        }\r\n        while ((res = reg.exec(text))) {\r\n            let type = Util.constData.BRACKET;\r\n            if (foldMap.__comments__.lineComment === res[0]) {\r\n                type = Util.constData.LINE_COMMENT;\r\n            } else if (foldMap.__comments__.blockComment[0] === res[0] || foldMap.__comments__.blockComment[1] === res[0]) {\r\n                type = Util.constData.BLOCK_COMMENT;\r\n            }\r\n            // 如果处于字符串中，则无效\r\n            if (_inString(res)) {\r\n                continue;\r\n            }\r\n            folds.push({\r\n                startIndex: startIndex + res.index,\r\n                endIndex: startIndex + res.index + res[0].length,\r\n                side: foldMap[res[0]],\r\n                type: type,\r\n            });\r\n            if (type === Util.constData.BLOCK_COMMENT && foldMap[res[0]] < 0) {\r\n                foldMap.__endCommentReg__.lastIndex = reg.lastIndex;\r\n                reg.lastIndex = 0;\r\n                reg = foldMap.__endCommentReg__;\r\n            } else if (type === Util.constData.LINE_COMMENT) {\r\n                break;\r\n            }\r\n        }\r\n        reg.lastIndex = 0;\r\n        return folds.length && folds.peek();\r\n\r\n        function _inString(res) {\r\n            let index = res.index;\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex <= index && tokens[i].endIndex > index) {\r\n                    if (tokens[i].isString) {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                } else if (tokens[i].startIndex > index) {\r\n                    break;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    addTagFold(option) {\r\n        let token = option.token;\r\n        let folds = option.folds;\r\n        let foldMap = option.foldMap;\r\n        let lineText = option.lineText;\r\n        if (this.hasTextGrammar && token.scopes.peek().startsWith('entity.name.tag')) {\r\n            //html、xml标签名称\r\n            let tag = lineText.slice(token.startIndex, token.endIndex);\r\n            let side = 0;\r\n            if (foldMap[tag]) {\r\n                side = foldMap[tag];\r\n            } else {\r\n                side = this.foldType++;\r\n                foldMap[tag] = side;\r\n            }\r\n            //开始标签\r\n            if (lineText[token.startIndex - 1] === '<') {\r\n                side = -side;\r\n            }\r\n            folds.push({\r\n                startIndex: token.startIndex,\r\n                endIndex: token.endIndex,\r\n                side: side,\r\n                type: Util.constData.TAG,\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n    splitLongToken(tokens) {\r\n        let result = [];\r\n        tokens.forEach((token) => {\r\n            let length = token.endIndex - token.startIndex;\r\n            if (length > 100) {\r\n                //将文本数量大于100的token分隔\r\n                let startCol = token.startIndex;\r\n                let count = Math.floor(length / 100);\r\n                for (let i = 0; i < count; i++) {\r\n                    let startIndex = i * 100;\r\n                    let endIndex = (i + 1) * 100;\r\n                    endIndex = endIndex > token.endIndex ? token.endIndex : endIndex;\r\n                    result.push({\r\n                        startIndex: startIndex + startCol,\r\n                        endIndex: endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                }\r\n                count = count * 100;\r\n                if (count < length) {\r\n                    result.push({\r\n                        startIndex: count + startCol,\r\n                        endIndex: token.endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                }\r\n            } else {\r\n                result.push(token);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    checkLineVisible(line) {\r\n        let endLine = this.startLine + this.maxVisibleLines;\r\n        endLine = this.folder.getRealLine(endLine);\r\n        if (this.folder.getLineInFold(line)) {\r\n            //该行被包裹\r\n            return false;\r\n        }\r\n        return line >= this.startLine && line <= endLine;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-05 14:28:42\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\nconst child_process = require('child_process');\r\n\r\nlet worker = null;\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n        this.initEvent();\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, context, ['htmls', 'getAllText']);\r\n        Util.defineProperties(this, editor, ['setErrors']);\r\n    }\r\n    initLanguage(language) {\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.setErrors([]);\r\n        this.initEvent();\r\n        this.parse();\r\n    }\r\n    initEvent() {\r\n        if (worker === null) {\r\n            setTimeout(() => {\r\n                worker = child_process.fork(path.join(globalData.dirname, 'main/process/lint/index.js'));\r\n                worker.on('message', (data) => {\r\n                    console.log(data);\r\n                    if (data.parseId === this.parseId) {\r\n                        this.setErrors(data.results);\r\n                    }\r\n                });\r\n                worker.on('close', () => {\r\n                    worker = null;\r\n                    this.initEvent();\r\n                });\r\n            }, 300);\r\n        }\r\n    }\r\n    onInsertContentAfter(nowLine, newLine) {\r\n        clearTimeout(this.parseTimer);\r\n        this.parseId = '';\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    onDeleteContentAfter(nowLine, newLine) {\r\n        clearTimeout(this.parseTimer);\r\n        this.parseId = '';\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    parse() {\r\n        if (!this.language) {\r\n            return;\r\n        }\r\n        const text = this.getAllText();\r\n        this.parseId = Util.getUUID();\r\n        worker.send({\r\n            text: text,\r\n            parseId: this.parseId,\r\n            language: this.language,\r\n        });\r\n    }\r\n}\r\n","export default {\r\n    TOKEN_TYPE: {\r\n        TEXT: 'text',\r\n        SOURCE: 'source',\r\n        TAG_NAME: 'tag-name',\r\n        ATTR_NAME: 'attr-name',\r\n        STRING: 'string',\r\n        WORD: 'word',\r\n        CSS: 'css',\r\n        CSS_VALUE: 'css-value',\r\n        CSS_PROPERTY: 'css-property',\r\n        CSS_SELECTOR: 'css-selector',\r\n        CSS_TAG: 'css-tag',\r\n        CSS_CLASS: 'css-class',\r\n        CSS_ATTR: 'css-attr',\r\n        CSS_PSEUDO: 'css-pseudo',\r\n        EMMET_HTML: 'emmet-html',\r\n        EMMET_CSS: 'emmet-css'\r\n    },\r\n};\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-17 15:29:26\r\n * @Description:\r\n */\r\nimport { extract } from 'emmet';\r\nimport Util from '@/common/util';\r\nimport Enum from '@/data/enum';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\n\r\nconst regs = {\r\n    stringToken: /(?:\\.|^)(?:string|regexp)(?:\\.|$)/,\r\n    tagToken: /meta\\.tag/,\r\n    tagNameToken: /entity\\.name\\.tag/,\r\n    tagAttrName: /attribute\\-name/,\r\n    cssValueToken: /property\\-list|property\\-value|separator/,\r\n    cssPropertyToken: /meta\\.property\\-name/,\r\n    cssSelectorToken: /meta\\.selector/,\r\n    cssAttributeToken: /attribute\\-selector/,\r\n    cssClassToken: /attribute\\-name\\.class/,\r\n    cssPseudoToken: /pseudo\\-element/,\r\n    styleCss: /([^\\:\\;\\\"\\'\\s]+)\\s*\\:\\s*([^\\:\\;]+)?$/,\r\n    styleCssProperty: /(?:^|[\\;\\\"\\'])([^\\:\\;]+)$/,\r\n};\r\n\r\nclass Autocomplete {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.doneMap = {};\r\n        this.results = [];\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.wordPattern = new RegExp(`^(${this.wordPattern.source})$`);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'cursor', 'nowCursorPos', 'tokenizer', 'autoTipList', 'setAutoTip', 'selectAutoTip']);\r\n        Util.defineProperties(this, context, ['htmls', 'replaceTip', 'insertContent']);\r\n    }\r\n    reset() {\r\n        this.currentLine = 1;\r\n        this.results = [];\r\n        this.doneMap = {};\r\n    }\r\n    stop() {\r\n        cancelIdleCallback(this.searchTimer);\r\n    }\r\n    search() {\r\n        this.stop();\r\n        this.searchTimer = requestIdleCallback(() => {\r\n            this._search();\r\n        });\r\n    }\r\n    emmet() {\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let tokenIndex = this.getTokenIndex(this.nowCursorPos);\r\n        let nowToken = lineObj.tokens[tokenIndex];\r\n        let word = nowToken && lineObj.text.slice(nowToken.startIndex, this.nowCursorPos.column);\r\n        let emmetObj = null;\r\n        let type = '';\r\n        if (word) {\r\n            let scope = nowToken.scopes.peek();\r\n            if (scope.startsWith('text.')) {\r\n                emmetObj = extract(word);\r\n                type = Enum.TOKEN_TYPE.EMMET_HTML;\r\n            } else if (this._isCssToken(nowToken)) {\r\n                if (this._isCssPropertyToken(nowToken)) {\r\n                    emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n                } else if (this._isCssValueToken(nowToken)) {\r\n                    //p10将会被分成pd和10两个token\r\n                    let preToken = lineObj.tokens[tokenIndex - 1];\r\n                    if (preToken && this._isCssPropertyToken(preToken)) {\r\n                        word = lineObj.text.slice(preToken.startIndex, preToken.endIndex) + word;\r\n                        emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n                    }\r\n                }\r\n                type = Enum.TOKEN_TYPE.EMMET_CSS;\r\n            }\r\n        }\r\n        if (emmetObj) {\r\n            this.replaceTip({ word: emmetObj.abbreviation, result: emmetObj.abbreviation, type: type });\r\n        } else if (this.autoTipList && this.autoTipList.length) {\r\n            this.selectAutoTip();\r\n        } else {\r\n            this.insertContent('\\t');\r\n        }\r\n    }\r\n    _search() {\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let tokenIndex = this.getTokenIndex(this.nowCursorPos);\r\n        let nowToken = lineObj.tokens[tokenIndex];\r\n        let word = nowToken && lineObj.text.slice(nowToken.startIndex, this.nowCursorPos.column);\r\n        this.reset();\r\n        this.setAutoTip(null);\r\n        if (!word) {\r\n            return;\r\n        }\r\n        if (this._isTextToken(nowToken)) {\r\n            let scope = nowToken.scopes.peek();\r\n            if (scope.startsWith('text.')) {\r\n                //emmet表达式\r\n                this._searchEmmet(word);\r\n            } else if (this._isTagNameToken(nowToken)) {\r\n                //标签名\r\n                this._searchTagName(word);\r\n            } else if (this._isAttrNameToken(nowToken)) {\r\n                //属性名\r\n                let tag = this._getPreTagName(tokenIndex, this.nowCursorPos.line);\r\n                if (tag) {\r\n                    this._searchTagAttrName(word, tag);\r\n                }\r\n            }\r\n        } else if (this._isCssToken(nowToken)) {\r\n            if (this._isCssPropertyToken(nowToken)) {\r\n                //css属性名\r\n                this._searchCssProperty(word);\r\n            } else if (this._isCssValueToken(nowToken)) {\r\n                //css属性值\r\n                let preToken = lineObj.tokens[tokenIndex - 1];\r\n                //p10将会被分成pd和10两个token\r\n                if (preToken && this._isCssPropertyToken(preToken)) {\r\n                    let preToken = lineObj.tokens[tokenIndex - 1];\r\n                    if (preToken && this._isCssPropertyToken(preToken)) {\r\n                        word = lineObj.text.slice(preToken.startIndex, preToken.endIndex) + word;\r\n                        this._searchCssProperty(word);\r\n                    }\r\n                } else {\r\n                    let property = this._getPreCssProperty(tokenIndex, this.nowCursorPos.line);\r\n                    if (property) {\r\n                        this._searchCssValue(word, property);\r\n                    }\r\n                }\r\n            } else if (this._isCssSelectorToken(nowToken)) {\r\n                if (this._isTagNameToken(nowToken)) {\r\n                    this._searchCssTag(word);\r\n                } else if (word.indexOf(':') > -1) {\r\n                    this._searchCssPseudo(word);\r\n                }\r\n                this._searchSelector(word, nowToken);\r\n            } else if (this._isTagToken(nowToken)) {\r\n                //style种的css样式\r\n                this._searchStyle(word, nowToken);\r\n            }\r\n        } else if (this._isSourceToken(nowToken)) {\r\n            if (this.wordPattern.test(word)) {\r\n                this._searchWord(word, nowToken);\r\n            }\r\n        }\r\n    }\r\n    _searchWord(word, nowToken) {\r\n        this._searchDocument((lineObj) => {\r\n            lineObj.tokens.forEach((token) => {\r\n                if (token === nowToken) {\r\n                    return;\r\n                }\r\n                let text = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                if (this.wordPattern.test(text)) {\r\n                    // 跳过标签和字符串\r\n                    if (this._isTextToken(token) || this._isStringToken(token)) {\r\n                        return;\r\n                    }\r\n                    this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.WORD });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _searchSelector(word, nowToken) {\r\n        if (this._isCssClassToken(nowToken) && word !== '.') {\r\n            word = '.' + word;\r\n        }\r\n        this._searchDocument((lineObj) => {\r\n            lineObj.tokens.forEach((token) => {\r\n                if (token === nowToken) {\r\n                    return;\r\n                }\r\n                if (this._isCssSelectorToken(token)) {\r\n                    let text = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    if (!this.wordPattern.test(text)) {\r\n                        return;\r\n                    }\r\n                    if (this._isCssClassToken(token)) {\r\n                        text = '.' + text;\r\n                    }\r\n                    if (word === '.') {\r\n                        if (this._isCssClassToken(token) && text !== '..') {\r\n                            this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_CLASS, skipMatch: true });\r\n                        }\r\n                    } else if (this._isCssClassToken(nowToken)) {\r\n                        if (this._isCssClassToken(token)) {\r\n                            this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_CLASS });\r\n                        }\r\n                    } else {\r\n                        this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_SELECTOR });\r\n                    }\r\n                }\r\n            });\r\n        }, true);\r\n    }\r\n    _searchDocument(callback, showAll) {\r\n        let line = this.currentLine;\r\n        let startTime = Date.now();\r\n        let processedLines = 0;\r\n        while (line <= this.htmls.length) {\r\n            let lineObj = this.htmls[line - 1];\r\n            line++;\r\n            if (!lineObj.tokens) {\r\n                continue;\r\n            }\r\n            callback(lineObj);\r\n            processedLines++;\r\n            // 避免卡顿\r\n            if (processedLines % 5 == 0 && Date.now() - startTime >= 20) {\r\n                break;\r\n            }\r\n        }\r\n        this.currentLine = line;\r\n        this._showTip(showAll);\r\n        if (line <= this.htmls.length) {\r\n            this.searchTimer = requestIdleCallback(() => {\r\n                this._searchDocument(callback, showAll);\r\n            });\r\n        }\r\n    }\r\n    _searchTagName(word) {\r\n        const htmlData = this.getHtmlData();\r\n        htmlData.tags.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.TAG_NAME });\r\n        });\r\n        if (!this.results.length) {\r\n            this._addTip({ word: word, value: word, type: Enum.TOKEN_TYPE.TAG_NAME, skipMatch: true });\r\n        }\r\n        this._showTip();\r\n    }\r\n    _searchTagAttrName(word, tag) {\r\n        const htmlData = this.getHtmlData();\r\n        let attributes = htmlData.tagMap[tag];\r\n        attributes = attributes && attributes.attributes;\r\n        if (attributes) {\r\n            // 标签专有属性\r\n            attributes.forEach((item) => {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.ATTR_NAME, after: '=\"\"' });\r\n            });\r\n        }\r\n        // 公共属性\r\n        htmlData.globalAttributes.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.ATTR_NAME, after: '=\"\"' });\r\n        });\r\n        this._showTip();\r\n    }\r\n    _searchCssTag(word) {\r\n        const htmlData = this.getHtmlData();\r\n        htmlData.tags.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_TAG });\r\n        });\r\n    }\r\n    _searchCssPseudo(word) {\r\n        const cssData = this.getCssData();\r\n        const pseudo = word.split(':').peek().trim();\r\n        cssData.pseudoClasses.forEach((item) => {\r\n            if (pseudo) {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO });\r\n            } else {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO, skipMatch: true });\r\n            }\r\n        });\r\n        cssData.pseudoElements.forEach((item) => {\r\n            if (pseudo) {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO });\r\n            } else {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO, skipMatch: true });\r\n            }\r\n        });\r\n    }\r\n    _searchStyle(word, nowToken) {\r\n        let column = this.nowCursorPos.column;\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let keyValue = null;\r\n        word = lineObj.text.slice(nowToken.startIndex, column);\r\n        keyValue = regs.styleCss.exec(word);\r\n        if (keyValue && keyValue[1]) {\r\n            let property = keyValue[1];\r\n            let value = keyValue[2] || '';\r\n            this._searchCssValue(value, property);\r\n            return;\r\n        }\r\n        keyValue = regs.styleCssProperty.exec(word);\r\n        if (keyValue && keyValue[1]) {\r\n            this._searchCssProperty(keyValue[1]);\r\n        }\r\n    }\r\n    _searchCssProperty(word) {\r\n        const cssData = this.getCssData();\r\n        cssData.properties.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PROPERTY, after: ': ' });\r\n        });\r\n        if (!this.results.length) {\r\n            const emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n            if (emmetObj && emmetObj.abbreviation) {\r\n                this._addTip({ word: emmetObj.abbreviation, value: emmetObj.abbreviation, type: Enum.TOKEN_TYPE.EMMET_CSS, skipMatch: true });\r\n            }\r\n        }\r\n        this._showTip();\r\n    }\r\n    _searchCssValue(word, property) {\r\n        const cssData = this.getCssData();\r\n        let values = cssData.propertyMap[property];\r\n        values = values && values.values;\r\n        if (values) {\r\n            let _word = word.trim();\r\n            if (_word === ':' || _word === '') {\r\n                values.forEach((item) => {\r\n                    this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_VALUE, before: ' ', after: ';', skipMatch: true });\r\n                });\r\n                this._showTip(true);\r\n            } else {\r\n                values.forEach((item) => {\r\n                    this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_VALUE, after: ';' });\r\n                });\r\n                this._showTip();\r\n            }\r\n        }\r\n    }\r\n    _searchEmmet(word) {\r\n        const emmetObj = extract(word);\r\n        if (emmetObj && emmetObj.abbreviation) {\r\n            this._addTip({ word: emmetObj.abbreviation, value: emmetObj.abbreviation, type: Enum.TOKEN_TYPE.EMMET_HTML, skipMatch: true });\r\n            this._showTip();\r\n        }\r\n    }\r\n    _setTokenType(token) {\r\n        token.isSourceToken = false;\r\n        token.isCssToken = false;\r\n        token.isTextToken = false;\r\n        token.isTagToken = false;\r\n        token.isTagAttrNameToken = false;\r\n        token.scope = token.scope || token.scopes.join(' ');\r\n        for (let i = token.scopes.length - 1; i >= 0; i--) {\r\n            let scope = token.scopes[i];\r\n            if (scope.startsWith('source.')) {\r\n                token.isSourceToken = true;\r\n                if (scope.startsWith('source.css')) {\r\n                    token.isCssToken = true;\r\n                }\r\n                break;\r\n            } else if (scope.startsWith('text.')) {\r\n                token.isTextToken = true;\r\n                token.isTagAttrNameToken = regs.tagAttrName.test(token.scope);\r\n                break;\r\n            }\r\n        }\r\n        token.isTagToken = regs.tagToken.test(token.scope);\r\n        token.isTagNameToken = regs.tagNameToken.test(token.scope);\r\n        token.isStringToken = regs.stringToken.test(token.scope);\r\n        if (token.isCssToken) {\r\n            token.isCssValueToken = regs.cssValueToken.test(token.scope);\r\n            token.isCssPropertyToken = regs.cssPropertyToken.test(token.scope);\r\n            token.isCssSelectorToken = regs.cssSelectorToken.test(token.scope);\r\n            token.isCssClassToken = regs.cssClassToken.test(token.scope);\r\n            token.isCssAttributeToken = regs.cssAttributeToken.test(token.scope);\r\n            token.isCssPseudoToken = regs.cssPseudoToken.test(token.scope);\r\n        }\r\n    }\r\n    _isTextToken(token) {\r\n        if (token.isTextToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTextToken;\r\n    }\r\n    _isSourceToken(token) {\r\n        if (token.isSourceToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isSourceToken;\r\n    }\r\n    _isCssToken(token) {\r\n        if (token.isCssToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssToken;\r\n    }\r\n    _isCssPropertyToken(token) {\r\n        if (token.isCssPropertyToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssPropertyToken;\r\n    }\r\n    _isCssValueToken(token) {\r\n        if (token.isCssValueToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssValueToken;\r\n    }\r\n    _isCssSelectorToken(token) {\r\n        if (token.isCssSelectorToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssSelectorToken;\r\n    }\r\n    _isCssClassToken(token) {\r\n        if (token.isCssClassToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssClassToken;\r\n    }\r\n    _isCssAttributeToken(token) {\r\n        if (token.isCssAttributeToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssAttributeToken;\r\n    }\r\n    _isCssPseudoToken(token) {\r\n        if (token.isCssPseudoToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssPseudoToken;\r\n    }\r\n    _isStringToken(token) {\r\n        if (token.isStringToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isStringToken;\r\n    }\r\n    _isTagToken(token) {\r\n        if (token.isTagToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagToken;\r\n    }\r\n    _isTagNameToken(token) {\r\n        if (token.isTagNameToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagNameToken;\r\n    }\r\n    _isAttrNameToken(token) {\r\n        if (token.isTagAttrNameToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagAttrNameToken;\r\n    }\r\n    _getPreTagName(tokenIndex, line) {\r\n        let tag = '';\r\n        let count = 0;\r\n        outerLoop: while (line >= 1) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (!lineObj.tokens) {\r\n                break;\r\n            }\r\n            tokenIndex = tokenIndex > -1 ? tokenIndex : lineObj.tokens.length;\r\n            for (let i = tokenIndex - 1; i >= 0; i--) {\r\n                let token = lineObj.tokens[i];\r\n                if (this._isTagNameToken(token)) {\r\n                    tag = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    break outerLoop;\r\n                }\r\n                count++;\r\n                if (count > 100) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n            line--;\r\n            tokenIndex = -1;\r\n        }\r\n        return tag;\r\n    }\r\n    _getPreCssProperty(tokenIndex, line) {\r\n        let property = '';\r\n        let count = 0;\r\n        outerLoop: while (line >= 1) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (!lineObj.tokens) {\r\n                break;\r\n            }\r\n            tokenIndex = tokenIndex > -1 ? tokenIndex : lineObj.tokens.length;\r\n            for (let i = tokenIndex - 1; i >= 0; i--) {\r\n                let token = lineObj.tokens[i];\r\n                if (this._isCssPropertyToken(token)) {\r\n                    property = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    break outerLoop;\r\n                }\r\n                count++;\r\n                if (count > 100 || !this._isCssValueToken(token)) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n            line--;\r\n            tokenIndex = -1;\r\n        }\r\n        return property;\r\n    }\r\n    _addTip(option) {\r\n        let result = null;\r\n        let fullMatch = option.fullMatch;\r\n        fullMatch = fullMatch === undefined ? true : fullMatch;\r\n        if (this.doneMap[option.value] && !option.skipDone) {\r\n            return;\r\n        }\r\n        if (option.skipMatch) {\r\n            result = {\r\n                indexs: [],\r\n                score: 0,\r\n            };\r\n        } else {\r\n            result = Util.fuzzyMatch(option.word.trim(), option.value, fullMatch);\r\n        }\r\n        if (result) {\r\n            let obj = {\r\n                result: option.value,\r\n                word: option.word || '',\r\n                desc: option.desc || '',\r\n                type: option.type || '',\r\n                before: option.before || '',\r\n                after: option.after || '',\r\n                icon: this.getIcon(option.scope),\r\n                indexs: result.indexs,\r\n                score: result.score,\r\n            };\r\n            this.results.push(obj);\r\n            this.doneMap[option.value] = obj;\r\n        } else {\r\n            this.doneMap[option.value] = true;\r\n        }\r\n    }\r\n    _showTip(all) {\r\n        let results = null;\r\n        let limit = all ? 200 : 10;\r\n        this.results.sort((a, b) => {\r\n            return b.score - a.score;\r\n        });\r\n        results = this.results.slice(0, limit);\r\n        this.setAutoTip(results);\r\n    }\r\n    checkEmmetValid(text) {\r\n        let _text = '';\r\n        if (regs.invalidEmmetParen.exec(text)) {\r\n            return false;\r\n        }\r\n        while (text !== (_text = text.replace(regs.paremEmmet, 'a'))) {\r\n            text = _text;\r\n        }\r\n        return !!regs.emmet.exec(text);\r\n    }\r\n    getTokenIndex(cursorPos) {\r\n        let tokens = this.htmls[cursorPos.line - 1].tokens;\r\n        if (tokens) {\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex < cursorPos.column && tokens[i].endIndex >= cursorPos.column) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    getHtmlData() {\r\n        if (this.htmlData) {\r\n            return this.htmlData;\r\n        } else {\r\n            const htmlData = require(path.join(globalData.dirname, 'main/data/browsers.html-data'));\r\n            this.htmlData = htmlData;\r\n            htmlData.tagMap = {};\r\n            htmlData.tags.forEach((item) => {\r\n                htmlData.tagMap[item.name] = item;\r\n            });\r\n            return this.htmlData;\r\n        }\r\n    }\r\n    getCssData() {\r\n        if (this.cssData) {\r\n            return this.cssData;\r\n        } else {\r\n            const cssData = require(path.join(globalData.dirname, 'main/data/browsers.css-data'));\r\n            this.cssData = cssData;\r\n            cssData.propertyMap = {};\r\n            cssData.properties.forEach((item) => {\r\n                cssData.propertyMap[item.name] = item;\r\n            });\r\n            return this.cssData;\r\n        }\r\n    }\r\n    getIcon(scope) {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport default Autocomplete;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-04 16:13:41\r\n * @Description: \r\n */\r\nclass Node {\r\n    constructor(max) {\r\n        this.dataList = new Array(max + 1);\r\n        this.linkList = new Array(max + 2);\r\n        this.num = 0;\r\n        this.next = null;\r\n        this.prev = null;\r\n        this.pNode = null;\r\n    }\r\n}\r\nclass Btree {\r\n    /**\r\n     * 构造器\r\n     * @param {Function} compare 比较器\r\n     * @param {Number} max 节点可存储的最大数量 \r\n     */\r\n    constructor(compare, max) {\r\n        this.max = max || 4;\r\n        this.root = null;\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.compare = compare || function (a, b) {\r\n            return a - b;\r\n        }\r\n    }\r\n    /**\r\n     * 插入\r\n     * @param {Any} value \r\n     */\r\n    insert(value) {\r\n        if (!this.root) {\r\n            let node = new Node(this.max);\r\n            node.dataList[0] = value;\r\n            node.num++;\r\n            this.root = node;\r\n            this.head = node;\r\n            this.size++;\r\n            this.arrayCache = null;\r\n            return;\r\n        }\r\n        let node = this._search(value, true);\r\n        let link = null;\r\n        let half = Math.floor(this.max / 2) || 1; //m为1时，n应该也为1\r\n        let result = this.iterator(node, value);\r\n        if (this.findIndex(node, value) > -1) { //value已经存在，直接返回\r\n            return result;\r\n        }\r\n        this.size++;\r\n        this.arrayCache = null;\r\n        while (node) {\r\n            let linkList = node.linkList;\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                let data = dataList[i];\r\n                if (this.compare(value, data) < 0) {\r\n                    _insert(dataList, linkList, i);\r\n                    break;\r\n                } else if (i === node.num - 1) {\r\n                    _insert(dataList, linkList, i + 1);\r\n                }\r\n            }\r\n            node.num++; //关键字数量加1\r\n            if (node.num <= this.max) { //存储数量未超过最大限制，直接结束插入\r\n                break;\r\n            }\r\n            let newNode = new Node(this.max);\r\n            let isPnode = node.linkList[0];\r\n            value = dataList[half]; //父节点需要插入的值\r\n            if (!isPnode) { //叶子节点更新前后件\r\n                if (node.next) {\r\n                    node.next.prev = newNode;\r\n                }\r\n                newNode.next = node.next;\r\n                node.next = newNode;\r\n                newNode.prev = node;\r\n                newNode.pNode = node.pNode;\r\n            }\r\n            link = newNode;\r\n            //复制数据到新节点，如果是叶子节点，需要把value留在叶子节点中\r\n            for (let i = (isPnode ? half + 1 : half), j = 0; i < node.num; i++, j++) {\r\n                newNode.dataList[j] = dataList[i];\r\n                newNode.linkList[j + 1] = linkList[i + 1];\r\n                if (newNode.linkList[j + 1]) {\r\n                    newNode.linkList[j + 1].pNode = newNode;\r\n                }\r\n                dataList[i] = null;\r\n                linkList[i + 1] = null;\r\n                newNode.num++;\r\n            }\r\n            node.num = half; //关键字数量为最大值的一半\r\n            if (isPnode) {\r\n                node.dataList[node.num] = null;\r\n                // 非叶子节点，需要把左侧最后一个指针域复制过来\r\n                newNode.linkList[0] = node.linkList[node.num + 1];\r\n                if (newNode.linkList[0]) {\r\n                    newNode.linkList[0].pNode = newNode;\r\n                }\r\n                node.linkList[node.num + 1] = null;\r\n            }\r\n            if (!node.pNode) { //上溢到了根节点\r\n                this.root = new Node(this.max);\r\n                this.root.dataList[0] = value;\r\n                this.root.linkList[0] = node;\r\n                this.root.linkList[1] = newNode;\r\n                this.root.num = 1;\r\n                node.pNode = this.root;\r\n                newNode.pNode = this.root;\r\n                break;\r\n            }\r\n            node = node.pNode;\r\n        }\r\n        return result;\r\n\r\n        // 在i位置插入数据\r\n        function _insert(dataList, linkList, i) {\r\n            for (let j = node.num; j >= i + 1; j--) { //后移元素\r\n                dataList[j] = dataList[j - 1];\r\n                linkList[j + 1] = linkList[j];\r\n            }\r\n            dataList[i] = value;\r\n            linkList[i + 1] = link;\r\n            if (link) {\r\n                link.pNode = node;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 删除\r\n     * @param {Any} value \r\n     */\r\n    delete(value) {\r\n        let that = this;\r\n        let node = this._search(value);\r\n        let result = null;\r\n        let half = Math.floor(this.max / 2) || 1;\r\n        if (node) {\r\n            let dataList = node.dataList;\r\n            let index = this.findIndex(node, value);\r\n            result = dataList[index];\r\n            for (let i = index; i < node.num; i++) { //前移元素\r\n                dataList[i] = dataList[i + 1];\r\n            }\r\n            node.num--;\r\n            this.size--;\r\n            this.arrayCache = null;\r\n            if (!this.size) {\r\n                this.root = null;\r\n                return result;\r\n            }\r\n        }\r\n        while (node && node.num < half && node.pNode) {\r\n            let pNode = node.pNode;\r\n            let pIndex = pNode.linkList.indexOf(node);\r\n            let leftNode = pNode.linkList[pIndex - 1];\r\n            let rightNode = pNode.linkList[pIndex + 1];\r\n            let isPnode = node.linkList[0];\r\n            if (leftNode && leftNode.num > half) { //从左节点借\r\n                _moveRight(node, 1);\r\n                if (isPnode) {\r\n                    node.dataList[0] = pNode.dataList[pIndex - 1];\r\n                    node.linkList[0] = leftNode.linkList[leftNode.num];\r\n                    pNode.dataList[pIndex - 1] = leftNode.dataList[leftNode.num - 1];\r\n                } else {\r\n                    node.dataList[0] = leftNode.dataList[leftNode.num - 1];\r\n                    pNode.dataList[pIndex - 1] = node.dataList[0];\r\n                }\r\n                if (node.linkList[0]) {\r\n                    node.linkList[0].pNode = node;\r\n                }\r\n                pNode.dataList[pIndex - 1] = leftNode.dataList[leftNode.num - 1];\r\n                leftNode.dataList[leftNode.num - 1] = null;\r\n                leftNode.linkList[leftNode.num] = null;\r\n                leftNode.num--;\r\n                node.num++;\r\n            } else if (rightNode && rightNode.num > half) { //从右节点借\r\n                if (isPnode) {\r\n                    node.dataList[node.num] = pNode.dataList[pIndex];\r\n                    node.linkList[node.num + 1] = rightNode.linkList[0];\r\n                    pNode.dataList[pIndex] = rightNode.dataList[0];\r\n                } else {\r\n                    node.dataList[node.num] = rightNode.dataList[0];\r\n                    pNode.dataList[pIndex] = rightNode.dataList[1];\r\n                }\r\n                if (node.linkList[node.num + 1]) {\r\n                    node.linkList[node.num + 1].pNode = node;\r\n                }\r\n                _moveLeft(rightNode, 1);\r\n                rightNode.num--;\r\n                node.num++;\r\n            } else if (rightNode) { //向右合并\r\n                _join(node.pNode, pIndex, node, rightNode);\r\n            } else if (leftNode) { //向左合并\r\n                _join(node.pNode, pIndex - 1, leftNode, node);\r\n            }\r\n        }\r\n        return result;\r\n\r\n        function _join(pNode, pIndex, leftNode, rightNode) {\r\n            let isPnode = leftNode.linkList[0] ? 1 : 0;\r\n            // 右移右节点\r\n            _moveRight(rightNode, leftNode.num + isPnode);\r\n            //复制左节点到右节点\r\n            for (let i = 0; i < leftNode.num; i++) {\r\n                rightNode.dataList[i] = leftNode.dataList[i];\r\n                rightNode.linkList[i + 1] = leftNode.linkList[i + 1];\r\n                if (rightNode.linkList[i + 1]) {\r\n                    rightNode.linkList[i + 1].pNode = rightNode;\r\n                }\r\n            }\r\n            rightNode.linkList[0] = leftNode.linkList[0];\r\n            if (rightNode.linkList[0]) {\r\n                rightNode.linkList[0].pNode = rightNode;\r\n            }\r\n            if (isPnode) { //当前节点非叶子节点，父节点下移\r\n                rightNode.dataList[leftNode.num] = pNode.dataList[pIndex];\r\n            }\r\n            _moveLeft(pNode, 1, pIndex); //删除父节点和左域\r\n            rightNode.num += leftNode.num + isPnode;\r\n            pNode.num--;\r\n            if (!isPnode) { //叶子节点更新前后件\r\n                if (that.head === leftNode) { //头结点被删除\r\n                    that.head = rightNode;\r\n                    that.head.prev = null;\r\n                } else {\r\n                    leftNode.prev.next = rightNode;\r\n                    rightNode.prev = leftNode.prev;\r\n                }\r\n            }\r\n            if (!pNode.num) { //已经到了根节点\r\n                that.root = rightNode;\r\n                that.root.pNode = null;\r\n                node = null;\r\n            } else {\r\n                node = pNode;\r\n            }\r\n        }\r\n\r\n        //右移num个节点\r\n        function _moveRight(target, num) {\r\n            for (let i = target.num - 1; i >= 0; i--) {\r\n                target.dataList[num + i] = target.dataList[i];\r\n                target.linkList[num + i + 1] = target.linkList[i + 1];\r\n            }\r\n            target.linkList[num] = target.linkList[0];\r\n        }\r\n\r\n        //左移num个节点\r\n        function _moveLeft(target, num, index) {\r\n            index = index || 0;\r\n            for (let i = index; i < target.num; i++) {\r\n                target.dataList[i] = target.dataList[i + num];\r\n                target.linkList[i] = target.linkList[i + num];\r\n            }\r\n            target.linkList[target.num] = target.linkList[target.num + num];\r\n        }\r\n    }\r\n    /**\r\n     * 查找\r\n     * @param {Any} value \r\n     * @param {Function} compare 自定义查找比较器 \r\n     * @param {Boolean} insert 是否查找查找最近的节点 \r\n     */\r\n    search(value, compare, insert) {\r\n        let result = this._search(value, insert, compare);\r\n        if (result) {\r\n            result = this.iterator(result, value, compare);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {Node} node \r\n     * @param {Any} value \r\n     */\r\n    findIndex(node, value) {\r\n        for (let i = 0; i < node.num; i++) {\r\n            if (this.compare(value, node.dataList[i]) === 0) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * 把搜索结果封装成迭代器\r\n     * @param {Node} result \r\n     * @param {Any} value \r\n     */\r\n    iterator(result, value, compare) {\r\n        let index = result.num;\r\n        let orginIndex = result.num;\r\n        let originResult = result.num;\r\n        compare = compare || this.compare;\r\n        for (let i = 0; i < result.num; i++) {\r\n            let item = result.dataList[i];\r\n            let res = compare(value, item);\r\n            if(res <= 0) { //确保next一定大于等于当前值value\r\n                orginIndex = i;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            next: _next,\r\n            prev: _prev,\r\n            reset: function () {\r\n                index = orginIndex;\r\n                result = originResult;\r\n            }\r\n        }\r\n\r\n        function _next() {\r\n            if (index < result.num) {\r\n                return result.dataList[index++];\r\n            } else if (result.next) {\r\n                result = result.next;\r\n                index = 0;\r\n                return result.dataList[index];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function _prev() {\r\n            index--;\r\n            if (index >= 0) {\r\n                return result.dataList[index];\r\n            } else if (result.prev) {\r\n                result = result.prev;\r\n                index = result.num - 1;\r\n                return result.dataList[index];\r\n            } else {\r\n                index++;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    forEach(cb) {\r\n        let arr = this.toArray();\r\n        for (let i = 0; i < arr.length; i++) {\r\n            cb(arr[i], i);\r\n        }\r\n    }\r\n    toArray() {\r\n        if (this.arrayCache) {\r\n            return this.arrayCache;\r\n        }\r\n        let results = [];\r\n        let node = this.head;\r\n        while (node) {\r\n            let dataList = node.dataList;\r\n            for (let index = 0; index < node.num; index++) {\r\n                results.push(dataList[index]);\r\n            }\r\n            node = node.next;\r\n        }\r\n        this.arrayCache = results;\r\n        return results;\r\n    }\r\n    get(index) {\r\n        let node = this.head;\r\n        let count = -1;\r\n        while (node) {\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                count++;\r\n                if (count == index) {\r\n                    return dataList[i];\r\n                }\r\n            }\r\n            node = node.next;\r\n        }\r\n        return null;\r\n    }\r\n    empty() {\r\n        this.root = null;\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.arrayCache = null;\r\n    }\r\n    _search(value, isInsert, compare) {\r\n        let node = this.root;\r\n        compare = compare || this.compare;\r\n        while (node) {\r\n            let linkList = node.linkList;\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                let res = compare(value, dataList[i]);\r\n                if (res === 0) {\r\n                    if (linkList[i + 1]) { //右侧子节点存放了父节点\r\n                        node = linkList[i + 1];\r\n                        break;\r\n                    } else {\r\n                        return node;\r\n                    }\r\n                } else if (res > 0) {\r\n                    if (!dataList[i + 1] || compare(value, dataList[i + 1]) < 0) { //目标在右侧子树中\r\n                        if (linkList[i + 1]) {\r\n                            node = linkList[i + 1];\r\n                            break;\r\n                        } else {\r\n                            return isInsert ? node : null;\r\n                        }\r\n                    }\r\n                } else { //目标在左侧子树中\r\n                    if (linkList[i]) {\r\n                        node = linkList[i];\r\n                        break;\r\n                    } else {\r\n                        return isInsert ? node : null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Btree;","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 14:42:01\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst comparator = function (a, b) {\r\n    return a.start.line - b.start.line;\r\n};\r\n\r\nconst singleTag = ['br', 'hr', 'area', 'base', 'img', 'input', 'link', 'meta', 'basefont', 'param', 'col', 'frame', 'embed', 'keygen', 'source'];\r\nconst singleTagMap = {};\r\nsingleTag.forEach((tag) => {\r\n    singleTagMap[tag] = true;\r\n});\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.folds = new Btree(comparator);\r\n        this.editorFunObj = {};\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this.editorFunObj, editor, ['unFold']);\r\n        Util.defineProperties(this, editor, ['selecter']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    onInsertContentAfter(preCursorPos, cursorPos) {\r\n        let folds = this.folds.toArray();\r\n        let afterIndex = Infinity;\r\n        // 历史记录中操作光标在折叠区，需要先展开\r\n        for (let i = 0; i < folds.length; i++) {\r\n            let fold = folds[i];\r\n            if (fold.start.line < preCursorPos.line) {\r\n                if (fold.end.line > preCursorPos.line) {\r\n                    this.editorFunObj.unFold(fold.start.line);\r\n                }\r\n            } else {\r\n                afterIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (cursorPos.line > preCursorPos.line) {\r\n            if (folds[afterIndex] && folds[afterIndex].start.line === preCursorPos.line) {\r\n                this.editorFunObj.unFold(preCursorPos.line);\r\n                afterIndex++;\r\n            }\r\n            // 更新后面的行号\r\n            for (let i = afterIndex; i < folds.length; i++) {\r\n                folds[i].start.line += cursorPos.line - preCursorPos.line;\r\n                folds[i].end.line += cursorPos.line - preCursorPos.line;\r\n            }\r\n        }\r\n    }\r\n    onDeleteContentAfter(preCursorPos, cursorPos) {\r\n        let folds = this.folds.toArray();\r\n        let afterIndex = Infinity;\r\n        for (let i = 0; i < folds.length; i++) {\r\n            let fold = folds[i];\r\n            let starLine = fold.start.line;\r\n            let endLine = fold.end.line;\r\n            if (starLine <= preCursorPos.line) {\r\n                if (starLine < preCursorPos.line) {\r\n                    if ((starLine >= cursorPos.line && starLine < preCursorPos.line) || (starLine < cursorPos.line && endLine > cursorPos.line)) {\r\n                        this.editorFunObj.unFold(starLine);\r\n                    }\r\n                } else {\r\n                    if (preCursorPos.line > cursorPos.line) {\r\n                        this.editorFunObj.unFold(starLine);\r\n                    }\r\n                }\r\n            } else {\r\n                afterIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (preCursorPos.line > cursorPos.line) {\r\n            // 更新后面的行号\r\n            for (let i = afterIndex; i < folds.length; i++) {\r\n                folds[i].start.line += cursorPos.line - preCursorPos.line;\r\n                folds[i].end.line += cursorPos.line - preCursorPos.line;\r\n            }\r\n        }\r\n    }\r\n    // 折叠行\r\n    foldLine(line) {\r\n        let resultFold = this.getRangeFold(line);\r\n        if (resultFold) {\r\n            // 避免交叉折叠\r\n            for (let line = resultFold.start.line + 1; line < resultFold.end.line; line++) {\r\n                let fold = this.getFoldByLine(line);\r\n                if (fold) {\r\n                    if (fold.end.line > resultFold.end.line) {\r\n                        this.editorFunObj.unFold(line);\r\n                    }\r\n                }\r\n            }\r\n            this.folds.insert(resultFold);\r\n        }\r\n        return resultFold;\r\n    }\r\n    // 展开折叠行\r\n    unFold(line) {\r\n        let fold = this.getFoldByLine(line);\r\n        fold && this.folds.delete(fold);\r\n        return fold;\r\n    }\r\n    getFoldByLine(line) {\r\n        let it = this.folds.search(line, (a, b) => {\r\n            return a - b.start.line;\r\n        });\r\n        return it && it.next();\r\n    }\r\n    getLineInFold(line) {\r\n        let it = this.folds.search(\r\n            line,\r\n            (a, b) => {\r\n                return a - b.start.line;\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let fold = it.prev();\r\n            if (fold && fold.start.line < line && fold.end.line > line) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 获取折叠范围\r\n     * @param {Number} line 行号\r\n     * @param {Boolean} foldIconCheck 检测是否显示折叠图标\r\n     */\r\n    getRangeFold(line, foldIconCheck) {\r\n        let stack = [];\r\n        let startLine = line;\r\n        let lineObj = this.htmls[startLine - 1];\r\n        let startFold = null;\r\n        if (lineObj.folds && lineObj.folds.length) {\r\n            for (let i = 0; i < lineObj.folds.length; i++) {\r\n                let fold = lineObj.folds[i];\r\n                if (fold.side <= 0) {\r\n                    stack.push(fold);\r\n                } else if (fold.side > 0) {\r\n                    for (let i = stack.length - 1; i >= 0; i--) {\r\n                        if (stack[i].side + fold.side === 0) {\r\n                            stack.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (stack.length) {\r\n            let foldStartText = '';\r\n            startFold = stack.peek();\r\n            startFold = Object.assign({ line: startLine }, startFold);\r\n            foldStartText = lineObj.text.slice(startFold.startIndex, startFold.endIndex);\r\n            // 单标签没有折叠\r\n            if (singleTagMap[foldStartText]) {\r\n                return false;\r\n            }\r\n            // 单行注释\r\n            if (startFold.type === Util.constData.LINE_COMMENT) {\r\n                let endLine = startLine;\r\n                let fold = null;\r\n                line = startLine + 1;\r\n                while (line <= this.htmls.length) {\r\n                    let lineObj = this.htmls[line - 1];\r\n                    let text = lineObj.text.trimLeft();\r\n                    let startIndex = lineObj.text.length - text.length;\r\n                    let _fold = lineObj.folds && lineObj.folds[0];\r\n                    if (_fold && _fold.type === Util.constData.LINE_COMMENT && _fold.startIndex === startIndex) {\r\n                        endLine = line;\r\n                        fold = _fold;\r\n                        if (foldIconCheck && endLine - startLine > 1) {\r\n                            return true;\r\n                        }\r\n                        line++;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (foldIconCheck) {\r\n                    return endLine - startLine > 1;\r\n                } else {\r\n                    return {\r\n                        start: startFold,\r\n                        end: Object.assign({ line: endLine }, fold),\r\n                    };\r\n                }\r\n            }\r\n            return this.getRangeFoldByStartFold(startFold, foldIconCheck);\r\n        }\r\n        return false;\r\n    }\r\n    getRangeFoldByStartFold(startFold, foldIconCheck) {\r\n        let line = startFold.line;\r\n        let stack = [];\r\n        let resultFold = null;\r\n        while (line <= this.htmls.length && (!foldIconCheck || line - startFold.line <= 1)) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (lineObj.folds && lineObj.folds.length) {\r\n                for (let i = 0; i < lineObj.folds.length; i++) {\r\n                    let fold = lineObj.folds[i];\r\n                    if (line === startFold.line && fold.startIndex <= startFold.startIndex) {\r\n                        continue;\r\n                    }\r\n                    if (fold.side === startFold.side) {\r\n                        stack.push(fold);\r\n                    } else if (startFold.side + fold.side === 0) {\r\n                        if (stack.length === 0) {\r\n                            resultFold = {\r\n                                start: startFold,\r\n                                end: Object.assign({ line: line }, fold),\r\n                            };\r\n                            return foldIconCheck ? line - startFold.line > 1 : resultFold;\r\n                        } else {\r\n                            stack.pop();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            line++;\r\n        }\r\n        return foldIconCheck ? line - startFold.line > 1 : resultFold;\r\n    }\r\n    /**\r\n     * 获取当前光标所处的范围\r\n     * @param {Object} cursorPos\r\n     */\r\n    getBracketMatch(cursorPos) {\r\n        let line = cursorPos.line;\r\n        let startFold = null;\r\n        let stack = [];\r\n        outerLoop: while (line >= 1 && !startFold) {\r\n            let folds = this.htmls[line - 1].folds || [];\r\n            for (let i = folds.length - 1; i >= 0; i--) {\r\n                let fold = folds[i];\r\n                // 跳过标签名\r\n                if(fold.type === Util.constData.TAG) {\r\n                    continue;\r\n                } else if (fold.side > 0 && (line < cursorPos.line || fold.endIndex < cursorPos.column)) {\r\n                    stack.push(fold);\r\n                } else if (fold.side < 0 && (line < cursorPos.line || fold.startIndex <= cursorPos.column)) {\r\n                    let exsitEnd = false;\r\n                    if (stack.length) {\r\n                        for (let i = stack.length - 1; i >= 0; i--) {\r\n                            if (stack[i].side + fold.side === 0) {\r\n                                stack.splice(i, 1);\r\n                                exsitEnd = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!exsitEnd) {\r\n                        startFold = Object.assign({ line: line }, fold);\r\n                        break outerLoop;\r\n                    }\r\n                }\r\n            }\r\n            line--;\r\n        }\r\n        if (startFold) {\r\n            return this.getRangeFoldByStartFold(startFold);\r\n        }\r\n    }\r\n    // 根据相对行号获取真实行号(折叠后行号会改变)\r\n    getRealLine(line) {\r\n        let i = 0;\r\n        let lineCount = 1;\r\n        let realLine = 1;\r\n        let folds = this.folds.toArray();\r\n        while (i < folds.length && lineCount < line) {\r\n            let fold = folds[i];\r\n            if (lineCount + fold.start.line - realLine < line) {\r\n                lineCount += fold.start.line + 1 - realLine;\r\n                realLine = fold.end.line;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < folds.length && folds[i].end.line <= fold.end.line) {\r\n                //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        realLine += line - lineCount;\r\n        return realLine;\r\n    }\r\n    // 根据真实行号获取相对行号\r\n    getRelativeLine(line) {\r\n        let relLine = line;\r\n        let i = 0;\r\n        let folds = this.folds.toArray();\r\n        while (i < folds.length) {\r\n            let fold = folds[i];\r\n            if (line >= fold.end.line) {\r\n                relLine -= fold.end.line - fold.start.line - 1;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < folds.length && folds[i].end.line <= fold.end.line) {\r\n                //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        return relLine;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-12 09:52:06\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editor, context, selecter) {\r\n        this.selecter = selecter;\r\n        this.initProperties(editor, context);\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.wholeWordPattern = new RegExp(`^(${this.wordPattern.source})$`);\r\n        this.wordPattern = new RegExp(this.wordPattern.source, 'g');\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'fSearcher', 'searcher', 'nowCursorPos', 'cursor', '$nextTick', '$refs']);\r\n        Util.defineProperties(this, context, ['htmls', 'getRangeText', 'getAllText']);\r\n    }\r\n    search(searchObj) {\r\n        let resultObj = null;\r\n        let now = 0;\r\n        let count = 0;\r\n        let hasCache = this.hasCache();\r\n        let config = null;\r\n        searchObj = searchObj || {};\r\n        if (hasCache) {\r\n            resultObj = this.getFromCache(searchObj.direct, searchObj.increase);\r\n        } else {\r\n            config = (searchObj && searchObj.config) || this.getSearchConfig();\r\n            if (!config || !config.text) {\r\n                return { now: 0, count: 0 };\r\n            }\r\n            resultObj = this._search(config);\r\n        }\r\n        if (resultObj && resultObj.result) {\r\n            if (this.searcher === this || searchObj.increase) {\r\n                if (hasCache) {\r\n                    this.cursor.addCursorPos(resultObj.result.end);\r\n                    this.selecter.addActive(resultObj.result.end);\r\n                } else {\r\n                    //当前光标已处于选中区域边界，则不处理（历史记录后退时可能存在多个选中区域的情况）\r\n                    if (this.selecter.activedRanges.size === 0) {\r\n                        this.cursor.setCursorPos(resultObj.result.end);\r\n                    } else {\r\n                        this.initIndexs();\r\n                    }\r\n                    this.selecter.addRange(resultObj.results);\r\n                }\r\n            } else {\r\n                if (hasCache) {\r\n                    this.selecter.setActive(resultObj.result.end);\r\n                    this.cursor.setCursorPos(resultObj.result.end);\r\n                    this.searcher.clearSearch(); //搜索框确认搜索后，删除按键搜索\r\n                } else {\r\n                    this.selecter.addRange(resultObj.results);\r\n                    this.clearActive();\r\n                }\r\n            }\r\n            now = resultObj.now;\r\n            count = resultObj.results.length;\r\n        }\r\n\r\n        return {\r\n            now: now,\r\n            count: count,\r\n        };\r\n    }\r\n    _search(config) {\r\n        let that = this;\r\n        let reg = null;\r\n        let exec = null;\r\n        let start = null;\r\n        let end = null;\r\n        let result = null;\r\n        let results = [];\r\n        let indexs = {};\r\n        let rangePos = null;\r\n        let line = 1;\r\n        let column = 0;\r\n        let index = 0;\r\n        let text = this.getAllText();\r\n        let lines = config.text.split(/\\n/);\r\n        let source = config.text.replace(/\\\\|\\.|\\*|\\+|\\-|\\?|\\(|\\)|\\[|\\]|\\{|\\}|\\^|\\$|\\~|\\!|\\&|\\|/g, '\\\\$&');\r\n        //完整匹配\r\n        if (this.wholeWordPattern.test(config.text) && config.wholeWord) {\r\n            source = '(?:\\\\b|(?<=[^0-9a-zA-Z]))' + source + '(?:\\\\b|(?=[^0-9a-zA-Z]))';\r\n        }\r\n        reg = new RegExp('[^\\n]*?(' + source + ')|[^\\n]*?\\n', config.ignoreCase ? 'img' : 'mg');\r\n        config = config || {};\r\n        while ((exec = reg.exec(text))) {\r\n            if (!exec[1]) {\r\n                line++;\r\n                column = 0;\r\n            } else {\r\n                start = {\r\n                    line: line,\r\n                    column: column + exec[0].length - exec[1].length,\r\n                };\r\n                end = {\r\n                    line: line + lines.length - 1,\r\n                    column: lines.length > 1 ? lines.peek().length : column + exec[0].length,\r\n                };\r\n                line = end.line;\r\n                column = end.column;\r\n                rangePos = {\r\n                    start: start,\r\n                    end: end,\r\n                };\r\n                results.push(rangePos);\r\n                if (!result && Util.comparePos(end, that.nowCursorPos) >= 0) {\r\n                    result = rangePos;\r\n                    index = results.length - 1;\r\n                    indexs[results.length - 1] = true;\r\n                }\r\n            }\r\n        }\r\n        if (!results.length) {\r\n            return null;\r\n        }\r\n        if (!result && results.length) {\r\n            index = 0;\r\n            result = results[0];\r\n        }\r\n        this.cacheData = {\r\n            config: config,\r\n            results: results,\r\n            indexs: indexs,\r\n            index: index,\r\n        };\r\n        return {\r\n            now: this.cacheData.index + 1,\r\n            results: results,\r\n            result: result,\r\n        };\r\n    }\r\n    initIndexs() {\r\n        let ranges = this.selecter.activedRanges.toArray();\r\n        this.cacheData.indexs = {};\r\n        ranges.forEach((range) => {\r\n            for (let i = 0; i < this.cacheData.results.length; i++) {\r\n                let item = this.cacheData.results[i];\r\n                if (Util.comparePos(range.start, item.start) === 0) {\r\n                    this.cacheData.index = i;\r\n                    this.cacheData.indexs[i] = true;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // 重新搜索\r\n    refreshSearch(config) {\r\n        if (!this.hasCache() && !config) {\r\n            return;\r\n        }\r\n        return new Promise((resolve) => {\r\n            let refreshSearchId = this.refreshSearch.id + 1 || 1;\r\n            this.refreshSearch.id = refreshSearchId;\r\n            this.$nextTick(() => {\r\n                if (this.refreshSearch.id !== refreshSearchId) {\r\n                    return;\r\n                }\r\n                if (this.hasCache() || config) {\r\n                    config = config || this.cacheData.config;\r\n                    this.clearSearch();\r\n                    this.search({\r\n                        config: config,\r\n                    });\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    hasCache() {\r\n        return !!this.cacheData;\r\n    }\r\n    /**\r\n     * 清除搜索\r\n     * @param {Boolean} retainActive 是否保留活动的选中区域\r\n     */\r\n    clearSearch(retainActive) {\r\n        if (retainActive) {\r\n            this.selecter.clearInactiveRange();\r\n        } else {\r\n            this.selecter.clearRange();\r\n        }\r\n        this.cacheData = null;\r\n    }\r\n    clearActive() {\r\n        if (this.cacheData) {\r\n            this.cacheData.index = -1;\r\n            this.cacheData.indexs = {};\r\n            this.selecter.clearActive();\r\n        }\r\n    }\r\n    setPrevActive(cursorPos) {\r\n        let results = this.cacheData.results;\r\n        let index = this.cacheData.index;\r\n        this.cacheData.index = results.length - 1;\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            let item = results[i];\r\n            let res = Util.comparePos(item.end, cursorPos);\r\n            if (res < 0 || (index === -1 && res === 0)) {\r\n                this.cacheData.index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    setNextActive(cursorPos) {\r\n        let results = this.cacheData.results;\r\n        let index = this.cacheData.index;\r\n        this.cacheData.index = 0;\r\n        for (let i = 0; i < results.length; i++) {\r\n            let item = results[i];\r\n            let res = Util.comparePos(item.end, cursorPos);\r\n            if (res > 0 || (index === -1 && res === 0)) {\r\n                this.cacheData.index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    removeNow() {\r\n        this.cacheData.results.splice(this.cacheData.index, 1);\r\n        this.cacheData.index--;\r\n    }\r\n    clone(cacheData) {\r\n        this.cacheData = cacheData;\r\n        if (cacheData) {\r\n            this.selecter.addRange(cacheData.results);\r\n        }\r\n    }\r\n    getCacheData() {\r\n        return this.cacheData;\r\n    }\r\n    getNowRange() {\r\n        return this.cacheData.results[this.cacheData.index];\r\n    }\r\n    getFromCache(direct, increase) {\r\n        let results = this.cacheData.results;\r\n        let result = null;\r\n        let index = 0;\r\n        if (this.fSearcher === this && !increase) {\r\n            // 搜索框移动活动区域\r\n            if (direct === 'up') {\r\n                this.setPrevActive(this.nowCursorPos);\r\n            } else {\r\n                this.setNextActive(this.nowCursorPos);\r\n            }\r\n            index = this.cacheData.index;\r\n            result = this.cacheData.results[index];\r\n            this.cacheData.indexs = { i: true };\r\n        } else {\r\n            //CTRL+D移动活动区域\r\n            let indexs = this.cacheData.indexs;\r\n            let delta = 0;\r\n            if (direct === 'up') {\r\n                delta = -1;\r\n            } else {\r\n                delta = 1;\r\n            }\r\n            index = this.cacheData.index + delta;\r\n            if (index == results.length) {\r\n                index = 0;\r\n            } else if (index < 0) {\r\n                index = results.length - 1;\r\n            }\r\n            // 已经没有非活动区域\r\n            if (!indexs[index]) {\r\n                result = results[index];\r\n                indexs[index] = true;\r\n                this.cacheData.index = index;\r\n            } else {\r\n                index = this.cacheData.index;\r\n            }\r\n        }\r\n\r\n        return {\r\n            now: index + 1,\r\n            result: result,\r\n            results: results,\r\n        };\r\n    }\r\n    getConfig() {\r\n        if (!this.cacheData) {\r\n            return;\r\n        }\r\n        return Object.assign({}, this.cacheData.config);\r\n    }\r\n    // 获取待搜索的文本\r\n    getSearchConfig() {\r\n        let result = null;\r\n        let wholeWord = false;\r\n        let searchText = '';\r\n        let range = this.searcher.selecter.getRangeByCursorPos(this.nowCursorPos);\r\n        if (this.searcher === this && this.selecter.ranges.size > 0) {\r\n            return null;\r\n        }\r\n        if (range) {\r\n            searchText = this.getRangeText(range.start, range.end);\r\n        } else {\r\n            searchText = this.getNowWord().text;\r\n            wholeWord = true;\r\n        }\r\n        if (searchText) {\r\n            result = {\r\n                text: searchText,\r\n                wholeWord: wholeWord,\r\n                ignoreCase: wholeWord,\r\n            };\r\n        }\r\n        return result;\r\n    }\r\n    getNowWord() {\r\n        let text = this.htmls[this.nowCursorPos.line - 1].text;\r\n        let str = '';\r\n        let index = this.nowCursorPos.column;\r\n        let startColumn = index;\r\n        let endColumn = index;\r\n        let res = null;\r\n        while ((res = this.wordPattern.exec(text))) {\r\n            if (res.index <= index && res.index + res[0].length >= index) {\r\n                startColumn = res.index;\r\n                endColumn = res.index + res[0].length;\r\n                str = res[0];\r\n                break;\r\n            } else if (res.index > index) {\r\n                break;\r\n            }\r\n        }\r\n        this.wordPattern.lastIndex = 0;\r\n\r\n        return {\r\n            text: str,\r\n            range: {\r\n                start: {\r\n                    line: this.nowCursorPos.line,\r\n                    column: startColumn,\r\n                },\r\n                end: {\r\n                    line: this.nowCursorPos.line,\r\n                    column: endColumn,\r\n                },\r\n            },\r\n        };\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-13 10:41:16\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst comparator = function (a, b) {\r\n    let res = Util.comparePos(a.start, b.start);\r\n    if (res === 0) {\r\n        return Util.comparePos(a.end, b.end);\r\n    }\r\n    return res;\r\n};\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.ranges = new Btree(comparator);\r\n        this.activedRanges = new Btree(comparator);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['cursor', 'renderSelectedBg', 'clearSelectionToken']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n        this.setContextData = (prop, value) => {\r\n            context.setData(prop, value);\r\n        };\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        };\r\n    }\r\n    getRange(range) {\r\n        let it = this.ranges.search(range);\r\n        return it && it.next();\r\n    }\r\n    getRangeByLine(line) {\r\n        let results = [];\r\n        let it = this.ranges.search(\r\n            { line: line, column: 0 },\r\n            (value, item) => {\r\n                return value - item.start.line;\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let value = it.next();\r\n            while (value) {\r\n                if (value.start === line || value.end.line === line) {\r\n                    results.push(value);\r\n                } else if (value.start.line > line) {\r\n                    break;\r\n                }\r\n                value = it.next();\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    // 检测光标是否在选中区域范围的边界\r\n    getRangeByCursorPos(cursorPos) {\r\n        let result = this.ranges.search(cursorPos, (value, item) => {\r\n            if (Util.comparePos(value, item.start) === 0 || Util.comparePos(value, item.end) === 0) {\r\n                return 0;\r\n            }\r\n            return Util.comparePos(value, item.start);\r\n        });\r\n        return result && result.next();\r\n    }\r\n    // 检查光标是否在选中范围内\r\n    getRangeWithCursorPos(cursorPos) {\r\n        let it = this.ranges.search(\r\n            cursorPos,\r\n            (value, item) => {\r\n                return Util.comparePos(value, item.start);\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let value = it.prev();\r\n            if (value && Util.comparePos(value.end, cursorPos) >= 0) {\r\n                return value;\r\n            }\r\n            it.reset();\r\n            value = it.next();\r\n            if (value && Util.comparePos(value.start, cursorPos) == 0) {\r\n                return value;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    select(direct, wholeWord) {\r\n        this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n            let range = this.getRangeByCursorPos(cursorPos);\r\n            if (range) {\r\n                let start = range.start;\r\n                let end = range.end;\r\n                this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                if (direct === 'left') {\r\n                    if (Util.comparePos(cursorPos, range.start) < 0) {\r\n                        start = cursorPos;\r\n                    } else {\r\n                        end = cursorPos;\r\n                    }\r\n                } else {\r\n                    if (Util.comparePos(cursorPos, range.end) > 0) {\r\n                        end = cursorPos;\r\n                    } else {\r\n                        start = cursorPos;\r\n                    }\r\n                }\r\n                this.updateRange(range, {\r\n                    start: start,\r\n                    end: end,\r\n                });\r\n            } else {\r\n                let start = Object.assign({}, cursorPos);\r\n                let end = this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                range = this.createRange(start, end);\r\n                if (range) {\r\n                    this.addRange({\r\n                        start: start,\r\n                        end: end,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n    }\r\n    selectAll() {\r\n        let end = {\r\n            line: this.htmls.length,\r\n            column: this.htmls.peek().text.length,\r\n        };\r\n        this.setEditorData('forceCursorView', false);\r\n        this.cursor.setCursorPos(end);\r\n        this.setRange(\r\n            {\r\n                line: 1,\r\n                column: 0,\r\n            },\r\n            end\r\n        );\r\n        this.renderSelectedBg();\r\n    }\r\n    selectAllOccurence() {\r\n        this.cursor.clearCursorPos();\r\n        this.ranges.forEach((item) => {\r\n            this.cursor.addCursorPos(item.end);\r\n            if (!item.active) {\r\n                item.active = true;\r\n                this.activedRanges.insert(item);\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n    }\r\n    addActive(cursorPos) {\r\n        let range = this.getRangeByCursorPos(cursorPos);\r\n        if (range && !range.active) {\r\n            range.active = true;\r\n            this.activedRanges.insert(range);\r\n        }\r\n        this.renderSelectedBg();\r\n    }\r\n    // 添加选中区域\r\n    addRange(ranges) {\r\n        let results = [];\r\n        let list = ranges instanceof Array ? ranges : [ranges];\r\n        list.forEach((range) => {\r\n            let start = range.start;\r\n            let end = range.end;\r\n            let same = Util.comparePos(start, end);\r\n            if (same > 0) {\r\n                let tmp = start;\r\n                start = end;\r\n                end = tmp;\r\n            } else if (!same) {\r\n                return;\r\n            }\r\n            let active = this.cursor.getCursorsByLineColumn(start.line, start.column) || this.cursor.getCursorsByLineColumn(end.line, end.column);\r\n            range = {\r\n                start: {\r\n                    line: start.line,\r\n                    column: start.column,\r\n                },\r\n                end: {\r\n                    line: end.line,\r\n                    column: end.column,\r\n                },\r\n                active: !!active,\r\n            };\r\n            let _range = this.getRange(range);\r\n            if(_range) {\r\n                if(!_range.active) {\r\n                    _range.active = active;\r\n                    this.activedRanges.insert(_range);\r\n                }\r\n                results.push(_range);\r\n            } else {\r\n                this.ranges.insert(range);\r\n                active && this.activedRanges.insert(range);\r\n                results.push(range);\r\n                this.filterRange(range);\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n        return ranges instanceof Array ? results : results[0];\r\n    }\r\n    removeRange(range) {\r\n        range = this.ranges.delete(range);\r\n        if (range) {\r\n            if (range.active) {\r\n                this.activedRanges.delete(range);\r\n            }\r\n            this.cursor.removeCursor(range.start);\r\n            this.cursor.removeCursor(range.end);\r\n            this.renderSelectedBg();\r\n        }\r\n    }\r\n    /**\r\n     * 设置选中区域\r\n     * @param {Object} start\r\n     * @param {Object} end\r\n     */\r\n    setRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return;\r\n        }\r\n        let active = this.cursor.getCursorsByLineColumn(start.line, start.column) || this.cursor.getCursorsByLineColumn(end.line, end.column);\r\n        let range = {\r\n            start: Object.assign({}, start),\r\n            end: Object.assign({}, end),\r\n            active: !!active,\r\n        };\r\n        this.clearRange();\r\n        this.ranges.insert(range);\r\n        active && this.activedRanges.insert(range);\r\n        this.renderSelectedBg();\r\n        return range;\r\n    }\r\n    setActive(cursorPos) {\r\n        let range = this.getRangeByCursorPos(cursorPos);\r\n        this.activedRanges.forEach((item) => {\r\n            item.active = false;\r\n        });\r\n        this.activedRanges.empty();\r\n        if (range) {\r\n            range.active = true;\r\n            this.activedRanges.insert(range);\r\n        }\r\n        this.renderSelectedBg();\r\n    }\r\n    updateRange(target, range) {\r\n        let start = range.start;\r\n        let end = range.end;\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return false;\r\n        }\r\n        this.ranges.delete(target);\r\n        target.start.line = start.line;\r\n        target.start.column = start.column;\r\n        target.end.line = end.line;\r\n        target.end.column = end.column;\r\n        this.ranges.insert(target);\r\n        this.filterRange(target);\r\n        this.renderSelectedBg();\r\n    }\r\n    filterRange(range) {\r\n        let it = this.ranges.search(range);\r\n        let dels = [];\r\n        let value = it.prev();\r\n        if (value && Util.comparePos(value.end, range.start) > 0) {\r\n            //删除前件\r\n            dels.push(value);\r\n        }\r\n        it.reset();\r\n        it.next();\r\n        value = it.next();\r\n        if (value && Util.comparePos(range.end, value.start) > 0) {\r\n            dels.push(value);\r\n        }\r\n        dels.forEach((item) => {\r\n            this.ranges.delete(item);\r\n            this.activedRanges.delete(item);\r\n            this.cursor.removeCursor(item.start);\r\n            this.cursor.removeCursor(item.end);\r\n        });\r\n    }\r\n    createRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        }\r\n        if (same === 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            start: start,\r\n            end: end,\r\n        };\r\n    }\r\n    // 清除选中背景\r\n    clearRange() {\r\n        this.ranges.empty();\r\n        this.activedRanges.empty();\r\n        this.renderSelectedBg();\r\n    }\r\n    clearActive() {\r\n        this.activedRanges.forEach((item) => {\r\n            item.active = false;\r\n        });\r\n        this.activedRanges.empty();\r\n        this.renderSelectedBg();\r\n    }\r\n    clearInactiveRange() {\r\n        if (!this.activedRanges.size) {\r\n            this.clearRange();\r\n        } else {\r\n            this.ranges.forEach((item) => {\r\n                if (!item.active) {\r\n                    this.ranges.delete(item);\r\n                }\r\n            });\r\n            this.renderSelectedBg();\r\n        }\r\n    }\r\n    clone(range, properties) {\r\n        properties = properties || [];\r\n        let result = {\r\n            start: Object.assign({}, range.start),\r\n            end: Object.assign({}, range.end),\r\n        };\r\n        properties.forEach((key) => {\r\n            result[key] = range[key];\r\n        });\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-14 11:20:31\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    dWord: Util.fullAngleReg,\r\n    space: /\\s/,\r\n};\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.multiCursorPos = new Btree(Util.comparePos);\r\n        this.multiKeyCode = 'ctrl';\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.rightWrodPattern = new RegExp(`^(${this.wordPattern.source})`);\r\n        this.leftWrodPattern = new RegExp(`(${this.wordPattern.source})$`);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'nowCursorPos', 'searcher', 'selecter', 'setNowCursorPos', 'renderCursor', 'getColumnByWidth', 'getStrWidth']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    // 添加光标\r\n    addCursorPos(cursorPos) {\r\n        let pos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (pos) {\r\n            this.setNowCursorPos(pos);\r\n            return pos;\r\n        }\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column,\r\n        };\r\n        this.multiCursorPos.insert(cursorPos);\r\n        this.setNowCursorPos(cursorPos);\r\n        return cursorPos;\r\n    }\r\n    addCursorAbove() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            if (item.line > 1) {\r\n                let width = item.moveWidth || this.getStrWidth(this.htmls[item.line - 1].text, 0, item.column);\r\n                let column = this.getColumnByWidth(this.htmls[item.line - 2].text, width);\r\n                let cursorPos = this.addCursorPos({\r\n                    line: item.line - 1,\r\n                    column: column,\r\n                });\r\n                cursorPos.moveWidth = width;\r\n                this.setNowCursorPos(cursorPos);\r\n            }\r\n        });\r\n    }\r\n    addCursorBelow() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            if (item.line < this.htmls.length) {\r\n                let width = item.moveWidth || this.getStrWidth(this.htmls[item.line - 1].text, 0, item.column);\r\n                let column = this.getColumnByWidth(this.htmls[item.line].text, width);\r\n                let cursorPos = this.addCursorPos({\r\n                    line: item.line + 1,\r\n                    column: column,\r\n                });\r\n                cursorPos.moveWidth = width;\r\n                this.setNowCursorPos(cursorPos);\r\n            }\r\n        });\r\n    }\r\n    addCursorLineEnds() {\r\n        if (this.selecter.activedRanges.size) {\r\n            this.clearCursorPos();\r\n            this.selecter.activedRanges.forEach((item) => {\r\n                let startLine = item.start.line;\r\n                let endLine = item.end.line;\r\n                while (startLine < endLine) {\r\n                    this.addCursorPos({\r\n                        line: startLine,\r\n                        column: this.htmls[startLine - 1].text.length,\r\n                    });\r\n                    startLine++;\r\n                }\r\n                this.setNowCursorPos(\r\n                    this.addCursorPos({\r\n                        line: endLine,\r\n                        column: this.htmls[endLine - 1].text.length,\r\n                    })\r\n                );\r\n            });\r\n            this.searcher.clearSearch();\r\n        }\r\n    }\r\n    // 设置光标\r\n    setCursorPos(cursorPos) {\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column,\r\n        };\r\n        if (this.multiCursorPos.size == 1) {\r\n            let pos = this.multiCursorPos.get(0);\r\n            if (Util.comparePos(pos, cursorPos) === 0) {\r\n                return pos;\r\n            }\r\n        }\r\n        this.multiCursorPos.empty();\r\n        this.multiCursorPos.insert(cursorPos);\r\n        this.setNowCursorPos(cursorPos);\r\n        return cursorPos;\r\n    }\r\n    updateCursorPos(cursorPos, line, column) {\r\n        let pos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (pos === cursorPos) {\r\n            this.multiCursorPos.delete(cursorPos);\r\n        }\r\n        cursorPos.line = line;\r\n        cursorPos.column = column;\r\n        this.multiCursorPos.insert(cursorPos);\r\n        if (cursorPos === this.nowCursorPos) {\r\n            //触发滚动\r\n            this.setNowCursorPos(this.nowCursorPos);\r\n        } else {\r\n            this.renderCursor();\r\n        }\r\n        return cursorPos;\r\n    }\r\n    removeCursor(cursorPos) {\r\n        cursorPos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (cursorPos) {\r\n            cursorPos.del = true;\r\n            this.multiCursorPos.delete(cursorPos);\r\n            if (cursorPos === this.nowCursorPos) {\r\n                this.setNowCursorPos(null);\r\n            }\r\n            this.renderCursor();\r\n        }\r\n    }\r\n    removeCursorInRange(range) {\r\n        let it = this.multiCursorPos.search(range.start, null, true);\r\n        if (it) {\r\n            let value = null;\r\n            let toDels = [];\r\n            while ((value = it.next())) {\r\n                let res = Util.comparePos(value, range.end);\r\n                if (res >= 0) {\r\n                    break;\r\n                }\r\n                if (Util.comparePos(value, range.start) > 0) {\r\n                    toDels.push(value);\r\n                }\r\n            }\r\n            toDels.forEach((item) => {\r\n                item.del = true;\r\n                this.multiCursorPos.delete(item);\r\n            });\r\n            this.renderCursor();\r\n        }\r\n    }\r\n    clearCursorPos() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            item.del = true;\r\n        });\r\n        this.multiCursorPos.empty();\r\n        this.setNowCursorPos(null);\r\n    }\r\n    getCursorsByLine(line) {\r\n        let results = [];\r\n        let value = null;\r\n        let it = this.multiCursorPos.search(\r\n            {\r\n                line: line,\r\n                column: 0,\r\n            },\r\n            null,\r\n            true\r\n        );\r\n        if (it) {\r\n            while ((value = it.next())) {\r\n                if (value.line === line) {\r\n                    results.push(value);\r\n                } else if (value.line > line) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    getCursorsByLineColumn(line, column) {\r\n        let it = this.multiCursorPos.search({\r\n            line: line,\r\n            column: column,\r\n        });\r\n        return it && it.next();\r\n    }\r\n    // 移动光标\r\n    moveCursor(cursorPos, direct, wholeWord) {\r\n        let text = this.htmls[cursorPos.line - 1].text;\r\n        let line = cursorPos.line;\r\n        let column = cursorPos.column;\r\n        // 去除上下移动光标的初始宽度记录\r\n        if(direct !== 'up' && direct !== 'down') {\r\n            cursorPos.moveWidth = 0;\r\n        }\r\n        if (direct === 'home') {\r\n            column = 0;\r\n        } else if (direct === 'end') {\r\n            column = this.htmls[line - 1].text.length;\r\n        } else if (direct === 'up') {\r\n            if (line > 1) {\r\n                let width = cursorPos.moveWidth || this.getStrWidth(text, 0, column);\r\n                cursorPos.moveWidth = width;\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'down') {\r\n            if (line < this.htmls.length) {\r\n                let width = cursorPos.moveWidth || this.getStrWidth(text, 0, column);\r\n                cursorPos.moveWidth = width;\r\n                line++;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'left') {\r\n            while (column === 0 && line > 1) {\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = text.length;\r\n            }\r\n            if (column > 0) {\r\n                if (wholeWord) {\r\n                    //过滤开始的空格\r\n                    while (column && text[column - 1].match(regs.space)) {\r\n                        column--;\r\n                    }\r\n                    if (column > 0) {\r\n                        let res = null;\r\n                        let _column = column;\r\n                        column--;\r\n                        text = text.slice(0, _column);\r\n                        res = this.leftWrodPattern.exec(text);\r\n                        if (res) {\r\n                            column = res.index;\r\n                        }\r\n                    }\r\n                } else if (cursorPos.line === line) {\r\n                    column--;\r\n                }\r\n            }\r\n        } else {\r\n            while (column === text.length && line < this.htmls.length) {\r\n                line++;\r\n                column = 0;\r\n                text = this.htmls[line - 1].text;\r\n            }\r\n            if (column < text.length) {\r\n                if (wholeWord) {\r\n                    //过滤开始的空格\r\n                    while (column < text.length && text[column].match(regs.space)) {\r\n                        column++;\r\n                    }\r\n                    if (column < text.length) {\r\n                        text = text.slice(column);\r\n                        text = this.rightWrodPattern.exec(text);\r\n                        if (text && text.index == 0) {\r\n                            column += text[0].length;\r\n                        } else {\r\n                            column++;\r\n                        }\r\n                    }\r\n                } else if (cursorPos.line === line) {\r\n                    column++;\r\n                }\r\n            }\r\n        }\r\n        this.updateCursorPos(cursorPos, line, column);\r\n\r\n        return {\r\n            line: line,\r\n            column: column,\r\n        };\r\n    }\r\n    switchMultiKeyCode() {\r\n        this.multiKeyCode = this.multiKeyCode === 'ctrl' ? 'alt' : 'ctrl';\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 15:11:27\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.history = [];\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['cursor']);\r\n        Util.defineProperties(this, context, [\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n            'deleteCopyLineUp',\r\n            'deleteCopyLineDown',\r\n            'insertLine',\r\n            'deleteLine',\r\n            'replace',\r\n        ]);\r\n    }\r\n    // 撤销操作\r\n    undo() {\r\n        if (this.history.index > 0) {\r\n            let command = this.history[this.history.index - 1];\r\n            this.doCommand(command);\r\n            this.history.index--;\r\n            if (command.serial) {\r\n                //连续操作标识\r\n                let _command = this.history[this.history.index - 1];\r\n                _command && _command.serial === command.serial && this.undo();\r\n            }\r\n        }\r\n    }\r\n    // 重做操作\r\n    redo() {\r\n        if (this.history.index < this.history.length) {\r\n            let command = this.history[this.history.index];\r\n            this.history.index++;\r\n            this.doCommand(command);\r\n            if (command.serial) {\r\n                //连续操作标识\r\n                let _command = this.history[this.history.index];\r\n                _command && _command.serial === command.serial && this.redo();\r\n            }\r\n        }\r\n    }\r\n    // 操作命令\r\n    doCommand(command) {\r\n        let commandType = command.type || (command instanceof Array ? command[0].type : command.type);\r\n        switch (commandType) {\r\n            case Util.command.DELETE:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteContent(Util.keyCode.BACKSPACE, command);\r\n                break;\r\n            case Util.command.INSERT:\r\n                this.cursor.clearCursorPos();\r\n                if (command instanceof Array) {\r\n                    var text = [];\r\n                    command.forEach((item) => {\r\n                        text.push(item.text);\r\n                    });\r\n                    this.insertContent(text, command);\r\n                } else {\r\n                    this.insertContent(command.text, command);\r\n                }\r\n                break;\r\n            case Util.command.DELETE_LINE:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteLine(command);\r\n                break;\r\n            case Util.command.INSERT_LINE:\r\n                this.cursor.clearCursorPos();\r\n                this.insertLine(command);\r\n                break;\r\n            case Util.command.MOVEUP:\r\n                this.cursor.clearCursorPos();\r\n                this.moveLineUp(command);\r\n                break;\r\n            case Util.command.MOVEDOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.moveLineDown(command);\r\n                break;\r\n            case Util.command.COPY_DOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.copyLineDown(command);\r\n                break;\r\n            case Util.command.DELETE_COPY_DOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteCopyLineDown(command);\r\n                break;\r\n            case Util.command.COPY_UP:\r\n                this.cursor.clearCursorPos();\r\n                this.copyLineUp(command);\r\n                break;\r\n            case Util.command.DELETE_COPY_UP:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteCopyLineUp(command);\r\n                break;\r\n            case Util.command.REPLACE:\r\n                this.cursor.clearCursorPos();\r\n                this.replace(command.text, command.cursorPos, command);\r\n                break;\r\n        }\r\n    }\r\n    // 添加历史记录\r\n    pushHistory(command) {\r\n        while (this.history.length > this.history.index) {\r\n            this.history.pop();\r\n        }\r\n        let that = this;\r\n        let lastCommand = this.history[this.history.index - 1];\r\n        command = this.sortComand(command);\r\n        if (lastCommand instanceof Array && command instanceof Array && lastCommand.length === command.length && Date.now() - this.pushHistoryTime < 2000) {\r\n            if (_checkSameOp(lastCommand) && _checkSameOp(command) && _combCheck(lastCommand[0], command[0])) {\r\n                for (let i = 0; i < lastCommand.length; i++) {\r\n                    _combCommand(lastCommand[i], command[i]);\r\n                }\r\n            } else {\r\n                this.history.push(command);\r\n            }\r\n        } else if (_combCheck(lastCommand, command)) {\r\n            _combCommand(lastCommand, command);\r\n        } else {\r\n            this.history.push(command);\r\n        }\r\n        this.history.index = this.history.length;\r\n        this.pushHistoryTime = Date.now();\r\n\r\n        function _checkSameOp(commandList) {\r\n            for (let i = 1; i < commandList.length; i++) {\r\n                if (commandList[i].type !== commandList[i - 1].type) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function _combCheck(lastCommand, command) {\r\n            // 检测是否为连续插入或连续删除\r\n            if (\r\n                (command.type == Util.command.DELETE || command.type == Util.command.INSERT) &&\r\n                lastCommand &&\r\n                lastCommand.type == command.type &&\r\n                lastCommand.preCursorPos.line == command.cursorPos.line &&\r\n                Date.now() - that.pushHistoryTime < 2000\r\n            ) {\r\n                if (lastCommand.type == Util.command.DELETE) {\r\n                    if (Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (lastCommand.type == Util.command.INSERT) {\r\n                    if (Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0 || Util.comparePos(lastCommand.cursorPos, command.cursorPos) == 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 检查两次操作是否可以合并\r\n        function _combCommand(lastCommand, command) {\r\n            if (lastCommand.type === Util.command.DELETE) {\r\n                command.preCursorPos.column -= lastCommand.cursorPos.column - lastCommand.preCursorPos.column;\r\n                lastCommand.preCursorPos = command.preCursorPos;\r\n                lastCommand.cursorPos = command.cursorPos;\r\n            } else {\r\n                lastCommand.cursorPos = command.cursorPos;\r\n                if (command.keyCode === Util.keyCode.DELETE) {\r\n                    lastCommand.text = lastCommand.text + command.text;\r\n                } else {\r\n                    lastCommand.text = command.text + lastCommand.text;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 更新历史记录\r\n    updateHistory(command) {\r\n        let index = this.history.index;\r\n        if (command instanceof Array) {\r\n            command.forEach((item, _index) => {\r\n                item.keyCode = this.history[index - 1][_index].keyCode;\r\n            });\r\n        } else {\r\n            command.keyCode = this.history[index - 1].keyCode;\r\n        }\r\n        this.history[index - 1] = this.sortComand(command);\r\n    }\r\n    sortComand(command) {\r\n        if (command instanceof Array) {\r\n            command.sort((a, b) => {\r\n                a = a.cursorPos;\r\n                b = b.cursorPos;\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n        }\r\n        return command;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 13:42:22\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Enum from '@/data/enum';\r\nimport expand from 'emmet';\r\n\r\nconst regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    emmetWord: /^[a-zA-Z][a-zA-Z0-9\\-]*/,\r\n    emmetAttr: /^[\\.\\#]([^\\.\\#\\>\\<\\+\\*\\(\\)]*)/,\r\n    emmetNum: /^\\*(\\d+)/,\r\n    dWord: Util.fullAngleReg,\r\n    endTag: /(?=\\<\\/)/,\r\n    space: /\\s/,\r\n};\r\n\r\nclass Context {\r\n    constructor(editor) {\r\n        this.lineId = Number.MIN_SAFE_INTEGER;\r\n        this.serial = 1;\r\n        this.htmls = [];\r\n        this.fgLines = [];\r\n        this.lineIdMap = new Map(); //htmls的唯一标识对象\r\n        this.renderedIdMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.renderedLineMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.initProperties(editor);\r\n        this.initData();\r\n    }\r\n    initProperties(editor) {\r\n        Util.defineProperties(this, editor, [\r\n            'language',\r\n            'tabSize',\r\n            'nowCursorPos',\r\n            'maxLine',\r\n            'maxWidthObj',\r\n            'cursor',\r\n            'history',\r\n            'tokenizer',\r\n            'lint',\r\n            'folder',\r\n            'selecter',\r\n            'searcher',\r\n            'fSelecter',\r\n            'fSearcher',\r\n            'autocomplete',\r\n            'render',\r\n            'unFold',\r\n            'setNowCursorPos',\r\n            'setErrors',\r\n            'setAutoTip',\r\n            'getStrWidth',\r\n            '$emit',\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        };\r\n    }\r\n    initData() {\r\n        this.htmls.push({\r\n            lineId: this.lineId++,\r\n            text: '',\r\n            html: '',\r\n            width: 0,\r\n            tokens: [],\r\n            folds: [],\r\n            states: [],\r\n            stateFold: null,\r\n        });\r\n        this.lineIdMap.set(this.htmls[0].lineId, this.htmls[0]);\r\n    }\r\n    setData(prop, value) {\r\n        if (typeof this[prop] === 'function') {\r\n            return;\r\n        }\r\n        this[prop] = value;\r\n    }\r\n    insertContent(text, command) {\r\n        let historyArr = null;\r\n        let cursorPosList = [];\r\n        let serial = false;\r\n        if (!command) {\r\n            // 如果有选中区域，需要先删除选中区域\r\n            if (this.selecter.activedRanges.size) {\r\n                let _historyArr = this.deleteContent();\r\n                // 连续操作标识\r\n                _historyArr.serial = this.serial++;\r\n                serial = _historyArr.serial;\r\n            }\r\n            cursorPosList = this.cursor.multiCursorPos.toArray();\r\n        } else {\r\n            command.forEach((item) => {\r\n                // 多个插入的光标可能相同，这里不能先添加光标\r\n                cursorPosList.push(item.cursorPos);\r\n            });\r\n        }\r\n        historyArr = this._insertMultiContent(text, cursorPosList, command);\r\n        historyArr.serial = serial;\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyArr);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyArr);\r\n            historyArr.serial = command.serial;\r\n        }\r\n        this.setNowCursorPos(this.cursor.multiCursorPos.get(0));\r\n        this.fSearcher.refreshSearch();\r\n        return historyArr;\r\n    }\r\n    _insertMultiContent(text, cursorPosList, command) {\r\n        let prePos = null;\r\n        let historyObj = null;\r\n        let historyArr = [];\r\n        let texts = text instanceof Array ? text : text.split(/\\r\\n|\\n/);\r\n        let lineDelta = 0;\r\n        let columnDelta = 0;\r\n        this.cursor.clearCursorPos();\r\n        if (text === '\\n') {\r\n            texts = ['\\n'];\r\n        }\r\n        cursorPosList.forEach((cursorPos, index) => {\r\n            let _text = texts.length === cursorPosList.length ? texts[index] : text;\r\n            let commandObj = (command && command[index]) || {};\r\n            let margin = commandObj.margin || 'right';\r\n            let active = commandObj.active || false;\r\n            let pos = {\r\n                line: cursorPos.line,\r\n                column: cursorPos.column,\r\n            };\r\n            pos.line += lineDelta;\r\n            if (prePos && pos.line === prePos.line) {\r\n                pos.column += columnDelta;\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = this._insertContent(_text, pos, !command);\r\n            historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            historyObj.margin = margin;\r\n            historyObj.active = active;\r\n            lineDelta += historyObj.cursorPos.line - historyObj.preCursorPos.line;\r\n            columnDelta += historyObj.cursorPos.column - historyObj.preCursorPos.column;\r\n            if (margin === 'right') {\r\n                this.cursor.addCursorPos(historyObj.cursorPos);\r\n            } else {\r\n                this.cursor.addCursorPos(historyObj.preCursorPos);\r\n            }\r\n            if (active) {\r\n                this.selecter.addRange({\r\n                    start: historyObj.preCursorPos,\r\n                    end: historyObj.cursorPos,\r\n                });\r\n            }\r\n        });\r\n        return historyArr;\r\n    }\r\n    // 插入内容\r\n    _insertContent(text, cursorPos, alignmentTab) {\r\n        let lineObj = this.htmls[cursorPos.line - 1];\r\n        let nowLineText = lineObj.text;\r\n        let newPos = Object.assign({}, cursorPos);\r\n        cursorPos.moveWidth = 0; //去除上下移动光标的初始宽度记录\r\n        text = text.split(/\\r\\n|\\n/);\r\n        text = text.map((item) => {\r\n            item = {\r\n                lineId: this.lineId++,\r\n                text: item,\r\n                html: '',\r\n                width: 0,\r\n                tokens: null,\r\n                folds: null,\r\n                states: null,\r\n                stateFold: null,\r\n            };\r\n            this.lineIdMap.set(item.lineId, item);\r\n            return item;\r\n        });\r\n        if (text.length > 1) {\r\n            // 换行对齐\r\n            if (!text[0].text && alignmentTab) {\r\n                let tabStr = _getTabStr.call(this, nowLineText, this.folder.getRangeFold(cursorPos.line, true));\r\n                if (tabStr) {\r\n                    text[1].text = tabStr + text[1].text.trimLeft();\r\n                }\r\n            }\r\n            // 插入多行\r\n            newPos.column = text[text.length - 1].text.length;\r\n            text[0].text = nowLineText.slice(0, cursorPos.column) + text[0].text;\r\n            text[text.length - 1].text = text[text.length - 1].text + nowLineText.slice(cursorPos.column);\r\n            this.htmls = this.htmls\r\n                .slice(0, cursorPos.line - 1)\r\n                .concat(text)\r\n                .concat(this.htmls.slice(cursorPos.line));\r\n        } else {\r\n            // 插入一行\r\n            newPos.column += text[0].text.length;\r\n            text[0].text = nowLineText.slice(0, cursorPos.column) + text[0].text + nowLineText.slice(cursorPos.column);\r\n            this.htmls.splice(cursorPos.line - 1, 1, text[0]);\r\n        }\r\n        newPos.line += text.length - 1;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.lint.onInsertContentAfter(cursorPos.line, newPos.line);\r\n        this.tokenizer.onInsertContentAfter(cursorPos.line, newPos.line);\r\n        this.folder.onInsertContentAfter(Object.assign({}, cursorPos), Object.assign({}, newPos));\r\n        this.setLineWidth(text);\r\n        this.setErrors([]);\r\n        this.setAutoTip(null);\r\n        this.render(true);\r\n        this.$emit('change');\r\n        let historyObj = {\r\n            type: Util.command.DELETE,\r\n            cursorPos: Object.assign({}, newPos),\r\n            preCursorPos: Object.assign({}, cursorPos),\r\n        };\r\n        return historyObj;\r\n\r\n        function _getTabStr(text, plus) {\r\n            let tabNum = 0;\r\n            let tabStr = '';\r\n            //该行有内容\r\n            let spaceNum = /^\\s+/.exec(text);\r\n            if (spaceNum) {\r\n                tabNum = /\\t+/.exec(spaceNum[0]);\r\n                tabNum = (tabNum && tabNum[0].length) || 0;\r\n                tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / this.tabSize);\r\n            }\r\n            tabNum += plus ? 1 : 0;\r\n            for (let i = 0; i < tabNum; i++) {\r\n                tabStr += '\\t';\r\n            }\r\n            return tabStr;\r\n        }\r\n    }\r\n    deleteContent(keyCode, command) {\r\n        let historyArr = [];\r\n        let rangeList = [];\r\n        if (command) {\r\n            rangeList = command.map((item) => {\r\n                let obj = {\r\n                    start: item.preCursorPos,\r\n                    end: item.cursorPos,\r\n                    margin: item.margin,\r\n                    active: item.active,\r\n                };\r\n                return obj;\r\n            });\r\n        } else {\r\n            this.cursor.multiCursorPos.forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                if (range) {\r\n                    if (Util.comparePos(range.start, item) === 0) {\r\n                        range.margin = 'left';\r\n                    } else {\r\n                        range.margin = 'right';\r\n                    }\r\n                    rangeList.push(range);\r\n                } else {\r\n                    rangeList.push(item);\r\n                }\r\n            });\r\n        }\r\n        historyArr = this._deleteMultiContent(rangeList, keyCode);\r\n        if (!command) {\r\n            // 新增历史记录\r\n            historyArr.length && this.history.pushHistory(historyArr);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            historyArr.serial = command.serial;\r\n            this.history.updateHistory(historyArr);\r\n            historyArr.forEach((item) => {\r\n                this.cursor.addCursorPos(item.cursorPos);\r\n            });\r\n        }\r\n        this.setNowCursorPos(this.cursor.multiCursorPos.get(0));\r\n        this.searcher.clearSearch();\r\n        this.fSearcher.refreshSearch();\r\n        return historyArr;\r\n    }\r\n    _deleteMultiContent(rangeList, keyCode) {\r\n        let that = this;\r\n        let historyArr = [];\r\n        let historyObj = null;\r\n        let prePos = null;\r\n        let lineDelta = 0;\r\n        let columnDelta = 0;\r\n        this.cursor.clearCursorPos();\r\n        rangeList.forEach((item) => {\r\n            if (item.start && item.end) {\r\n                _deleteRangePos(item);\r\n            } else {\r\n                _deleteCursorPos(item);\r\n            }\r\n        });\r\n        return historyArr;\r\n\r\n        function _deleteCursorPos(cursorPos) {\r\n            let pos = {\r\n                line: cursorPos.line,\r\n                column: cursorPos.column,\r\n            };\r\n            pos.line -= lineDelta;\r\n            if (prePos && pos.line === prePos.line) {\r\n                pos.column -= columnDelta;\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = that._deleteContent(pos, keyCode);\r\n            historyObj.text && historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            lineDelta += historyObj.preCursorPos.line - prePos.line;\r\n            columnDelta += historyObj.preCursorPos.column - prePos.column;\r\n            that.cursor.addCursorPos({\r\n                line: prePos.line,\r\n                column: prePos.column,\r\n            });\r\n        }\r\n\r\n        function _deleteRangePos(rangePos) {\r\n            let start = rangePos.start;\r\n            let end = rangePos.end;\r\n            start.line -= lineDelta;\r\n            end.line -= lineDelta;\r\n            if (prePos && start.line === prePos.line) {\r\n                start.column -= columnDelta;\r\n                if (start.line === end.line) {\r\n                    end.column -= columnDelta;\r\n                } else {\r\n                    columnDelta = 0;\r\n                }\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = that._deleteContent(rangePos, keyCode);\r\n            historyObj.text && historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            lineDelta += historyObj.preCursorPos.line - prePos.line;\r\n            columnDelta += historyObj.preCursorPos.column - prePos.column;\r\n            that.cursor.addCursorPos({\r\n                line: prePos.line,\r\n                column: prePos.column,\r\n            });\r\n        }\r\n    }\r\n    // 删除内容\r\n    _deleteContent(cursorPos, keyCode) {\r\n        let range = null;\r\n        let margin = keyCode === Util.keyCode.DELETE ? 'left' : 'right';\r\n        cursorPos.moveWidth = 0; //去除上下移动光标的初始宽度记录\r\n        if (cursorPos.start && cursorPos.end) {\r\n            //删除范围内的内容\r\n            range = cursorPos;\r\n            cursorPos = range.end;\r\n            margin = range.margin;\r\n        }\r\n        let start = null;\r\n        let startObj = this.htmls[cursorPos.line - 1];\r\n        let text = startObj.text;\r\n        let deleteText = '';\r\n        let rangeUuid = [startObj.lineId];\r\n        let originPos = Object.assign({}, cursorPos);\r\n        let newPos = Object.assign({}, cursorPos);\r\n        if (range) {\r\n            // 删除选中区域\r\n            let end = range.end;\r\n            let endObj = this.htmls[end.line - 1];\r\n            start = range.start;\r\n            startObj = this.htmls[start.line - 1];\r\n            text = startObj.text;\r\n            deleteText = this.getRangeText(range.start, range.end);\r\n            if (start.line == 1 && end.line == this.maxLine) {\r\n                //全选删除\r\n                rangeUuid = [this.maxWidthObj.lineId];\r\n                this.lineIdMap.clear();\r\n            } else {\r\n                rangeUuid = this.htmls.slice(start.line - 1, end.line).map((item) => {\r\n                    this.lineIdMap.delete(item.lineId);\r\n                    return item.lineId;\r\n                });\r\n            }\r\n            this.lineIdMap.set(startObj.lineId, startObj);\r\n            if (start.line == end.line) {\r\n                // 单行选中\r\n                text = text.slice(0, start.column) + text.slice(end.column);\r\n                startObj.text = text;\r\n            } else {\r\n                // 多行选中\r\n                text = text.slice(0, start.column);\r\n                startObj.text = text;\r\n                text = endObj.text;\r\n                text = text.slice(end.column);\r\n                startObj.text += text;\r\n                this.htmls.splice(start.line, end.line - start.line);\r\n            }\r\n            newPos.line = start.line;\r\n            newPos.column = start.column;\r\n        } else if (Util.keyCode.DELETE == keyCode) {\r\n            // 向后删除一个字符\r\n            if (cursorPos.column == text.length) {\r\n                // 光标处于行尾\r\n                if (cursorPos.line < this.htmls.length) {\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line].lineId);\r\n                    text = startObj.text + this.htmls[cursorPos.line].text;\r\n                    this.htmls.splice(cursorPos.line, 1);\r\n                    deleteText = '\\n';\r\n                    originPos = {\r\n                        line: cursorPos.line - 1,\r\n                        column: 0,\r\n                    };\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column];\r\n                text = text.slice(0, cursorPos.column) + text.slice(cursorPos.column + 1);\r\n                originPos = {\r\n                    line: cursorPos.line,\r\n                    column: cursorPos.column + 1,\r\n                };\r\n            }\r\n            startObj.text = text;\r\n        } else {\r\n            // 向前删除一个字符\r\n            if (cursorPos.column == 0) {\r\n                // 光标处于行首\r\n                if (cursorPos.line > 1) {\r\n                    let column = this.htmls[cursorPos.line - 2].text.length;\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line - 2].lineId);\r\n                    text = this.htmls[cursorPos.line - 2].text + text;\r\n                    this.htmls.splice(cursorPos.line - 2, 1);\r\n                    deleteText = '\\n';\r\n                    newPos.line = cursorPos.line - 1;\r\n                    newPos.column = column;\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column - 1];\r\n                text = text.slice(0, cursorPos.column - 1) + text.slice(cursorPos.column);\r\n                newPos.column = cursorPos.column - 1;\r\n            }\r\n            startObj.text = text;\r\n        }\r\n        startObj.width = this.getStrWidth(startObj.text);\r\n        startObj.html = '';\r\n        startObj.tokens = null;\r\n        startObj.folds = null;\r\n        startObj.states = null;\r\n        startObj.stateFold = null;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.lint.onDeleteContentAfter(originPos.line, newPos.line);\r\n        this.tokenizer.onDeleteContentAfter(originPos.line, newPos.line);\r\n        this.folder.onDeleteContentAfter(Object.assign({}, originPos), Object.assign({}, newPos));\r\n        this.setErrors([]);\r\n        this.setAutoTip(null);\r\n        this.render(true);\r\n        this.$emit('change');\r\n        // 更新最大文本宽度\r\n        if (startObj.width >= this.maxWidthObj.width) {\r\n            this.setEditorData('maxWidthObj', {\r\n                lineId: startObj.lineId,\r\n                text: startObj.text,\r\n                width: startObj.width,\r\n            });\r\n        } else if (rangeUuid.indexOf(this.maxWidthObj.lineId) > -1) {\r\n            this.setMaxWidth();\r\n        }\r\n        let historyObj = {\r\n            type: Util.command.INSERT,\r\n            cursorPos: Object.assign({}, newPos),\r\n            preCursorPos: Object.assign({}, originPos),\r\n            text: deleteText,\r\n            keyCode: keyCode,\r\n            margin: margin,\r\n            active: range && range.active,\r\n        };\r\n        return historyObj;\r\n    }\r\n    // 获取最大宽度\r\n    setMaxWidth() {\r\n        let that = this;\r\n        let index = 0;\r\n        let startTime = Date.now();\r\n        let maxWidthObj = {\r\n            line: this.htmls[0].lineId,\r\n            width: 0,\r\n        };\r\n        clearTimeout(this.setMaxWidthTimer);\r\n        _setMaxWidth();\r\n\r\n        function _setMaxWidth() {\r\n            while (index < that.htmls.length) {\r\n                let item = that.htmls[index];\r\n                if (item.width > maxWidthObj.width) {\r\n                    maxWidthObj = {\r\n                        lineId: item.lineId,\r\n                        text: item.text,\r\n                        width: item.width,\r\n                    };\r\n                }\r\n                index++;\r\n                if (Date.now() - startTime > 20) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index < that.htmls.length) {\r\n                that.setMaxWidthTimer = setTimeout(() => {\r\n                    _setMaxWidth();\r\n                }, 20);\r\n            } else {\r\n                that.setEditorData('maxWidthObj', maxWidthObj);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置每行文本的宽度\r\n     * @param {Array} texts\r\n     */\r\n    setLineWidth(texts) {\r\n        let that = this;\r\n        let index = 0;\r\n        let startTime = Date.now();\r\n        let maxWidthObj = this.maxWidthObj;\r\n        clearTimeout(this.setLineWidthTimer);\r\n        _setLineWidth();\r\n\r\n        function _setLineWidth() {\r\n            while (index < texts.length) {\r\n                let lineObj = texts[index];\r\n                if (that.lineIdMap.has(lineObj.lineId)) {\r\n                    let width = that.getStrWidth(lineObj.text);\r\n                    lineObj.width = width;\r\n                    if (width > maxWidthObj.width) {\r\n                        maxWidthObj = {\r\n                            lineId: lineObj.lineId,\r\n                            text: lineObj.text,\r\n                            width: width,\r\n                        };\r\n                    }\r\n                }\r\n                index++;\r\n                if (Date.now() - startTime > 20) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index < texts.length) {\r\n                that.setLineWidthTimer = setTimeout(() => {\r\n                    _setLineWidth();\r\n                }, 20);\r\n            } else {\r\n                that.setEditorData('maxWidthObj', maxWidthObj);\r\n            }\r\n        }\r\n    }\r\n    moveLineUp(command) {\r\n        this.moveLine(command, 'up');\r\n    }\r\n    moveLineDown(command) {\r\n        this.moveLine(command, 'down');\r\n    }\r\n    moveLine(command, direct) {\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let index = 0;\r\n        let prePos = null;\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            cursorPosList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            cursorPosList = [];\r\n            // 过滤光标，去除上下相邻的光标\r\n            this.cursor.multiCursorPos.toArray().forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item); //当前光标处于活动区域边界\r\n                let pass = true;\r\n                let line = range ? range.start.line : item.line;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine + 1 === line || preLine === line) {\r\n                        //和之前的光标冲突，移除当前光标所处的活动区域\r\n                        range && this.selecter.removeRange(range);\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    var enLine = (range && range.end.line) || line;\r\n                    if ((line === 1 && direct === 'up') || (enLine === this.maxLine && direct === 'down')) {\r\n                        pass = false;\r\n                    } else {\r\n                        if (range) {\r\n                            range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                            prePos = range;\r\n                        } else {\r\n                            prePos = item;\r\n                        }\r\n                        cursorPosList.push(prePos);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        while (index < cursorPosList.length) {\r\n            let pos = cursorPosList[index];\r\n            let range = pos.start ? pos : null;\r\n            this._moveLine(pos, direct);\r\n            //移动光标和选区\r\n            let delta = direct === 'down' ? 1 : -1;\r\n            if (range) {\r\n                //更新选中区域坐标\r\n                range.start.line = range.start.line + delta;\r\n                range.end.line = range.end.line + delta;\r\n            } else {\r\n                // 更新光标坐标\r\n                pos.line = pos.line + delta;\r\n            }\r\n            historyPosList.push(range ? this.selecter.clone(range, ['margin']) : Object.assign({}, pos));\r\n            index++;\r\n        }\r\n        if (!historyPosList.length) {\r\n            return;\r\n        }\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.MOVEUP : Util.command.MOVEDOWN,\r\n            cursorPos: historyPosList,\r\n            searchConifg: searchConifg, // 记录搜索配置\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n            this.searcher.refreshSearch(searchConifg);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    _moveLine(cursorPos, direct) {\r\n        let range = cursorPos.start ? cursorPos : null;\r\n        let upLine = 0;\r\n        let downLine = 0;\r\n        let text = '';\r\n        // 当前光标处于选中区域边界\r\n        if (range) {\r\n            text = this.htmls\r\n                .slice(range.start.line - 1, range.end.line)\r\n                .map((item) => {\r\n                    return item.text;\r\n                })\r\n                .join('\\n');\r\n            if (direct === 'down') {\r\n                upLine = range.start.line;\r\n                downLine = range.end.line + 1;\r\n                text = this.htmls[downLine - 1].text + '\\n' + text;\r\n            } else {\r\n                upLine = range.start.line - 1;\r\n                downLine = range.end.line;\r\n                text = text + '\\n' + this.htmls[upLine - 1].text;\r\n            }\r\n        } else {\r\n            upLine = cursorPos.line - (direct === 'down' ? 0 : 1);\r\n            downLine = upLine + 1;\r\n            text = this.htmls[downLine - 1].text + '\\n' + this.htmls[upLine - 1].text;\r\n        }\r\n        let start = {\r\n            line: upLine,\r\n            column: 0,\r\n        };\r\n        let end = {\r\n            line: downLine,\r\n            column: this.htmls[downLine - 1].text.length,\r\n        };\r\n        this._deleteContent({\r\n            start: start,\r\n            end: end,\r\n        });\r\n        this._insertContent(text, start);\r\n    }\r\n    // 向上复制一行\r\n    copyLineUp(command) {\r\n        this.copyLine(command, 'up');\r\n    }\r\n    // 向下复制一行\r\n    copyLineDown(command) {\r\n        this.copyLine(command, 'down');\r\n    }\r\n    copyLine(command, direct) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        let texts = [];\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            originList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            originList = [];\r\n            // 过滤重叠光标和活动区域\r\n            this.cursor.multiCursorPos.toArray().forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                let line = (range && range.start.line) || item.line;\r\n                let pass = true;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine === line) {\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    if (range) {\r\n                        range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                        prePos = range;\r\n                    } else {\r\n                        prePos = item;\r\n                    }\r\n                    originList.push(prePos);\r\n                }\r\n            });\r\n        }\r\n        originList.forEach((item) => {\r\n            let line = 0;\r\n            let text = '';\r\n            if (item.end) {\r\n                line = item.start.line - 1;\r\n                text = this.htmls\r\n                    .slice(item.start.line - 1, item.end.line)\r\n                    .map((item) => {\r\n                        return item.text;\r\n                    })\r\n                    .join('\\n');\r\n            } else {\r\n                line = item.line - 1;\r\n                text = this.htmls[item.line - 1].text;\r\n            }\r\n            line = line < 1 ? 1 : line;\r\n            text = '\\n' + text;\r\n            texts.push(text);\r\n            cursorPosList.push({ line: line, column: this.htmls[line - 1].text.length });\r\n        });\r\n        this._insertMultiContent(texts, cursorPosList).forEach((item, index) => {\r\n            let line = 0;\r\n            let originPos = originList[index];\r\n            line = item.cursorPos.line;\r\n            if (direct === 'down') {\r\n                line = line + (originPos.start ? originPos.end.line - originPos.start.line + 1 : 1);\r\n            }\r\n            if (originPos.start) {\r\n                let delta = originPos.end.line - originPos.start.line;\r\n                originPos.end.line = line;\r\n                originPos.start.line = line - delta;\r\n            } else {\r\n                originPos.line = line;\r\n            }\r\n            historyPosList.push(originPos.start ? this.selecter.clone(originPos, ['margin']) : Object.assign({}, originPos));\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.DELETE_COPY_DOWN : Util.command.DELETE_COPY_UP,\r\n            cursorPos: historyPosList,\r\n            searchConifg: searchConifg, // 记录搜索配置\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n            this.searcher.refreshSearch(searchConifg);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 删除上面一行\r\n    deleteCopyLineUp(command) {\r\n        this.deleteCopyLine(command, 'up');\r\n    }\r\n    // 删除下面一行\r\n    deleteCopyLineDown(command) {\r\n        this.deleteCopyLine(command, 'down');\r\n    }\r\n    deleteCopyLine(command, direct) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        originList = command.cursorPos;\r\n        originList.forEach((item) => {\r\n            let upLine = 0;\r\n            let downLine = 0;\r\n            let range = null;\r\n            let startColumn = 0;\r\n            let endColumn = 0;\r\n            if (item.end) {\r\n                upLine = item.start.line - 1;\r\n                downLine = item.end.line;\r\n            } else {\r\n                upLine = item.line - 1;\r\n                downLine = item.line;\r\n            }\r\n            endColumn = this.htmls[downLine - 1].text.length;\r\n            if (upLine < 1) {\r\n                upLine = 1;\r\n                if (downLine < this.maxLine) {\r\n                    downLine++;\r\n                    endColumn = 0;\r\n                }\r\n            } else {\r\n                startColumn = this.htmls[upLine - 1].text.length;\r\n            }\r\n            range = {\r\n                start: { line: upLine, column: startColumn },\r\n                end: { line: downLine, column: endColumn },\r\n            };\r\n            cursorPosList.push(range);\r\n        });\r\n        this._deleteMultiContent(cursorPosList).forEach((item, index) => {\r\n            let originPos = originList[index];\r\n            if (originPos.start) {\r\n                let delta = originPos.end.line - originPos.start.line;\r\n                if (direct === 'up') {\r\n                    originPos.start.line = item.cursorPos.line + (originPos.start.line === 1 ? 0 : 1);\r\n                    originPos.end.line = originPos.start.line + delta;\r\n                } else {\r\n                    originPos.end.line = item.cursorPos.line;\r\n                    originPos.start.line = originPos.end.line - delta;\r\n                }\r\n            } else {\r\n                if (direct === 'up') {\r\n                    originPos.line = item.cursorPos.line + (originPos.line === 1 ? 0 : 1);\r\n                } else {\r\n                    originPos.line = item.cursorPos.line;\r\n                }\r\n            }\r\n            historyPosList.push(originPos.start ? this.selecter.clone(originPos, ['margin']) : Object.assign({}, originPos));\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.COPY_UP : Util.command.COPY_DOWN,\r\n            cursorPos: historyPosList,\r\n            searchConifg: command.searchConifg,\r\n        };\r\n        this.history.updateHistory(historyObj);\r\n        this.searcher.refreshSearch(command.searchConifg);\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 插入当前行\r\n    insertLine(command) {\r\n        let searchConifg = command.searchConifg;\r\n        let originList = command.cursorPos;\r\n        let texts = command.text;\r\n        let cursorPosList = [];\r\n        originList.forEach((item) => {\r\n            let line = item.start ? item.start.line - 1 : item.line - 1;\r\n            line = line < 1 ? 1 : line;\r\n            cursorPosList.push({ line: line, column: this.htmls[line - 1].text.length });\r\n        });\r\n        this._insertMultiContent(texts, cursorPosList);\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        originList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.DELETE_LINE,\r\n            cursorPos: originList,\r\n            searchConifg: searchConifg,\r\n        };\r\n        // 撤销或重做操作后，更新历史记录\r\n        this.history.updateHistory(historyObj);\r\n        this.searcher.refreshSearch(command.searchConifg);\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 删除当前行\r\n    deleteLine(command) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        let texts = [];\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            originList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            this.cursor.multiCursorPos.forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                let line = (range && range.start.line) || item.line;\r\n                let pass = true;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine === line) {\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    if (range) {\r\n                        range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                        prePos = range;\r\n                    } else {\r\n                        prePos = item;\r\n                    }\r\n                    originList.push(prePos);\r\n                }\r\n            });\r\n        }\r\n        originList.forEach((item) => {\r\n            let upLine = 0;\r\n            let downLine = 0;\r\n            let range = null;\r\n            let startColumn = 0;\r\n            let endColumn = 0;\r\n            if (item.end) {\r\n                upLine = item.start.line - 1;\r\n                downLine = item.end.line;\r\n            } else {\r\n                upLine = item.line - 1;\r\n                downLine = item.line;\r\n            }\r\n            endColumn = this.htmls[downLine - 1].text.length;\r\n            if (upLine < 1) {\r\n                upLine = 1;\r\n                if (downLine < this.maxLine) {\r\n                    downLine++;\r\n                    endColumn = 0;\r\n                }\r\n            } else {\r\n                startColumn = this.htmls[upLine - 1].text.length;\r\n            }\r\n            range = {\r\n                start: { line: upLine, column: startColumn },\r\n                end: { line: downLine, column: endColumn },\r\n            };\r\n            texts.push(this.getRangeText(range.start, range.end));\r\n            cursorPosList.push(range);\r\n        });\r\n        this._deleteMultiContent(cursorPosList).forEach((item, index) => {\r\n            let originPos = originList[index];\r\n            let line = item.cursorPos.line;\r\n            let column = originList[index].column;\r\n            if (originPos.start) {\r\n                column = originPos.margin === 'left' ? originPos.start.column : originPos.end.column;\r\n            }\r\n            column = column > this.htmls[line - 1].text.length ? this.htmls[line - 1].text.length : column;\r\n            historyPosList.push({ line: line, column: column });\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        historyPosList.forEach((item) => {\r\n            this.cursor.addCursorPos(item);\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.INSERT_LINE,\r\n            cursorPos: originList,\r\n            text: texts,\r\n            searchConifg: searchConifg,\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    replace(texts, ranges) {\r\n        let historyArr = null;\r\n        let serial = this.serial++;\r\n        historyArr = this._deleteMultiContent(ranges);\r\n        historyArr.serial = serial;\r\n        this.history.pushHistory(historyArr);\r\n        historyArr = this._insertMultiContent(texts, this.cursor.multiCursorPos.toArray());\r\n        historyArr.serial = serial;\r\n        this.history.pushHistory(historyArr);\r\n        return this.fSearcher.refreshSearch();\r\n    }\r\n    // 点击自动提示替换输入的内容\r\n    replaceTip(tip) {\r\n        let word = tip.word || '';\r\n        let after = tip.after || '';\r\n        let before = tip.before || '';\r\n        let result = before + _getResult(tip) + after;\r\n        let ranges = null;\r\n        if (result === word) {\r\n            //替换前后一致，不做操作\r\n            return;\r\n        }\r\n        ranges = _getRanges.call(this);\r\n        this.replace(result, ranges);\r\n        _updatePos.call(this);\r\n        if (tip.type === Enum.TOKEN_TYPE.CSS_PROPERTY) {\r\n            //选中css属性名后，自动弹出属性值列表\r\n            this.autocomplete.search();\r\n        }\r\n\r\n        function _getResult(tip) {\r\n            let result = '';\r\n            if (tip.type === Enum.TOKEN_TYPE.EMMET_HTML || tip.type === Enum.TOKEN_TYPE.EMMET_CSS) {\r\n                try {\r\n                    const config = {};\r\n                    if (tip.type === Enum.TOKEN_TYPE.EMMET_CSS) {\r\n                        config.type = 'stylesheet';\r\n                    }\r\n                    result = expand(tip.result, config);\r\n                } catch (e) {\r\n                    result = tip.result;\r\n                }\r\n            } else if (tip.type === Enum.TOKEN_TYPE.TAG_NAME) {\r\n                result += tip.result + `></${tip.result}>`;\r\n            } else {\r\n                result = tip.result;\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function _getRanges() {\r\n            let ranges = [];\r\n            this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                let range = null;\r\n                range = {\r\n                    start: { line: cursorPos.line, column: cursorPos.column - word.length },\r\n                    end: { line: cursorPos.line, column: cursorPos.column },\r\n                };\r\n                ranges.push(range);\r\n            });\r\n            return ranges;\r\n        }\r\n\r\n        function _updatePos() {\r\n            if (tip.type === Enum.TOKEN_TYPE.TAG_NAME || tip.type === Enum.TOKEN_TYPE.EMMET_HTML) {\r\n                //生成标签后，光标定位到标签中间的位置\r\n                let exec = regs.endTag.exec(result);\r\n                if (exec) {\r\n                    let text = result.slice(exec.index);\r\n                    let deltaArr = text.split('\\n');\r\n                    let multiCursorPos = this.cursor.multiCursorPos.toArray();\r\n                    for (let i = multiCursorPos.length - 1; i >= 0; i--) {\r\n                        let cursorPos = _getDeltaPos.call(this, deltaArr, multiCursorPos[i]);\r\n                        this.cursor.updateCursorPos(multiCursorPos[i], cursorPos.line, cursorPos.column);\r\n                    }\r\n                }\r\n            } else if (tip.type === Enum.TOKEN_TYPE.ATTR_NAME) {\r\n                //选中标签属性后，光标移动端\"\"内\r\n                this.cursor.multiCursorPos.forEach((item) => {\r\n                    this.cursor.moveCursor(item, 'left');\r\n                });\r\n            }\r\n        }\r\n\r\n        function _getDeltaPos(deltaArr, cursorPos) {\r\n            let line = cursorPos.line;\r\n            let column = cursorPos.column;\r\n            if (deltaArr.length === 1) {\r\n                column -= deltaArr[0].length;\r\n            } else {\r\n                line -= deltaArr.length - 1;\r\n                column = this.htmls[line - 1].text.length - deltaArr[0].length;\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column,\r\n            };\r\n        }\r\n    }\r\n    // 获取选中范围内的文本\r\n    getRangeText(start, end) {\r\n        var text = this.htmls[start.line - 1].text;\r\n        if (start.line != end.line) {\r\n            let arr = [];\r\n            text = text.slice(start.column);\r\n            arr = this.htmls.slice(start.line, end.line - 1);\r\n            arr = arr.map((item) => {\r\n                return item.text;\r\n            });\r\n            text += arr.length ? '\\n' + arr.join('\\n') : '';\r\n            if (end.line <= this.maxLine) {\r\n                text += '\\n' + this.htmls[end.line - 1].text.slice(0, end.column);\r\n            }\r\n        } else {\r\n            text = text.slice(start.column, end.column);\r\n        }\r\n        return text;\r\n    }\r\n    // 获取待复制的文本\r\n    getCopyText(cut) {\r\n        let text = '';\r\n        let prePos = null;\r\n        let ranges = [];\r\n        this.cursor.multiCursorPos.forEach((item) => {\r\n            let range = this.selecter.getRangeByCursorPos(item);\r\n            let start = null;\r\n            if (range) {\r\n                ranges.push(range);\r\n                return;\r\n            }\r\n            if (prePos && item.line === prePos.line) {\r\n                return;\r\n            }\r\n            if (item.line > 1) {\r\n                start = {\r\n                    line: item.line - 1,\r\n                    column: this.htmls[item.line - 2].text.length,\r\n                };\r\n            } else {\r\n                start = {\r\n                    line: item.line,\r\n                    column: 0,\r\n                };\r\n            }\r\n            range = {\r\n                start: start,\r\n                end: {\r\n                    line: item.line,\r\n                    column: this.htmls[item.line - 1].text.length,\r\n                },\r\n            };\r\n            ranges.push(range);\r\n            prePos = item;\r\n        });\r\n        ranges.forEach((item) => {\r\n            let str = this.getRangeText(item.start, item.end);\r\n            text = str[0] === '\\n' ? (text += str) : (text += '\\n' + str);\r\n        });\r\n        if (cut) {\r\n            this.history.pushHistory(this._deleteMultiContent(ranges));\r\n            this.searcher.clearSearch();\r\n            this.fSearcher.refreshSearch();\r\n        }\r\n        return text.slice(1);\r\n    }\r\n    getAllText() {\r\n        return this.htmls\r\n            .map((item) => {\r\n                return item.text;\r\n            })\r\n            .join('\\n');\r\n    }\r\n}\r\nContext.contexts = {};\r\n\r\nexport default Context;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'nowCursorPos',\r\n            'cursor',\r\n            'selecter',\r\n            'searcher',\r\n            'autocomplete',\r\n            'fSearcher',\r\n            'history',\r\n            'autoTipList',\r\n            'setAutoTip',\r\n            'prevAutoTip',\r\n            'nextAutoTip',\r\n            'selectAutoTip',\r\n            'searchWord',\r\n            'openSearch',\r\n            '$emit',\r\n        ]);\r\n        Util.defineProperties(this, context, [\r\n            'htmls',\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n            'deleteLine'\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        }\r\n    }\r\n    onKeyDown(e) {\r\n        let that = this;\r\n        if (e.ctrlKey && e.shiftKey) {\r\n            e.preventDefault();\r\n            switch (e.keyCode) {\r\n                case 37: //ctrl+shift+left\r\n                    this.selecter.select('left', true);\r\n                    break;\r\n                case 38: //ctrl+shift+up\r\n                    this.moveLineUp();\r\n                    break;\r\n                case 39: //ctrl+shift+right\r\n                    this.selecter.select('right', true);\r\n                    break;\r\n                case 40: //ctrl+shift+down\r\n                    this.moveLineDown();\r\n                    break;\r\n                case 68: //ctrl+shift+D\r\n                    this.copyLineUp();\r\n                    break;\r\n                case 75: //ctrl+shift+K\r\n                    this.deleteLine();\r\n                    break;\r\n                case 76: //ctrl+alt+L\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorLineEnds();\r\n                    break;\r\n            }\r\n            return false;\r\n        } else if (e.ctrlKey && e.altKey) {\r\n            switch (e.keyCode) {\r\n                case 38: //ctrl+alt+up\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorAbove();\r\n                    break;\r\n                case 40: //ctrl+alt+down\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorBelow();\r\n                    break;\r\n            }\r\n        } else if (e.altKey && e.shiftKey) {\r\n            switch (e.keyCode) {\r\n                case 40: //alt+shift+down\r\n                    e.preventDefault();\r\n                    this.copyLineDown();\r\n                    break;\r\n            }\r\n        } else if (e.ctrlKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    _moveCursor('left', true);\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right', true);\r\n                    break;\r\n                case 65: //ctrl+A,全选\r\n                    e.preventDefault();\r\n                    this.selecter.selectAll();\r\n                    break;\r\n                case 68: //ctrl+D，搜素\r\n                    e.preventDefault();\r\n                    this.searchWord('down');\r\n                    break;\r\n                case 70: //ctrl+F，搜素\r\n                    e.preventDefault();\r\n                    this.openSearch();\r\n                    break;\r\n                case 72: //ctrl+H，搜素替换\r\n                    e.preventDefault();\r\n                    this.openSearch(true);\r\n                    break;\r\n                case 83: //ctrl+s 保存\r\n                    this.$emit('save');\r\n                    break;\r\n                case 90: //ctrl+Z，撤销\r\n                case 122:\r\n                    e.preventDefault();\r\n                    this.history.undo();\r\n                    break;\r\n                case 89: //ctrl+Y，重做\r\n                case 121:\r\n                    e.preventDefault();\r\n                    this.history.redo();\r\n                    break;\r\n            }\r\n        } else if (e.shiftKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    this.selecter.select('left');\r\n                    break;\r\n                case 38: //up arrow\r\n                    this.selecter.select('up');\r\n                    break;\r\n                case 39: //right arrow\r\n                    this.selecter.select('right');\r\n                    break;\r\n                case 40: //down arrow\r\n                    this.selecter.select('down');\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (e.keyCode) {\r\n                case 9: //tab键\r\n                    e.preventDefault();\r\n                    this.autocomplete.emmet();\r\n                    break;\r\n                case 37: //left arrow\r\n                    _moveCursor('left');\r\n                    break;\r\n                case 35: //end键\r\n                    _moveCursor('end');\r\n                    break;\r\n                case 36: //home键\r\n                    _moveCursor('home');\r\n                    break;\r\n                case 38: //up arrow\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        that.prevAutoTip();\r\n                    } else {\r\n                        _moveCursor('up');\r\n                    }\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right');\r\n                    break;\r\n                case 40: //down arrow\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        that.nextAutoTip();\r\n                    } else {\r\n                        _moveCursor('down');\r\n                    }\r\n                    break;\r\n                case 13:\r\n                case 100: //enter\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        e.preventDefault();\r\n                        this.selectAutoTip();\r\n                    }\r\n                    break;\r\n                case Util.keyCode.DELETE: //delete\r\n                    this.deleteContent(Util.keyCode.DELETE);\r\n                    this.autocomplete.search();\r\n                    break;\r\n                case Util.keyCode.BACKSPACE: //backspace\r\n                    this.deleteContent(Util.keyCode.BACKSPACE);\r\n                    this.autocomplete.search();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function _moveCursor(direct, wholeWord) {\r\n            //ctrl+d后，第一次移动光标只是取消选中状态\r\n            if (!that.selecter.getRangeByCursorPos(that.nowCursorPos)) {\r\n                that.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                    that.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                });\r\n            }\r\n            that.setAutoTip(null); //取消自动提示\r\n            that.searcher.clearSearch();\r\n            that.fSearcher.clearActive();\r\n        }\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-search\",on:{\"contextmenu\":[function($event){$event.preventDefault();},function($event){$event.stopPropagation();}],\"mousedown\":function($event){$event.stopPropagation();},\"selectstart\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"my-search-left active-click\",staticStyle:{\"border-radius\":\"0\"},attrs:{\"tabindex\":\"-1\"},on:{\"click\":_vm.showReplace}},[_c('span',{staticClass:\"iconfont\",class:{ 'icon-down1': _vm.replaceVisible, 'icon-right': !_vm.replaceVisible },staticStyle:{\"font-size\":\"14px\"},attrs:{\"title\":\"Toggle Replace mode\"}})]),_c('div',{staticStyle:{\"flex-grow\":\"1\"}},[_c('div',{staticClass:\"my-search-top\"},[_c('div',{staticClass:\"my-search-input\",class:{ 'my-active': _vm.input1Focus }},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.text),expression:\"text\"}],ref:\"input1\",style:({ height: _vm.input1Height + 'px' }),attrs:{\"type\":\"text\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.text)},on:{\"blur\":function($event){_vm.input1Focus = false},\"focus\":function($event){_vm.input1Focus = true},\"keydown\":_vm.onKeyDown,\"input\":[function($event){if($event.target.composing){ return; }_vm.text=$event.target.value},_vm.onInput]}}),_c('span',{staticClass:\"my-search-suffix\",class:{ 'my-active': _vm.ignoreCase },attrs:{\"title\":\"Match Case(Alt+C)\"},on:{\"click\":_vm.changeCase}},[_vm._v(\"Aa\")]),_c('span',{staticClass:\"my-search-suffix iconfont icon-whole-word\",class:{ 'my-active': _vm.wholeWord },attrs:{\"title\":\"Match Whole Word(Alt+W)\"},on:{\"click\":_vm.changeWhole}})]),(_vm.count)?_c('div',[_c('span',[_vm._v(_vm._s(_vm.now))]),_c('span',[_vm._v(\" of \")]),_c('span',[_vm._v(_vm._s(_vm.count))])]):_c('span',{staticClass:\"no-result\",class:{ 'my-active': _vm.text }},[_vm._v(\"No results\")])]),(_vm.replaceVisible)?_c('div',{staticClass:\"my-search-bottom\",staticStyle:{\"margin-top\":\"5px\"}},[_c('div',{staticClass:\"my-search-input\",class:{ 'my-active': _vm.input2Focus }},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.replaceText),expression:\"replaceText\"}],ref:\"input2\",style:({ height: _vm.input2Height + 'px' }),attrs:{\"type\":\"text\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.replaceText)},on:{\"blur\":function($event){_vm.input2Focus = false},\"focus\":function($event){_vm.input2Focus = true},\"keydown\":_vm.onKeyDown2,\"input\":function($event){if($event.target.composing){ return; }_vm.replaceText=$event.target.value}}})]),_c('span',{staticClass:\"iconfont icon-replace active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace(Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.replace}}),_c('span',{staticClass:\"iconfont icon-replace-all active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace All(Ctrl+Alt+Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.replaceAll}})]):_vm._e()]),_c('div',{staticClass:\"my-search-right\"},[_c('span',{staticClass:\"iconfont icon-up active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Previous Match(Shift Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.searchPrev,\"focus\":function($event){_vm.preFocus = true},\"blur\":function($event){_vm.preFocus = false}}}),_c('span',{staticClass:\"iconfont icon-down active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Next Match(Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.searchNext,\"focus\":function($event){_vm.nextFocus = true},\"blur\":function($event){_vm.nextFocus = false}}}),_c('span',{staticClass:\"iconfont icon-close active-click\",attrs:{\"title\":\"Close\"},on:{\"click\":_vm.close}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @contextmenu.prevent @contextmenu.stop @mousedown.stop @selectstart.stop class=\"my-search\">\r\n        <div class=\"my-search-left active-click\" style=\"border-radius: 0\" tabindex=\"-1\" @click=\"showReplace\">\r\n            <span :class=\"{ 'icon-down1': replaceVisible, 'icon-right': !replaceVisible }\" class=\"iconfont\" style=\"font-size: 14px\" title=\"Toggle Replace mode\"></span>\r\n        </div>\r\n        <div style=\"flex-grow: 1\">\r\n            <div class=\"my-search-top\">\r\n                <div :class=\"{ 'my-active': input1Focus }\" class=\"my-search-input\">\r\n                    <textarea\r\n                        @blur=\"input1Focus = false\"\r\n                        @focus=\"input1Focus = true\"\r\n                        @keydown=\"onKeyDown\"\r\n                        @input=\"onInput\"\r\n                        ref=\"input1\"\r\n                        :style=\"{ height: input1Height + 'px' }\"\r\n                        type=\"text\"\r\n                        spellcheck=\"false\"\r\n                        v-model=\"text\"\r\n                    ></textarea>\r\n                    <span :class=\"{ 'my-active': ignoreCase }\" @click=\"changeCase\" class=\"my-search-suffix\" title=\"Match Case(Alt+C)\">Aa</span>\r\n                    <span :class=\"{ 'my-active': wholeWord }\" @click=\"changeWhole\" class=\"my-search-suffix iconfont icon-whole-word\" title=\"Match Whole Word(Alt+W)\"></span>\r\n                </div>\r\n                <div v-if=\"count\">\r\n                    <span>{{ now }}</span>\r\n                    <span>&nbsp;of&nbsp;</span>\r\n                    <span>{{ count }}</span>\r\n                </div>\r\n                <span class=\"no-result\" :class=\"{ 'my-active': text }\" v-else>No results</span>\r\n            </div>\r\n            <div class=\"my-search-bottom\" style=\"margin-top: 5px\" v-if=\"replaceVisible\">\r\n                <div :class=\"{ 'my-active': input2Focus }\" class=\"my-search-input\">\r\n                    <textarea\r\n                        @blur=\"input2Focus = false\"\r\n                        @focus=\"input2Focus = true\"\r\n                        @keydown=\"onKeyDown2\"\r\n                        ref=\"input2\"\r\n                        :style=\"{ height: input2Height + 'px' }\"\r\n                        type=\"text\"\r\n                        v-model=\"replaceText\"\r\n                        spellcheck=\"false\"\r\n                    ></textarea>\r\n                </div>\r\n                <span\r\n                    :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                    @click=\"replace\"\r\n                    class=\"iconfont icon-replace active-click\"\r\n                    style=\"margin-right: 5px\"\r\n                    title=\"Replace(Enter)\"\r\n                    tabindex=\"-1\"\r\n                ></span>\r\n                <span\r\n                    :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                    @click=\"replaceAll\"\r\n                    class=\"iconfont icon-replace-all active-click\"\r\n                    style=\"margin-right: 5px\"\r\n                    title=\"Replace All(Ctrl+Alt+Enter)\"\r\n                    tabindex=\"-1\"\r\n                ></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"my-search-right\">\r\n            <span\r\n                :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                @click=\"searchPrev\"\r\n                @focus=\"preFocus = true\"\r\n                @blur=\"preFocus = false\"\r\n                class=\"iconfont icon-up active-click\"\r\n                style=\"margin-right: 5px\"\r\n                title=\"Previous Match(Shift Enter)\"\r\n                tabindex=\"-1\"\r\n            ></span>\r\n            <span\r\n                :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                @click=\"searchNext\"\r\n                @focus=\"nextFocus = true\"\r\n                @blur=\"nextFocus = false\"\r\n                class=\"iconfont icon-down active-click\"\r\n                style=\"margin-right: 5px\"\r\n                title=\"Next Match(Enter)\"\r\n                tabindex=\"-1\"\r\n            ></span>\r\n            <span @click=\"close\" class=\"iconfont icon-close active-click\" title=\"Close\"></span>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: 'Search',\r\n    props: {\r\n        now: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n        count: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            text: '',\r\n            replaceText: '',\r\n            replaceVisible: false,\r\n            wholeWord: false,\r\n            ignoreCase: false,\r\n            searchPrevActive: false,\r\n            searchNextActive: false,\r\n            input1Focus: false,\r\n            input2Focus: false,\r\n            preFocus: false,\r\n            nextFocus: false,\r\n            input1Height: 30,\r\n            input2Height: 30,\r\n        };\r\n    },\r\n    watch: {\r\n        text() {\r\n            let lines = this.text.split(/\\n/);\r\n            this.input1Height = lines.length * 20 + 10;\r\n        },\r\n        replaceText() {\r\n            let lines = this.replaceText.split(/\\n/);\r\n            this.input2Height = lines.length * 20 + 10;\r\n        },\r\n    },\r\n    created() {\r\n        $(document).on('keydown', (e) => {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                if (this.preFocus) {\r\n                    this.searchPrev();\r\n                } else if (this.nextFocus) {\r\n                    this.searchNext();\r\n                }\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        initData(obj) {\r\n            for (let key in obj) {\r\n                this[key] = obj[key];\r\n            }\r\n        },\r\n        getData() {\r\n            return {\r\n                text: this.text,\r\n                wholeWord: this.wholeWord,\r\n                ignoreCase: this.ignoreCase,\r\n            };\r\n        },\r\n        search() {\r\n            let searchId = this.search.id || 1;\r\n            this.search.id = searchId;\r\n            this.$nextTick(() => {\r\n                if (this.search.id !== searchId) {\r\n                    return;\r\n                }\r\n                this.$emit('search', {\r\n                    text: this.text,\r\n                    ignoreCase: this.ignoreCase,\r\n                    wholeWord: this.wholeWord,\r\n                });\r\n            });\r\n        },\r\n        changeCase() {\r\n            this.ignoreCase = !this.ignoreCase;\r\n            this.focus();\r\n            this.onInput();\r\n        },\r\n        changeWhole() {\r\n            this.wholeWord = !this.wholeWord;\r\n            this.focus();\r\n            this.onInput();\r\n        },\r\n        showReplace() {\r\n            this.replaceVisible = !this.replaceVisible;\r\n        },\r\n        searchNext() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('next');\r\n        },\r\n        searchPrev() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('prev');\r\n        },\r\n        replace() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replace', { text: this.replaceText });\r\n        },\r\n        replaceAll() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replaceAll', { text: this.replaceText });\r\n        },\r\n        close() {\r\n            this.$emit('close');\r\n        },\r\n        focus() {\r\n            this.$refs.input1.focus();\r\n            requestAnimationFrame(() => {\r\n                this.$refs.input1.focus();\r\n            });\r\n        },\r\n        directBlur() {\r\n            this.searchPrevActive = false;\r\n            this.searchNextActive = false;\r\n        },\r\n        onKeyDown(e) {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                e.preventDefault();\r\n                this.$emit('next');\r\n            }\r\n        },\r\n        onKeyDown2(e) {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                e.preventDefault();\r\n                if (this.count) {\r\n                    if (e.ctrlKey && e.altKey) {\r\n                        this.replaceAll();\r\n                    } else {\r\n                        this.replace();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onInput() {\r\n            clearTimeout(this.searchTimer);\r\n            this.searchTimer = setTimeout(() => {\r\n                this.search();\r\n            }, 100);\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=097d468a&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"auto\",staticClass:\"my-auto my-shadow my-border my-scroll-overlay my-scroll-mini\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();},\"wheel\":function($event){$event.stopPropagation();}}},[_c('div',_vm._l((_vm.tipList),function(item){return _c('div',{staticClass:\"my-auto-item my-center-between\",class:{'my-active': item.active},on:{\"mousedown\":function($event){return _vm.onClick(item)}}},[_c('div',{staticClass:\"my-center-between\"},[_c('div',{staticClass:\"my-auto-icon my-center-center iconfont\",class:[item.icon]}),_c('div',{staticClass:\"my-auto-content\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm._html(item))}})])]),_c('div',{staticClass:\"my-auto-desc\"},[_vm._v(_vm._s(item.desc))])])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop @wheel.stop class=\"my-auto my-shadow my-border my-scroll-overlay my-scroll-mini\" ref=\"auto\">\r\n\t\t<div>\r\n\t\t\t<div :class=\"{'my-active': item.active}\" @mousedown=\"onClick(item)\" class=\"my-auto-item my-center-between\" v-for=\"item in tipList\">\r\n\t\t\t\t<div class=\"my-center-between\">\r\n\t\t\t\t\t<div :class=\"[item.icon]\" class=\"my-auto-icon my-center-center iconfont\"></div>\r\n\t\t\t\t\t<div class=\"my-auto-content\">\r\n\t\t\t\t\t\t<span v-html=\"_html(item)\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"my-auto-desc\">{{item.desc}}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'AutoTip',\r\n    props: {\r\n        tipList: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n        styles: {\r\n            type: Object\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            nowIndex: 0,\r\n            itemHeight: 25\r\n        }\r\n    },\r\n    computed: {\r\n        _html() {\r\n            return (item) => {\r\n                let index = 0;\r\n                let html = '';\r\n                item.indexs.forEach((_index) => {\r\n                    html += item.result.slice(index, _index);\r\n                    html += `<span class=\"match-char\">${item.result[_index]}</span>`;\r\n                    index = _index + 1;\r\n                });\r\n                return html + item.result.slice(index);\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        nowIndex() {\r\n            let $auto = this.$refs.auto;\r\n            let height = (this.nowIndex + 1) * this.itemHeight;\r\n            if ($auto && height > $auto.clientHeight + $auto.scrollTop) {\r\n                $auto.scrollTop = height - $auto.clientHeight;\r\n            } else if ($auto && height < $auto.scrollTop + this.itemHeight) {\r\n                $auto.scrollTop = height - this.itemHeight;\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        onClick(item) {\r\n            this.$emit('change', item);\r\n        },\r\n        prev() {\r\n            let index = this.getActiveIndex();\r\n            this.tipList[index].active = false;\r\n            index = index - 1;\r\n            index = index < 0 ? this.tipList.length - 1 : index;\r\n            this.tipList[index].active = true;\r\n            this.nowIndex = index;\r\n        },\r\n        next() {\r\n            let index = this.getActiveIndex();\r\n            this.tipList[index].active = false;\r\n            index = index + 1;\r\n            index = index > this.tipList.length - 1 ? 0 : index;\r\n            this.tipList[index].active = true;\r\n            this.nowIndex = index;\r\n        },\r\n        getActiveIndex() {\r\n            for (let i = 0; i < this.tipList.length; i++) {\r\n                if (this.tipList[i].active) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.icon-function {\r\n    color: #a6e22e;\r\n}\r\n.icon-class {\r\n    color: gold;\r\n}\r\n.icon-property {\r\n    color: lightskyblue;\r\n}\r\n.icon-value {\r\n    color: lightblue;\r\n}\r\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./AutoTip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./AutoTip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AutoTip.vue?vue&type=template&id=378f7506&scoped=true&\"\nimport script from \"./AutoTip.vue?vue&type=script&lang=js&\"\nexport * from \"./AutoTip.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AutoTip.vue?vue&type=style&index=0&id=378f7506&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"378f7506\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-tip\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"my-tip-content\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-tip\">\r\n\t\t<div class=\"my-tip-content\">\r\n\t\t\t<div v-html=\"content\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Tip',\r\n    props: {\r\n        content: String,\r\n        styles: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tip.vue?vue&type=template&id=3edf792c&\"\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div @contextmenu.prevent.stop=\"onContextmenu\" @selectstart.prevent @wheel.prevent=\"onWheel\" class=\"my-editor-wrap\" ref=\"editor\">\r\n        <!-- 行号 -->\r\n        <div :style=\"{ top: _numTop }\" class=\"my-nums\" v-if=\"active\">\r\n            <!-- 占位行号，避免行号宽度滚动时变化 -->\r\n            <div class=\"my-num\" style=\"visibility: hidden\">{{ maxLine }}</div>\r\n            <div :class=\"{ 'my-active': nowCursorPos.line === line.num }\" :key=\"line.num\" :style=\"{ height: _lineHeight, 'line-height': _lineHeight }\" class=\"my-num\" v-for=\"line in renderHtmls\">\r\n                <span class=\"num\">{{ line.num }}</span>\r\n                <!-- 折叠图标 -->\r\n                <span\r\n                    :class=\"['iconfont', line.fold == 'open' ? 'my-fold-open icon-down1' : 'my-fold-close icon-right']\"\r\n                    @click=\"onToggleFold(line.num)\"\r\n                    class=\"my-fold my-center-center\"\r\n                    v-if=\"line.fold\"\r\n                ></span>\r\n            </div>\r\n        </div>\r\n        <div :style=\"{ 'box-shadow': _leftShadow }\" class=\"my-content-wrap\">\r\n            <!-- 可滚动区域 -->\r\n            <div @scroll=\"onScroll\" class=\"my-scroller my-scroll-overlay\" ref=\"scroller\">\r\n                <!-- 内如区域 -->\r\n                <div\r\n                    :style=\"{ minWidth: _contentMinWidth, height: contentHeight }\"\r\n                    @mousedown=\"onContentMdown\"\r\n                    @mousemove=\"onContentMmove\"\r\n                    @mouseleave=\"onContentMLeave\"\r\n                    @selectend.prevent=\"onSelectend\"\r\n                    class=\"my-content\"\r\n                    ref=\"content\"\r\n                >\r\n                    <div :style=\"{ top: _top }\" class=\"my-render\" ref=\"render\" v-if=\"active\">\r\n                        <div\r\n                            :class=\"{ 'my-active': _activeLine(line.num) }\"\r\n                            :data-line=\"line.num\"\r\n                            :id=\"'line_' + line.num\"\r\n                            :key=\"line.num\"\r\n                            :style=\"{ height: _lineHeight, 'line-height': _lineHeight }\"\r\n                            class=\"my-line\"\r\n                            v-for=\"line in renderHtmls\"\r\n                        >\r\n                            <!-- my-select-bg为选中状态 -->\r\n                            <div\r\n                                :class=\"[\r\n                                    line.active ? 'my-active' : '',\r\n                                    line.selected ? (line.isFsearch ? 'my-search-bg' : 'my-select-bg') : '',\r\n                                    line.selected && selectedFg ? 'my-select-fg' : '',\r\n                                    line.fold == 'close' ? 'fold-close' : '',\r\n                                ]\"\r\n                                :data-line=\"line.num\"\r\n                                class=\"my-code\"\r\n                                v-html=\"line.html\"\r\n                            ></div>\r\n                            <!-- 当前光标所处范围-begin -->\r\n                            <div\r\n                                class=\"my-bracket-match\"\r\n                                :style=\"{ left: bracketMatch.start.left + 'px', width: bracketMatch.start.width + 'px' }\"\r\n                                v-if=\"bracketMatch && line.num == bracketMatch.start.line\"\r\n                            ></div>\r\n                            <!-- 当前光标所处范围-end -->\r\n                            <div\r\n                                class=\"my-bracket-match\"\r\n                                :style=\"{ left: bracketMatch.end.left + 'px', width: bracketMatch.end.width + 'px' }\"\r\n                                v-if=\"bracketMatch && line.num == bracketMatch.end.line\"\r\n                            ></div>\r\n                            <!-- 选中时的首行背景 -->\r\n                            <div\r\n                                :class=\"{ 'my-active': range.active, 'my-search-bg': range.isFsearch }\"\r\n                                :style=\"{ left: range.left + 'px', width: range.width + 'px' }\"\r\n                                class=\"my-line-bg my-select-bg\"\r\n                                v-for=\"range in line.selectStarts\"\r\n                            ></div>\r\n                            <!-- 选中时的末行背景 -->\r\n                            <div\r\n                                :class=\"{ 'my-active': range.active, 'my-search-bg': range.isFsearch }\"\r\n                                :style=\"{ left: range.left + 'px', width: range.width + 'px' }\"\r\n                                class=\"my-line-bg my-select-bg\"\r\n                                v-for=\"range in line.selectEnds\"\r\n                            ></div>\r\n                            <span :style=\"{ left: _tabLineLeft(tab) }\" class=\"my-tab-line\" v-for=\"tab in line.tabNum\"></span>\r\n                            <!-- 模拟光标 -->\r\n                            <div :style=\"{ height: _lineHeight, left: left, visibility: _cursorVisible }\" class=\"my-cursor\" style=\"top: 0px\" v-for=\"left in line.cursorList\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 输入框 -->\r\n                    <textarea\r\n                        :style=\"{ top: _textAreaPos.top, left: _textAreaPos.left }\"\r\n                        @blur=\"onBlur\"\r\n                        @compositionend=\"onCompositionend\"\r\n                        @compositionstart=\"onCompositionstart\"\r\n                        @copy.prevent=\"onCopy\"\r\n                        @cut.prevent=\"onCut\"\r\n                        @focus=\"onFocus\"\r\n                        @input=\"onInput\"\r\n                        @keydown=\"onKeyDown\"\r\n                        @paste.prevent=\"onPaste\"\r\n                        class=\"my-textarea\"\r\n                        ref=\"textarea\"\r\n                    ></textarea>\r\n                    <auto-tip :styles=\"autoTipStyle\" :tipList=\"autoTipList\" @change=\"onClickAuto\" ref=\"autoTip\" v-show=\"autoTipList && autoTipList.length\"></auto-tip>\r\n                </div>\r\n            </div>\r\n            <!-- 搜索框 -->\r\n            <search-dialog\r\n                :count=\"searchCount\"\r\n                :now=\"searchNow\"\r\n                @close=\"onCloseSearch\"\r\n                @next=\"onSearchNext()\"\r\n                @prev=\"onSearchPrev()\"\r\n                @replace=\"replace\"\r\n                @replaceAll=\"replaceAll\"\r\n                @search=\"onSearch\"\r\n                ref=\"searchDialog\"\r\n                v-show=\"searchVisible\"\r\n            ></search-dialog>\r\n        </div>\r\n        <!-- 右键菜单 -->\r\n        <Menu :checkable=\"false\" :menuList=\"menuList\" :styles=\"menuStyle\" @change=\"onClickMenu\" ref=\"menu\" v-show=\"menuVisible\"></Menu>\r\n        <tip :content=\"tipContent\" :styles=\"tipStyle\" ref=\"tip\" v-show=\"tipContent\"></tip>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Tokenizer from '@/module/tokenizer/index';\r\nimport Lint from '@/module/lint/index';\r\nimport Autocomplete from '@/module/autocomplete/index';\r\nimport Fold from '@/module/fold/index';\r\nimport Search from '@/module/search/index';\r\nimport Select from '@/module/select/index';\r\nimport Cursor from '@/module/cursor/index';\r\nimport History from '@/module/history/index';\r\nimport Context from '@/module/context/index';\r\nimport ShortCut from '@/module/shortcut/editor';\r\nimport SearchDialog from './Search';\r\nimport Menu from './Menu';\r\nimport AutoTip from './AutoTip';\r\nimport Tip from './Tip';\r\nimport Util from '@/common/util';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst contexts = Context.contexts;\r\n\r\nexport default {\r\n    name: 'Editor',\r\n    components: {\r\n        SearchDialog,\r\n        Menu,\r\n        AutoTip,\r\n        Tip,\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n        },\r\n        active: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            charObj: {\r\n                charWidth: 7.15,\r\n                fullAngleCharWidth: 15,\r\n                charHight: 19,\r\n            },\r\n            nowCursorPos: {\r\n                line: 1,\r\n                column: 0,\r\n            },\r\n            cursorVisible: true,\r\n            cursorFocus: true,\r\n            language: '',\r\n            theme: '',\r\n            tabSize: 4,\r\n            renderHtmls: [],\r\n            startLine: 1,\r\n            top: 0,\r\n            cursorLeft: 0,\r\n            scrollLeft: 0,\r\n            scrollTop: 0,\r\n            maxVisibleLines: 1,\r\n            maxLine: 1,\r\n            contentHeight: '100%',\r\n            scrollerArea: {},\r\n            bracketMatch: {\r\n                start: {},\r\n                end: {},\r\n            },\r\n            maxWidthObj: {\r\n                lineId: null,\r\n                text: '',\r\n                width: 0,\r\n            },\r\n            menuList: [\r\n                [\r\n                    {\r\n                        name: 'Cut',\r\n                        op: 'cut',\r\n                        shortcut: 'Ctrl+X',\r\n                    },\r\n                    {\r\n                        name: 'Copy',\r\n                        op: 'copy',\r\n                        shortcut: 'Ctrl+C',\r\n                    },\r\n                    {\r\n                        name: 'Paste',\r\n                        op: 'paste',\r\n                        shortcut: 'Ctrl+V',\r\n                    },\r\n                ],\r\n            ],\r\n            menuStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n                'min-width': '200px',\r\n            },\r\n            tipStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n            },\r\n            autoTipStyle: {\r\n                top: '50%',\r\n                left: '50%',\r\n            },\r\n            errorMap: {},\r\n            errors: [],\r\n            autoTipList: [],\r\n            tipContent: null,\r\n            menuVisible: false,\r\n            searchVisible: false,\r\n            selectedFg: false,\r\n            activeLineBg: true,\r\n            searchNow: 1,\r\n            searchCount: 0,\r\n        };\r\n    },\r\n    computed: {\r\n        _numTop() {\r\n            return this.top - this.charObj.charHight + 'px';\r\n        },\r\n        _leftShadow() {\r\n            return this.scrollLeft ? '17px 0 16px -16px rgba(0, 0, 0, 0.8) inset' : 'none';\r\n        },\r\n        _top() {\r\n            return (this.folder.getRelativeLine(this.startLine) - 1) * this.charObj.charHight + 'px';\r\n        },\r\n        _lineHeight() {\r\n            return this.charObj.charHight + 'px';\r\n        },\r\n        _cursorVisible() {\r\n            return this.cursorVisible && this.cursorFocus ? 'visible' : 'hidden';\r\n        },\r\n        _hScrollWidth() {\r\n            return this._contentMinWidth;\r\n        },\r\n        _contentMinWidth() {\r\n            let width = 0;\r\n            if (this.$refs.content) {\r\n                width = Util.getStrExactWidth(this.maxWidthObj.text, this.tabSize, this.$refs.content);\r\n                width += this.charObj.fullAngleCharWidth;\r\n            }\r\n            width = this.scrollerArea.width > width ? this.scrollerArea.width : width;\r\n            return width + 'px';\r\n        },\r\n        _textAreaPos() {\r\n            let left = this.cursorLeft;\r\n            let top = this.top;\r\n            if (this.nowCursorPos) {\r\n                let line = this.nowCursorPos.line < this.startLine ? this.startLine : this.nowCursorPos.line;\r\n                top = this.folder.getRelativeLine(line) * this.charObj.charHight;\r\n                if (top > this.scrollTop + this.scrollerArea.height - 2 * this.charObj.charHight) {\r\n                    top = this.scrollTop + this.scrollerArea.height - 2 * this.charObj.charHight;\r\n                }\r\n            }\r\n            return {\r\n                top: top + 'px',\r\n                left: left + 'px',\r\n            };\r\n        },\r\n        _tabLineLeft() {\r\n            return (tab) => {\r\n                return (tab - 1) * this.tabSize * this.charObj.charWidth + 'px';\r\n            };\r\n        },\r\n        _activeLine() {\r\n            return (num) => {\r\n                return this.nowCursorPos.line == num && this.activeLineBg;\r\n            };\r\n        },\r\n        space() {\r\n            return Util.space(this.tabSize);\r\n        },\r\n        myContext() {\r\n            return contexts[this.id];\r\n        },\r\n    },\r\n    watch: {\r\n        language: function (newVal) {\r\n            this.myContext.htmls.forEach((lineObj) => {\r\n                lineObj.tokens = null;\r\n                lineObj.folds = null;\r\n                lineObj.stateFold = null;\r\n                lineObj.states = null;\r\n                lineObj.html = '';\r\n            });\r\n            this.lint.initLanguage(newVal);\r\n            this.tokenizer.initLanguage(newVal);\r\n        },\r\n        theme: function () {\r\n            this.myContext.htmls.forEach((lineObj) => {\r\n                lineObj.html = '';\r\n            });\r\n            this.render();\r\n        },\r\n        tabSize: function (newVal) {\r\n            this.render();\r\n            this.maxWidthObj = { lineId: null, text: '', width: 0 };\r\n            this.myContext.setLineWidth(this.myContext.htmls);\r\n        },\r\n        maxLine: function (newVal) {\r\n            this.setContentHeight();\r\n        },\r\n        startLine: function (newVal) {\r\n            this.render();\r\n            this.tokenizer.tokenizeVisibleLins();\r\n        },\r\n        nowCursorPos: {\r\n            handler: function (newVal) {\r\n                EventBus.$emit('cursor-change', {\r\n                    line: newVal ? newVal.line : '?',\r\n                    column: newVal ? newVal.column : '?',\r\n                });\r\n                this.renderBracketMatch();\r\n            },\r\n            deep: true,\r\n        },\r\n        active: function (newVal) {\r\n            if (newVal) {\r\n                this.showEditor();\r\n            } else {\r\n                this.autocomplete.stop();\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.initData();\r\n        this.initEventBus();\r\n        this.initEvent();\r\n    },\r\n    mounted() {\r\n        this.selectedFg = !!globalData.colors['editor.selectionForeground'];\r\n        this.showEditor();\r\n        this.initResizeEvent();\r\n    },\r\n    destroyed() {\r\n        this.unbindEvent();\r\n    },\r\n    methods: {\r\n        // 初始化数据\r\n        initData() {\r\n            this.editorId = this.id;\r\n            contexts[this.editorId] = new Context(this);\r\n            this.maxWidthObj.lineId = this.myContext.htmls[0].lineId;\r\n            this.tokenizer = new Tokenizer(this, this.myContext);\r\n            this.lint = new Lint(this, this.myContext);\r\n            this.autocomplete = new Autocomplete(this, this.myContext);\r\n            this.folder = new Fold(this, this.myContext);\r\n            this.history = new History(this, this.myContext);\r\n            this.selecter = new Select(this, this.myContext);\r\n            this.searcher = new Search(this, this.myContext, this.selecter);\r\n            this.fSelecter = new Select(this, this.myContext);\r\n            this.fSearcher = new Search(this, this.myContext, this.fSelecter);\r\n            this.shortcut = new ShortCut(this, this.myContext);\r\n            this.cursor = new Cursor(this, this.myContext);\r\n            this.cursor.addCursorPos(this.nowCursorPos);\r\n            this.wordPattern = Util.getWordPattern(this.language);\r\n            this.wordPattern = new RegExp(`^(${this.wordPattern.source})`);\r\n        },\r\n        // 初始化文档事件\r\n        initEvent() {\r\n            this.initEvent.fn1 = (e) => {\r\n                this.active && this.onDocumentMmove(e);\r\n            };\r\n            this.initEvent.fn2 = (e) => {\r\n                this.active && this.onDocumentMouseUp(e);\r\n            };\r\n            $(document).on('mousemove', this.initEvent.fn1);\r\n            $(document).on('mouseup', this.initEvent.fn2);\r\n        },\r\n        initResizeEvent() {\r\n            const resizeObserver = new ResizeObserver((entries) => {\r\n                if (this.$refs.editor) {\r\n                    this.showEditor();\r\n                }\r\n            });\r\n            resizeObserver.observe(this.$refs.editor);\r\n        },\r\n        initEventBus() {\r\n            EventBus.$on(\r\n                'language-change',\r\n                (this.initEventBus.fn1 = (language) => {\r\n                    if (this.active) {\r\n                        this.language = language;\r\n                    }\r\n                    this._language = language;\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'tab-size-change',\r\n                (this.initEventBus.fn2 = (tabSize) => {\r\n                    if (this.active) {\r\n                        this.tabSize = tabSize;\r\n                    }\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'close-menu',\r\n                (this.initEventBus.fn3 = () => {\r\n                    this.menuVisible = false;\r\n                    this.autoTipList = null;\r\n                    this.autocomplete.stop();\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'theme-change',\r\n                (this.initEventBus.fn4 = (theme) => {\r\n                    this.selectedFg = !!globalData.colors['editor.selectionForeground'];\r\n                    if (this.active) {\r\n                        this.theme = theme;\r\n                    }\r\n                    this._theme = theme;\r\n                })\r\n            );\r\n        },\r\n        unbindEvent() {\r\n            $(document).unbind('mousemove', this.initEvent.fn1);\r\n            $(document).unbind('mouseup', this.initEvent.fn2);\r\n            EventBus.$off('language-change', this.initEventBus.fn1);\r\n            EventBus.$off('tab-size-change', this.initEventBus.fn2);\r\n            EventBus.$off('close-menu', this.initEventBus.fn3);\r\n            EventBus.$off('theme-change', this.initEventBus.fn4);\r\n        },\r\n        showEditor() {\r\n            if (this.active) {\r\n                this.$nextTick(() => {\r\n                    this.language = this._language || '';\r\n                    this.theme = this._theme || '';\r\n                    this.charObj = Util.getCharWidth(this.$refs.content);\r\n                    this.maxVisibleLines = Math.ceil(this.$refs.scroller.clientHeight / this.charObj.charHight) + 1;\r\n                    this.render();\r\n                    this.focus();\r\n                });\r\n            }\r\n        },\r\n        // 显示光标\r\n        showCursor() {\r\n            this.cursorFocus = true;\r\n            if (!this.cursor.multiCursorPos.size) {\r\n                this.showCursor.show = false;\r\n                return;\r\n            }\r\n            if (this.showCursor.show) {\r\n                return;\r\n            }\r\n            this.showCursor.show = true;\r\n            this.cursorVisible = true;\r\n            let _timer = () => {\r\n                clearTimeout(this.curserTimer);\r\n                this.curserTimer = setTimeout(() => {\r\n                    this.cursorVisible = !this.cursorVisible;\r\n                    _timer();\r\n                }, 500);\r\n            };\r\n            _timer();\r\n        },\r\n        // 隐藏光标\r\n        hideCursor() {\r\n            clearTimeout(this.curserTimer);\r\n            this.showCursor.show = false;\r\n            this.cursorFocus = false;\r\n        },\r\n        // 聚焦\r\n        focus() {\r\n            this.$refs.textarea.focus();\r\n            requestAnimationFrame(() => {\r\n                this.$refs.textarea.focus();\r\n            });\r\n        },\r\n        // 渲染\r\n        render(forceCursorView) {\r\n            let renderId = this.renderId + 1 || 1;\r\n            this.renderId = renderId;\r\n            this.$nextTick(() => {\r\n                if (this.renderId !== renderId) {\r\n                    return;\r\n                }\r\n                this.renderLine();\r\n                this.renderSelectedBg();\r\n                this.renderSelectionToken();\r\n                this.renderError();\r\n                this.renderCursor(forceCursorView);\r\n                this.$nextTick(() => {\r\n                    this.scrollerArea = {\r\n                        height: this.$refs.scroller.clientHeight,\r\n                        width: this.$refs.scroller.clientWidth,\r\n                    };\r\n                });\r\n            });\r\n        },\r\n        // 渲染代码\r\n        renderLine(lineId) {\r\n            let that = this;\r\n            // 只更新一行\r\n            if (lineId) {\r\n                if (this.myContext.renderedIdMap.has(lineId)) {\r\n                    let item = this.myContext.lineIdMap.get(lineId);\r\n                    let obj = this.myContext.renderedIdMap.get(lineId);\r\n                    // 高亮完成渲染某一行时，render可能还没完成，导致num没更新，此时跳过\r\n                    if (this.myContext.htmls[obj.num - 1] && this.myContext.htmls[obj.num - 1].lineId === lineId) {\r\n                        Object.assign(obj, _getObj(item, obj.num));\r\n                        this.renderCursor();\r\n                        this.renderSelectedBg();\r\n                        this.renderSelectionToken(obj.line);\r\n                        this.renderError(obj.line);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            this.myContext.renderedIdMap.clear();\r\n            this.myContext.renderedLineMap.clear();\r\n            this.renderHtmls = [];\r\n            for (let i = 0, startLine = this.startLine; i < this.maxVisibleLines && startLine <= this.myContext.htmls.length; i++) {\r\n                let lineObj = this.myContext.htmls[startLine - 1];\r\n                let lineId = lineObj.lineId;\r\n                let obj = _getObj(lineObj, startLine);\r\n                let fold = this.folder.getFoldByLine(startLine);\r\n                this.renderHtmls.push(obj);\r\n                this.myContext.renderedIdMap.set(lineId, obj);\r\n                this.myContext.renderedLineMap.set(startLine, obj);\r\n                if (fold) {\r\n                    startLine = fold.end.line;\r\n                } else {\r\n                    startLine++;\r\n                }\r\n            }\r\n\r\n            function _getObj(item, line) {\r\n                let tabNum = _getTabNum(line);\r\n                let fold = '';\r\n                if (that.folder.getFoldByLine(line)) {\r\n                    //该行已经折叠\r\n                    fold = 'close';\r\n                } else if (that.folder.getRangeFold(line, true)) {\r\n                    //可折叠\r\n                    fold = 'open';\r\n                }\r\n                let html = item.html;\r\n                if (!html) {\r\n                    if (item.tokens && item.tokens.length) {\r\n                        item.tokens = that.tokenizer.splitLongToken(item.tokens);\r\n                        item.html = that.tokenizer.createHtml(item.tokens, item.text);\r\n                        html = item.html;\r\n                    } else {\r\n                        html = Util.htmlTrans(item.text);\r\n                    }\r\n                }\r\n                html = html.replace(/\\t/g, that.space);\r\n                return {\r\n                    html: html,\r\n                    num: line,\r\n                    tabNum: tabNum,\r\n                    selectStarts: [],\r\n                    selectEnds: [],\r\n                    selected: false,\r\n                    isFsearch: false,\r\n                    fold: fold,\r\n                    cursorList: [],\r\n                };\r\n            }\r\n\r\n            function _getTabNum(line) {\r\n                let text = that.myContext.htmls[line - 1].text;\r\n                let wReg = /[^\\s]/;\r\n                let tabNum = 0;\r\n                if (that.myContext.renderedLineMap.has(line)) {\r\n                    return that.myContext.renderedLineMap.get(line).tabNum;\r\n                }\r\n                if (wReg.exec(text)) {\r\n                    //该行有内容\r\n                    let spaceNum = /^\\s+/.exec(text);\r\n                    if (spaceNum) {\r\n                        tabNum = /\\t+/.exec(spaceNum[0]);\r\n                        tabNum = (tabNum && tabNum[0].length) || 0;\r\n                        tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / that.tabSize);\r\n                    }\r\n                } else {\r\n                    //空行\r\n                    let _line = line - 1;\r\n                    while (_line >= 1) {\r\n                        if (wReg.exec(that.myContext.htmls[_line - 1].text)) {\r\n                            tabNum = _getTabNum(_line);\r\n                            if (that.folder.getRangeFold(_line, true)) {\r\n                                tabNum++;\r\n                            }\r\n                            break;\r\n                        }\r\n                        _line--;\r\n                    }\r\n                }\r\n                return tabNum;\r\n            }\r\n        },\r\n        renderSelectedBg() {\r\n            let renderSelectedBgId = this.renderSelectedBgId + 1 || 1;\r\n            this.renderSelectedBgId = renderSelectedBgId;\r\n            this.activeLineBg = true;\r\n            this.$nextTick(() => {\r\n                if (this.renderSelectedBgId != renderSelectedBgId) {\r\n                    return;\r\n                }\r\n                if (!this.renderHtmls.length) {\r\n                    //删除内容后，窗口还没滚动到可视区域\r\n                    requestAnimationFrame(() => {\r\n                        this.renderSelectedBg();\r\n                    });\r\n                    return;\r\n                }\r\n                this.clearSelectionToken();\r\n                this.renderHtmls.forEach((item) => {\r\n                    item.selected = false;\r\n                    item.selectStarts = [];\r\n                    item.selectEnds = [];\r\n                });\r\n                this.fSelecter.ranges.forEach((range) => {\r\n                    this._renderSelectedBg(range, true);\r\n                });\r\n                this.selecter.ranges.forEach((range) => {\r\n                    let _range = this.fSelecter.getRangeByCursorPos(range.start);\r\n                    if (this.searchVisible) {\r\n                        // 优先渲染搜索框的选中范围\r\n                        if (!_range && range.active) {\r\n                            this._renderSelectedBg(range);\r\n                        }\r\n                    } else {\r\n                        this._renderSelectedBg(range);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        // 渲染选中背景\r\n        _renderSelectedBg(range, isFsearch) {\r\n            let firstLine = this.renderHtmls[0].num;\r\n            let lastLine = this.renderHtmls.peek().num;\r\n            let start = range.start;\r\n            let end = range.end;\r\n            let text = this.myContext.htmls[start.line - 1].text;\r\n            let endColumn = text.length;\r\n            start.left = this.getStrWidth(text, 0, start.column);\r\n            if (start.line == end.line) {\r\n                start.width = this.getStrWidth(text, start.column, end.column) || 10;\r\n            } else {\r\n                start.width = this.getStrWidth(text, start.column) || 10;\r\n                end.left = 0;\r\n                text = this.myContext.htmls[end.line - 1].text;\r\n                end.width = this.getStrWidth(text, 0, end.column) || 10;\r\n            }\r\n            firstLine = firstLine > start.line + 1 ? firstLine : start.line + 1;\r\n            lastLine = lastLine < end.line - 1 ? lastLine : end.line - 1;\r\n            for (let line = firstLine; line <= lastLine; line++) {\r\n                if (this.myContext.renderedLineMap.has(line)) {\r\n                    let lineObj = this.myContext.renderedLineMap.get(line);\r\n                    lineObj.selected = true;\r\n                    lineObj.isFsearch = isFsearch;\r\n                    lineObj.active = range.active;\r\n                }\r\n            }\r\n            if (this.myContext.renderedLineMap.has(start.line)) {\r\n                this.myContext.renderedLineMap.get(start.line).selectStarts.push({\r\n                    left: start.left,\r\n                    width: start.width,\r\n                    active: range.active,\r\n                    isFsearch: isFsearch,\r\n                });\r\n                if (end.line == start.line) {\r\n                    endColumn = end.column;\r\n                }\r\n                range.active && this._renderSelectionToken(start.line, start.column, endColumn);\r\n            }\r\n            if (end.line > start.line && this.myContext.renderedLineMap.has(end.line)) {\r\n                this.myContext.renderedLineMap.get(end.line).selectEnds.push({\r\n                    left: end.left,\r\n                    width: end.width,\r\n                    active: range.active,\r\n                    isFsearch: isFsearch,\r\n                });\r\n                range.active && this._renderSelectionToken(end.line, 0, end.column);\r\n            }\r\n            if (start.line === this.nowCursorPos.line || end.line === this.nowCursorPos.line) {\r\n                this.activeLineBg = false;\r\n            }\r\n        },\r\n        renderSelectionToken(line) {\r\n            // 只有设置了选中前景色才处理\r\n            if (!globalData.colors['editor.selectionForeground']) {\r\n                return;\r\n            }\r\n            let results = this.selecter.getRangeByLine(line);\r\n            results.forEach((range) => {\r\n                if (range.active) {\r\n                    let startColumn = range.start.column;\r\n                    let endColumn = range.end.column;\r\n                    if (range.start.line === line) {\r\n                        if (range.end.line > range.start.line) {\r\n                            endColumn = this.myContext.htmls[range.start.line - 1].text.length;\r\n                        }\r\n                    } else {\r\n                        startColumn = 0;\r\n                    }\r\n                    this._renderSelectionToken(line, startColumn, endColumn);\r\n                }\r\n            });\r\n        },\r\n        _renderSelectionToken(line, startColumn, endColumn) {\r\n            // 只有设置了选中前景色才处理\r\n            if (!globalData.colors['editor.selectionForeground']) {\r\n                return;\r\n            }\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            let tokens = lineObj.tokens;\r\n            let scopes = ['selected'];\r\n            let _tokens = [];\r\n            this.myContext.fgLines.push(line);\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                let token = tokens[i];\r\n                if (token.startIndex <= startColumn && token.endIndex > startColumn) {\r\n                    if (token.startIndex < startColumn) {\r\n                        _tokens.push({\r\n                            startIndex: token.startIndex,\r\n                            endIndex: startColumn,\r\n                            scopes: token.scopes,\r\n                        });\r\n                    }\r\n                    if (token.endIndex > endColumn) {\r\n                        _tokens.push({\r\n                            startIndex: startColumn,\r\n                            endIndex: endColumn,\r\n                            scopes: scopes,\r\n                        });\r\n                        _tokens.push({\r\n                            startIndex: endColumn,\r\n                            endIndex: token.endIndex,\r\n                            scopes: token.scopes,\r\n                        });\r\n                        _tokens = _tokens.concat(tokens.slice(i + 1));\r\n                        break;\r\n                    } else {\r\n                        _tokens.push({\r\n                            startIndex: startColumn,\r\n                            endIndex: token.endIndex,\r\n                            scopes: scopes,\r\n                        });\r\n                    }\r\n                } else if (token.startIndex > startColumn && token.endIndex <= endColumn) {\r\n                    _tokens.push({\r\n                        startIndex: token.startIndex,\r\n                        endIndex: token.endIndex,\r\n                        scopes: scopes,\r\n                    });\r\n                } else if (token.startIndex < endColumn && token.endIndex > endColumn) {\r\n                    _tokens.push({\r\n                        startIndex: token.startIndex,\r\n                        endIndex: endColumn,\r\n                        scopes: scopes,\r\n                    });\r\n                    _tokens.push({\r\n                        startIndex: endColumn,\r\n                        endIndex: token.endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                    _tokens = _tokens.concat(tokens.slice(i + 1));\r\n                    break;\r\n                } else if (token.startIndex >= endColumn) {\r\n                    _tokens = _tokens.concat(tokens.slice(i));\r\n                    break;\r\n                } else {\r\n                    _tokens.push(token);\r\n                }\r\n            }\r\n            lineObj.html = this.tokenizer.createHtml(_tokens, lineObj.text);\r\n            this.myContext.renderedIdMap.get(lineObj.lineId).html = lineObj.html;\r\n            this.$nextTick(() => {\r\n                lineObj.fgTokens = _tokens;\r\n            });\r\n        },\r\n        renderBracketMatch() {\r\n            this.bracketMatch = this.folder.getBracketMatch(this.nowCursorPos);\r\n            if (this.bracketMatch) {\r\n                let lineObj = null;\r\n                let pos = null;\r\n\r\n                lineObj = this.myContext.htmls[this.bracketMatch.start.line - 1];\r\n                pos = this.bracketMatch.start;\r\n                this.bracketMatch.start.width = this.getStrWidth(lineObj.text, pos.startIndex, pos.endIndex);\r\n                this.bracketMatch.start.left = this.getStrWidth(lineObj.text, 0, pos.startIndex);\r\n\r\n                lineObj = this.myContext.htmls[this.bracketMatch.end.line - 1];\r\n                pos = this.bracketMatch.end;\r\n                this.bracketMatch.end.width = this.getStrWidth(lineObj.text, pos.startIndex, pos.endIndex);\r\n                this.bracketMatch.end.left = this.getStrWidth(lineObj.text, 0, pos.startIndex);\r\n            }\r\n        },\r\n        // 清除选中前景色\r\n        clearSelectionToken() {\r\n            this.myContext.fgLines.forEach((line) => {\r\n                this._clearSelectionToken(line);\r\n            });\r\n            this.myContext.fgLines.empty();\r\n        },\r\n        _clearSelectionToken(line) {\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            if (!lineObj || !lineObj.fgTokens) {\r\n                return;\r\n            }\r\n            lineObj.fgTokens = null;\r\n            if (this.myContext.renderedLineMap.has(line)) {\r\n                this.myContext.renderedIdMap.get(lineObj.lineId).html = this.tokenizer.createHtml(lineObj.tokens, lineObj.text);\r\n            }\r\n            lineObj.html = '';\r\n        },\r\n        // 渲染光标\r\n        renderCursor(forceCursorView) {\r\n            let that = this;\r\n            let renderCursorId = this.renderCursorId + 1 || 1;\r\n            this.renderCursorId = renderCursorId;\r\n            this.$nextTick(() => {\r\n                if (this.renderCursorId !== renderCursorId || !this.renderHtmls.length) {\r\n                    return;\r\n                }\r\n                this.renderHtmls.forEach((item) => {\r\n                    _setLine(item);\r\n                });\r\n                this.cursorVisible = true;\r\n            });\r\n\r\n            function _setLine(item) {\r\n                let cursorList = [];\r\n                that.cursor.getCursorsByLine(item.num).forEach((cursorPos) => {\r\n                    cursorList.push(_setCursorRealPos(cursorPos));\r\n                });\r\n                item.cursorList = cursorList;\r\n            }\r\n\r\n            function _setCursorRealPos(cursorPos) {\r\n                let left = 0;\r\n                if (cursorPos.del) {\r\n                    return;\r\n                }\r\n                left = that.getExactLeft(cursorPos);\r\n                // 强制滚动使光标处于可见区域\r\n                if (forceCursorView && cursorPos === that.nowCursorPos) {\r\n                    if (left > that.scrollerArea.width + that.scrollLeft - that.charObj.fullAngleCharWidth) {\r\n                        that.$refs.scroller.scrollLeft = left + that.charObj.fullAngleCharWidth - that.scrollerArea.width;\r\n                    } else if (left < that.scrollLeft) {\r\n                        that.$refs.scroller.scrollLeft = left - 1;\r\n                    }\r\n                }\r\n                if (cursorPos === that.nowCursorPos) {\r\n                    that.cursorLeft = left;\r\n                }\r\n                return left + 'px';\r\n            }\r\n        },\r\n        renderError(line) {\r\n            this.$nextTick(() => {\r\n                _renderError.call(this);\r\n            });\r\n\r\n            function _renderError() {\r\n                let $render = $(this.$refs.render);\r\n                let keyMap = {};\r\n                $render.find('span.my-token-error').remove();\r\n                this.errors.forEach((item) => {\r\n                    let key = item.line + ',' + item.originColumn;\r\n                    let lineObj = null;\r\n                    if ((line && item.line !== line) || keyMap[key]) {\r\n                        return;\r\n                    }\r\n                    keyMap[key] = true;\r\n                    lineObj = this.myContext.htmls[item.line - 1];\r\n                    if (!item.endLine) {\r\n                        item.endLine = item.line;\r\n                    }\r\n                    if (item.column >= lineObj.text.length) {\r\n                        item.column = lineObj.text.length - 1;\r\n                    }\r\n                    if (!item.endColumn) {\r\n                        let res = null;\r\n                        if ((res = this.wordPattern.exec(lineObj.text.slice(item.column)))) {\r\n                            item.endColumn = item.column + res[0].length;\r\n                        } else {\r\n                            item.endColumn = item.column + 1;\r\n                        }\r\n                    }\r\n                    if (item.endColumn > lineObj.text.length) {\r\n                        item.endColumn = lineObj.text.length;\r\n                    }\r\n                    if (item.line === item.endLine) {\r\n                        _renderColError.call(this, item.line, item.column, item.endColumn, key);\r\n                    } else {\r\n                        _renderColError.call(this, item.line, item.column, lineObj.text.length, key);\r\n                        _renderColError.call(this, item.endLine, 0, item.endColumn, key);\r\n                        for (let line = item.line + 1; line < item.endLine; line++) {\r\n                            _renderLineError.call(this, line, key);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            function _renderColError(line, column, endColumn, key) {\r\n                if (line < this.startLine || line > this.startLine + this.maxVisibleLines) {\r\n                    return;\r\n                }\r\n                let $render = $(this.$refs.render);\r\n                let lineObj = this.myContext.htmls[line - 1];\r\n                let token = this.getToken(line, column);\r\n                let left = 0;\r\n                if (token) {\r\n                    let $token = $render.find(`div.my-code[data-line=\"${line}\"]`).find(`span[data-column=\"${token.startIndex}\"]`);\r\n                    left = $token[0].offsetLeft + this.getStrWidth(lineObj.text, token.startIndex, column);\r\n                }\r\n                let width = this.getStrWidth(lineObj.text, column, endColumn) || this.charObj.charWidth;\r\n                let html = `<span class=\"my-token-error\" style=\"width:${width}px;left:${left}px\" data-key=\"${key}\"></span>`;\r\n                $render.find(`div.my-code[data-line=\"${line}\"]`).append(html);\r\n            }\r\n\r\n            function _renderLineError(line, key) {\r\n                if (line < this.startLine || line > this.startLine + this.maxVisibleLines) {\r\n                    return;\r\n                }\r\n                let $render = $(this.$refs.render);\r\n                let html = `<span class=\"my-token-error\" style=\"width:100%;left:0px\" data-key=\"${key}\"></span>`;\r\n                $render.find(`div.my-code[data-line=\"${line}\"]`).append(html);\r\n            }\r\n        },\r\n        // 折叠行\r\n        foldLine(line) {\r\n            let resultFold = this.folder.foldLine(line);\r\n            this.focus();\r\n            if (resultFold) {\r\n                this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                    if (cursorPos.line > line && cursorPos.line < resultFold.end.line) {\r\n                        let lineObj = this.myContext.htmls[line - 1];\r\n                        cursorPos.line = line;\r\n                        cursorPos.column = lineObj.text.length;\r\n                    }\r\n                });\r\n                this.setContentHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // 展开折叠行\r\n        unFold(line) {\r\n            this.focus();\r\n            if (this.folder.unFold(line)) {\r\n                this.setContentHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // ctrl+f打开搜索\r\n        openSearch(replaceMode) {\r\n            let searchDialog = this.$refs.searchDialog;\r\n            if (this.searchVisible && (this.fSelecter.activedRanges.size || !this.cursorFocus)) {\r\n                //无效操作\r\n                return;\r\n            }\r\n            if (this.cursorFocus) {\r\n                let searchConfig = this.fSearcher.getSearchConfig();\r\n                if (searchConfig) {\r\n                    //有效搜索\r\n                    searchDialog.initData({\r\n                        ignoreCase: searchConfig.ignoreCase,\r\n                        wholeWord: searchConfig.wholeWord,\r\n                        text: searchConfig.text,\r\n                    });\r\n                } else if (this.searchVisible) {\r\n                    //无效搜索\r\n                    return;\r\n                }\r\n            }\r\n            this.searchVisible = true;\r\n            this.fSearcher.clearSearch();\r\n            this.searchText({ config: searchDialog.getData() });\r\n            searchDialog.initData({ replaceVisible: !!replaceMode });\r\n            searchDialog.focus();\r\n        },\r\n        // 搜索完整单词\r\n        searchWord(direct) {\r\n            let resultObj = null;\r\n            this.searcher.search({ direct: direct });\r\n            if (this.searchVisible) {\r\n                if (this.fSelecter.activedRanges.size === 0) {\r\n                    let searchConfig = this.fSearcher.getSearchConfig();\r\n                    if (searchConfig) {\r\n                        this.fSearcher.clearSearch();\r\n                        resultObj = this.fSearcher.search({ direct: direct, increase: true });\r\n                    }\r\n                } else {\r\n                    resultObj = this.fSearcher.search({ direct: direct, increase: true });\r\n                }\r\n                if (resultObj) {\r\n                    this.searchNow = resultObj.now;\r\n                    this.searchCount = resultObj.count;\r\n                }\r\n            }\r\n        },\r\n        searchText(option) {\r\n            let resultObj = this.fSearcher.search(option);\r\n            if (resultObj) {\r\n                this.searchNow = resultObj.now;\r\n                this.searchCount = resultObj.count;\r\n            } else {\r\n                this.searchCount = 0;\r\n            }\r\n        },\r\n        replace(data) {\r\n            if (this.fSelecter.activedRanges.size) {\r\n                let range = this.fSearcher.getNowRange();\r\n                this.myContext.replace(data.text, [range]).then(() => {\r\n                    this.searchText();\r\n                });\r\n            } else {\r\n                this.searchText();\r\n            }\r\n        },\r\n        replaceAll(data) {\r\n            if (this.fSelecter.ranges.size) {\r\n                this.myContext.replace(data.text, this.fSelecter.ranges.toArray()).then(() => {\r\n                    this.fSearcher.clearSearch();\r\n                    this.searchCount = 0;\r\n                });\r\n            }\r\n        },\r\n        // 上一个提示\r\n        prevAutoTip() {\r\n            this.$refs.autoTip.prev();\r\n        },\r\n        // 下一个提示\r\n        nextAutoTip() {\r\n            this.$refs.autoTip.next();\r\n        },\r\n        selectAutoTip() {\r\n            let index = this.$refs.autoTip.getActiveIndex();\r\n            this.onClickAuto(this.autoTipList[index]);\r\n        },\r\n        setData(prop, value) {\r\n            if (typeof this[prop] === 'function') {\r\n                return;\r\n            }\r\n            this[prop] = value;\r\n        },\r\n        setNowCursorPos(nowCursorPos) {\r\n            this.nowCursorPos = nowCursorPos || { line: 1, column: 0 };\r\n            if (nowCursorPos) {\r\n                let setNowCursorPosId = this.setNowCursorPosId + 1 || 1;\r\n                this.setNowCursorPosId = setNowCursorPosId;\r\n                // 强制滚动使光标处于可见区域\r\n                this.$nextTick(() => {\r\n                    if (this.setNowCursorPosId != setNowCursorPosId) {\r\n                        return;\r\n                    }\r\n                    let height = this.folder.getRelativeLine(nowCursorPos.line) * this.charObj.charHight;\r\n                    if (height + this.charObj.charHight > this.scrollTop + this.scrollerArea.height) {\r\n                        requestAnimationFrame(() => {\r\n                            this.setStartLine(height + this.charObj.charHight - this.scrollerArea.height);\r\n                            this.$refs.scroller.scrollTop = height + this.charObj.charHight - this.scrollerArea.height;\r\n                        });\r\n                    } else if (nowCursorPos.line <= this.startLine) {\r\n                        requestAnimationFrame(() => {\r\n                            if (nowCursorPos.line <= this.startLine) {\r\n                                //此时this.startLine可能已经通过onScrll而改变\r\n                                this.startLine = nowCursorPos.line;\r\n                                this.$refs.scroller.scrollTop = (this.folder.getRelativeLine(nowCursorPos.line) - 1) * this.charObj.charHight;\r\n                            }\r\n                        });\r\n                    }\r\n                    this.renderCursor(true);\r\n                });\r\n            }\r\n        },\r\n        // 设置滚动区域真实高度\r\n        setContentHeight() {\r\n            let maxLine = this.myContext.htmls.length;\r\n            let contentHeight = 0;\r\n            maxLine = this.folder.getRelativeLine(maxLine);\r\n            contentHeight = maxLine * this.charObj.charHight;\r\n            if (this.scrollerArea) {\r\n                contentHeight += this.scrollerArea.height - this.charObj.charHight;\r\n            }\r\n            this.contentHeight = contentHeight + 'px';\r\n        },\r\n        setStartLine(scrollTop) {\r\n            let startLine = 1;\r\n            startLine = Math.floor(scrollTop / this.charObj.charHight);\r\n            startLine++;\r\n            this.startLine = this.folder.getRealLine(startLine);\r\n            this.top = -scrollTop % this.charObj.charHight;\r\n        },\r\n        setErrors(errors) {\r\n            this.errorMap = {};\r\n            this.errors = errors;\r\n            _formatError.call(this, this.errorMap, errors);\r\n            this.renderError();\r\n\r\n            function _formatError(errorMap, errors) {\r\n                let index = 0;\r\n                while (index < errors.length) {\r\n                    let line = errors[index].line;\r\n                    let arr = [];\r\n                    while (index < errors.length && errors[index].line === line) {\r\n                        let key = line + ',' + errors[index].column;\r\n                        errors[index].originColumn = errors[index].column;\r\n                        arr.push(errors[index].reason);\r\n                        if (errorMap[key]) {\r\n                            errorMap[key] += '<br>' + errors[index].reason;\r\n                        } else {\r\n                            errorMap[key] = errors[index].reason;\r\n                        }\r\n                        index++;\r\n                    }\r\n                    line = line || this.htmls.length;\r\n                    errorMap[line] = arr.join('<br>');\r\n                }\r\n            }\r\n        },\r\n        setAutoTip(results) {\r\n            clearTimeout(this.setAutoTip.hideTimer);\r\n            if (results && results.length) {\r\n                results.forEach((item) => {\r\n                    item.active = false;\r\n                });\r\n                this.autoTipList = results;\r\n                this.autoTipList[0].active = true;\r\n                this.$nextTick(() => {\r\n                    let width = this.$refs.autoTip.$el.clientWidth;\r\n                    let height = this.$refs.autoTip.$el.clientHeight;\r\n                    this.autoTipStyle.top = this.folder.getRelativeLine(this.nowCursorPos.line) * this.charObj.charHight;\r\n                    this.autoTipStyle.left = this.getExactLeft(this.nowCursorPos);\r\n                    if (this.autoTipStyle.top + height > Util.getNum(this._top) + this.$refs.scroller.clientHeight) {\r\n                        this.autoTipStyle.top -= height + this.charObj.charHight;\r\n                    }\r\n                    if (this.autoTipStyle.left + width > this.scrollLeft + this.scrollerArea.width) {\r\n                        this.autoTipStyle.left -= width;\r\n                    }\r\n                    this.autoTipStyle.top += 'px';\r\n                    this.autoTipStyle.left += 'px';\r\n                });\r\n            } else {\r\n                //内容改变时会触发setAutoTip(null)\r\n                this.setAutoTip.hideTimer = setTimeout(() => {\r\n                    this.autoTipList = null;\r\n                }, 60);\r\n            }\r\n        },\r\n        // 获取文本在浏览器中的宽度\r\n        getStrWidth(str, start, end) {\r\n            return Util.getStrWidth(str, this.charObj.charWidth, this.charObj.fullAngleCharWidth, this.tabSize, start, end);\r\n        },\r\n        // 获取行对应的文本在浏览器中的宽度\r\n        getStrWidthByLine(line, start, end) {\r\n            return this.getStrWidth(this.myContext.htmls[line - 1].text, start, end);\r\n        },\r\n        // 根据文本宽度计算当前列号\r\n        getColumnByWidth(text, offsetX) {\r\n            let left = 0,\r\n                right = text.length;\r\n            let mid, width, w1, w2;\r\n            while (left < right) {\r\n                mid = Math.floor((left + right) / 2);\r\n                width = this.getStrWidth(text, 0, mid);\r\n                w1 = text[mid - 1] && this.getStrWidth(text[mid - 1]) / 2;\r\n                w2 = (text[mid] && this.getStrWidth(text[mid]) / 2) || w1;\r\n                if ((width >= offsetX && width - offsetX < w1) || (offsetX >= width && offsetX - width < w2)) {\r\n                    left = mid;\r\n                    break;\r\n                } else if (width > offsetX) {\r\n                    right = mid;\r\n                } else {\r\n                    left = mid + 1;\r\n                }\r\n            }\r\n            return left;\r\n        },\r\n        // 根据鼠标事件对象获取行列坐标\r\n        getPosByEvent(e) {\r\n            let $target = $(e.target);\r\n            let line = ($target.attr('data-line') || $target.parent().attr('data-line')) - 0;\r\n            let column = $target.attr('data-column');\r\n            if (!line) {\r\n                if (e.target === this.$refs.content) {\r\n                    line = this.myContext.htmls.length;\r\n                } else {\r\n                    //移动到了区域外\r\n                    return null;\r\n                }\r\n            }\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            let tokens = lineObj.fgTokens || lineObj.tokens;\r\n            if (!column) {\r\n                column = lineObj.text.length;\r\n            } else {\r\n                column = column - 0;\r\n                for (let i = 0; i < tokens.length; i++) {\r\n                    let token = tokens[i];\r\n                    if (tokens[i].startIndex == column) {\r\n                        column += this.getColumnByWidth(lineObj.text.slice(token.startIndex, token.endIndex), e.offsetX);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column,\r\n            };\r\n        },\r\n        // 获取光标真实位置\r\n        getExactLeft(cursorPos) {\r\n            let lineObj = this.myContext.htmls[cursorPos.line - 1];\r\n            if (!lineObj.tokens || !lineObj.tokens.length) {\r\n                return 0;\r\n            }\r\n            let tokens = lineObj.fgTokens || lineObj.tokens;\r\n            let token = tokens[0];\r\n            for (let i = 1; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex < cursorPos.column) {\r\n                    token = tokens[i];\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            let $token = $('#line_' + cursorPos.line)\r\n                .children('.my-code')\r\n                .children('span[data-column=\"' + token.startIndex + '\"]');\r\n            if (!$token.length) {\r\n                return 0;\r\n            }\r\n            let text = lineObj.text.slice(token.startIndex, cursorPos.column);\r\n            return $token[0].offsetLeft + this.getStrWidth(text);\r\n        },\r\n        getToken(line, column) {\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            if (lineObj && lineObj.tokens) {\r\n                if (column > lineObj.tokens.peek().startIndex) {\r\n                    return lineObj.tokens.peek();\r\n                }\r\n                for (let i = 0; i < lineObj.tokens.length; i++) {\r\n                    if (lineObj.tokens[i].startIndex <= column && lineObj.tokens[i].endIndex > column) {\r\n                        return lineObj.tokens[i];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        // 右键菜单事件\r\n        onContextmenu(e) {\r\n            let menuWidth = 0;\r\n            let menuHeight = 0;\r\n            let $editor = $(this.$refs.editor);\r\n            let offset = $editor.offset();\r\n            this.menuVisible = true;\r\n            this.$nextTick(() => {\r\n                menuWidth = this.$refs.menu.$el.clientWidth;\r\n                menuHeight = this.$refs.menu.$el.clientHeight;\r\n                if (menuHeight + e.clientY > offset.top + this.scrollerArea.height) {\r\n                    this.menuStyle.top = e.clientY - offset.top - menuHeight + 'px';\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + 'px';\r\n                }\r\n                if (menuWidth + e.clientX > offset.left + $editor[0].clientWidth) {\r\n                    this.menuStyle.left = e.clientX - offset.left - menuWidth + 'px';\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + 'px';\r\n                }\r\n                this.focus();\r\n            });\r\n        },\r\n        // 选中菜单\r\n        onClickMenu(menu) {\r\n            switch (menu.op) {\r\n                case 'cut':\r\n                case 'copy':\r\n                    Util.writeClipboard(this.myContext.getCopyText(menu.op === 'cut'));\r\n                    break;\r\n                case 'paste':\r\n                    this.$refs.textarea.focus();\r\n                    Util.readClipboard().then((text) => {\r\n                        this.myContext.insertContent(text);\r\n                    });\r\n                    break;\r\n            }\r\n            this.menuVisible = false;\r\n            this.focus();\r\n        },\r\n        // 选中自动提示\r\n        onClickAuto(item) {\r\n            this.myContext.replaceTip(item);\r\n            this.autoTipList = null;\r\n            this.focus();\r\n        },\r\n        // 折叠/展开\r\n        onToggleFold(line) {\r\n            if (this.folder.getFoldByLine(line)) {\r\n                this.unFold(line);\r\n            } else {\r\n                this.foldLine(line);\r\n            }\r\n        },\r\n        // 内容区域鼠标按下事件\r\n        onContentMdown(e) {\r\n            if (e.which == 3) {\r\n                //右键\r\n                return;\r\n            }\r\n            let pos = this.getPosByEvent(e);\r\n            let cursorPos = null;\r\n            this.mouseStartObj = {\r\n                time: Date.now(),\r\n                start: pos,\r\n            };\r\n            if ((e.ctrlKey && this.cursor.multiKeyCode === 'ctrl') || (e.altKey && this.cursor.multiKeyCode === 'alt')) {\r\n                // 多光标编辑\r\n                let range = this.selecter.getRangeWithCursorPos(pos);\r\n                //删除重叠选中区域\r\n                range && this.selecter.removeRange(range);\r\n                cursorPos = this.cursor.addCursorPos(pos);\r\n            } else {\r\n                cursorPos = this.cursor.setCursorPos(pos);\r\n                // 非多点编辑情况下，鼠标左键删除选中区域\r\n                if (e.which !== 3) {\r\n                    this.searcher.clearSearch();\r\n                }\r\n            }\r\n            if (e.which != 3) {\r\n                this.fSearcher.clearActive(); //光标更改后，搜索框取消当前活动区域\r\n                if (this.mouseUpTime && Date.now() - this.mouseUpTime < 200) {\r\n                    //双击选中单词\r\n                    this.mouseStartObj.doubleClick = true;\r\n                    this.searchWord();\r\n                }\r\n            }\r\n            this.mouseStartObj.cursorPos = cursorPos;\r\n            // 删除非活动区域的选中区域\r\n            this.searcher.clearSearch(true);\r\n            this.focus();\r\n        },\r\n        onErrorMousemove(e, line) {\r\n            let $errors = $(`div.my-code[data-line=${line}]`).children('span.my-token-error');\r\n            let left = e.clientX - $(this.$refs.render).offset().left;\r\n            for (let i = 0; i < $errors.length; i++) {\r\n                let $error = $errors.eq(i);\r\n                let width = $error.width();\r\n                let _left = $error[0].offsetLeft;\r\n                if (left >= _left && left <= _left + width) {\r\n                    _showTip.call(this, e, $error.attr('data-key'));\r\n                    break;\r\n                }\r\n            }\r\n\r\n            function _showTip(e, key) {\r\n                let $editor = $(this.$refs.editor);\r\n                let $tip = $(this.$refs.tip.$el);\r\n                let offset = $editor.offset();\r\n                let top = e.clientY - offset.top;\r\n                let left = e.clientX - offset.left;\r\n                this.tipContent = this.errorMap[key];\r\n                this.$nextTick(() => {\r\n                    if (top + $tip[0].clientHeight > this.scrollerArea.height) {\r\n                        top = this.scrollerArea.height - $tip[0].clientHeight;\r\n                    }\r\n                    this.tipStyle = {\r\n                        left: left + 10 + 'px',\r\n                        top: top + 10 + 'px',\r\n                    };\r\n                });\r\n            }\r\n        },\r\n        onContentMmove(e) {\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                let end = this.getPosByEvent(e);\r\n                if (end && Util.comparePos(end, this.mouseStartObj.cursorPos)) {\r\n                    let range = this.selecter.getRangeWithCursorPos(end);\r\n                    //删除重叠选中区域\r\n                    range && this.selecter.removeRange(range);\r\n                    this.cursor.removeCursor(this.mouseStartObj.cursorPos);\r\n                    this.mouseStartObj.cursorPos = this.cursor.addCursorPos({\r\n                        line: end.line,\r\n                        column: end.column,\r\n                    });\r\n                    if (this.mouseStartObj.preRange) {\r\n                        this.selecter.updateRange(this.mouseStartObj.preRange, {\r\n                            start: this.mouseStartObj.start,\r\n                            end: end,\r\n                        });\r\n                    } else {\r\n                        this.mouseStartObj.preRange = this.selecter.addRange({\r\n                            start: this.mouseStartObj.start,\r\n                            end: end,\r\n                        });\r\n                    }\r\n                    // 删除区域范围内的光标\r\n                    this.cursor.removeCursorInRange(this.mouseStartObj.preRange);\r\n                }\r\n            }\r\n            _checkErrorOver.call(this, e);\r\n\r\n            function _checkErrorOver(e) {\r\n                let $target = $(e.target);\r\n                let line = $target.parent().attr('data-line');\r\n                this.tipContent = '';\r\n                line && this.onErrorMousemove(e, line);\r\n            }\r\n        },\r\n        onContentMLeave() {\r\n            this.tipContent = '';\r\n        },\r\n        // 鼠标移动事件\r\n        onDocumentMmove(e) {\r\n            let that = this;\r\n            let offset = $(this.$refs.scroller).offset();\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                let line = Math.ceil((this.scrollTop + e.clientY - offset.top) / this.charObj.charHight);\r\n                line = line < 1 ? 1 : line;\r\n                line = line > this.maxLine ? this.maxLine : line;\r\n                cancelAnimationFrame(this.selectMoveTimer);\r\n                if (e.clientY > offset.top + this.scrollerArea.height) {\r\n                    //鼠标超出底部区域\r\n                    _move('down', e.clientY - offset.top - this.scrollerArea.height);\r\n                } else if (e.clientY < offset.top) {\r\n                    //鼠标超出顶部区域\r\n                    _move('up', offset.top - e.clientY);\r\n                } else if (e.clientX < offset.left) {\r\n                    //鼠标超出左边区域\r\n                    _move('left', offset.left - e.clientX, line);\r\n                } else if (e.clientX > offset.left + this.scrollerArea.width) {\r\n                    //鼠标超出右边区域\r\n                    _move('right', e.clientX - offset.left - this.scrollerArea.width, line);\r\n                }\r\n            }\r\n            function _move(autoDirect, speed, line) {\r\n                let originLine = line || that.folder.getRelativeLine(that.nowCursorPos.line);\r\n                let originColumn = that.nowCursorPos.column;\r\n                let count = 0; // 累计滚动距离\r\n                _run(autoDirect, speed);\r\n\r\n                function _run(autoDirect, speed) {\r\n                    let line = originLine;\r\n                    let column = originColumn;\r\n                    switch (autoDirect) {\r\n                        case 'up':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine - line;\r\n                            column = 0;\r\n                            break;\r\n                        case 'down':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine + line;\r\n                            break;\r\n                        case 'left':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn - column;\r\n                            break;\r\n                        case 'right':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn + column;\r\n                            break;\r\n                    }\r\n                    line = that.folder.getRealLine(line);\r\n                    line = line < 1 ? 1 : line > that.maxLine ? that.maxLine : line;\r\n                    if (autoDirect === 'down') {\r\n                        column = that.myContext.htmls[line - 1].text.length;\r\n                    } else {\r\n                        column = column < 0 ? 0 : column > that.myContext.htmls[line - 1].text.length ? that.myContext.htmls[line - 1].text.length : column;\r\n                    }\r\n                    that.mouseStartObj.cursorPos = that.cursor.setCursorPos({\r\n                        line: line,\r\n                        column: column,\r\n                    });\r\n                    that.mouseStartObj.preRange = that.selecter.setRange(that.mouseStartObj.start, {\r\n                        line: line,\r\n                        column: column,\r\n                    });\r\n                    that.selectMoveTimer = requestAnimationFrame(() => {\r\n                        _run(autoDirect, speed);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        // 鼠标抬起事件\r\n        onDocumentMouseUp(e) {\r\n            // 停止滚动选中\r\n            cancelAnimationFrame(this.selectMoveTimer);\r\n            this.mouseStartObj = null;\r\n            this.mouseUpTime = Date.now();\r\n            this.$refs.searchDialog && this.$refs.searchDialog.directBlur();\r\n        },\r\n        // 左右滚动事件\r\n        onScroll(e) {\r\n            this.setStartLine(e.target.scrollTop);\r\n            this.scrollTop = e.target.scrollTop;\r\n            this.scrollLeft = e.target.scrollLeft;\r\n            this.$refs.scroller.scrollLeft = this.scrollLeft;\r\n        },\r\n        // 滚动滚轮\r\n        onWheel(e) {\r\n            this.$refs.scroller.scrollTop = this.scrollTop + e.deltaY;\r\n            this.$refs.scroller.scrollLeft = this.scrollLeft + e.deltaX;\r\n        },\r\n        // 中文输入开始\r\n        onCompositionstart() {\r\n            clearTimeout(this.compositionendTimer);\r\n            this.compositionstart = true;\r\n        },\r\n        // 中文输入结束\r\n        onCompositionend() {\r\n            if (this.compositionstart) {\r\n                let text = this.$refs.textarea.value || '';\r\n                if (text) {\r\n                    this.myContext.insertContent(text);\r\n                    this.autocomplete.search();\r\n                    this.$refs.textarea.value = '';\r\n                }\r\n            }\r\n            //避免有些浏览器compositionend在input事件之前触发的bug\r\n            this.compositionendTimer = setTimeout(() => {\r\n                this.compositionstart = false;\r\n            }, 100);\r\n        },\r\n        // 输入事件\r\n        onInput() {\r\n            if (!this.compositionstart) {\r\n                let text = this.$refs.textarea.value || '';\r\n                if (text) {\r\n                    this.myContext.insertContent(text);\r\n                    this.autocomplete.search();\r\n                    this.$refs.textarea.value = '';\r\n                }\r\n            }\r\n        },\r\n        // 复制事件\r\n        onCopy(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, this.myContext.getCopyText());\r\n        },\r\n        onCut(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, this.myContext.getCopyText(true));\r\n        },\r\n        // 粘贴事件\r\n        onPaste(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            let copyText = '';\r\n            copyText = clipboardData.getData(mime);\r\n            this.myContext.insertContent(copyText);\r\n        },\r\n        // 获得焦点\r\n        onFocus() {\r\n            this.showCursor();\r\n        },\r\n        // 失去焦点\r\n        onBlur() {\r\n            this.hideCursor();\r\n        },\r\n        // 键盘按下事件\r\n        onKeyDown(e) {\r\n            this.shortcut.onKeyDown(e);\r\n        },\r\n        // 搜索框首次搜索\r\n        onSearch(config) {\r\n            this.fSearcher.clearSearch();\r\n            this.searchText({ config: config });\r\n        },\r\n        onSearchNext() {\r\n            this.searchText({ direct: 'next' });\r\n        },\r\n        onSearchPrev() {\r\n            this.searchText({ direct: 'up' });\r\n        },\r\n        onCloseSearch() {\r\n            this.focus();\r\n            if (this.fSelecter.activedRanges.size) {\r\n                this.searcher.clone(this.fSearcher.getCacheData());\r\n            }\r\n            this.fSearcher.clearSearch();\r\n            this.searchVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=784caa1a&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-title-bar my-width-100\",style:({ height: _vm.height + 'px' }),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100 my-center-between\"},[_c('div',{staticClass:\"menu-bar\"},[_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('fileMenuVisible')}}},[_c('span',[_vm._v(\"File\")]),(_vm.fileMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.fileMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onFileMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('editMenuVisible')}}},[_c('span',[_vm._v(\"Edit\")]),(_vm.editMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.editMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onEditMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('selectionMenuVisible')}}},[_c('span',[_vm._v(\"Selection\")]),(_vm.selectionMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.selectionMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onSelectionMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('preferenceMenuVisible')}}},[_c('span',[_vm._v(\"Preference\")]),(_vm.preferenceMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.preferenceMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onPreferenceMenuChange}}):_vm._e()],1)]),(_vm.mode === 'app')?_c('div',{staticClass:\"bar-right\"},[_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onMinimize}},[_c('span',{staticClass:\"iconfont icon-zuixiaohua\"})]),(_vm.maximize)?_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onUnmaximize}},[_c('span',{staticClass:\"iconfont icon-huanyuan\"})]):_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onMaximize}},[_c('span',{staticClass:\"iconfont icon-zuidahua\"})]),_c('div',{staticClass:\"bar-item my-hover-danger\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onClose}},[_c('span',{staticClass:\"iconfont icon-close\",staticStyle:{\"font-size\":\"18px\"}})])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(titleBar) {\r\n        this.initProperties(titleBar);\r\n    }\r\n    initProperties(titleBar) {\r\n        Util.defineProperties(this, titleBar, [\r\n            'openFile',\r\n            'openFolder'\r\n        ]);\r\n    }\r\n    onKeyDown(e) {\r\n        if (e.ctrlKey) {\r\n            if (this.pressK) {\r\n                this.pressK = false;\r\n                switch (e.keyCode) {\r\n                    case 79: //Ctrl+O\r\n                        e.preventDefault();\r\n                        this.openFolder();\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (e.keyCode) {\r\n                    case 75: //Ctrl+K\r\n                        e.preventDefault();\r\n                        this.pressK = true;\r\n                        break;\r\n                    case 78: //Ctrl+N\r\n                        e.preventDefault();\r\n                        this.openFile();\r\n                        break;\r\n                    case 79: //Ctrl+O\r\n                        e.preventDefault();\r\n                        this.openFile(null, true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"{ height: height + 'px' }\" @contextmenu.stop.prevent class=\"my-title-bar my-width-100\">\r\n        <div class=\"my-height-100 my-center-between\">\r\n            <div class=\"menu-bar\">\r\n                <div @mousedown.stop=\"showMemu('fileMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>File</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"fileMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onFileMenuChange\"\r\n                        v-if=\"fileMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('editMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Edit</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"editMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onEditMenuChange\"\r\n                        v-if=\"editMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('selectionMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Selection</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"selectionMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onSelectionMenuChange\"\r\n                        v-if=\"selectionMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('preferenceMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Preference</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"preferenceMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onPreferenceMenuChange\"\r\n                        v-if=\"preferenceMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n            </div>\r\n            <div class=\"bar-right\" v-if=\"mode === 'app'\">\r\n                <!-- 最小化 -->\r\n                <div @click=\"onMinimize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\">\r\n                    <span class=\"iconfont icon-zuixiaohua\"></span>\r\n                </div>\r\n                <!-- 还原最大化 -->\r\n                <div @click=\"onUnmaximize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\" v-if=\"maximize\">\r\n                    <span class=\"iconfont icon-huanyuan\"></span>\r\n                </div>\r\n                <!-- 最大化 -->\r\n                <div @click=\"onMaximize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\" v-else>\r\n                    <span class=\"iconfont icon-zuidahua\"></span>\r\n                </div>\r\n                <!-- 关闭 -->\r\n                <div @click=\"onClose\" class=\"bar-item my-hover-danger\" style=\"width: 35px; height: 35px\">\r\n                    <span class=\"iconfont icon-close\" style=\"font-size: 18px\"></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Util from '@/common/util';\r\nimport Menu from './Menu';\r\nimport ShortCut from '@/module/shortcut/menu-bar';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\nconst require = window.require || window.parent.require || function () {};\r\nconst remote = require('@electron/remote');\r\nconst currentWindow = remote && remote.getCurrentWindow();\r\n\r\nexport default {\r\n    name: 'TitleBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25,\r\n        },\r\n    },\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            fileMenuVisible: false,\r\n            editMenuVisible: false,\r\n            selectionMenuVisible: false,\r\n            preferenceMenuVisible: false,\r\n            maximize: false,\r\n            mode: remote ? 'app' : 'web',\r\n            fileMenuList: [\r\n                [\r\n                    {\r\n                        name: 'New File',\r\n                        op: 'newFile',\r\n                        shortcut: 'Ctrl+N',\r\n                    },\r\n                ],\r\n            ],\r\n            editMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Undo',\r\n                        op: 'undo',\r\n                        shortcut: 'Ctrl+Z',\r\n                    },\r\n                    {\r\n                        name: 'Redo',\r\n                        op: 'redo',\r\n                        shortcut: 'Ctrl+Y',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Cut',\r\n                        op: 'cut',\r\n                        shortcut: 'Ctrl+X',\r\n                    },\r\n                    {\r\n                        name: 'Copy',\r\n                        op: 'copy',\r\n                        shortcut: 'Ctrl+C',\r\n                    },\r\n                    {\r\n                        name: 'Paste',\r\n                        op: 'paste',\r\n                        shortcut: 'Ctrl+V',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Delete Line',\r\n                        op: 'deleteLine',\r\n                        shortcut: 'Ctrl+Shift+K',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Find',\r\n                        op: 'find',\r\n                        shortcut: 'Ctrl+F',\r\n                    },\r\n                    {\r\n                        name: 'Replace',\r\n                        op: 'replace',\r\n                        shortcut: 'Ctrl+H',\r\n                    },\r\n                ],\r\n            ],\r\n            selectionMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Select All',\r\n                        op: 'selectAll',\r\n                        shortcut: 'Ctrl+A',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Copy Line Up',\r\n                        op: 'copyLineUp',\r\n                        shortcut: 'Ctrl+Shift+D',\r\n                    },\r\n                    {\r\n                        name: 'Copy Line Down',\r\n                        op: 'copyLineDown',\r\n                        shortcut: 'Alt+Shift+Down',\r\n                    },\r\n                    {\r\n                        name: 'Move Line Up',\r\n                        op: 'moveLineUp',\r\n                        shortcut: 'Ctrl+Shift+Up',\r\n                    },\r\n                    {\r\n                        name: 'Move Line Down',\r\n                        op: 'moveLineDown',\r\n                        shortcut: 'Ctrl+Shift+Down',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Add Cursor Above',\r\n                        op: 'addCursorAbove',\r\n                        shortcut: 'Ctrl+Alt+Up',\r\n                    },\r\n                    {\r\n                        name: 'Add Cursor Below',\r\n                        op: 'addCursorBelow',\r\n                        shortcut: 'Ctrl+Alt+Down',\r\n                    },\r\n                    {\r\n                        name: 'Add Cursor to Line Ends',\r\n                        op: 'addCursorLineEnds',\r\n                        shortcut: 'Ctrl+Shift+L',\r\n                    },\r\n                    {\r\n                        name: 'Add Next Occurence',\r\n                        op: 'addNextOccurence',\r\n                        shortcut: 'Ctrl+D',\r\n                    },\r\n                    {\r\n                        name: 'Add Previous Occurence',\r\n                        op: 'addPrevOccurence',\r\n                        shortcut: 'Shift+D',\r\n                    },\r\n                    {\r\n                        name: 'Select All Occurence',\r\n                        op: 'selectAllOccurence',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Switch Alt+Click to Multi-Cursor',\r\n                        op: 'switchMultiKeyCode',\r\n                        keyCode: 'ctrl',\r\n                    },\r\n                ],\r\n            ],\r\n            preferenceMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Color Theme',\r\n                        op: 'changeTheme',\r\n                    },\r\n                    {\r\n                        name: 'Icon Theme',\r\n                        op: 'changeIconTheme',\r\n                    },\r\n                ],\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        _top() {\r\n            return this.height + 2 + 'px';\r\n        },\r\n        editor() {\r\n            return this.getNowEditor();\r\n        },\r\n        context() {\r\n            return this.getNowContext();\r\n        },\r\n    },\r\n    inject: ['getNowEditor', 'getNowContext', 'openFile', 'openFolder'],\r\n    created() {\r\n        if (this.mode === 'app') {\r\n            this.fileMenuList.push([\r\n                {\r\n                    name: 'Open File',\r\n                    op: 'openFile',\r\n                    shortcut: 'Ctrl+O',\r\n                },\r\n                {\r\n                    name: 'Open Folder',\r\n                    op: 'openFolder',\r\n                    shortcut: 'Ctrl+K Ctrl+O',\r\n                },\r\n            ]);\r\n        }\r\n        this.shortcut = new ShortCut(this);\r\n        this.initEventBus();\r\n        $(window).on('keydown', (e) => {\r\n            this.shortcut.onKeyDown(e);\r\n        });\r\n    },\r\n    mounted() {\r\n        if (this.mode === 'app') {\r\n            this.maximize = currentWindow.isMaximized();\r\n        }\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('close-menu', () => {\r\n                this.fileMenuVisible = false;\r\n                this.editMenuVisible = false;\r\n                this.selectionMenuVisible = false;\r\n                this.preferenceMenuVisible = false;\r\n            });\r\n        },\r\n        showMemu(prop) {\r\n            EventBus.$emit('close-menu');\r\n            this[prop] = true;\r\n        },\r\n        // 最小化\r\n        onMinimize() {\r\n            currentWindow.minimize();\r\n        },\r\n        // 最大化\r\n        onMaximize() {\r\n            currentWindow.maximize();\r\n            this.maximize = true;\r\n        },\r\n        // 最大化\r\n        onUnmaximize() {\r\n            currentWindow.unmaximize();\r\n            this.maximize = false;\r\n        },\r\n        // 关闭窗口\r\n        onClose() {\r\n            currentWindow.close();\r\n        },\r\n        onFileMenuChange(item) {\r\n            switch (item.op) {\r\n                case 'newFile':\r\n                    this.openFile();\r\n                    break;\r\n                case 'openFile':\r\n                    this.openFile(null, true);\r\n                    break;\r\n                case 'openFolder':\r\n                    this.openFolder();\r\n                    break;\r\n            }\r\n            this.fileMenuVisible = false;\r\n        },\r\n        onEditMenuChange(item) {\r\n            if (!this.editor) {\r\n                this.editMenuVisible = false;\r\n                return;\r\n            }\r\n            switch (item.op) {\r\n                case 'undo':\r\n                    this.editor.history.undo();\r\n                    break;\r\n                case 'redo':\r\n                    this.editor.history.redo();\r\n                    break;\r\n                case 'cut':\r\n                    Util.writeClipboard(this.context.getCopyText(true));\r\n                    break;\r\n                case 'copy':\r\n                    Util.writeClipboard(this.context.getCopyText());\r\n                    break;\r\n                case 'paste':\r\n                    Util.readClipboard().then((text) => {\r\n                        this.context.insertContent(text);\r\n                    });\r\n                    break;\r\n                case 'deleteLine':\r\n                    this.context.deleteLine();\r\n                    break;\r\n                case 'find':\r\n                    this.editor.openSearch();\r\n                    break;\r\n                case 'replace':\r\n                    this.editor.openSearch(true);\r\n                    break;\r\n            }\r\n            this.editor.focus();\r\n            this.editMenuVisible = false;\r\n        },\r\n        onSelectionMenuChange(item) {\r\n            if (!this.editor) {\r\n                this.selectionMenuVisible = false;\r\n                return;\r\n            }\r\n            switch (item.op) {\r\n                case 'selectAll':\r\n                    this.editor.selecter.selectAll();\r\n                    break;\r\n                case 'copyLineUp':\r\n                    this.context.copyLineUp();\r\n                    break;\r\n                case 'copyLineDown':\r\n                    this.context.copyLineDown();\r\n                    break;\r\n                case 'moveLineUp':\r\n                    this.context.moveLineUp();\r\n                    break;\r\n                case 'moveLineDown':\r\n                    this.context.moveLineDown();\r\n                    break;\r\n                case 'addCursorAbove':\r\n                    this.editor.cursor.addCursorAbove();\r\n                    break;\r\n                case 'addCursorBelow':\r\n                    this.editor.cursor.addCursorBelow();\r\n                    break;\r\n                case 'addCursorLineEnds':\r\n                    this.editor.cursor.addCursorLineEnds();\r\n                    break;\r\n                case 'addNextOccurence':\r\n                    this.editor.searchWord('down');\r\n                    break;\r\n                case 'addPrevOccurence':\r\n                    this.editor.searchWord('up');\r\n                    break;\r\n                case 'selectAllOccurence':\r\n                    this.editor.selecter.selectAllOccurence();\r\n                    break;\r\n                case 'switchMultiKeyCode':\r\n                    this.editor.cursor.switchMultiKeyCode();\r\n                    item.keyCode = this.editor.cursor.multiKeyCode;\r\n                    item.name = `Switch ${item.keyCode === 'alt' ? 'Ctrl' : 'Alt'}+Click to Multi-Cursor`;\r\n                    break;\r\n            }\r\n            this.editor.focus();\r\n            this.selectionMenuVisible = false;\r\n        },\r\n        onPreferenceMenuChange(item) {\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    this.$emit('change', item);\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    this.$emit('change', item);\r\n            }\r\n            this.preferenceMenuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./TitleBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./TitleBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleBar.vue?vue&type=template&id=020a2e8f&\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-status-bar my-width-100\",style:({ height: _vm.height + 'px' }),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100 my-center-between\"},[_c('div',{staticClass:\"bar-left\"},[(_vm.hasEditor)?_c('div',{staticClass:\"bar-item\"},[_c('span',[_vm._v(\"Line \"+_vm._s(_vm.line)+\", Column \"+_vm._s(_vm.column))])]):_vm._e()]),_c('div',{staticClass:\"bar-right\"},[(_vm.hasEditor)?_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showTabsize.apply(null, arguments)}}},[_c('span',[_vm._v(\"Tab Size:\"+_vm._s(_vm.tabSize))]),_c('div',{staticClass:\"my-list\",staticStyle:{\"position\":\"absolute\",\"bottom\":\"30px\"}},[(_vm.tabsizeVisible)?_c('Menu',{attrs:{\"menuList\":_vm.tabSizeList,\"styles\":{ position: 'relative' },\"value\":_vm.tabSize},on:{\"change\":_vm.onTabsizeChange}}):_vm._e()],1)]):_vm._e(),(_vm.hasEditor)?_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showLanguage.apply(null, arguments)}}},[_c('span',[_vm._v(_vm._s(_vm.nowLanguage))])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"{ height: height + 'px' }\" @contextmenu.stop.prevent class=\"my-status-bar my-width-100\">\r\n        <div class=\"my-height-100 my-center-between\">\r\n            <div class=\"bar-left\">\r\n                <div class=\"bar-item\" v-if=\"hasEditor\">\r\n                    <span>Line {{ line }}, Column {{ column }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"bar-right\">\r\n                <div @mousedown.stop=\"showTabsize\" class=\"bar-item my-hover\" v-if=\"hasEditor\">\r\n                    <span>Tab Size:{{ tabSize }}</span>\r\n                    <div class=\"my-list\" style=\"position: absolute; bottom: 30px\">\r\n                        <Menu\r\n                            :menuList=\"tabSizeList\"\r\n                            :styles=\"{ position: 'relative' }\"\r\n                            :value=\"tabSize\"\r\n                            @change=\"onTabsizeChange\"\r\n                            v-if=\"tabsizeVisible\"\r\n                        ></Menu>\r\n                    </div>\r\n                </div>\r\n                <div @mousedown.stop=\"showLanguage\" class=\"bar-item my-hover\" v-if=\"hasEditor\">\r\n                    <span>{{ nowLanguage }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from './Menu';\r\nimport EventBus from '@/event';\r\n\r\nexport default {\r\n    name: 'StatusBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25,\r\n        },\r\n        languageList: Array,\r\n    },\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            line: 1,\r\n            column: 0,\r\n            tabSize: 4,\r\n            language: '',\r\n            tabsizeVisible: false,\r\n            hasEditor: false,\r\n            tabSizeList: [],\r\n            languages: [[]],\r\n            languageMap: {},\r\n        };\r\n    },\r\n    watch: {\r\n        languageList() {\r\n            let languageMap = {};\r\n            this.languageList.forEach((item) => {\r\n                languageMap[item.value] = item.name;\r\n            });\r\n            this.languages = [this.languageList];\r\n            this.languageMap = languageMap;\r\n        },\r\n    },\r\n    computed: {\r\n        nowLanguage() {\r\n            return this.languageMap[this.language];\r\n        },\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n        for (let i = 1; i <= 8; i++) {\r\n            this.tabSizeList.push({\r\n                name: `Tab Width：${i}`,\r\n                value: i,\r\n            });\r\n        }\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('tab-change', (data) => {\r\n                if (data) {\r\n                    this.language = data.language;\r\n                    this.tabSize = data.tabSize;\r\n                    this.line = data.line;\r\n                    this.column = data.column;\r\n                    this.hasEditor = true;\r\n                } else {\r\n                    this.hasEditor = false;\r\n                }\r\n            });\r\n            EventBus.$on('cursor-change', (data) => {\r\n                this.line = data.line;\r\n                this.column = data.column;\r\n            });\r\n            EventBus.$on('language-change', (language) => {\r\n                this.language = language;\r\n            });\r\n            EventBus.$on('close-menu', (language) => {\r\n                this.tabsizeVisible = false;\r\n            });\r\n        },\r\n        showTabsize() {\r\n            let visible = this.tabsizeVisible;\r\n            EventBus.$emit('close-menu');\r\n            this.tabsizeVisible = !visible;\r\n        },\r\n        showLanguage() {\r\n            EventBus.$emit('close-menu');\r\n            this.$emit('select-langeuage');\r\n        },\r\n        onTabsizeChange(item) {\r\n            if (this.tabSize != item.value) {\r\n                EventBus.$emit('tab-size-change', item.value);\r\n                this.tabSize = item.value;\r\n            }\r\n            this.tabsizeVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatusBar.vue?vue&type=template&id=67eb5ef1&\"\nimport script from \"./StatusBar.vue?vue&type=script&lang=js&\"\nexport * from \"./StatusBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"sideBar\",staticClass:\"my-side-bar\",style:({ width: _vm.width + 'px' }),on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)},\"selectstart\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100\",staticStyle:{\"overflow\":\"hidden\"}},[_c('div',{staticClass:\"side-bar-title my-shadow\"},[_vm._v(\"EXPLORER\")]),_c('side-tree',{attrs:{\"list\":_vm.list}})],1),_c('SideBarMenu',{ref:\"sideBarMenu\"}),_c('div',{staticClass:\"my-sash-v\",on:{\"mousedown\":_vm.onSashBegin}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrap\",staticClass:\"side-tree-warp my-scroll-overlay\",on:{\"scroll\":_vm.onScroll}},[_c('div',{staticStyle:{\"width\":\"100%\",\"overflow\":\"hidden\"}},[_c('div',{staticClass:\"side-tree\",style:({ height: _vm._scrollHeight })},[_c('div',{staticClass:\"side-tree-content\",style:({ top: _vm._top })},_vm._l((_vm.renderList),function(item){return _c('div',{staticClass:\"tree-item\",on:{\"click\":function($event){$event.stopPropagation();return _vm.onClickItem(item)}}},[_c('div',{staticClass:\"tree-item-title my-center-start\",class:[item.active ? 'my-active' : ''],style:({ 'padding-left': _vm._paddingLeft(item) }),attrs:{\"title\":item.path},on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[(item.type === 'dir')?[(item.open)?_c('span',{staticClass:\"left-icon iconfont icon-down1\"}):_c('span',{staticClass:\"left-icon iconfont icon-right\"})]:_vm._e(),_c('div',{staticClass:\"tree-item-content my-center-start\",class:[item.icon]},[_c('span',{staticClass:\"tree-item-text\",staticStyle:{\"margin-left\":\"4px\"}},[_vm._v(_vm._s(item.name))])])],2)])}),0)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @scroll=\"onScroll\" class=\"side-tree-warp my-scroll-overlay\" ref=\"wrap\">\r\n        <div style=\"width: 100%; overflow: hidden\">\r\n            <div :style=\"{ height: _scrollHeight }\" class=\"side-tree\">\r\n                <div :style=\"{ top: _top }\" class=\"side-tree-content\">\r\n                    <div @click.stop=\"onClickItem(item)\" class=\"tree-item\" v-for=\"item in renderList\">\r\n                        <div\r\n                            :class=\"[item.active ? 'my-active' : '']\"\r\n                            :style=\"{ 'padding-left': _paddingLeft(item) }\"\r\n                            :title=\"item.path\"\r\n                            @contextmenu.stop.prevent\r\n                            class=\"tree-item-title my-center-start\"\r\n                        >\r\n                            <template v-if=\"item.type === 'dir'\">\r\n                                <span class=\"left-icon iconfont icon-down1\" v-if=\"item.open\"></span>\r\n                                <span class=\"left-icon iconfont icon-right\" v-else></span>\r\n                            </template>\r\n                            <div class=\"tree-item-content my-center-start\" :class=\"[item.icon]\">\r\n                                <span class=\"tree-item-text\" style=\"margin-left: 4px\">{{ item.name }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EventBus from '@/event';\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nlet preActiveItem = null;\r\n\r\nexport default {\r\n    name: 'SideTree',\r\n    props: {\r\n        list: {\r\n            type: Array,\r\n        },\r\n    },\r\n    inject: ['openFile'],\r\n    data() {\r\n        return {\r\n            itemHeight: 30,\r\n            itemPadding: 16,\r\n            openedList: [],\r\n            renderList: [],\r\n            startLine: 1,\r\n            maxVisibleLines: 100,\r\n        };\r\n    },\r\n    computed: {\r\n        _top() {\r\n            return (this.startLine - 1) * this.itemHeight + 'px';\r\n        },\r\n        _scrollHeight() {\r\n            return this.openedList.length * this.itemHeight + 'px';\r\n        },\r\n        _paddingLeft() {\r\n            return function (item) {\r\n                return item.deep * this.itemPadding + 'px';\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        list() {\r\n            this.openedList = [];\r\n            this.renderList = [];\r\n            this.openedList = this.getRenderList(this.list, 0);\r\n            this.render();\r\n        },\r\n    },\r\n    created() {\r\n        this.openedList = this.getRenderList(this.list, 0);\r\n        this.initEventBus();\r\n    },\r\n    mounted() {\r\n        this.maxVisibleLines = Math.ceil(this.$refs.wrap.clientHeight / this.itemHeight) + 1;\r\n        this.render();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('icon-change', () => {\r\n                this.openedList.forEach((item) => {\r\n                    item.icon = '';\r\n                });\r\n                this.render();\r\n            });\r\n            EventBus.$on('theme-change', () => {\r\n                this.openedList.forEach((item) => {\r\n                    item.icon = '';\r\n                });\r\n                this.render();\r\n            });\r\n            EventBus.$on('tab-change', (data) => {\r\n                let path = data && data.path;\r\n                if (path && preActiveItem && preActiveItem.path !== path) {\r\n                    preActiveItem.active = false;\r\n                    this.focusItem(path);\r\n                } else if (!path && preActiveItem) {\r\n                    preActiveItem.active = false;\r\n                    preActiveItem = null;\r\n                }\r\n            });\r\n        },\r\n        render() {\r\n            this.renderList = this.openedList.slice(this.startLine - 1, this.startLine - 1 + this.maxVisibleLines);\r\n            this.renderList.forEach((item) => {\r\n                if (globalData.nowIconData) {\r\n                    item.icon = Util.getIconByPath(globalData.nowIconData, item.path, globalData.nowTheme.type, item.type, item.open);\r\n                    item.icon = item.icon ? `my-file-icon my-file-icon-${item.icon}` : '';\r\n                }\r\n            });\r\n        },\r\n        readdir(dirPath) {\r\n            const fs = require('fs');\r\n            const path = require('path');\r\n            return new Promise((resolve) => {\r\n                let results = [];\r\n                // 异步读取目录内容\r\n                fs.readdir(dirPath, { encoding: 'utf8' }, (err, files) => {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                    files.forEach((item, index) => {\r\n                        let fullPath = path.join(dirPath, item);\r\n                        let state = fs.statSync(fullPath);\r\n                        let obj = {\r\n                            name: item,\r\n                            path: fullPath,\r\n                            parentPath: dirPath,\r\n                            active: false,\r\n                            children: [],\r\n                        };\r\n                        if (state.isFile()) {\r\n                            obj.type = 'file';\r\n                        } else {\r\n                            obj.type = 'dir';\r\n                            obj.open = false;\r\n                        }\r\n                        results.push(obj);\r\n                        if (index === files.length - 1) {\r\n                            resolve(this.sortFileList(results));\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        sortFileList(results) {\r\n            results.sort((a, b) => {\r\n                if (a.type === 'dir' && b.type === 'file') {\r\n                    return -1;\r\n                } else if (a.type === 'file' && b.type === 'dir') {\r\n                    return 1;\r\n                } else if (a.name > b.name) {\r\n                    return 1;\r\n                } else if (a.name < b.name) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            return results;\r\n        },\r\n        getRenderList(list, deep) {\r\n            let results = [];\r\n            _loopList(list, deep);\r\n            return results;\r\n\r\n            function _loopList(list, deep) {\r\n                list.forEach((item) => {\r\n                    item.deep = deep + 1;\r\n                    results.push(item);\r\n                    if (item.open && item.children.length) {\r\n                        _loopList(item.children, item.deep);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusItem(path) {\r\n            let index = 0;\r\n            _findItem.call(this, path);\r\n\r\n            function _findItem(path) {\r\n                for (let i = index; i < this.openedList.length; i++) {\r\n                    let item = this.openedList[i];\r\n                    if (item.path === path) {\r\n                        let wrap = this.$refs.wrap;\r\n                        let scrollTop = wrap.scrollTop;\r\n                        let clientHeight = wrap.clientHeight;\r\n                        let height = (i + 1) * this.itemHeight;\r\n                        if (scrollTop + clientHeight < height) {\r\n                            wrap.scrollTop = height - clientHeight;\r\n                        } else if (scrollTop + this.itemHeight > height) {\r\n                            wrap.scrollTop = height - this.itemHeight;\r\n                        }\r\n                        if (!item.active) {\r\n                            this.onClickItem(item);\r\n                        }\r\n                        break;\r\n                    } else if (path.startsWith(item.path)) {\r\n                        if (!item.open) {\r\n                            index = i + 1;\r\n                            this.onClickItem(item).then(() => {\r\n                                _findItem.call(this, path);\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onClickItem(item) {\r\n            if (!item.active) {\r\n                if (preActiveItem) {\r\n                    preActiveItem.active = false;\r\n                }\r\n                item.active = true;\r\n                preActiveItem = item;\r\n                if (item.type === 'dir') {\r\n                    item.open = !item.open;\r\n                    if (!item.loaded) {\r\n                        return this.readdir(item.path).then((data) => {\r\n                            item.children = data;\r\n                            item.loaded = true;\r\n                            data.forEach((_item) => {\r\n                                _item.deep = item.deep + 1;\r\n                            });\r\n                            _changOpen.call(this, item);\r\n                        });\r\n                    } else {\r\n                        _changOpen.call(this, item);\r\n                    }\r\n                } else {\r\n                    this.openFile(item);\r\n                }\r\n            } else if (item.type === 'dir') {\r\n                item.open = !item.open;\r\n                _changOpen.call(this, item);\r\n            }\r\n            return Promise.resolve();\r\n\r\n            function _changOpen(item) {\r\n                if (item.children.length) {\r\n                    if (item.open) {\r\n                        let index = this.openedList.indexOf(item);\r\n                        this.openedList = this.openedList\r\n                            .slice(0, index + 1)\r\n                            .concat(this.getRenderList(item.children, item.deep))\r\n                            .concat(this.openedList.slice(index + 1));\r\n                    } else {\r\n                        let index = this.openedList.indexOf(item) + 1;\r\n                        let endIn = index;\r\n                        while (endIn < this.openedList.length && this.openedList[endIn].parentPath != item.parentPath) {\r\n                            endIn++;\r\n                        }\r\n                        this.openedList.splice(index, endIn - index);\r\n                    }\r\n                    this.render();\r\n                }\r\n            }\r\n        },\r\n        onScroll(e) {\r\n            let scrollTop = e.target.scrollTop;\r\n            this.startLine = Math.floor(scrollTop / this.itemHeight) + 1;\r\n            this.render();\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideTree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideTree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideTree.vue?vue&type=template&id=4d5a5b30&\"\nimport script from \"./SideTree.vue?vue&type=script&lang=js&\"\nexport * from \"./SideTree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"wrap\"},[_c('Menu',{ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\" v-show=\"menuVisible\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from \"./Menu\";\r\nimport EventBus from \"@/event\";\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            list: [],\r\n            menuList: [],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"10px\",\r\n                top: \"40px\",\r\n            },\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            rootList: this.list,\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n            EventBus.$on(\"open-side-menu\", () => {\r\n                this.menuVisible = true;\r\n            });\r\n        },\r\n        show(e) {\r\n            let $parent = $(this.$refs.wrap).parent();\r\n            this.$nextTick(() => {\r\n                let menuWidth = 0;\r\n                let menuHeight = 0;\r\n                menuWidth = this.$refs.menu.$el.clientWidth;\r\n                menuHeight = this.$refs.menu.$el.clientHeight;\r\n                let offset = $parent.offset();\r\n                if (menuHeight + e.clientY > offset.top + $parent.height()) {\r\n                    this.menuStyle.top =\r\n                        e.clientY - offset.top - menuHeight + \"px\";\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n                }\r\n                this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBarMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBarMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideBarMenu.vue?vue&type=template&id=bccab2a0&\"\nimport script from \"./SideBarMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./SideBarMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div\r\n        @contextmenu.prevent.stop=\"onContextmenu\"\r\n        @selectstart.prevent\r\n        class=\"my-side-bar\"\r\n        ref=\"sideBar\"\r\n        :style=\"{ width: width + 'px' }\"\r\n    >\r\n        <div class=\"my-height-100\" style=\"overflow: hidden\">\r\n            <div class=\"side-bar-title my-shadow\">EXPLORER</div>\r\n            <side-tree :list=\"list\"></side-tree>\r\n        </div>\r\n        <SideBarMenu ref=\"sideBarMenu\"></SideBarMenu>\r\n        <div class=\"my-sash-v\" @mousedown=\"onSashBegin\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport SideTree from './SideTree';\r\nimport SideBarMenu from './SideBarMenu';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n    components: {\r\n        SideTree,\r\n        SideBarMenu,\r\n    },\r\n    data() {\r\n        return {\r\n            width: 300,\r\n            list: [],\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            getRootList: () => {\r\n                return this.list;\r\n            },\r\n        };\r\n    },\r\n    mounted() {\r\n        this.initEvent();\r\n    },\r\n    methods: {\r\n        initEvent() {\r\n            $(document)\r\n                .on('mousemove', (e) => {\r\n                    if (this.mouseObj) {\r\n                        let width = (this.width += e.clientX - this.mouseObj.clientX);\r\n                        let pWidth = $(this.$refs.sideBar).parent().width();\r\n                        width = width < 10 ? 10 : width;\r\n                        width = width > pWidth - 10 ? pWidth - 10 : width;\r\n                        this.width = width;\r\n                        this.mouseObj = e;\r\n                    }\r\n                })\r\n                .on('mouseup', (e) => {\r\n                    this.mouseObj = null;\r\n                });\r\n        },\r\n        onContextmenu(e) {\r\n            // EventBus.$emit(\"open-side-menu\");\r\n        },\r\n        onSashBegin(e) {\r\n            this.originMouseObj = e;\r\n            this.mouseObj = e;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideBar.vue?vue&type=template&id=36596f36&\"\nimport script from \"./SideBar.vue?vue&type=script&lang=js&\"\nexport * from \"./SideBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.overlay)?_c('div',{staticClass:\"my-dialog-overlay\"}):_vm._e(),_c('div',{staticClass:\"my-dialog\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"dialog-title\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.title)}}),_c('span',{staticClass:\"dialog-close iconfont icon-close\",on:{\"click\":_vm.onClose}})]),_c('div',{staticClass:\"dialog-content\"},[(_vm.icon)?_c('span',{class:[_vm.icon],staticStyle:{\"margin-right\":\"5px\",\"width\":\"30px\",\"height\":\"30px\"}}):_vm._e(),_c('div',[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])]),_c('div',{staticClass:\"dialog-btns\"},[_vm._l((_vm.btns),function(item){return _c('div',{staticClass:\"dialog-btn\",on:{\"click\":function($event){return _vm.onClickBtn(item)}}},[_vm._v(_vm._s(item.name))])}),_c('div',{staticClass:\"dialog-btn\",on:{\"click\":function($event){return _vm.onClose()}}},[_vm._v(\"取消\")])],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n * @Author: lisong\n * @Date: 2021-12-24 11:00:11\n * @Description: \n-->\n<template>\n\t<div>\n\t\t<div class=\"my-dialog-overlay\" v-if=\"overlay\"></div>\n\t\t<div :style=\"styles\" @mousedown.stop class=\"my-dialog\">\n\t\t\t<div class=\"dialog-title\">\n\t\t\t\t<div v-html=\"title\"></div>\n\t\t\t\t<span @click=\"onClose\" class=\"dialog-close iconfont icon-close\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"dialog-content\">\n\t\t\t\t<span :class=\"[icon]\" style=\"margin-right:5px;width:30px;height:30px;\" v-if=\"icon\"></span>\n\t\t\t\t<div>\n\t\t\t\t\t<div v-html=\"content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dialog-btns\">\n\t\t\t\t<div @click=\"onClickBtn(item)\" class=\"dialog-btn\" v-for=\"item in btns\">{{item.name}}</div>\n\t\t\t\t<div @click=\"onClose()\" class=\"dialog-btn\">取消</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n    name: 'Dialog',\n    props: {\n        title: String,\n        content: String,\n        btns: Array,\n        overlay: Boolean,\n        styles: Object,\n        icon: String,\n        iconColor: String,\n    },\n    data() {\n        return {\n        }\n    },\n    created() {\n    },\n    methods: {\n        onClickBtn(item) {\n            item.callback();\n        },\n        onClose() {\n            this.$emit('close');\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dialog.vue?vue&type=template&id=3fea6a40&\"\nimport script from \"./Dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./Dialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"wrap\"},[_c('Menu',{ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\" v-show=\"menuVisible\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from \"./Menu.vue\";\r\nimport EventBus from \"@/event\";\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n    name: \"WindowMenu\",\r\n    components: {\r\n        Menu,\r\n    },\r\n    props: {\r\n        styles: {\r\n            type: Object,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            menuList: [],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n            EventBus.$on(\"open-win-menu\", () => {\r\n                this.menuVisible = true;\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n        show(e) {\r\n            this.menuVisible = true;\r\n            this.$nextTick(() => {\r\n                let $parent = $(this.$refs.wrap).parent();\r\n                let offset = $parent.offset();\r\n                let menuWidth = this.$refs.menu.$el.clientWidth;\r\n                let menuHeight = this.$refs.menu.$el.clientHeight;\r\n                if (\r\n                    menuHeight + e.clientY >\r\n                    offset.top + $parent[0].clientHeight\r\n                ) {\r\n                    this.menuStyle.top =\r\n                        e.clientY - offset.top - menuHeight + \"px\";\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n                }\r\n                if (\r\n                    menuWidth + e.clientX >\r\n                    offset.left + $parent[0].clientWidth\r\n                ) {\r\n                    this.menuStyle.left =\r\n                        e.clientX - offset.left - menuWidth + \"px\";\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n                }\r\n            });\r\n        },\r\n        hide() {\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./WindowMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./WindowMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WindowMenu.vue?vue&type=template&id=3b84567e&\"\nimport script from \"./WindowMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./WindowMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.visible)?_c('div',{staticClass:\"my-cmd-panel my-list\",on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',[_c('div',{staticClass:\"my-cmd-search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchText),expression:\"searchText\"}],ref:\"input\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.searchText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchText=$event.target.value}}})]),_c('div',[_c('Menu',{staticClass:\"my-scroll-overlay my-scroll-mini\",staticStyle:{\"position\":\"relative\"},attrs:{\"checkable\":true,\"menuList\":_vm.cmdList,\"value\":_vm.value,\"spellcheck\":\"false\"},on:{\"change\":_vm.onChange}})],1)])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-22 23:00:49\r\n * @Description:\r\n */\r\nimport Util from '../../common/util';\r\nimport globalData from '@/data/globalData';\r\nimport chroma from 'chroma-js';\r\nimport EventBus from '@/event';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\nconst settingMap = {\r\n    foreground: 'color',\r\n    background: 'background-color',\r\n    fontStyle: 'font-style',\r\n};\r\n\r\nexport default class {\r\n    constructor() {}\r\n    loadTheme(option) {\r\n        let result = { tokenColors: [], colors: {} };\r\n        return _loadTheme.call(this, option.path).then(() => {\r\n            let css = '';\r\n            this.setDefaultColor(result, option.type);\r\n            css = this.parseCss(result);\r\n            this.insertCss(css);\r\n            globalData.nowTheme = {\r\n                value: option.value,\r\n                type: option.type,\r\n                path: option.path,\r\n            };\r\n            EventBus.$emit('theme-change', option.value);\r\n        });\r\n\r\n        function _loadTheme(fullPath) {\r\n            return Util.loadJsonFile(fullPath).then((data) => {\r\n                if (data.include) {\r\n                    return _loadTheme.call(this, path.join(fullPath, '../' + data.include)).then(() => {\r\n                        _addColors(data);\r\n                    });\r\n                } else {\r\n                    _addColors(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        function _addColors(data) {\r\n            data.tokenColors && result.tokenColors.push(...data.tokenColors);\r\n            data.colors && Object.assign(result.colors, data.colors);\r\n        }\r\n    }\r\n    loadIconTheme(option) {\r\n        if (!option.path) {\r\n            globalData.nowIconTheme = {\r\n                value: option.value,\r\n            };\r\n            globalData.nowIconData = null;\r\n            EventBus.$emit('icon-change');\r\n            return Promise.resolve();\r\n        }\r\n        let languages = globalData.languageList;\r\n        let languageMap = {};\r\n        languages.forEach((item) => {\r\n            if (item.extensions) {\r\n                languageMap[item.value] = item.extensions.map((e) => {\r\n                    return e.slice(1);\r\n                });\r\n            }\r\n        });\r\n\r\n        return _loadTheme.call(this, option.path);\r\n\r\n        function _loadTheme(fullPath) {\r\n            return Util.loadJsonFile(fullPath).then((data) => {\r\n                let fonts = data.fonts || [];\r\n                let css = '';\r\n                fonts.forEach((font) => {\r\n                    let fontFace = '@font-face{\\nsrc:';\r\n                    font.src.forEach((src, index) => {\r\n                        let url = path.join(fullPath, '../' + src.path);\r\n                        url = url.replace(/\\\\/g, '/');\r\n                        fontFace += `url('my-file://${url}')`;\r\n                        fontFace += ` format('${src.format}')`;\r\n                        fontFace += index < font - src.length - 1 ? ', ' : '';\r\n                    });\r\n                    fontFace += ';\\n';\r\n                    fontFace += `font-family:${font.id};\\n`;\r\n                    fontFace += `font-style:${font.style};\\n`;\r\n                    fontFace += `font-weight:${font.weight};\\n`;\r\n                    fontFace += '}\\n';\r\n                    css += fontFace;\r\n                    css += '.my-file-icon::before{\\n';\r\n                    css += `font-family:${font.id};\\n`;\r\n                    css += `font-size:${font.size};\\n`;\r\n                    css += '}\\n';\r\n                });\r\n                for (let icon in data.iconDefinitions) {\r\n                    css += `.my-file-icon-${icon}::before{\\n`;\r\n                    icon = data.iconDefinitions[icon];\r\n                    if (icon.fontCharacter) {\r\n                        css += 'margin-top:3px;';\r\n                        css += `content:\"${icon.fontCharacter}\";\\n`;\r\n                        css += `color:${icon.fontColor};\\n`;\r\n                    } else if (icon.iconPath) {\r\n                        let imgUrl = path.join(fullPath, '../' + icon.iconPath);\r\n                        imgUrl = imgUrl.replace(/\\\\/g, '/');\r\n                        css += 'content:\"\";';\r\n                        css += `background-image:url(my-file://${imgUrl})`;\r\n                    }\r\n                    css += '}\\n';\r\n                }\r\n                this.insertFont(css);\r\n                data.fileNames = data.fileNames || {};\r\n                data.fileExtensions = data.fileExtensions || {};\r\n                _setFileExtensions(data);\r\n                globalData.nowIconTheme = {\r\n                    value: option.value,\r\n                    path: option.path,\r\n                };\r\n                globalData.nowIconData = data;\r\n                EventBus.$emit('icon-change', option.value);\r\n            });\r\n        }\r\n\r\n        function _setFileExtensions(data) {\r\n            data.languageIds && _parseLanguageIds(data.languageIds, data.fileExtensions);\r\n            if (data.light) {\r\n                data.light.fileExtensions = data.light.fileExtensions || {};\r\n                data.light.fileNames = data.light.fileNames || {};\r\n                data.light.languageIds && _parseLanguageIds(data.light.languageIds, data.light.fileExtensions);\r\n                for (let key in data.fileExtensions) {\r\n                    data.light.fileExtensions[key] = data.light.fileExtensions[key] || data.fileExtensions[key];\r\n                }\r\n                for (let key in data.fileNames) {\r\n                    data.light.fileNames[key] = data.light.fileNames[key] || data.fileNames[key];\r\n                }\r\n            } else {\r\n                data.light = {\r\n                    fileExtensions: data.fileExtensions,\r\n                    fileNames: data.fileNames,\r\n                };\r\n            }\r\n        }\r\n\r\n        function _parseLanguageIds(languageIds, fileExtensions) {\r\n            for (let key in languageIds) {\r\n                let extensions = languageMap[key];\r\n                let value = languageIds[key];\r\n                if (extensions) {\r\n                    extensions.forEach((item) => {\r\n                        fileExtensions[item] = value;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parseCss(data) {\r\n        let css = '';\r\n        let scopeId = 1;\r\n        let scopeTokenList = [];\r\n        let dotReg = /\\./g;\r\n        let sReg = /\\s+/g;\r\n        if (data.colors) {\r\n            css += ':root{\\n';\r\n            for (let key in data.colors) {\r\n                css += `--my-${key.replace(/\\./g, '-')}: ${data.colors[key]};\\n`;\r\n            }\r\n            css += '}\\n';\r\n        }\r\n        if (data.tokenColors) {\r\n            data.tokenColors.forEach((token) => {\r\n                if (!token.scope) {\r\n                    return;\r\n                }\r\n                let selector = [];\r\n                let scope = token.scope instanceof Array ? token.scope.join(',') : token.scope;\r\n                scope = scope.replace(/\\s+/g, ' ');\r\n                scope = scope.split(/\\s*\\,\\s*/);\r\n                scope.forEach((scope, index) => {\r\n                    selector.push(`.my-scope-${scopeId}`);\r\n                    scopeTokenList.push({\r\n                        scopeId: scopeId,\r\n                        scope: scope,\r\n                        scopes: scope.split(' '),\r\n                        level: _getLevel(scope),\r\n                    });\r\n                    scopeId++;\r\n                });\r\n                selector = selector.join(',');\r\n                css += `${selector}{\\n`;\r\n                for (let prop in token.settings) {\r\n                    css += `${settingMap[prop]}:${token.settings[prop]};\\n`;\r\n                }\r\n                css += '}\\n';\r\n            });\r\n        }\r\n        scopeTokenList.sort((a, b) => {\r\n            return b.level - a.level;\r\n        });\r\n        scopeTokenList.forEach((item) => {\r\n            if (item.scopes.length > 1) {\r\n                item.regexp = item.scopes.join('(?:\\\\.[^\\\\.\\\\s]+)*?(?:\\\\s[^\\\\s]+)*? ');\r\n            } else {\r\n                item.regexp = item.scope;\r\n            }\r\n            item.regexp = new RegExp(item.regexp);\r\n        });\r\n        globalData.scopeTokenList = scopeTokenList;\r\n        globalData.colors = data.colors;\r\n        return css;\r\n\r\n        function _getLevel(scope) {\r\n            let dot = scope.match(dotReg);\r\n            let s = scope.match(sReg);\r\n            dot = (dot && dot.length) || 0;\r\n            s = (s && s.length * 1000) || 0;\r\n            return dot + s;\r\n        }\r\n    }\r\n    insertCss(css) {\r\n        if (globalData.themeStyle) {\r\n            globalData.themeStyle.remove();\r\n        }\r\n        globalData.themeStyle = document.createElement('style');\r\n        globalData.themeStyle.type = 'text/css';\r\n        globalData.themeStyle.appendChild(document.createTextNode(css));\r\n        document.getElementsByTagName('head')[0].appendChild(globalData.themeStyle);\r\n    }\r\n    insertFont(css) {\r\n        if (globalData.iconStyle) {\r\n            globalData.iconStyle.remove();\r\n        }\r\n        globalData.iconStyle = document.createElement('style');\r\n        globalData.iconStyle.type = 'text/css';\r\n        globalData.iconStyle.appendChild(document.createTextNode(css));\r\n        document.getElementsByTagName('head')[0].appendChild(globalData.iconStyle);\r\n    }\r\n    setDefaultColor(result, type) {\r\n        let transparent = 'transparent';\r\n        let foreground = '';\r\n        let background = '';\r\n        let focusBorder = '';\r\n        let contrastBorder = '';\r\n        let contrastActiveBorder = '';\r\n        let isLight = type === 'light' || type === 'contrast light';\r\n        let isHc = type === 'contrast light' || type === 'contrast dark';\r\n\r\n        _base();\r\n        _scrollbar();\r\n        _titleBar();\r\n        _dropdown();\r\n        _list();\r\n        _menu();\r\n        _statusBar();\r\n        _sideBar();\r\n        _editor();\r\n        _tab();\r\n        _editorWidget();\r\n        _input();\r\n        _toolbar();\r\n\r\n        // base\r\n        function _base() {\r\n            if (!result.colors['foreground']) {\r\n                if (result.colors['editor.foreground']) {\r\n                    result.colors['foreground'] = chroma(result.colors['editor.foreground']).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['foreground'] = '#575757';\r\n                } else {\r\n                    result.colors['foreground'] = 'rgb(221, 221, 221)';\r\n                }\r\n            }\r\n            if (!result.colors['errorForeground']) {\r\n                result.colors['errorForeground'] = '#ff0000';\r\n            }\r\n            if (!result.colors['background']) {\r\n                if (result.colors['editor.background']) {\r\n                    result.colors['background'] = chroma(result.colors['editor.background']).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['background'] = '#fff';\r\n                } else if (isHc) {\r\n                    result.colors['background'] = '#000';\r\n                } else {\r\n                    result.colors['background'] = 'rgba(60,60,60)';\r\n                }\r\n            }\r\n            if (!result.colors['focusBorder']) {\r\n                if (isHc) {\r\n                    if (isLight) {\r\n                        result.colors['focusBorder'] = '#0f4a85';\r\n                    } else {\r\n                        result.colors['focusBorder'] = '#f38518';\r\n                    }\r\n                } else {\r\n                    result.colors['focusBorder'] = '#0066b8';\r\n                }\r\n            }\r\n            if (!result.colors['contrastBorder']) {\r\n                if (isHc) {\r\n                    if (isLight) {\r\n                        result.colors['contrastBorder'] = '#0f4a85';\r\n                    } else {\r\n                        result.colors['contrastBorder'] = '#6fc3df';\r\n                    }\r\n                } else {\r\n                    result.colors['contrastBorder'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['contrastActiveBorder']) {\r\n                if (isHc) {\r\n                    result.colors['contrastActiveBorder'] = result.colors['focusBorder'];\r\n                } else {\r\n                    result.colors['contrastActiveBorder'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['widget.shadow']) {\r\n                if (isHc) {\r\n                    result.colors['widget.shadow'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['widget.shadow'] = 'rgba(0,0,0,0.16)';\r\n                } else {\r\n                    result.colors['widget.shadow'] = 'rgba(0,0,0,0.36)';\r\n                }\r\n            }\r\n            if (!result.colors['sash.hoverBorder']) {\r\n                if (isHc) {\r\n                    result.colors['sash.hoverBorder'] = result.colors['contrastActiveBorder'];\r\n                } else {\r\n                    result.colors['sash.hoverBorder'] = result.colors['focusBorder'];\r\n                }\r\n            }\r\n            if (!result.colors['selection.background']) {\r\n                result.colors['selection.background'] = result.colors['focusBorder'];\r\n            }\r\n            background = result.colors['background'];\r\n            foreground = result.colors['foreground'];\r\n            focusBorder = result.colors['focusBorder'];\r\n            contrastBorder = result.colors['contrastBorder'];\r\n            contrastActiveBorder = result.colors['contrastActiveBorder'];\r\n        }\r\n        function _scrollbar() {\r\n            if (!result.colors['scrollbar.shadow']) {\r\n                result.colors['scrollbar.shadow'] = transparent;\r\n            }\r\n            if (!result.colors['scrollbarSlider.background']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.background'] = chroma(contrastBorder).alpha(0.6).css();\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.background'] = 'rgba(100, 100, 100, 0.4)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.background'] = 'rgba(121, 121, 121, 0.4);';\r\n                }\r\n            }\r\n            if (!result.colors['scrollbarSlider.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = chroma(contrastBorder).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = 'rgba(100, 100, 100, 0.7)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = 'rgba(100, 100, 100, 0.7);';\r\n                }\r\n            }\r\n            if (!result.colors['scrollbarSlider.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.activeBackground'] = contrastBorder;\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.activeBackground'] = 'rgba(0, 0, 0, 0.6)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.activeBackground'] = 'rgba(191, 191, 191, 0.4);';\r\n                }\r\n            }\r\n        }\r\n        //titleBar\r\n        function _titleBar() {\r\n            if (!result.colors['titleBar.border']) {\r\n                result.colors['titleBar.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['titleBar.activeForeground']) {\r\n                result.colors['titleBar.activeForeground'] = foreground;\r\n            }\r\n            if (!result.colors['titleBar.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['titleBar.activeBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['titleBar.activeBackground'] = 'rgb(221, 221, 221)';\r\n                }\r\n            }\r\n            if (!result.colors['menubar.selectionForeground']) {\r\n                result.colors['menubar.selectionForeground'] = foreground;\r\n            }\r\n            if (!result.colors['menubar.selectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['menubar.selectionBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['menubar.selectionBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['menubar.selectionBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['menubar.selectionBorder']) {\r\n                if (isHc) {\r\n                    result.colors['menubar.selectionBorder'] = contrastActiveBorder;\r\n                } else {\r\n                    result.colors['menubar.selectionBorder'] = transparent;\r\n                }\r\n            }\r\n        }\r\n        // dropdown\r\n        function _dropdown() {\r\n            if (!result.colors['dropdown.background']) {\r\n                if (isHc) {\r\n                    result.colors['dropdown.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['dropdown.background'] = '#eee';\r\n                } else {\r\n                    result.colors['dropdown.background'] = 'rgba(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['dropdown.foreground']) {\r\n                result.colors['dropdown.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['dropdown.border']) {\r\n                result.colors['dropdown.border'] = contrastBorder;\r\n            }\r\n        }\r\n        // list\r\n        function _list() {\r\n            if (!result.colors['list.highlightForeground']) {\r\n                if (isHc) {\r\n                    result.colors['list.highlightForeground'] = contrastBorder;\r\n                } else {\r\n                    result.colors['list.highlightForeground'] = foreground;\r\n                }\r\n            }\r\n            if (!result.colors['list.activeSelectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['list.activeSelectionBackground'] = transparent;\r\n                } else {\r\n                    result.colors['list.activeSelectionBackground'] = '#0066b8';\r\n                    result.colors['list.activeSelectionForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['list.activeSelectionForeground']) {\r\n                if (isHc) {\r\n                    result.colors['list.activeSelectionForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['list.activeSelectionForeground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['list.activeSelectionForeground'] = 'rgba(255, 255, 255)';\r\n                }\r\n            }\r\n            if (!result.colors['list.hoverForeground']) {\r\n                result.colors['list.hoverForeground'] = foreground;\r\n            }\r\n            if (!result.colors['list.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['list.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['list.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['list.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['quickInputList.focusBackground']) {\r\n                if (result.colors['list.inactiveFocusBackground']) {\r\n                    result.colors['quickInputList.focusBackground'] = result.colors['list.inactiveFocusBackground'];\r\n                } else if (isHc) {\r\n                    result.colors['quickInputList.focusBackground'] = transparent;\r\n                } else {\r\n                    result.colors['quickInputList.focusBackground'] = '#0066b8';\r\n                    result.colors['quickInputList.focusForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['quickInputList.focusForeground']) {\r\n                if (result.colors['list.inactiveFocusForeground']) {\r\n                    result.colors['quickInputList.focusForeground'] = result.colors['list.inactiveFocusForeground'];\r\n                } else {\r\n                    result.colors['quickInputList.focusForeground'] = result.colors['list.activeSelectionForeground'];\r\n                }\r\n            }\r\n        }\r\n        //menu\r\n        function _menu() {\r\n            if (!result.colors['menu.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['menu.foreground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['menu.foreground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['menu.foreground'] = 'rgba(255, 255, 255)';\r\n                }\r\n            }\r\n            if (!result.colors['menu.background']) {\r\n                result.colors['menu.background'] = result.colors['dropdown.background'];\r\n            }\r\n            if (!result.colors['menu.border']) {\r\n                result.colors['menu.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['menu.selectionForeground']) {\r\n                result.colors['menu.selectionForeground'] = result.colors['list.activeSelectionForeground'];\r\n            }\r\n            if (!result.colors['menu.selectionBackground']) {\r\n                result.colors['menu.selectionBackground'] = result.colors['list.activeSelectionBackground'];\r\n            }\r\n            if (!result.colors['menu.selectionBorder']) {\r\n                result.colors['menu.selectionBorder'] = contrastActiveBorder;\r\n            }\r\n            if (!result.colors['menu.separatorBackground']) {\r\n                if (isHc) {\r\n                    result.colors['menu.separatorBackground'] = contrastBorder;\r\n                } else if (isLight) {\r\n                    result.colors['menu.separatorBackground'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['menu.separatorBackground'] = 'rgba(255,255,255,0.2)';\r\n                }\r\n            }\r\n        }\r\n        //statusBar\r\n        function _statusBar() {\r\n            if (!result.colors['statusBar.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['statusBar.foreground'] = foreground;\r\n                } else {\r\n                    result.colors['statusBar.foreground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['statusBar.background']) {\r\n                if (isLight && !isHc) {\r\n                    result.colors['statusBar.background'] = 'rgb(0, 122, 204)';\r\n                } else {\r\n                    result.colors['statusBar.background'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['statusBar.border']) {\r\n                result.colors['statusBar.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['statusBarItem.hoverBackground']) {\r\n                result.colors['statusBarItem.hoverBackground'] = transparent;\r\n            }\r\n            if (!result.colors['statusBarItem.activeBackground']) {\r\n                result.colors['statusBarItem.activeBackground'] = transparent;\r\n            }\r\n        }\r\n        //sideBar\r\n        function _sideBar() {\r\n            if (!result.colors['sideBar.foreground']) {\r\n                result.colors['sideBar.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['sideBarTitle.foreground']) {\r\n                result.colors['sideBarTitle.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['sideBar.background']) {\r\n                if (isHc) {\r\n                    result.colors['sideBar.background'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['sideBar.background'] = '#eee';\r\n                } else {\r\n                    result.colors['sideBar.background'] = 'rgba(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['sideBar.border']) {\r\n                result.colors['sideBar.border'] = contrastBorder;\r\n            }\r\n        }\r\n        // editor\r\n        function _editor() {\r\n            if (!result.colors['editor.foreground']) {\r\n                result.colors['editor.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['editor.background']) {\r\n                if (isHc) {\r\n                    result.colors['editor.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['editor.background'] = '#fff';\r\n                } else {\r\n                    result.colors['editor.background'] = 'rgb(30,30,30)';\r\n                }\r\n            }\r\n            if (!result.colors['editorLineNumber.foreground']) {\r\n                result.colors['editorLineNumber.foreground'] = chroma(result.colors['editor.foreground']).alpha(0.5).css();\r\n            }\r\n            if (!result.colors['editorLineNumber.activeForeground']) {\r\n                result.colors['editorLineNumber.activeForeground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorCursor.foreground']) {\r\n                result.colors['editorCursor.foreground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editor.selectionForeground']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionForeground'] = foreground;\r\n                }\r\n            }\r\n            if (!result.colors['editor.selectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionBackground'] = focusBorder;\r\n                } else {\r\n                    result.colors['editor.selectionBackground'] = chroma(focusBorder).alpha(0.8).css();\r\n                }\r\n            }\r\n            if (!result.colors['editor.selectionHighlightBackground']) {\r\n                result.colors['editor.selectionHighlightBackground'] = transparent;\r\n            }\r\n            if (!result.colors['editor.selectionHighlightBorder']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionHighlightBorder'] = contrastActiveBorder;\r\n                } else if (result.colors['editor.selectionHighlightBackground'] === transparent) {\r\n                    result.colors['editor.selectionHighlightBorder'] = focusBorder;\r\n                }\r\n            }\r\n            if (!result.colors['editor.findMatchBackground']) {\r\n                result.colors['editor.findMatchBackground'] = result.colors['editor.selectionBackground'];\r\n            }\r\n            if (!result.colors['editor.findMatchBorder']) {\r\n                result.colors['editor.findMatchBorder'] = transparent;\r\n            }\r\n            if (!result.colors['editor.findMatchHighlightBackground']) {\r\n                result.colors['editor.findMatchHighlightBackground'] = result.colors['editor.selectionHighlightBackground'];\r\n            }\r\n            if (!result.colors['editor.findMatchHighlightBorder']) {\r\n                result.colors['editor.findMatchHighlightBorder'] = result.colors['editor.selectionHighlightBorder'];\r\n            }\r\n            if (!result.colors['editor.lineHighlightBackground']) {\r\n                result.colors['editor.lineHighlightBackground'] = transparent;\r\n            }\r\n            if (!result.colors['editor.lineHighlightBorder']) {\r\n                if (result.colors['editor.lineHighlightBackground'] !== transparent) {\r\n                    result.colors['editor.lineHighlightBorder'] = transparent;\r\n                } else if (isHc) {\r\n                    result.colors['editor.lineHighlightBorder'] = contrastActiveBorder;\r\n                } else if (isLight) {\r\n                    result.colors['editor.lineHighlightBorder'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['editor.lineHighlightBorder'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['editorWhitespace.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['editorWhitespace.foreground'] = result.colors['editor.foreground'];\r\n                } else if (isLight) {\r\n                    result.colors['editorWhitespace.foreground'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['editorWhitespace.foreground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['editorIndentGuide.background']) {\r\n                result.colors['editorIndentGuide.background'] = result.colors['editorWhitespace.foreground'];\r\n            }\r\n            if (!result.colors['editorBracketMatch.background']) {\r\n                result.colors['editorBracketMatch.background'] = transparent;\r\n            }\r\n            if (!result.colors['editorBracketMatch.border']) {\r\n                if (result.colors['editorBracketMatch.background'] === transparent) {\r\n                    result.colors['editorBracketMatch.border'] = chroma(result.colors['editor.foreground']).alpha(0.6).css();\r\n                } else {\r\n                    result.colors['editorBracketMatch.border'] = transparent;\r\n                }\r\n            }\r\n        }\r\n        // tab\r\n        function _tab() {\r\n            if (!result.colors['editorGroupHeader.tabsBackground']) {\r\n                if (isHc) {\r\n                    result.colors['editorGroupHeader.tabsBackground'] = transparent;\r\n                } else {\r\n                    result.colors['editorGroupHeader.tabsBackground'] = result.colors['sideBar.background'];\r\n                }\r\n            }\r\n            if (!result.colors['editorGroupHeader.tabsBackground']) {\r\n                result.colors['editorGroupHeader.tabsBackground'] = contrastBorder;\r\n            }\r\n            if (!result.colors['tab.border']) {\r\n                result.colors['tab.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['tab.activeForeground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.activeForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['tab.activeForeground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['tab.activeForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['tab.activeBackground']) {\r\n                result.colors['tab.activeBackground'] = result.colors['editor.background'];\r\n            }\r\n            if (!result.colors['tab.inactiveForeground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.inactiveForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['tab.inactiveForeground'] = 'rgba(51, 51, 51, 0.7)';\r\n                } else {\r\n                    result.colors['tab.inactiveForeground'] = 'rgba(255, 255, 255, 0.5)';\r\n                }\r\n            }\r\n            if (!result.colors['tab.inactiveBackground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.inactiveBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['tab.inactiveBackground'] = 'rgb(236, 236, 236)';\r\n                } else {\r\n                    result.colors['tab.inactiveBackground'] = 'rgb(45, 45, 45)';\r\n                }\r\n            }\r\n            if (!result.colors['tab.activeBorder']) {\r\n                result.colors['tab.activeBorder'] = transparent;\r\n            }\r\n            if (!result.colors['tab.activeBorderTop']) {\r\n                result.colors['tab.activeBorderTop'] = transparent;\r\n            }\r\n            if (!result.colors['tab.hoverForeground']) {\r\n                result.colors['tab.hoverForeground'] = result.colors['tab.inactiveForeground'];\r\n            }\r\n            if (!result.colors['tab.hoverBackground']) {\r\n                result.colors['tab.hoverBackground'] = transparent;\r\n            }\r\n            if (!result.colors['tab.hoverBorder']) {\r\n                result.colors['tab.hoverBorder'] = transparent;\r\n            }\r\n        }\r\n        // editorWidget\r\n        function _editorWidget() {\r\n            if (!result.colors['editorWidget.foreground']) {\r\n                result.colors['editorWidget.foreground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorWidget.background']) {\r\n                if (isHc) {\r\n                    result.colors['editorWidget.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['editorWidget.background'] = '#eee';\r\n                } else {\r\n                    result.colors['editorWidget.background'] = 'rgb(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['editorWidget.border']) {\r\n                if (isHc) {\r\n                    result.colors['editorWidget.border'] = contrastBorder;\r\n                } else {\r\n                    result.colors['editorWidget.border'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['editorSuggestWidget.foreground']) {\r\n                result.colors['editorSuggestWidget.foreground'] = result.colors['editorWidget.foreground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.background']) {\r\n                result.colors['editorSuggestWidget.background'] = result.colors['editorWidget.background'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.border']) {\r\n                result.colors['editorSuggestWidget.border'] = result.colors['editorWidget.border'];\r\n            }\r\n            if (result.colors['editorSuggestWidget.border'] === transparent) {\r\n                result.colors['editorSuggestWidget.shadow'] = result.colors['widget.shadow'];\r\n            } else {\r\n                result.colors['editorSuggestWidget.shadow'] = transparent;\r\n            }\r\n            if (!result.colors['editorSuggestWidget.selectedForeground']) {\r\n                result.colors['editorSuggestWidget.selectedForeground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.selectedBackground']) {\r\n                result.colors['editorSuggestWidget.selectedBackground'] = result.colors['quickInputList.focusBackground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.highlightForeground']) {\r\n                result.colors['editorSuggestWidget.highlightForeground'] = result.colors['list.highlightForeground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.focusHighlightForeground']) {\r\n                result.colors['editorSuggestWidget.focusHighlightForeground'] = result.colors['list.highlightForeground'];\r\n            }\r\n        }\r\n        // input\r\n        function _input() {\r\n            if (!result.colors['input.foreground']) {\r\n                result.colors['input.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['input.background']) {\r\n                if (isHc) {\r\n                    result.colors['input.background'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['input.background'] = '#fff';\r\n                } else {\r\n                    result.colors['input.background'] = background;\r\n                }\r\n            }\r\n            if (!result.colors['input.border']) {\r\n                if (result.colors['input.background'] === transparent) {\r\n                    result.colors['input.border'] = '#0066b8';\r\n                } else {\r\n                    result.colors['input.border'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['inputOption.activeForeground']) {\r\n                result.colors['inputOption.activeForeground'] = foreground;\r\n            }\r\n            if (!result.colors['inputOption.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['inputOption.activeBackground'] = transparent;\r\n                } else {\r\n                    result.colors['inputOption.activeBackground'] = chroma(focusBorder).alpha(0.3).css();\r\n                }\r\n            }\r\n            if (!result.colors['inputOption.activeBorder']) {\r\n                result.colors['inputOption.activeBorder'] = transparent;\r\n            }\r\n            if (!result.colors['inputOption.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['inputOption.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['inputOption.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['inputOption.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n        }\r\n        // toolbar\r\n        function _toolbar() {\r\n            if (!result.colors['toolbar.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['toolbar.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['toolbar.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['toolbar.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['toolbar.activeBackground']) {\r\n                result.colors['toolbar.activeBackground'] = transparent;\r\n            }\r\n            if (!result.colors['toolbar.hoverOutline']) {\r\n                result.colors['toolbar.hoverOutline'] = contrastActiveBorder;\r\n            }\r\n        }\r\n    }\r\n}\r\n","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @mousedown.stop class=\"my-cmd-panel my-list\" v-if=\"visible\">\r\n        <div>\r\n            <div class=\"my-cmd-search\">\r\n                <input type=\"text\" v-model=\"searchText\" ref=\"input\" />\r\n            </div>\r\n            <div>\r\n                <Menu\r\n                    :checkable=\"true\"\r\n                    :menuList=\"cmdList\"\r\n                    :value=\"value\"\r\n                    @change=\"onChange\"\r\n                    style=\"position: relative\"\r\n                    class=\"my-scroll-overlay my-scroll-mini\"\r\n                    spellcheck=\"false\"\r\n                ></Menu>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Util from '@/common/util';\r\nimport Theme from '@/module/theme';\r\nimport Menu from './Menu';\r\nimport EventBus from '@/event';\r\n\r\nexport default {\r\n    name: 'CmdPanel',\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            searchText: '',\r\n            cmdList: [],\r\n            visible: false,\r\n        };\r\n    },\r\n    watch: {\r\n        searchText() {\r\n            this.searchMenu();\r\n        },\r\n    },\r\n    created() {\r\n        this.theme = new Theme();\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('close-menu', () => {\r\n                this.visible = false;\r\n            });\r\n            EventBus.$on('open-cmd-menu', (data) => {\r\n                this.visible = true;\r\n                this.searchText = '';\r\n                this.originCmdList = data.cmdList;\r\n                this.value = data.value;\r\n                if (this.originCmdList[0] && !(this.originCmdList[0] instanceof Array)) {\r\n                    this.originCmdList = [this.originCmdList];\r\n                }\r\n                this.searchMenu();\r\n                requestAnimationFrame(() => {\r\n                    this.$refs.input.focus();\r\n                });\r\n            });\r\n        },\r\n        searchMenu() {\r\n            if (this.searchText) {\r\n                let menu = [];\r\n                this.originCmdList[0].forEach((item) => {\r\n                    let result = Util.fuzzyMatch(this.searchText, item.name, true);\r\n                    if (result) {\r\n                        menu.push([item, result]);\r\n                    }\r\n                });\r\n                menu = menu\r\n                    .sort((a, b) => {\r\n                        return b[1].score - a[1].score;\r\n                    })\r\n                    .map((item) => {\r\n                        return item[0];\r\n                    });\r\n                this.cmdList = [menu];\r\n            } else {\r\n                this.cmdList = this.originCmdList.slice();\r\n            }\r\n        },\r\n        onChange(item) {\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    this.theme.loadTheme(item);\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    this.theme.loadIconTheme(item);\r\n                    break;\r\n                case 'selectLanguage':\r\n                    EventBus.$emit('language-change', item.value);\r\n                    break;\r\n            }\r\n            this.visible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./CmdPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./CmdPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CmdPanel.vue?vue&type=template&id=3ba36677&\"\nimport script from \"./CmdPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./CmdPanel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div\r\n        :style=\"{\r\n            'padding-top': _topBarHeight,\r\n            'padding-bottom': _statusHeight,\r\n        }\"\r\n        @mousedown=\"onWindMouseDown\"\r\n        class=\"my-window\"\r\n        ref=\"window\"\r\n    >\r\n        <!-- 侧边栏 -->\r\n        <side-bar ref=\"sideBar\" v-if=\"mode === 'app'\"></side-bar>\r\n        <div @contextmenu.prevent.stop=\"onContextmenu\" class=\"my-right-wrap\" ref=\"rightWrap\">\r\n            <!-- tab栏 -->\r\n            <editor-bar\r\n                :editorList=\"editorList\"\r\n                @change=\"onChangeTab\"\r\n                @close=\"onCloseTab\"\r\n                @close-all=\"onCloseAll\"\r\n                @close-saved=\"onCloseSaved\"\r\n                @close-to-left=\"onCloseToLeft\"\r\n                @close-to-right=\"onCloseToRight\"\r\n                v-show=\"editorList.length\"\r\n            ></editor-bar>\r\n            <!-- 编辑区 -->\r\n            <template v-for=\"item in editorList\">\r\n                <editor :active=\"item.active\" :id=\"item.id\" :key=\"item.id\" :ref=\"'editor' + item.id\" @change=\"onFileChange(item.id)\" @save=\"onSaveFile(item.id)\" v-show=\"item.active\"></editor>\r\n            </template>\r\n            <window-menu ref=\"winMenu\"></window-menu>\r\n        </div>\r\n        <!-- 顶部菜单栏 -->\r\n        <title-bar :height=\"topBarHeight\" @change=\"onMenuChange\" ref=\"titleBar\"></title-bar>\r\n        <!-- 状态栏 -->\r\n        <status-bar :height=\"statusHeight\" :languageList=\"languageList\" ref=\"statusBar\" @select-langeuage=\"onSelectLanguage\"></status-bar>\r\n        <cmd-panel></cmd-panel>\r\n        <Dialog\r\n            :btns=\"dialogBtns\"\r\n            :content=\"dialogContent\"\r\n            :icon=\"this.dialogIcon\"\r\n            :icon-color=\"this.dialogIconColor\"\r\n            :overlay=\"true\"\r\n            :title=\"dialogTilte\"\r\n            @close=\"onDialogClose\"\r\n            v-show=\"dialogVisible\"\r\n        ></Dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EditorBar from './EditorBar.vue';\r\nimport Editor from './Editor.vue';\r\nimport TitleBar from './TitleBar';\r\nimport StatusBar from './StatusBar';\r\nimport SideBar from './SideBar.vue';\r\nimport Dialog from './Dialog.vue';\r\nimport WindowMenu from './WindowMenu.vue';\r\nimport CmdPanel from './CmdPanel.vue';\r\nimport Context from '@/module/context/index';\r\nimport Theme from '@/module/theme';\r\nimport EventBus from '@/event';\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\nimport stripJsonComments from 'strip-json-comments';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst remote = require('@electron/remote');\r\nconst contexts = Context.contexts;\r\n\r\nexport default {\r\n    components: {\r\n        Editor,\r\n        EditorBar,\r\n        TitleBar,\r\n        StatusBar,\r\n        SideBar,\r\n        Dialog,\r\n        WindowMenu,\r\n        CmdPanel,\r\n    },\r\n    data() {\r\n        return {\r\n            extensionsPath: path.join(globalData.dirname, 'main/extensions'),\r\n            languageList: [],\r\n            statusHeight: 30,\r\n            topBarHeight: 35,\r\n            nowId: null,\r\n            idCount: 1,\r\n            titleCount: 1,\r\n            editorList: [],\r\n            dialogTilte: '',\r\n            dialogContent: '',\r\n            dialogVisible: false,\r\n            dialogBtns: [],\r\n            dialogIcon: '',\r\n            dialogIconColor: '',\r\n            mode: remote ? 'app' : 'mode',\r\n        };\r\n    },\r\n    computed: {\r\n        _topBarHeight() {\r\n            return this.topBarHeight + 'px';\r\n        },\r\n        _statusHeight() {\r\n            return this.statusHeight + 'px';\r\n        },\r\n    },\r\n    provide() {\r\n        return {\r\n            getNowEditor: () => {\r\n                return this.getNowEditor();\r\n            },\r\n            getNowContext: () => {\r\n                return this.getNowContext();\r\n            },\r\n            openFile: (fileObj, choseFile) => {\r\n                this.openFile(fileObj, choseFile);\r\n            },\r\n            openFolder: () => {\r\n                this.openFolder();\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        window.globalData = globalData;\r\n        if (this.mode === 'app') {\r\n            const currentWindow = remote.getCurrentWindow();\r\n            currentWindow.on('blur', () => {\r\n                EventBus.$emit('close-menu');\r\n            });\r\n        }\r\n        this.initEventBus();\r\n    },\r\n    mounted() {\r\n        window.test = this;\r\n        const theme = new Theme();\r\n        theme.loadTheme(globalData.nowTheme);\r\n        theme.loadIconTheme(globalData.nowIconTheme);\r\n        this.openFile();\r\n        this.loadExtensions().then((result) => {\r\n            let langeuages = result.languages;\r\n            let themes = result.themes;\r\n            let iconThemes = result.iconThemes;\r\n            let scopeFileList = result.scopeFileList;\r\n            langeuages.push({ name: 'Plain Text', value: '', checked: true });\r\n            globalData.languageList = langeuages.slice();\r\n            globalData.scopeFileList = scopeFileList.slice();\r\n            globalData.themes = themes.slice();\r\n            globalData.iconThemes = iconThemes.slice();\r\n            this.languageList = langeuages;\r\n            this.checkLanguage();\r\n        });\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            let iconFn = (value) => {\r\n                this.editorList.forEach((item) => {\r\n                    if (value) {\r\n                        let icon = Util.getIconByPath(globalData.nowIconData, item.path, globalData.nowTheme.type);\r\n                        item.icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                    } else {\r\n                        item.icon = '';\r\n                    }\r\n                });\r\n                this.editorList.splice();\r\n            };\r\n            EventBus.$on('icon-change', iconFn);\r\n            EventBus.$on('theme-change', iconFn);\r\n        },\r\n        onContextmenu(e) {\r\n            // EventBus.$emit('open-win-menu');\r\n        },\r\n        // 点击编辑器\r\n        onWindMouseDown() {\r\n            EventBus.$emit('close-menu');\r\n        },\r\n        onChangeTab(id) {\r\n            let tab = this.getTabById(id);\r\n            if (!tab.active) {\r\n                this.editorList.forEach((item) => {\r\n                    item.active = false;\r\n                });\r\n                tab.active = true;\r\n                this.nowId = id;\r\n                this.changeStatus();\r\n            } else {\r\n                this.getNowEditor().focus();\r\n            }\r\n        },\r\n        onCloseTab(id) {\r\n            if (!this.nowId) {\r\n                return;\r\n            }\r\n            let tab = this.getTabById(id || this.nowId);\r\n            let index = this.editorList.indexOf(tab);\r\n            if (!tab.saved) {\r\n                this.showDialog({\r\n                    content: '文件尚未保存，是否先保存文件？',\r\n                    cancel: true,\r\n                    icon: 'my-icon-warn',\r\n                    iconColor: 'rgba(255,196,0)',\r\n                    btns: [\r\n                        {\r\n                            name: '保存',\r\n                            callback: () => {\r\n                                if (this.mode === 'app') {\r\n                                    this.onSaveFile(id).then(() => {\r\n                                        _closeTab.call(this);\r\n                                        this.onDialogClose();\r\n                                    });\r\n                                } else {\r\n                                    _closeTab.call(this);\r\n                                    this.onDialogClose();\r\n                                }\r\n                            },\r\n                        },\r\n                        {\r\n                            name: '不保存',\r\n                            callback: () => {\r\n                                _closeTab.call(this);\r\n                                this.onDialogClose();\r\n                            },\r\n                        },\r\n                    ],\r\n                });\r\n            } else {\r\n                _closeTab.call(this);\r\n            }\r\n\r\n            function _closeTab() {\r\n                this.editorList.splice(index, 1);\r\n                contexts[id] = null;\r\n                if (tab.active) {\r\n                    tab.active = false;\r\n                    tab = this.editorList[index] || this.editorList[index - 1];\r\n                    if (tab) {\r\n                        this.onChangeTab(tab.id);\r\n                    } else {\r\n                        this.nowId = null;\r\n                        EventBus.$emit('tab-change', null);\r\n                    }\r\n                } else {\r\n                    this.getNowEditor().focus();\r\n                }\r\n            }\r\n        },\r\n        onCloseAll() {\r\n            this.editorList = this.editorList.filter((item) => {\r\n                return !item.saved;\r\n            });\r\n            this.editorList.forEach((item) => {\r\n                this.onCloseTab(item.id);\r\n            });\r\n            this.nowId = null;\r\n        },\r\n        onCloseSaved() {\r\n            this.editorList.slice().forEach((item) => {\r\n                if (item.saved) {\r\n                    this.onCloseTab(item.id);\r\n                }\r\n            });\r\n        },\r\n        onCloseToLeft(id) {\r\n            let tab = null;\r\n            id = id || this.nowId;\r\n            while ((tab = this.editorList[0])) {\r\n                if (tab.id !== id) {\r\n                    this.onCloseTab(tab.id);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        onCloseToRight(id) {\r\n            let tab = null;\r\n            id = id || this.nowId;\r\n            while ((tab = this.editorList.peek())) {\r\n                if (tab.id !== id) {\r\n                    this.onCloseTab(tab.id);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        onMenuChange(item) {\r\n            let cmdList = null;\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    cmdList = globalData.themes.map((item) => {\r\n                        return item.map((item) => {\r\n                            return Object.assign({ op: 'changeTheme' }, item);\r\n                        });\r\n                    });\r\n                    EventBus.$emit('open-cmd-menu', {\r\n                        cmdList: cmdList,\r\n                        value: globalData.nowTheme.value,\r\n                    });\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    cmdList = globalData.iconThemes.map((item) => {\r\n                        return Object.assign({ op: 'changeIconTheme' }, item);\r\n                    });\r\n                    cmdList.push({\r\n                        name: 'None',\r\n                        value: 'none',\r\n                        op: 'changeIconTheme',\r\n                    });\r\n                    EventBus.$emit('open-cmd-menu', {\r\n                        cmdList: cmdList,\r\n                        value: globalData.nowIconTheme.value,\r\n                    });\r\n                    break;\r\n            }\r\n        },\r\n        onSelectLanguage() {\r\n            let cmdList = globalData.languageList.map((item) => {\r\n                return {\r\n                    op: 'selectLanguage',\r\n                    name: item.name + (item.language ? `（${item.language}）` : ''),\r\n                    value: item.value,\r\n                };\r\n            });\r\n            EventBus.$emit('open-cmd-menu', {\r\n                cmdList: cmdList,\r\n                value: this.nowId && this.getNowEditor().language,\r\n            });\r\n        },\r\n        onFileChange(id) {\r\n            let tab = this.getTabById(id);\r\n            tab.saved = false;\r\n        },\r\n        onSaveFile(id) {\r\n            let tab = this.getTabById(id);\r\n            if (this.mode === 'web') {\r\n                return Promise.resolve();\r\n            }\r\n            if (!tab.saved) {\r\n                if (tab.path) {\r\n                    this.writeFile(tab.path, contexts[id].getAllText());\r\n                    tab.saved = true;\r\n                    return Promise.resolve();\r\n                } else {\r\n                    let win = remote.getCurrentWindow();\r\n                    let options = {\r\n                        title: '请选择要保存的文件名',\r\n                        buttonLabel: '保存',\r\n                    };\r\n                    return remote.dialog.showSaveDialog(win, options).then((result) => {\r\n                        if (!result.canceled && result.filePath) {\r\n                            tab.path = result.filePath;\r\n                            tab.name = tab.path.match(/[^\\\\\\/]+$/)[0];\r\n                            this.writeFile(tab.path, contexts[id].getAllText());\r\n                            tab.saved = true;\r\n                        } else {\r\n                            return Promise.reject();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        onDialogClose() {\r\n            this.dialogVisible = false;\r\n        },\r\n        openFolder() {\r\n            this.choseFolder().then((results) => {\r\n                if (results) {\r\n                    this.$refs.sideBar.list = results;\r\n                    this.editorList = [];\r\n                    this.nowId = null;\r\n                }\r\n            });\r\n        },\r\n        choseFolder() {\r\n            let win = remote.getCurrentWindow();\r\n            let options = {\r\n                title: '选择文件夹',\r\n                properties: ['openDirectory', 'multiSelections'],\r\n            };\r\n            return remote.dialog\r\n                .showOpenDialog(win, options)\r\n                .then((result) => {\r\n                    let results = [];\r\n                    if (!result.canceled && result.filePaths) {\r\n                        result.filePaths.forEach((item) => {\r\n                            let obj = {\r\n                                name: item.match(/[^\\\\\\/]+$/)[0],\r\n                                path: item,\r\n                                type: 'dir',\r\n                                active: false,\r\n                                open: false,\r\n                                children: [],\r\n                            };\r\n                            results.push(Object.assign({}, obj));\r\n                        });\r\n                        return results;\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        openFile(fileObj, choseFile) {\r\n            let tab = fileObj && this.getTabByPath(fileObj.path);\r\n            if (!tab) {\r\n                let index = -1;\r\n                let name = (fileObj && fileObj.name) || `Untitled${this.titleCount++}`;\r\n                if (this.editorList.length) {\r\n                    tab = this.getTabById(this.nowId);\r\n                    index = this.editorList.indexOf(tab);\r\n                }\r\n                if (choseFile) {\r\n                    //从资源管理器中选择文件\r\n                    this.choseFile().then((results) => {\r\n                        if (results) {\r\n                            tab = results[0];\r\n                            this.editorList = this.editorList.slice(0, index).concat(results).concat(this.editorList.slice(index));\r\n                            _done.call(this);\r\n                        }\r\n                    });\r\n                } else {\r\n                    tab = {\r\n                        id: this.idCount++,\r\n                        name: name,\r\n                        path: (fileObj && fileObj.path) || '',\r\n                        icon: (fileObj && fileObj.icon) || '',\r\n                        saved: true,\r\n                        active: false,\r\n                    };\r\n                    if (!tab.icon) {\r\n                        let icon = Util.getIconByPath(globalData.nowIconData, '', globalData.nowTheme.type);\r\n                        tab.icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                    }\r\n                    this.editorList.splice(index + 1, 0, tab);\r\n                    _done.call(this);\r\n                }\r\n            } else {\r\n                _done.call(this);\r\n            }\r\n\r\n            function _done() {\r\n                this.$nextTick(() => {\r\n                    if (tab && tab.path && !tab.loaded) {\r\n                        fs.readFile(tab.path, { encoding: 'utf8' }, (err, data) => {\r\n                            if (err) {\r\n                                throw err;\r\n                            }\r\n                            this.getContext(tab.id).insertContent(data);\r\n                            tab.saved = true;\r\n                            tab.loaded = true;\r\n                        });\r\n                    }\r\n                    this.onChangeTab(tab.id);\r\n                    this.checkLanguage();\r\n                });\r\n            }\r\n        },\r\n        choseFile() {\r\n            let win = remote.getCurrentWindow();\r\n            let options = {\r\n                title: '选择文件',\r\n                properties: ['openFile', 'multiSelections'],\r\n            };\r\n            return remote.dialog\r\n                .showOpenDialog(win, options)\r\n                .then((result) => {\r\n                    let results = [];\r\n                    if (!result.canceled && result.filePaths) {\r\n                        result.filePaths.forEach((item) => {\r\n                            let icon = Util.getIconByPath(globalData.nowIconData, item, globalData.nowTheme.type);\r\n                            icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                            let obj = {\r\n                                id: this.idCount++,\r\n                                name: item.match(/[^\\\\\\/]+$/)[0],\r\n                                path: item,\r\n                                icon: icon,\r\n                                saved: true,\r\n                                active: false,\r\n                            };\r\n                            results.push(Object.assign({}, obj));\r\n                        });\r\n                        return results;\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        sortFileList() {\r\n            this.list.sort((a, b) => {\r\n                if (a.type === b.type) {\r\n                    if (a.name === b.name) {\r\n                        return 0;\r\n                    } else if (a.name > b.name) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (a.type === 'dir') {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            });\r\n        },\r\n        showDialog(option) {\r\n            this.dialogTilte = option.title || '';\r\n            this.dialogContent = option.content || '';\r\n            this.dialogBtns = option.btns;\r\n            this.dialogVisible = true;\r\n            this.dialogIconColor = option.iconColor || '';\r\n            this.dialogIcon = option.icon || '';\r\n        },\r\n        writeFile(path, text) {\r\n            fs.writeFileSync(path, text, { encoding: 'utf-8' });\r\n        },\r\n        changeStatus() {\r\n            let changStatusId = this.changeStatus.id || 1;\r\n            this.changeStatus.id = changStatusId;\r\n            this.$nextTick(() => {\r\n                if (this.changeStatus.id !== changStatusId) {\r\n                    return;\r\n                }\r\n                let editor = this.getNowEditor();\r\n                let tab = this.getTabById(this.nowId);\r\n                EventBus.$emit(`tab-change`, {\r\n                    path: tab.path,\r\n                    language: editor.language,\r\n                    tabSize: editor.tabSize,\r\n                    line: editor.nowCursorPos ? editor.nowCursorPos.line : '?',\r\n                    column: editor.nowCursorPos ? editor.nowCursorPos.column : '?',\r\n                });\r\n            });\r\n        },\r\n        // 检查当前打开的文件的语言\r\n        checkLanguage() {\r\n            if (this.nowId) {\r\n                let tab = this.getTabById(this.nowId);\r\n                let suffix = /\\.[^\\.]+$/.exec(tab.name);\r\n                if (!suffix) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < this.languageList.length; i++) {\r\n                    let language = this.languageList[i];\r\n                    if (language.extensions && language.extensions.indexOf(suffix[0]) > -1) {\r\n                        this.$nextTick(() => {\r\n                            EventBus.$emit('language-change', language.value);\r\n                        });\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        // 加载语言支持\r\n        loadExtensions() {\r\n            let languages = [];\r\n            let scopeFileList = [];\r\n            let themes = [[], [], [], []];\r\n            let iconThemes = [];\r\n            let varMap = {};\r\n            return new Promise((resolve) => {\r\n                // 异步读取目录内容\r\n                fs.readdir(this.extensionsPath, { encoding: 'utf8' }, (err, files) => {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                    const promises = [];\r\n                    files.forEach((item, index) => {\r\n                        let fullPath = path.join(this.extensionsPath, item);\r\n                        let packPath = path.join(fullPath, './package.json');\r\n                        let varConfigPath = path.join(fullPath, './package.nls.json');\r\n                        if (fs.existsSync(varConfigPath)) {\r\n                            promises.push(\r\n                                _readVarFile(varConfigPath).then(() => {\r\n                                    return _readConfigFile(packPath, fullPath);\r\n                                })\r\n                            );\r\n                        } else if (fs.existsSync(packPath)) {\r\n                            promises.push(_readConfigFile(packPath, fullPath));\r\n                        }\r\n                    });\r\n                    Promise.all(promises).then(() => {\r\n                        themes = themes.filter((item) => {\r\n                            return item.length;\r\n                        });\r\n                        resolve({\r\n                            languages: languages,\r\n                            scopeFileList: scopeFileList,\r\n                            themes: themes,\r\n                            iconThemes: iconThemes,\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n\r\n            function _readVarFile(varConfigPath) {\r\n                return Util.loadJsonFile(varConfigPath).then((data) => {\r\n                    varMap = data;\r\n                });\r\n            }\r\n\r\n            function _readConfigFile(packPath, fullPath) {\r\n                return Util.loadJsonFile(packPath).then((data) => {\r\n                    let contributes = data.contributes;\r\n                    _addLanguage(contributes, fullPath);\r\n                    _addTheme(contributes, fullPath);\r\n                    _addIconTheme(contributes, fullPath);\r\n                });\r\n            }\r\n\r\n            function _addLanguage(contributes, fullPath) {\r\n                let grammars = contributes.grammars;\r\n                let list = contributes.languages || [];\r\n                list.map((language) => {\r\n                    for (let i = 0; i < grammars.length; i++) {\r\n                        let grammar = grammars[i];\r\n                        scopeFileList.push({\r\n                            scopeName: grammar.scopeName,\r\n                            path: path.join(fullPath, grammar.path),\r\n                            configPath: language.configuration ? path.join(fullPath, language.configuration) : '',\r\n                        });\r\n                        if (language.id === grammar.language) {\r\n                            let name = language.aliases && language.aliases[0];\r\n                            name = name || grammar.language;\r\n                            languages.push({\r\n                                name: name,\r\n                                value: grammar.language,\r\n                                language: grammar.language,\r\n                                scopeName: grammar.scopeName,\r\n                                path: path.join(fullPath, grammar.path),\r\n                                configPath: language.configuration ? path.join(fullPath, language.configuration) : '',\r\n                                extensions: language.extensions,\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            function _addTheme(contributes, fullPath) {\r\n                let list = contributes.themes || [];\r\n                list.map((theme) => {\r\n                    let type = 'light';\r\n                    let index = 0;\r\n                    let label = _getValue(theme.label);\r\n                    switch (theme.uiTheme) {\r\n                        case 'vs-dark':\r\n                            type = 'dark';\r\n                            index = 1;\r\n                            break;\r\n                        case 'hc-light':\r\n                            type = 'contrast light';\r\n                            index = 2;\r\n                            break;\r\n                        case 'hc-black':\r\n                            type = 'contrast dark';\r\n                            index = 3;\r\n                            break;\r\n                    }\r\n                    themes[index].push({\r\n                        name: theme.id || label,\r\n                        value: label || theme.id,\r\n                        type: type,\r\n                        path: path.join(fullPath, theme.path),\r\n                    });\r\n                });\r\n            }\r\n\r\n            function _addIconTheme(contributes, fullPath) {\r\n                let list = contributes.iconThemes || [];\r\n                list.map((theme) => {\r\n                    let label = _getValue(theme.label);\r\n                    iconThemes.push({\r\n                        name: label || theme.id,\r\n                        value: theme.id || label,\r\n                        path: path.join(fullPath, theme.path),\r\n                    });\r\n                });\r\n            }\r\n\r\n            function _getValue(name) {\r\n                name = name || '';\r\n                if (name[0] === '%' && name[name.length - 1] === '%') {\r\n                    name = varMap[name.slice(1, -1)] || name;\r\n                }\r\n                return name;\r\n            }\r\n        },\r\n        getTabById(id) {\r\n            for (let i = 0; i < this.editorList.length; i++) {\r\n                if (this.editorList[i].id === id) {\r\n                    return this.editorList[i];\r\n                }\r\n            }\r\n        },\r\n        getTabByPath(path) {\r\n            for (let i = 0; i < this.editorList.length; i++) {\r\n                if (this.editorList[i].path === path) {\r\n                    return this.editorList[i];\r\n                }\r\n            }\r\n        },\r\n        getEditor(id) {\r\n            let editor = this.$refs[`editor${id}`];\r\n            return editor && editor[0];\r\n        },\r\n        getNowEditor() {\r\n            return this.getEditor(this.nowId);\r\n        },\r\n        getContext(id) {\r\n            return contexts[id];\r\n        },\r\n        getNowContext() {\r\n            return this.getContext(this.nowId);\r\n        },\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Window.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Window.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Window.vue?vue&type=template&id=2d8b5432&\"\nimport script from \"./Window.vue?vue&type=script&lang=js&\"\nexport * from \"./Window.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div id=\"app\">\n        <Window></Window>\n    </div>\n</template>\n\n<script>\nimport Window from './components/Window.vue';\nexport default {\n    name: 'App',\n    components: {\n        Window,\n    },\n};\n</script>\n\n<style></style>\n","import mod from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=34237f10&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\nimport App from './App.vue';\r\nimport axios from 'axios';\r\nimport './scss/index.scss';\r\n\r\nVue.config.productionTip = false;\r\nVue.prototype.$http = axios.create({\r\n    timeout: 1000 * 30,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n    },\r\n});\r\n\r\nnew Vue({\r\n    render: (h) => h(App),\r\n}).$mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_editor\"] = self[\"webpackChunkmy_editor\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(393); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","ref","staticClass","style","_topBarHeight","_statusHeight","on","onWindMouseDown","mode","_e","$event","preventDefault","stopPropagation","onContextmenu","apply","arguments","directives","name","rawName","value","editorList","expression","onChangeTab","onCloseTab","onCloseAll","onCloseSaved","onCloseToLeft","onCloseToRight","_l","item","key","id","refInFor","active","onFileChange","onSaveFile","topBarHeight","onMenuChange","statusHeight","languageList","onSelectLanguage","dialogBtns","dialogContent","dialogIcon","dialogIconColor","dialogTilte","onDialogClose","class","path","onClickItem","icon","_v","_s","onClose","saved","menuList","menuStyle","group","index","checkable","checked","disabled","onClick","onHover","shortcut","myMenuList","length","props","type","default","styles","hoverCheck","itemHeight","computed","watch","newVal","$","methods","$scroller","component","bus","Vue","components","Menu","op","menuVisible","left","top","EventBus","e","menuWidth","offset","require","window","parent","remote","dirname","app","getAppPath","globalData","scopeIdMap","scopeReg","colors","nowTheme","join","nowIconTheme","nowIconData","themes","iconThemes","scopeFileList","scopeTokenList","grammars","sourceWordMap","defaultWordPattern","fs","Util","clipboardData","Promise","resolve","getData","navigator","clipboard","readText","text","setData","writeText","String","replace","regex","r","exec","num","Number","tabSize","val","tmp","arr","sort","arg1","arg2","wrap","str1","str2","id1","getUUID","id2","$tempDom","append","dom","charWidth","scrollWidth","charHight","clientHeight","fontSize","getComputedStyle","currentStyle","fullAngleCharWidth","remove","str","charW","fullCharW","start","end","substr","substring","match","fullAngleReg","width","tabNum","getStrExactWidth","count","_splitStr","clientWidth","Math","floor","result","i","column","push","htmlTrans","slice","space","cont","targetObj","originObj","noDeepKeys","_assign","Map","assigned","indexOf","RegExp","nodeName","nodeType","has","get","Array","set","len","random","toString","line","funStr","blob","Blob","url","URL","createObjectURL","worker","Worker","target","context","properties","forEach","property","bind","Object","defineProperties","language","scopeName","wordPattern","getLanguageById","_wordPattern","pattern","iconData","fileType","opened","fileName","suffix1","suffix2","light","folderExpanded","folder","fileNames","fileExtensions","file","reject","readFile","error","data","fullPath","then","stripJsonComments","replaceAll","JSON","parse","word","fullMatch","wordMap","towMap","wordLength","score","preFinedChar","preFinedOriginChar","preFinded","targetMap","indexs","_target","toLowerCase","_setMap","originChar","char","_humpCheck","_complete","fuzzyMatch","cache","preChar","keys","preCode","charCodeAt","charCode","prototype","peek","empty","insert","right","mid","splice","keyCode","DELETE","BACKSPACE","command","INSERT","MOVEUP","MOVEDOWN","COPY_UP","COPY_DOWN","DELETE_COPY_UP","DELETE_COPY_DOWN","REPLACE","INSERT_LINE","DELETE_LINE","constData","LINE_COMMENT","BLOCK_COMMENT","BRACKET","TAG","editorBar","initProperties","ctrlKey","pressK","$emit","EditorBarMenu","list","rootList","$tab","onWheel","_numTop","staticStyle","maxLine","nowCursorPos","height","_lineHeight","fold","onToggleFold","_leftShadow","onScroll","minWidth","_contentMinWidth","contentHeight","onContentMdown","onContentMmove","onContentMLeave","onSelectend","_top","_activeLine","selected","isFsearch","selectedFg","domProps","html","bracketMatch","range","tab","_tabLineLeft","visibility","_cursorVisible","_textAreaPos","onBlur","onCompositionend","onCompositionstart","onCopy","onCut","onFocus","onInput","onKeyDown","onPaste","autoTipList","autoTipStyle","onClickAuto","searchCount","searchNow","onCloseSearch","onSearchNext","onSearchPrev","onSearch","onClickMenu","tipContent","tipStyle","regs","stringToken","editor","currentLine","initRegistry","initLanguage","wasmBin","readFileSync","buffer","vscodeOnigurumaLib","oniguruma","createOnigScanner","patterns","createOnigString","s","registry","vsctm","onigLib","loadGrammar","configPath","sourceFoldMap","hasTextGrammar","startsWith","initLanguageConifg","grammar","foldType","tokenizeVisibleLins","grammarData","foldMap","source","__comments__","lineComment","blockComment","comments","__endCommentReg__","brackets","__foldReg__","nowLine","newLine","clearTimeout","tokenizeLinesTimer","$nextTick","tokenizeLines","tokenizeVisibleLinsId","startLine","endLine","maxVisibleLines","getRealLine","asyncTokenizeLines","processedLines","processedTime","Date","now","cancelIdleCallback","lineObj","htmls","tokens","tokenizeLine","folds","stateFold","checkLineVisible","splitLongToken","createHtml","renderLine","lineId","states","equals","requestIdleCallback","setTimeout","lineText","map","selector","startIndex","endIndex","scopes","_getSelector","scopeId","token","scope","outerLoop","_scope","regexp","test","lineTokens","addFold","ruleStack","existTag","isString","_scopeName","lastFold","addBracket","addTagFold","a","b","option","reg","res","preFold","side","_inString","lastIndex","tag","startCol","getLineInFold","child_process","initEvent","setErrors","fork","console","log","parseId","results","parseTimer","getAllText","send","TOKEN_TYPE","TEXT","SOURCE","TAG_NAME","ATTR_NAME","STRING","WORD","CSS","CSS_VALUE","CSS_PROPERTY","CSS_SELECTOR","CSS_TAG","CSS_CLASS","CSS_ATTR","CSS_PSEUDO","EMMET_HTML","EMMET_CSS","tagToken","tagNameToken","tagAttrName","cssValueToken","cssPropertyToken","cssSelectorToken","cssAttributeToken","cssClassToken","cssPseudoToken","styleCss","styleCssProperty","Autocomplete","doneMap","searchTimer","stop","_search","tokenIndex","getTokenIndex","nowToken","emmetObj","extract","Enum","_isCssToken","_isCssPropertyToken","_isCssValueToken","preToken","replaceTip","abbreviation","selectAutoTip","insertContent","reset","setAutoTip","_isTextToken","_searchEmmet","_isTagNameToken","_searchTagName","_isAttrNameToken","_getPreTagName","_searchTagAttrName","_searchCssProperty","_getPreCssProperty","_searchCssValue","_isCssSelectorToken","_searchCssTag","_searchCssPseudo","_searchSelector","_isTagToken","_searchStyle","_isSourceToken","_searchWord","_searchDocument","_isStringToken","_addTip","_isCssClassToken","skipMatch","callback","showAll","startTime","_showTip","htmlData","getHtmlData","tags","attributes","tagMap","after","globalAttributes","cssData","getCssData","pseudo","split","trim","pseudoClasses","pseudoElements","keyValue","values","propertyMap","_word","before","isSourceToken","isCssToken","isTextToken","isTagToken","isTagAttrNameToken","isTagNameToken","isStringToken","isCssValueToken","isCssPropertyToken","isCssSelectorToken","isCssClassToken","isCssAttributeToken","isCssPseudoToken","undefined","_setTokenType","skipDone","obj","desc","getIcon","all","limit","_text","invalidEmmetParen","paremEmmet","emmet","cursorPos","Node","max","dataList","linkList","next","prev","pNode","Btree","compare","root","head","size","node","arrayCache","link","half","iterator","findIndex","_insert","newNode","isPnode","j","that","pIndex","leftNode","rightNode","_moveRight","_moveLeft","_join","orginIndex","originResult","_next","_prev","cb","toArray","isInsert","comparator","singleTag","singleTagMap","editorFunObj","preCursorPos","afterIndex","Infinity","unFold","starLine","resultFold","getRangeFold","getFoldByLine","delete","it","search","foldIconCheck","stack","startFold","foldStartText","assign","trimLeft","_fold","getRangeFoldByStartFold","pop","exsitEnd","lineCount","realLine","relLine","selecter","wholeWordPattern","searchObj","resultObj","hasCache","config","getFromCache","direct","increase","getSearchConfig","searcher","cursor","addCursorPos","addActive","activedRanges","setCursorPos","initIndexs","addRange","setActive","clearSearch","clearActive","rangePos","lines","wholeWord","ignoreCase","cacheData","ranges","refreshSearchId","refreshSearch","retainActive","clearInactiveRange","clearRange","fSearcher","delta","setPrevActive","setNextActive","searchText","getRangeByCursorPos","getRangeText","getNowWord","startColumn","endColumn","setContextData","prop","setEditorData","multiCursorPos","moveCursor","updateRange","createRange","renderSelectedBg","setRange","clearCursorPos","same","getCursorsByLineColumn","_range","getRange","filterRange","removeCursor","dels","dWord","multiKeyCode","rightWrodPattern","leftWrodPattern","pos","setNowCursorPos","moveWidth","getStrWidth","getColumnByWidth","renderCursor","del","toDels","_column","updateCursorPos","history","doCommand","serial","_command","undo","redo","commandType","deleteContent","deleteLine","insertLine","moveLineUp","moveLineDown","copyLineDown","deleteCopyLineDown","copyLineUp","deleteCopyLineUp","lastCommand","sortComand","pushHistoryTime","_checkSameOp","_combCheck","_combCommand","commandList","_index","emmetWord","emmetAttr","emmetNum","endTag","Context","MIN_SAFE_INTEGER","fgLines","lineIdMap","renderedIdMap","renderedLineMap","initData","historyArr","cursorPosList","_historyArr","_insertMultiContent","updateHistory","pushHistory","prePos","historyObj","texts","lineDelta","columnDelta","commandObj","margin","_insertContent","alignmentTab","nowLineText","newPos","tabStr","_getTabStr","call","concat","lint","onInsertContentAfter","tokenizer","setLineWidth","plus","spaceNum","ceil","rangeList","_deleteMultiContent","_deleteRangePos","_deleteCursorPos","_deleteContent","startObj","deleteText","rangeUuid","originPos","endObj","maxWidthObj","clear","onDeleteContentAfter","setMaxWidth","_setMaxWidth","setMaxWidthTimer","_setLineWidth","setLineWidthTimer","moveLine","historyPosList","searchConifg","getConfig","pass","preLine","removeRange","enLine","_moveLine","clone","upLine","downLine","copyLine","originList","deleteCopyLine","tip","_getResult","expand","_getRanges","_updatePos","deltaArr","_getDeltaPos","autocomplete","cut","contexts","shiftKey","select","addCursorLineEnds","altKey","addCursorAbove","addCursorBelow","_moveCursor","selectAll","searchWord","openSearch","prevAutoTip","nextAutoTip","showReplace","replaceVisible","input1Focus","input1Height","composing","changeCase","changeWhole","input2Focus","input2Height","onKeyDown2","replaceText","searchPrev","preFocus","searchNext","nextFocus","close","searchPrevActive","searchNextActive","requestAnimationFrame","_html","tipList","nowIndex","$auto","content","SearchDialog","AutoTip","Tip","charObj","cursorVisible","cursorFocus","theme","renderHtmls","cursorLeft","scrollLeft","scrollTop","scrollerArea","errorMap","errors","searchVisible","activeLineBg","handler","deep","resizeObserver","forceCursorView","selectStarts","selectEnds","cursorList","firstLine","lastLine","_tokens","_setLine","$render","keyMap","_renderColError","_renderLineError","_renderError","replaceMode","searchDialog","_formatError","offsetX","w1","w2","children","menuHeight","menu","time","_checkErrorOver","cancelAnimationFrame","_move","_run","copyText","showMemu","fileMenuList","onFileMenuChange","editMenuList","onEditMenuChange","selectionMenuList","onSelectionMenuChange","preferenceMenuList","onPreferenceMenuChange","onMinimize","onUnmaximize","onMaximize","titleBar","openFolder","openFile","fileMenuVisible","editMenuVisible","selectionMenuVisible","preferenceMenuVisible","maximize","inject","currentWindow","showTabsize","tabSizeList","position","onTabsizeChange","showLanguage","nowLanguage","tabsizeVisible","hasEditor","languages","languageMap","onSashBegin","_scrollHeight","_paddingLeft","itemPadding","openedList","renderList","preActiveItem","dirPath","encoding","files","parentPath","_loopList","_findItem","_changOpen","_item","SideTree","SideBarMenu","getRootList","title","onClickBtn","btns","overlay","iconColor","cmdList","onChange","settingMap","foreground","background","fontStyle","tokenColors","_loadTheme","css","setDefaultColor","parseCss","insertCss","include","_addColors","extensions","fonts","font","fontFace","src","format","weight","iconDefinitions","fontCharacter","fontColor","iconPath","imgUrl","insertFont","_setFileExtensions","languageIds","_parseLanguageIds","dotReg","sReg","level","_getLevel","settings","dot","document","createElement","createTextNode","getElementsByTagName","appendChild","transparent","focusBorder","contrastBorder","contrastActiveBorder","isLight","isHc","_base","chroma","alpha","_scrollbar","_titleBar","_dropdown","_list","_menu","_statusBar","_sideBar","_editor","_tab","_editorWidget","_input","_toolbar","visible","Editor","EditorBar","TitleBar","StatusBar","SideBar","Dialog","WindowMenu","CmdPanel","extensionsPath","nowId","idCount","titleCount","dialogVisible","getNowEditor","getNowContext","langeuages","_closeTab","cancel","buttonLabel","showOpenDialog","win","options","open","catch","fileObj","choseFile","_done","promises","_readVarFile","varMap","_addLanguage","_addTheme","_addIconTheme","Window","axios","timeout","withCredentials","headers","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}