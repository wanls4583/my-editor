{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?adbe","webpack:///src/App.vue","webpack:///./src/App.vue?4c4f","webpack:///./src/App.vue","webpack:///./src/components/Home.vue?779b","webpack:///./src/module/tokenizer/rules/javascript.js","webpack:///./src/module/tokenizer/rules/css.js","webpack:///./src/module/tokenizer/rules/html.js","webpack:///./src/common/Util.js","webpack:///./src/module/tokenizer/core/index.js","webpack:///./src/module/lint/language/javascript.js","webpack:///./src/module/lint/language/css.js","webpack:///./src/module/lint/language/html.js","webpack:///./src/module/lint/core/index.js","webpack:///./src/module/fold/index.js","webpack:///./src/module/history/index.js","webpack:///./src/components/StatusBar.vue?5a78","webpack:///./src/components/Panel.vue?3b6e","webpack:///src/components/Panel.vue","webpack:///./src/components/Panel.vue?bc4b","webpack:///./src/components/Panel.vue","webpack:///src/components/StatusBar.vue","webpack:///./src/components/StatusBar.vue?3f37","webpack:///./src/components/StatusBar.vue","webpack:///./src/components/Tip.vue?9e11","webpack:///src/components/Tip.vue","webpack:///./src/components/Tip.vue?e042","webpack:///./src/components/Tip.vue","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?6ab4","webpack:///./src/components/Home.vue","webpack:///./src/router.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","component","ref","staticClass","style","_statusHeight","on","$event","preventDefault","onContextmenu","arguments","onClickEditor","onWheel","top","_numTop","staticStyle","_v","_s","maxLine","_l","line","num","class","cursorPos","height","_lineHeight","errorMap","onIconMouseLeave","onIconMouseOver","fold","onToggleFold","_e","_leftShadow","onScrollerMdown","_top","minWidth","_contentMinWidth","onSelectend","active","selected","domProps","html","_startBgLineVisible","left","selectedRange","start","width","_endBgLineVisible","end","tab","_tabLineLeft","directives","rawName","expression","cursorRealPos","visibility","_cursorVisible","stopPropagation","onHscroll","_hScrollWidth","onVscroll","scrollerHeight","_textAreaPos","onBlur","onCompositionend","onCompositionstart","onCopy","onCut","onFocus","onInput","onKeyDown","onPaste","column","statusHeight","language","tabSize","menuList","menuStyle","onClickMenu","tipContent","tipStyle","variable","strValid","e","side","tplStrChild","tplStrReg","token","plainToken","foldName","valid","childRule","rules","level","regexp","regex","option","text","index","RegExp","foldType","comment","braces","styleRules","attrRules","tagFoldName","tagFoldType","scriptStart","tagToken","scriptEnd","styleStart","styleEnd","exec","jsRules","cssRules","Util","clipboardData","Promise","resolve","getData","navigator","clipboard","readText","setData","writeText","String","replace","Number","val","tmp","arr","sort","arg1","arg2","wrap","str1","str2","id1","getUUID","id2","$tempDom","$","append","dom","charWidth","scrollWidth","charHight","clientHeight","fontSize","getComputedStyle","currentStyle","fullAngleCharWidth","remove","str","charW","fullCharW","substr","substring","match","fullAngleReg","tabNum","getStrExactWidth","count","id","_splitStr","clientWidth","clearTimeout","timer","setTimeout","Math","floor","htmlTrans","join","space","cont","targetObj","originObj","excludeKeys","_assign","Map","assigned","indexOf","nodeName","nodeType","has","Array","set","len","random","toString","funStr","blob","Blob","url","URL","createObjectURL","worker","Worker","target","context","properties","map","defineProperties","peek","keyCode","DELETE","BACKSPACE","command","INSERT","constData","PAIR_START","PAIR_START_END","PAIR_END","FOLD_OPEN","FOLD_CLOSE","DEFAULT","editor","currentLine","languageMap","initProperties","initLanguage","tokenizeLines","initRules","htmlRules","obj","ruleIdMap","regexMap","ruleId","deepAssign","item","setRuleId","rule","startBy","endBy","_item","states","statesKey","sources","sourceMap","regexs","resultStates","getEndRegex","reverse","getStartRegex","source","nowLine","onInsertContentBefore","tokenizeVisibleLins","startLine","endLine","processedLines","processedTime","Date","now","lineObj","htmls","tokens","tokenizeLine","folds","type","split","renderLine","lineId","lastIndex","preEnd","newStates","getRegex","resultObj","splitLongToken","groups","undefined","getTokenType","getFold","getToken","startCol","pop","expIndex","getChildExpIndex","getFoldName","getFoldType","_checkFold","childExpIndex","captures","hasChildExp","filter","preRuleId","preRule","getCombRegex","_isArray","keywords","assignOperator","binaryOperator","unitOperator","brackets","regs","number","identifier","string1","string2","string3","other","regflagsMap","maxErrors","TokenType","label","_isTokenType","ErrorType","Error","param","error","Lexer","init","Parser","lexer","cacheList","backs","parseList","preToken","errors","NUMBER","BOOLEAN","STRING","IDENTIFIER","KEYWORD","OPERATOR","BRACKET","PUNCTUATOR","REGEXP","OTHER","UNEXPECTED","EXPECTED","MISS","UNMATCH","expectedIdentifier","expectedSemicolon","expected","unexpected","unmatch","lines","input","assignOperatorMap","unitOperatorMap","binaryOperatorMap","keywordsMap","bracketsMap","reset","texts","skip","skipLine","hasNext","isVariable","isValue","isScalar","isDotAble","isPostOp","isPreOp","isAssignOperator","isUnitOperator","isBinaryOperator","isKeyWord","isBracket","isTokenType","craeteToken","scanSpace","scanComment","ch1","ch2","startToken","scanString","that","_end","_parseTmpStr","reg","parser","parseExprStmt","peekMatch","scanNunmber","scanIdentifier","scanBracket","ch","scanOperator","ch3","ch4","scanOther","next","_scanOp","_token","assign","recovery","cache","hasCache","cacheIndex","pass","pre2Token","puted","nextMatch","lookahead","putBack","unshift","skipSemicolon","Infinity","parse","startTime","parseStmt","parseTimer","skipCheckSemicolon","parseDeclareStmt","parseObjectStmt","parseBlockStmt","parseImportStmt","parseExportStmt","parseIfStmt","parseSwitchStmt","parseWithStmt","parseWhileStmt","parseDoStmt","parseTryStmt","parseForStmt","parseClassStmt","parseControlStmt","parseReturnStmt","parseThrowStmt","parseFunctionStmt","ends","parseExpr","parseFunArgsStmt","_identifier","parseAssignStmt","_nextExpr","_stmt","needName","checkIn","parseRegex","toLowerCase","leftHand","parseLeftHand","parseDot","assignAble","parseProperty","isSignOp","parseCallArgs","parseParen","parseArray","parseNew","parseArrorwFunction","lookLength","lookToken","skipNextExpr","a","b","console","log","tag","propertyName","numValue","propertyValue","punctuator","SELECTOR","PROPERTY","VALUE","NUM_VALUE","isProp","scanPunctuator","parseSelector","parseBlock","parseMedia","parseKeyFrames","parseCharset","parseImport","onlyValue","_nextMatchProperty","_nextMatchValue","hasValue","lbraces","htmlLint","js","css","enter","comments","parseComentRange","pos","setLineColumn","parseJs","concat","parseCss","jsParser","_parse","cssParser","parseFun","checkInComment","_compare","Function","jsLint","cssLint","parseId","terminate","setErrorMap","createWorker","onmessage","mod","postMessage","editorFunObj","findFoldIndex","unFolds","unFold","right","mid","resultFold","getRangeFold","foldMap","delete","foldIconCheck","stack","lineCount","realLine","relLine","history","doCommand","setSelectedRange","deleteContent","setCursorPos","insertContent","lastCommand","pushHistoryTime","comparePos","preCursorPos","showTabsize","_tabSize","tabSizeList","bottom","onTabsizeChange","showLanguage","_language","languageList","onLnaguageChange","group","checked","checkable","disabled","onClick","shortcut","content","Vue","use","Router","router","routes","path","Home","meta","title","redirect","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.16cc83b9.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('keep-alive',[_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div id=\"app\">\n\t\t<keep-alive>\n\t\t\t<router-view></router-view>\n\t\t</keep-alive>\n\t</div>\n</template>\n\n<script>\n\nexport default {\n    name: 'App',\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=151c70cd&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editor\",staticClass:\"my-editor-wrap\",style:({'padding-bottom': _vm._statusHeight}),on:{\"contextmenu\":function($event){$event.preventDefault();return _vm.onContextmenu.apply(null, arguments)},\"mousedown\":_vm.onClickEditor,\"selectstart\":function($event){$event.preventDefault();},\"wheel\":function($event){$event.preventDefault();return _vm.onWheel.apply(null, arguments)}}},[_c('div',{staticClass:\"my-editor-nums\",style:({top: _vm._numTop})},[_c('div',{staticClass:\"my-editor-num\",staticStyle:{\"visibility\":\"hidden\"}},[_vm._v(_vm._s(_vm.maxLine))]),_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-editor-num\",class:{'my-editor-num-active': _vm.cursorPos.line==line.num},style:({height:_vm._lineHeight, 'line-height':_vm._lineHeight})},[_c('span',{staticClass:\"my-editor-icon my-editor-center\",class:[_vm.errorMap[line.num]?'my-editor-icon-error':''],on:{\"mouseleave\":_vm.onIconMouseLeave,\"mouseover\":function($event){return _vm.onIconMouseOver(line.num, $event)}}}),_c('span',[_vm._v(_vm._s(line.num))]),(line.fold)?_c('span',{staticClass:\"my-editor-fold my-editor-center\",class:[line.fold=='open'?'my-editor-fold-open':'my-editor-fold-close'],on:{\"click\":function($event){return _vm.onToggleFold(line.num)}}}):_vm._e()])})],2),_c('div',{staticClass:\"my-editor-content-wrap\",style:({'box-shadow': _vm._leftShadow})},[_c('div',{ref:\"scroller\",staticClass:\"my-editor-content-scroller\",on:{\"mousedown\":_vm.onScrollerMdown}},[_c('div',{ref:\"content\",staticClass:\"my-editor-content\",style:({top: _vm._top, minWidth: _vm._contentMinWidth}),on:{\"selectend\":function($event){$event.preventDefault();return _vm.onSelectend.apply(null, arguments)}}},[_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-editor-line\",class:{active: _vm.cursorPos.line == line.num},style:({height:_vm._lineHeight, 'line-height':_vm._lineHeight}),attrs:{\"data-line\":line.num,\"id\":'line_'+line.num}},[_c('div',{staticClass:\"my-editor-code\",class:[line.selected ? 'my-editor-bg-color' : '', line.fold == 'close' ? 'fold-close' : ''],attrs:{\"data-line\":line.num},domProps:{\"innerHTML\":_vm._s(line.html)}}),(_vm._startBgLineVisible(line.num))?_c('div',{staticClass:\"my-editor-line-bg my-editor-bg-color\",style:({left: _vm.selectedRange.start.left + 'px', width: _vm.selectedRange.start.width + 'px'})}):_vm._e(),(_vm._endBgLineVisible(line.num))?_c('div',{staticClass:\"my-editor-line-bg my-editor-bg-color\",style:({left: _vm.selectedRange.end.left + 'px', width: _vm.selectedRange.end.width + 'px'})}):_vm._e(),_vm._l((line.tabNum),function(tab){return _c('span',{staticClass:\"my-editor-tab-line\",style:({left: _vm._tabLineLeft(tab)})})})],2)}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.cursorPos.show),expression:\"cursorPos.show\"}],staticClass:\"my-editor-cursor\",style:({height: _vm._lineHeight, top: _vm.cursorRealPos.top, left: _vm.cursorRealPos.left, visibility: _vm._cursorVisible})})],2)]),_c('div',{ref:\"hScroller\",staticClass:\"my-editor-h-scroller-wrap\",on:{\"mousedown\":function($event){$event.stopPropagation();},\"mouseup\":function($event){$event.stopPropagation();},\"scroll\":_vm.onHscroll}},[_c('div',{staticClass:\"my-editor-h-scroller\",style:({width: _vm._hScrollWidth})})]),_c('div',{ref:\"vScroller\",staticClass:\"my-editor-v-scroller-wrap\",on:{\"mousedown\":function($event){$event.stopPropagation();},\"mouseup\":function($event){$event.stopPropagation();},\"scroll\":_vm.onVscroll}},[_c('div',{staticClass:\"my-editor-v-scroller\",style:({height: _vm.scrollerHeight})})]),_c('textarea',{ref:\"textarea\",staticClass:\"my-editor-textarea\",style:({top: _vm._textAreaPos.top, left: _vm._textAreaPos.left}),on:{\"blur\":_vm.onBlur,\"compositionend\":_vm.onCompositionend,\"compositionstart\":_vm.onCompositionstart,\"copy\":function($event){$event.preventDefault();return _vm.onCopy.apply(null, arguments)},\"cut\":function($event){$event.preventDefault();return _vm.onCut.apply(null, arguments)},\"focus\":_vm.onFocus,\"input\":_vm.onInput,\"keydown\":_vm.onKeyDown,\"paste\":function($event){$event.preventDefault();return _vm.onPaste.apply(null, arguments)}}})]),_c('status-bar',{ref:\"statusBar\",attrs:{\"column\":_vm.cursorPos.column+1,\"height\":_vm.statusHeight,\"language\":_vm.language,\"line\":_vm.cursorPos.line,\"tabSize\":_vm.tabSize},on:{\"update:language\":function($event){_vm.language=$event},\"update:tabSize\":function($event){_vm.tabSize=$event},\"update:tab-size\":function($event){_vm.tabSize=$event}}}),_c('panel',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisble),expression:\"menuVisble\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onClickMenu}}),_c('tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tipContent),expression:\"tipContent\"}],attrs:{\"content\":_vm.tipContent,\"styles\":_vm.tipStyle}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const variable = `[\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*?`\r\nconst strValid = function (e) {\r\n    let value = e.value;\r\n    if (e.side === 'end' && value[0] === '\\\\' && value.length % 2 === 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nconst tplStrChild = {};\r\n//字符串``\r\nconst tplStrReg = {\r\n    start: /`/,\r\n    end: /\\\\*?`/,\r\n    token: 'js-string',\r\n    plainToken: 'js-string',\r\n    foldName: 'js-string',\r\n    valid: strValid,\r\n    childRule: {\r\n        rules: [{\r\n            start: /\\$\\{/,\r\n            end: /\\}/,\r\n            foldName: 'js-string-expr',\r\n            level: 1,\r\n            childRule: tplStrChild\r\n        }]\r\n    }\r\n};\r\n// 正则字面量\r\nconst regexp = {\r\n    start: /(?<=^|[\\(\\{\\[\\;\\,\\:\\?\\!\\+\\-\\*\\%\\=\\>\\<\\&\\|]\\s*?)\\//,\r\n    end: /(?<=(?:\\\\[\\s\\S]|[^\\\\])+?)\\/(?:i|m|g|im|mi|ig|gi|mg|gm|img|igm|mig|mgi|gim|gmi)?|$/i,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /\\\\b/,\r\n            token: 'js-regex-ctrl'\r\n        }, {\r\n            regex: /\\\\[\\s\\S]/,\r\n            token: 'js-regex-escape'\r\n        }, {\r\n            regex: /\\?\\=|\\?\\<\\=|\\?\\!|\\?\\<\\!/,\r\n            token: 'js-regex'\r\n        }, {\r\n            regex: /\\*|\\^|\\$|\\?/,\r\n            token: 'js-regex-ctrl'\r\n        }, {\r\n            start: /\\[/,\r\n            end: /(?<!\\\\)\\]/,\r\n            token: 'js-regex-bracket',\r\n            childRule: {\r\n                rules: [{\r\n                    regex: /\\^/,\r\n                    token: 'js-regex-ctrl',\r\n                    valid: function (option) {\r\n                        let text = option.text;\r\n                        let index = option.index;\r\n                        if (text[index - 1] === '[' && text[index - 2] !== '\\\\') {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }]\r\n            }\r\n        }]\r\n    },\r\n    token: 'js-regex'\r\n}\r\nconst rules = [\r\n    tplStrReg,\r\n    //字符串''\r\n    {\r\n        start: /'/,\r\n        end: /\\\\*?'|[^\\\\]$|^$/,\r\n        token: 'js-string',\r\n        foldName: 'js-single-string',\r\n        valid: strValid\r\n    },\r\n    //字符串\"\"\"\r\n    {\r\n        start: /\"/,\r\n        end: /\\\\*?\"|[^\\\\]$|^$/,\r\n        token: 'js-string',\r\n        foldName: 'js-double-string',\r\n        valid: strValid\r\n    },\r\n    //多行注释\r\n    {\r\n        start: /\\/\\*/,\r\n        end: /\\*\\//,\r\n        token: 'js-comment',\r\n        foldName: 'js-comment'\r\n    }, {\r\n        regex: /\\/\\/[\\s\\S]*$/,\r\n        token: 'js-comment'\r\n    },\r\n    regexp,\r\n    {\r\n        regex: /\\bvar\\b|\\blet\\b|\\bconst\\b/,\r\n        token: 'js-type'\r\n    },\r\n    {\r\n        regex: /\\bcontinue\\b|\\bbreak\\b|\\bswitch\\b|\\bcase\\b|\\bdo\\b|\\bwhile\\b|\\belse\\b|\\bfor\\b|\\bif\\b|\\bnew\\b|\\breturn\\b|\\bfrom\\b|\\btypeof|\\beach\\b|\\bin\\b|\\bimport\\b|\\bexport\\b|\\bdefault\\b|\\bwith\\b|\\bthrow\\b|\\btry\\b|\\bcatch\\b|\\bfinally\\b/,\r\n        token: 'js-key'\r\n    }, {\r\n        regex: /\\bclass\\b/, //class {}\r\n        token: 'js-class'\r\n    }, {\r\n        regex: /\\b[A-Z][\\\\$_a-zA-Z0-9]*?(?=\\.)/, //Token.\r\n        token: 'js-function-class'\r\n    }, {\r\n        regex: /\\bfunction\\b/,\r\n        token: 'js-function'\r\n    }, {\r\n        regex: new RegExp(`(${variable})\\\\s*?(?=\\\\([^\\\\(\\\\)]*?\\\\)\\\\s*?\\\\{)`), //ie. test(){}\r\n        token: 'js-function-name'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\bfunction\\\\s+?)${variable}`), //ie. function test\r\n        token: 'js-function-name'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\bnew\\\\s+?)${variable}(?=\\\\s*?\\\\()`), //ie. new Test()\r\n        token: 'js-new-class'\r\n    }, {\r\n        regex: /(\\{)|(\\[)|(\\()/,\r\n        token: ['js-lbraces', 'js-lbracket', 'js-lparen'],\r\n        foldType: -1,\r\n        foldName: ['js-braces', 'js-bracket', 'js-paren']\r\n    }, {\r\n        regex: /(\\})|(\\])|(\\))/,\r\n        token: ['js-rbraces', 'js-rbracket', 'js-rparen'],\r\n        foldType: 1,\r\n        foldName: ['js-braces', 'js-bracket', 'js-paren']\r\n    }, {\r\n        regex: /(?<=\\.)(?:prototype\\b|toString\\b|valueOf\\b|toLocaleString\\b|hasOwnProperty\\b|isPrototypeOf\\b|propertyIsEnumerable\\b)/,\r\n        token: 'js-local'\r\n    }, {\r\n        regex: /\\bwindow\\b|\\bdocument\\b|\\bmodule\\b|\\bexports\\b/,\r\n        token: 'js-local'\r\n    }, {\r\n        regex: /\\bthis\\b|\\bself\\b/,\r\n        token: 'js-this'\r\n    }, {\r\n        regex: /\\+|\\-|\\*|\\/|\\=|\\!|>|<|\\&|\\||\\?/,\r\n        token: 'js-oprator'\r\n    }, {\r\n        regex: new RegExp(`\\\\b\\\\d+\\\\b|\\\\b0[xX][a-zA-Z0-9]*?\\\\b|\\\\bundefined\\\\b|\\\\bnull\\\\b|\\\\btrue\\\\b|\\\\bfalse\\\\b|\\\\bNaN\\\\b`),\r\n        token: 'js-number'\r\n    }, {\r\n        regex: new RegExp(`(${variable})(?=\\\\()`), //ie. test(),.test()\r\n        token: 'js-function-exec'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\s*?class\\\\s*?)${variable}(?=\\\\s*?\\\\{)`), //ie. calss Test{}\r\n        token: 'js-class-name'\r\n    }\r\n];\r\ntplStrChild.rules = rules;\r\n\r\nexport default {\r\n    rules: rules\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-24 16:08:20\r\n * @Description: \r\n */\r\nconst comment = {\r\n    start: /\\/\\*/,\r\n    end: /\\*\\//,\r\n    token: 'css-comment',\r\n    foldName: 'css-comment'\r\n}\r\nconst braces = {\r\n    start: /\\{/,\r\n    end: /\\}/,\r\n    token: ['css-lbraces', 'css-rbraces'],\r\n    foldName: 'css-braces',\r\n    childRule: {\r\n        rules: [\r\n            comment,\r\n            null,\r\n            {\r\n                regex: /;/,\r\n                token: 'css-split'\r\n            }, {\r\n                regex: /:/,\r\n                token: 'css-value-start'\r\n            }, {\r\n                regex: /[a-zA-Z][^;\\:\\s\\}]*?(?=\\s*?\\:)/,\r\n                token: 'css-property'\r\n            }, {\r\n                regex: /(?<=\\:\\s*?)[^;\\:\\}]+?(?=;|}|$)/,\r\n                token: 'css-value'\r\n            }, {\r\n                regex: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)%/,\r\n                token: 'css-percent'\r\n            }\r\n        ]\r\n    }\r\n}\r\nbraces.childRule.rules[1] = braces;\r\n\r\nexport default {\r\n    rules: [\r\n        comment,\r\n        braces,\r\n        {\r\n            regex: /[#\\.]?[^\\s\\,\\:\\{]+/,\r\n            token: function (value) {\r\n                if (value[0] == '.') {\r\n                    return 'css-selector-class';\r\n                } else if (value[0] == '#') {\r\n                    return 'css-selector-id';\r\n                } else {\r\n                    return 'css-selector-tag';\r\n                }\r\n            }\r\n        }, {\r\n            regex: /(?<=\\:)[^\\s\\,\\:]+/,\r\n            token: 'css-pseudo'\r\n        }\r\n    ]\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-10 09:31:38\r\n * @Description: \r\n */\r\nimport jsRules from './javascript.js';\r\nimport cssRules from './css.js';\r\n\r\nconst styleRules = [{\r\n    regex: /(?<=\\:(?:\\s*?\\w+?\\s*?){0,})\\d+/,\r\n    token: 'html-style-number'\r\n}, {\r\n    regex: /(?<=\\:\\s*?\\d+)px\\b/,\r\n    token: 'html-style-px'\r\n}, {\r\n    regex: /(?<=(?:\\;|'|\")\\s*?)[^\\<\\>\\:\\;'\"]+/,\r\n    token: 'html-style-name'\r\n}, {\r\n    regex: /(?<=\\:\\s*?)[^\\<\\>\\:\\;'\"]+/,\r\n    token: 'html-style-value'\r\n}];\r\n\r\nconst attrRules = [{\r\n    start: /(?<=style\\s*?\\=\\s*?)'/,\r\n    end: /'/,\r\n    token: 'xml-attr-value',\r\n    level: 1,\r\n    childRule: {\r\n        rules: styleRules\r\n    }\r\n}, {\r\n    start: /(?<=style\\s*?\\=\\s*?)\"/,\r\n    end: /\"/,\r\n    token: 'xml-attr-value',\r\n    level: 1,\r\n    childRule: {\r\n        rules: styleRules\r\n    }\r\n}, {\r\n    start: /(?<=\\=\\s*?)\"/,\r\n    end: /\"/,\r\n    level: 1,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    start: /(?<=\\=\\s*?)'/,\r\n    end: /'/,\r\n    level: 1,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    regex: /(?<=\\<\\/?)\\w+\\b/,\r\n    token: 'xml-tag-name',\r\n    foldName: tagFoldName,\r\n    foldType: tagFoldType\r\n}, {\r\n    regex: /(?<=\\=)\\s*?[^\\<\\>\\s\\'\\\"]+\\b/,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    regex: /\\b[^'\"=\\s\\>\\<]+\\b/,\r\n    token: 'xml-attr-name'\r\n}];\r\n\r\nconst scriptStart = {\r\n    start: /\\<(?=script\\b)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: attrRules\r\n    }\r\n}\r\n\r\nconst scriptEnd = {\r\n    start: /\\<\\/(?=script\\>)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /(?<=\\<\\/?)\\w+\\b/,\r\n            token: 'xml-tag-name',\r\n            foldName: tagFoldName,\r\n            foldType: tagFoldType\r\n        }]\r\n    }\r\n}\r\n\r\nconst styleStart = {\r\n    start: /\\<(?=style\\b)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: attrRules\r\n    }\r\n}\r\n\r\nconst styleEnd = {\r\n    start: /\\<\\/(?=style\\s*?\\>)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /(?<=\\<\\/?)\\w+\\b/,\r\n            token: 'xml-tag-name',\r\n            foldName: tagFoldName,\r\n            foldType: tagFoldType\r\n        }]\r\n    }\r\n}\r\n\r\nfunction tagToken(e) {\r\n    if (e.side == 'start') {\r\n        if (e.value[1] == '/') {\r\n            return 'xml-end-tag-open';\r\n        } else {\r\n            return 'xml-tag-open';\r\n        }\r\n    } else if (e.side === 'end') {\r\n        return 'xml-tag-close';\r\n    }\r\n}\r\n\r\nfunction tagFoldName(e) {\r\n    if (/hr|br|meta|img|link|input/i.exec(e.value)) { //单标签，不折叠\r\n        return '';\r\n    }\r\n    return e.value;\r\n}\r\n\r\nfunction tagFoldType(e) {\r\n    if (e.text[e.index - 1] == '/') {\r\n        return 1;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport default {\r\n    rules: [{\r\n        start: scriptStart,\r\n        end: scriptEnd,\r\n        childRule: jsRules\r\n    }, {\r\n        start: styleStart,\r\n        end: styleEnd,\r\n        childRule: cssRules\r\n    }, {\r\n        start: /\\<\\/?(?=\\w+\\b)/,\r\n        end: /\\/?\\>/,\r\n        token: tagToken,\r\n        childRule: {\r\n            rules: attrRules\r\n        }\r\n    }, {\r\n        start: /\\<\\!\\-\\-/,\r\n        end: /\\-\\-\\>/,\r\n        token: 'xml-comment',\r\n        foldName: 'xml-comment'\r\n    }]\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2020-10-31 13:48:50\r\n * @Description: 工具类\r\n */\r\nimport $ from 'jquery';\r\n\r\nclass Util {\r\n    static readClipboard() {\r\n        if (window.clipboardData) {\r\n            return new Promise((resolve) => {\r\n                resolve(clipboardData.getData('Text'));\r\n            });\r\n        } else if (navigator.clipboard) {\r\n            return navigator.clipboard.readText();\r\n        }\r\n    }\r\n    static writeClipboard(text) {\r\n        if (window.clipboardData) {\r\n            clipboardData.setData('Text', text);\r\n        } else if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(text);\r\n        }\r\n    }\r\n    //获取数字\r\n    static getNum(value) {\r\n        value = String(value);\r\n        value = value.replace(/[^0123456789\\.]/g, '');\r\n        var regex = /^\\d+(\\.\\d*)?$/;\r\n        var r = regex.exec(value);\r\n        var num = r && r[0] || '';\r\n        if (num) {\r\n            num = Number(r[0]);\r\n        }\r\n        return num;\r\n    }\r\n    //生成指定个数的空白符\r\n    static space(tabSize) {\r\n        var val = '';\r\n        for (var tmp = 0; tmp < tabSize; tmp++) {\r\n            val += ' '\r\n        };\r\n        return val;\r\n    }\r\n    //数组数字排序\r\n    static sortNum(arr) {\r\n        arr.sort(function (arg1, arg2) {\r\n            return Number(arg1) - Number(arg2);\r\n        })\r\n    }\r\n    //获取字符宽度\r\n    static getCharWidth(wrap) {\r\n        var str1 = '------------------------------------------------------------------------------------';\r\n        var str2 = '一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一';\r\n        var id1 = 'char-width-' + Util.getUUID();\r\n        var id2 = 'char-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-editor-line\">\r\n        <div class=\"my-editor-code\"><span id=\"${id1}\">${str1}</span><span id=\"${id2}\">${str2}</span></div>\r\n        </div>`);\r\n        $(wrap).append($tempDom)\r\n        var dom = $('#' + id1)[0];\r\n        var charWidth = dom.scrollWidth / str1.length;\r\n        var charHight = dom.clientHeight;\r\n        var fontSize = window.getComputedStyle ? window.getComputedStyle(dom, null).fontSize : dom.currentStyle.fontSize;\r\n        var fullAngleCharWidth = $('#' + id2)[0].scrollWidth / str2.length;\r\n        $tempDom.remove();\r\n        return {\r\n            charWidth: charWidth,\r\n            fullAngleCharWidth: fullAngleCharWidth,\r\n            charHight: charHight,\r\n            fontSize: fontSize\r\n        }\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {number} charW     半角符号/文字宽度\r\n     * @param  {number} fullCharW 全角符号/文字宽度\r\n     * @param  {number} tabSize   tab符所占宽度\r\n     * @param  {number} start     文本开始索引\r\n     * @param  {number} end       文本结束索引\r\n     * @return {number}           文本真实宽度\r\n     */\r\n    static getStrWidth(str, charW, fullCharW, tabSize, start, end) {\r\n        tabSize = tabSize || 4;\r\n        if (typeof start != 'undefined') {\r\n            str = str.substr(start);\r\n        }\r\n        if (typeof end != 'undefined') {\r\n            str = str.substring(0, end - start);\r\n        }\r\n        var match = str.match(this.fullAngleReg);\r\n        var width = str.length * charW;\r\n        var tabNum = str.match(/\\t/g);\r\n        tabNum = tabNum && tabNum.length || 0;\r\n        match = match && match.length || 0;\r\n        if (match) {\r\n            match = match - tabNum;\r\n            width = match * fullCharW + (str.length - match) * charW;\r\n            width += tabNum * charW * (tabSize - 1);\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {DOM} wrap     容器\r\n     */\r\n    static getStrExactWidth(str, tabSize, wrap) {\r\n        Util.getStrExactWidth.count = Util.getStrExactWidth.count || 0;\r\n        Util.getStrExactWidth.count++;\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n        var id = 'str-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-editor-line my-editor-temp-text\" style=\"visibility:hidden\">\r\n        <div class=\"my-editor-code\" id=\"${id}\">${_splitStr(str)}</div>\r\n        </div>`);\r\n        $(wrap).append($tempDom)\r\n        var dom = $('#' + id)[0];\r\n        var charWidth = dom.clientWidth;\r\n        if (Util.getStrExactWidth.count > 5) { //避免频繁删除dom导致浏览器卡顿\r\n            $('.my-editor-temp-text').remove();\r\n        } else {\r\n            clearTimeout(Util.getStrExactWidth.timer);\r\n            Util.getStrExactWidth.timer = setTimeout(() => {\r\n                $('.my-editor-temp-text').remove();\r\n            }, 500);\r\n        }\r\n        return charWidth;\r\n\r\n        function _splitStr(str) {\r\n            let count = Math.floor(str.length / 100);\r\n            let result = [];\r\n            for (let i = 0; i < count; i++) {\r\n                let column = i * 100;\r\n                result.push(Util.htmlTrans(str.slice(column, column + 100)));\r\n            }\r\n            count = count * 100;\r\n            if (count < str.length) {\r\n                result.push(Util.htmlTrans(str.slice(count)));\r\n            }\r\n            return `<span>${result.join('</span><span>').replace(/\\t/g, Util.space(tabSize || 4))}</span>`;\r\n        }\r\n    }\r\n    //<,>转义\r\n    static htmlTrans(cont) {\r\n        cont = cont.replace(/\\&\\#/g, '&amp;#');\r\n        return cont.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n    }\r\n    // 深度克隆\r\n    static deepAssign(targetObj, originObj, excludeKeys) {\r\n        return _assign(targetObj, originObj, excludeKeys, new Map());\r\n\r\n        function _assign(targetObj, originObj, excludeKeys, assigned) {\r\n            excludeKeys = excludeKeys || [];\r\n            for (var key in originObj) {\r\n                var value = originObj[key];\r\n                if (excludeKeys.indexOf(key) > -1) {\r\n                    continue;\r\n                }\r\n                if (typeof value === 'object' && !(value instanceof RegExp) && value !== null &&\r\n                    (!value.nodeName || !value.nodeType)) {\r\n                    if (assigned.has(value)) {\r\n                        targetObj[key] = assigned.get(value);\r\n                    } else {\r\n                        let tmp = null;\r\n                        if (value instanceof Array) {\r\n                            tmp = targetObj[key] || [];\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, excludeKeys, new Map(assigned));\r\n                        } else {\r\n                            tmp = targetObj[key] || {};\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, excludeKeys, new Map(assigned));\r\n                        }\r\n                    }\r\n                } else {\r\n                    targetObj[key] = value;\r\n                }\r\n            }\r\n            return targetObj;\r\n        }\r\n    }\r\n    static getUUID(len) {\r\n        len = len || 16;\r\n        var str = '';\r\n        for (var i = 0; i < len; i++) {\r\n            str += (Math.random() * 16 | 0).toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 比较坐标的前后\r\n     * @param {Object} start \r\n     * @param {Object} end \r\n     */\r\n    static comparePos(start, end) {\r\n        if (start.line > end.line || start.line == end.line && start.column > end.column) {\r\n            return 1;\r\n        } else if (start.line == end.line && start.column == end.column) {\r\n            return 0\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    static createWorker(funStr) {\r\n        var blob = new Blob([funStr]);\r\n        var url = window.URL.createObjectURL(blob);\r\n        var worker = new Worker(url);\r\n        return worker;\r\n    }\r\n    static defineProperties(target, context, properties) {\r\n        let result = {};\r\n        properties.map((property) => {\r\n            result[property] = {\r\n                get: function () {\r\n                    if (typeof context[property] == 'function') {\r\n                        return context[property].bind(context);\r\n                    } else {\r\n                        return context[property];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        Object.defineProperties(target, result);\r\n    }\r\n}\r\nArray.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n}\r\nString.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n}\r\n//全角符号和中文字符\r\nUtil.fullAngleReg = /[\\x00-\\x1f\\x80-\\xa0\\xad\\u1680\\u180E\\u2000-\\u200f\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF\\uFFF9-\\uFFFC]|[\\u1100-\\u115F\\u11A3-\\u11A7\\u11FA-\\u11FF\\u2329-\\u232A\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3000-\\u303E\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u3190-\\u31BA\\u31C0-\\u31E3\\u31F0-\\u321E\\u3220-\\u3247\\u3250-\\u32FE\\u3300-\\u4DBF\\u4E00-\\uA48C\\uA490-\\uA4C6\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFAFF\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFF01-\\uFF60\\uFFE0-\\uFFE6]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nUtil.keyCode = {\r\n    DELETE: 46,\r\n    BACKSPACE: 8\r\n}\r\nUtil.command = {\r\n    DELETE: 'delete',\r\n    INSERT: 'insert'\r\n}\r\nUtil.constData = {\r\n    PAIR_START: -1,\r\n    PAIR_START_END: 0,\r\n    PAIR_END: 1,\r\n    FOLD_OPEN: 1,\r\n    FOLD_CLOSE: -1,\r\n    DEFAULT: 'default'\r\n}\r\nexport default Util;","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-15 11:39:41\r\n * @Description: \r\n */\r\nimport jsRules from '@/module/tokenizer/rules/javascript.js';\r\nimport htmlRules from '@/module/tokenizer/rules/html.js';\r\nimport cssRules from '@/module/tokenizer/rules/css.js';\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.currentLine = 1;\r\n        this.languageMap = [];\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initLanguage(language) {\r\n        this.language = language;\r\n        clearTimeout(this.tokenizeLines.timer);\r\n        switch (language) {\r\n            case 'JavaScript':\r\n                this.initRules(jsRules);\r\n                break;\r\n            case 'HTML':\r\n                this.initRules(htmlRules);\r\n                break;\r\n            case 'CSS':\r\n                this.initRules(cssRules);\r\n                break;\r\n            default:\r\n                this.language = 'plain';\r\n        }\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['startLine', 'maxVisibleLines', 'maxLine', 'renderLine']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    initRules(rules) {\r\n        if (this.languageMap[this.language]) {\r\n            let obj = this.languageMap[this.language];\r\n            this.rules = obj.rules;\r\n            this.ruleIdMap = obj.ruleIdMap;\r\n            this.regexMap = obj.regexMap;\r\n            return;\r\n        }\r\n        this.ruleId = 1;\r\n        this.ruleIdMap = {};\r\n        this.regexMap = {};\r\n        this.rules = Util.deepAssign({}, rules);\r\n        this.rules.rules.map((item) => {\r\n            this.setRuleId(item);\r\n        });\r\n        this.languageMap[this.language] = {\r\n            rules: this.rules,\r\n            ruleIdMap: this.ruleIdMap,\r\n            regexMap: this.regexMap\r\n        };\r\n    }\r\n    setRuleId(rule) {\r\n        // 每个规则生成一个唯一标识\r\n        rule.ruleId = this.ruleId++;\r\n        rule.level = rule.level || 0;\r\n        rule.token = rule.token || '';\r\n        this.ruleIdMap[rule.ruleId] = rule;\r\n        if (typeof rule.start === 'object' && !(rule.start instanceof RegExp)) {\r\n            this.setRuleId(rule.start);\r\n            rule.start.startBy = rule.ruleId;\r\n        }\r\n        if (typeof rule.end === 'object' && !(rule.end instanceof RegExp)) {\r\n            this.setRuleId(rule.end);\r\n            rule.end.endBy = rule.ruleId;\r\n        }\r\n        if (rule.childRule && rule.childRule.rules) {\r\n            rule.childRule.rules.map((_item) => {\r\n                !_item.ruleId && this.setRuleId(_item);\r\n            });\r\n            rule.rules = rule.childRule.rules;\r\n        }\r\n    }\r\n    // 组合正则表达式\r\n    getCombRegex(states) {\r\n        states = states || [];\r\n        let statesKey = states + '' || '0';\r\n        let sources = [];\r\n        let sourceMap = {};\r\n        let regexs = [];\r\n        let index = 0;\r\n        let rule = null;\r\n        if (this.regexMap[statesKey]) {\r\n            return this.regexMap[statesKey];\r\n        }\r\n        if (states.length > 1) {\r\n            let resultStates = [];\r\n            while (index < states.length - 1) {\r\n                rule = this.ruleIdMap[states[index + 1]];\r\n                if (rule.startBy === states[index] || rule.endBy === states[index]) { //处于同一层级\r\n                    index++;\r\n                    continue;\r\n                }\r\n                resultStates.push(states[index]);\r\n                index++;\r\n            }\r\n            resultStates.push(states[index]);\r\n            states = resultStates;\r\n        }\r\n        index = states.length - 1;\r\n        rule = states.length && this.ruleIdMap[states.peek()] || this.rules;\r\n        while (index >= 0 && this.ruleIdMap[states[index]].level >= rule.level) {\r\n            regexs.push(this.getEndRegex(this.ruleIdMap[states[index]]));\r\n            index--;\r\n        }\r\n        regexs.reverse();\r\n        rule.rules && rule.rules.map((item) => {\r\n            regexs.push(this.getStartRegex(item));\r\n        });\r\n        regexs.map((item) => {\r\n            let side = item.side === -1 ? 'start' : 'end';\r\n            if (!sourceMap[item.ruleId] || sourceMap[item.ruleId] !== side) {\r\n                sources.push(`?<${side}_${item.ruleId}>${item.regex.source}`);\r\n                sourceMap[item.ruleId] = side;\r\n            }\r\n        });\r\n        this.regexMap[statesKey] = new RegExp(`(${sources.join(')|(')})`, 'g');\r\n        return this.regexMap[statesKey];\r\n    }\r\n    getStartRegex(rule) {\r\n        if (rule.regex instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.regex,\r\n                side: -1\r\n            }\r\n        } else if (rule.start instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.start,\r\n                side: -1\r\n            };\r\n        } else if (rule.start.startBy) {\r\n            return this.getStartRegex(rule.start);\r\n        }\r\n    }\r\n    getEndRegex(rule, side) {\r\n        if (rule.regex instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.regex,\r\n                side: side || 1\r\n            }\r\n        } else if (rule.end instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.end,\r\n                side: side || 1\r\n            };\r\n        } else if (rule.end.endBy) {\r\n            return this.getStartRegex(rule.end, -1);\r\n        }\r\n    }\r\n    onInsertContentBefore(nowLine) {\r\n        this.onInsertContentBefore.nowLine = nowLine;\r\n    }\r\n    onInsertContentAfter(nowLine) {\r\n        nowLine = this.onInsertContentBefore.nowLine;\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        if (nowLine <= this.currentLine) {\r\n            this.tokenizeLines(nowLine);\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onDeleteContentBefore(nowLine) {}\r\n    onDeleteContentAfter(nowLine) {\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        if (nowLine <= this.currentLine) {\r\n            this.tokenizeLines(nowLine);\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onScroll() {\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        this.tokenizeVisibleLins();\r\n    }\r\n    tokenizeVisibleLins() {\r\n        let currentLine = this.currentLine;\r\n        this.tokenizeLines(this.startLine);\r\n        this.currentLine = currentLine;\r\n    }\r\n    tokenizeLines(startLine, endLine) {\r\n        let processedLines = 0;\r\n        let processedTime = Date.now();\r\n        endLine = endLine || this.maxLine;\r\n        while (startLine <= endLine) {\r\n            let lineObj = this.htmls[startLine - 1];\r\n            if (!lineObj.tokens) { //文本超过一万时跳过高亮\r\n                let data = this.tokenizeLine(startLine);\r\n                lineObj.tokens = data.tokens;\r\n                lineObj.folds = data.folds;\r\n                lineObj.html = data.tokens.map((item) => {\r\n                    let rule = this.ruleIdMap[item.ruleId];\r\n                    if (rule && typeof rule.value === 'function') {\r\n                        return rule.value(item.value);\r\n                    } else {\r\n                        return `<span class=\"${item.type.split('.').join(' ')}\" data-column=\"${item.column}\">${Util.htmlTrans(item.value)}</span>`;\r\n                    }\r\n                }).join('');\r\n                this.renderLine(lineObj.lineId);\r\n                if (lineObj.states + '' != data.states + '') {\r\n                    lineObj.states = data.states;\r\n                    lineObj = this.htmls[startLine];\r\n                    if (lineObj) {\r\n                        lineObj.tokens = null;\r\n                    }\r\n                }\r\n                processedLines++;\r\n                // 避免卡顿\r\n                if (processedLines % 10 == 0 && Date.now() - processedTime >= 20) {\r\n                    startLine++;\r\n                    break;\r\n                }\r\n            }\r\n            startLine++;\r\n        }\r\n        this.currentLine = startLine;\r\n        if (startLine <= endLine) {\r\n            this.tokenizeLines.timer = setTimeout(() => {\r\n                this.tokenizeLines(startLine, endLine);\r\n            }, 20);\r\n        }\r\n    }\r\n    tokenizeLine(line) {\r\n        let match = null;\r\n        let rule = null;\r\n        let lastIndex = 0;\r\n        let preEnd = 0;\r\n        let newStates = [];\r\n        let states = (line > 1 && this.htmls[line - 2].states || []).slice(0);\r\n        let lineObj = this.htmls[line - 1];\r\n        let regex = this.getRegex(states);\r\n        let resultObj = {\r\n            tokens: [],\r\n            folds: []\r\n        }\r\n        if (lineObj.text.length > 10000) {\r\n            return {\r\n                tokens: this.splitLongToken([{\r\n                    type: 'plain',\r\n                    column: 0,\r\n                    value: lineObj.text\r\n                }]),\r\n                folds: [],\r\n                states: states\r\n            }\r\n        }\r\n        while (match = regex.exec(lineObj.text)) {\r\n            let token = null;\r\n            let fold = null;\r\n            let valid = true;\r\n            let side = '';\r\n            for (let ruleId in match.groups) {\r\n                if (match.groups[ruleId] == undefined) {\r\n                    continue;\r\n                }\r\n                side = ruleId.split('_')[0];\r\n                ruleId = ruleId.split('_')[1] - 0;\r\n                rule = this.ruleIdMap[ruleId];\r\n                // side = this.getSide(rule, states, side);\r\n                if (preEnd < match.index) { //普通文本\r\n                    let value = lineObj.text.slice(preEnd, match.index);\r\n                    resultObj.tokens.push({\r\n                        value: value,\r\n                        column: preEnd,\r\n                        type: this.getTokenType({\r\n                            rule: this.ruleIdMap[states.peek()],\r\n                            index: preEnd,\r\n                            value: value,\r\n                            text: lineObj.text\r\n                        })\r\n                    });\r\n                    preEnd = match.index;\r\n                }\r\n                if (typeof rule.valid === 'function') {\r\n                    valid = rule.valid({\r\n                        index: match.index,\r\n                        text: lineObj.text,\r\n                        value: match[0],\r\n                        side: side\r\n                    });\r\n                    if (!valid) {\r\n                        break;\r\n                    }\r\n                }\r\n                fold = this.getFold(rule, match, states, resultObj, lineObj.text);\r\n                token = this.getToken(rule, match, states, newStates, resultObj, lineObj.text, side);\r\n                resultObj.tokens.push(token);\r\n                fold && resultObj.folds.push(fold);\r\n                preEnd = match.index + match[0].length;\r\n                break;\r\n            }\r\n            if (!match[0]) { //考虑/^$/的情况\r\n                break;\r\n            }\r\n            if (!valid) { //跳过当前无效结果\r\n                continue;\r\n            }\r\n            lastIndex = regex.lastIndex;\r\n            regex.lastIndex = 0;\r\n            regex = this.getRegex(states, rule.ruleId);\r\n            regex.lastIndex = lastIndex;\r\n        }\r\n        if (!resultObj.tokens.length && states.length) { // 整行被多行token包裹\r\n            resultObj.tokens.push({\r\n                value: lineObj.text,\r\n                column: 0,\r\n                type: this.getTokenType({\r\n                    rule: this.ruleIdMap[states.peek()],\r\n                    value: lineObj.text,\r\n                    text: lineObj.text\r\n                })\r\n            });\r\n        } else if (preEnd < lineObj.text.length) { //文本末尾\r\n            var value = lineObj.text.slice(preEnd);\r\n            resultObj.tokens.push({\r\n                value: value,\r\n                column: preEnd,\r\n                type: this.getTokenType({\r\n                    rule: this.ruleIdMap[states.peek()],\r\n                    index: preEnd,\r\n                    value: value,\r\n                    text: lineObj.text\r\n                })\r\n            });\r\n        }\r\n        regex.lastIndex = 0;\r\n        return {\r\n            tokens: this.splitLongToken(resultObj.tokens),\r\n            folds: resultObj.folds,\r\n            states: states\r\n        };\r\n    }\r\n    splitLongToken(tokens) {\r\n        let result = [];\r\n        tokens.map((token) => {\r\n            if (token.value.length > 100) { //将文本数量大于100的token分隔\r\n                let startCol = token.column;\r\n                let count = Math.floor(token.value.length / 100);\r\n                for (let i = 0; i < count; i++) {\r\n                    let column = i * 100;\r\n                    result.push({\r\n                        column: column + startCol,\r\n                        value: token.value.slice(column, column + 100),\r\n                        type: token.type\r\n                    });\r\n                }\r\n                count = count * 100;\r\n                if (count < token.value.length) {\r\n                    result.push({\r\n                        column: count + startCol,\r\n                        value: token.value.slice(count),\r\n                        type: token.type\r\n                    });\r\n                }\r\n            } else {\r\n                result.push(token);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    // getSide(rule, states) {\r\n    //     let index = states.length - 1;\r\n    //     if (states.indexOf(rule.ruleId) == -1) {\r\n    //         return 'start';\r\n    //     }\r\n    //     while (index >= 0 && states[index] != rule.ruleId) {\r\n    //         if (this.ruleIdMap[states[index]].level > rule.level) {\r\n    //             return 'start';\r\n    //         }\r\n    //         index--\r\n    //     }\r\n    //     return 'end';\r\n    // }\r\n    /**\r\n     * 获取折叠标记对象\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则结果对象\r\n     * @param {Array} states 状态栈\r\n     * @param {Array} newStates 当前行的新增状态栈\r\n     * @param {Object} resultObj 结果对象\r\n     * @param {String} text 当前行文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getToken(rule, match, states, newStates, resultObj, text, side) {\r\n        let result = match[0];\r\n        let token = {\r\n            ruleId: rule.ruleId,\r\n            value: result,\r\n            column: match.index\r\n        };\r\n        if (rule.start && rule.end) { //多行token-end\r\n            if (side === 'end') { //多行token尾\r\n                while (states.peek() != rule.ruleId) {\r\n                    states.pop();\r\n                }\r\n                states.pop();\r\n                if (!rule.rules) { //无子节点\r\n                    if (newStates.indexOf(rule.ruleId) > -1) { //在同一行匹配\r\n                        let value = '';\r\n                        token = resultObj.tokens.pop();\r\n                        value = token.value;\r\n                        if (token.ruleId !== rule.ruleId) {\r\n                            token = resultObj.tokens.pop();\r\n                            value = token.value + value;\r\n                        }\r\n                        token.value = value + result;\r\n                    } else { //跨行匹配\r\n                        resultObj.tokens.pop()\r\n                        token.value = text.slice(0, match.index + result.length);\r\n                        token.column = 0;\r\n                    }\r\n                }\r\n            } else { //多行token-start\r\n                states.push(rule.ruleId);\r\n                newStates.push(rule.ruleId);\r\n            }\r\n        }\r\n        token.type = this.getTokenType({\r\n            rule: rule,\r\n            index: match.index,\r\n            value: token.value,\r\n            text: text,\r\n            match: match,\r\n            side: side\r\n        });\r\n        return token;\r\n    }\r\n    /**\r\n     * 获取token类型\r\n     * @param {Object} option {\r\n     *  rule: 规则对象,\r\n     *  index: value在text中的开始索引,\r\n     *  text: 当前行的文本,\r\n     *  value: token的文本范围,\r\n     *  side: 开始/结束标记,\r\n     *  match: 正则执行后的结果对象\r\n     * } \r\n     */\r\n    getTokenType(option) {\r\n        let rule = option.rule;\r\n        let index = option.index || 0;\r\n        let value = option.value || option.text;\r\n        let text = option.text;\r\n        let match = option.match;\r\n        let side = option.side || (rule && rule.start && rule.end ? 'start' : '');\r\n        let type = '';\r\n        if (!rule) {\r\n            return 'plain';\r\n        }\r\n        if (typeof rule.token == 'function') {\r\n            type = rule.token({\r\n                value: value,\r\n                index: index,\r\n                text: text,\r\n                side: side\r\n            });\r\n        } else if (rule.token instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                if (side == 'start') {\r\n                    type = rule.token[0];\r\n                } else {\r\n                    type = rule.token[1];\r\n                }\r\n            } else {\r\n                let expIndex = match && this.getChildExpIndex(match) || -1;\r\n                if (expIndex > -1) {\r\n                    type = rule.token[expIndex];\r\n                } else {\r\n                    type = rule.token.join('.');\r\n                }\r\n            }\r\n        } else {\r\n            type = rule.token;\r\n        }\r\n        return type;\r\n    }\r\n    /**\r\n     * 获取折叠标记对象\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则结果对象\r\n     * @param {Array} states 状态栈\r\n     * @param {Object} resultObj 结果对象\r\n     * @param {String} text 当前行文本\r\n     */\r\n    getFold(rule, match, states, resultObj, text) {\r\n        let result = match[0];\r\n        let side = '';\r\n        let fold = null;\r\n        if (rule.start && rule.end) { //多行token被匹配\r\n            side = 'start';\r\n            if (states.indexOf(rule.ruleId) > -1) {\r\n                side = 'end';\r\n            }\r\n            if (rule.foldName) { //多行匹配可折叠\r\n                fold = {\r\n                    start: match.index,\r\n                    end: match.index + result.length,\r\n                    value: result\r\n                };\r\n            }\r\n        } else if (rule.foldName && rule.foldType) { //折叠标记\r\n            fold = {\r\n                start: match.index,\r\n                end: match.index + result.length,\r\n                value: result\r\n            };\r\n        }\r\n        if (fold) {\r\n            let foldName = this.getFoldName(rule, match, text, side);\r\n            if (!foldName) { //没有折叠名称无效\r\n                return null;\r\n            }\r\n            fold.name = foldName;\r\n            fold.type = this.getFoldType(rule, match, text, side);\r\n            if (fold.type == 1) {\r\n                fold = _checkFold(resultObj, fold);\r\n            }\r\n        }\r\n        return fold;\r\n\r\n        function _checkFold(resultObj, fold) {\r\n            let folds = resultObj.folds;\r\n            if (folds) {\r\n                for (let i = folds.length - 1; i >= 0; i--) {\r\n                    // 同行折叠无效\r\n                    if (folds[i].name == fold.name && folds[i].type == -1) {\r\n                        resultObj.folds = folds.slice(0, i);\r\n                        fold = null;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return fold;\r\n        }\r\n    }\r\n    /**\r\n     * 获取折叠名称[唯一标识]\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则执行后的结果对象\r\n     * @param {String} text 当前行的文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getFoldName(rule, match, text, side) {\r\n        let foldName = '';\r\n        if (rule.foldName instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                foldName = side == 'start' ? rule.foldName[0] : rule.foldName[1];\r\n            } else {\r\n                let expIndex = this.getChildExpIndex(match);\r\n                expIndex = expIndex == -1 ? 0 : expIndex;\r\n                foldName = rule.foldName[expIndex];\r\n            }\r\n        } else if (typeof rule.foldName === 'function') {\r\n            foldName = rule.foldName({\r\n                value: match[0],\r\n                text: text,\r\n                index: match.index,\r\n                side: side\r\n            });\r\n        } else {\r\n            foldName = rule.foldName;\r\n        }\r\n        return foldName;\r\n    }\r\n    /**\r\n     * 获取折叠类型[-1:首,1:尾]\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则执行后的结果对象\r\n     * @param {String} text 当前行的文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getFoldType(rule, match, text, side) {\r\n        let foldType = '';\r\n        if (rule.foldType instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                foldType = side == 'start' ? rule.foldType[0] : rule.foldType[1];\r\n            } else {\r\n                let expIndex = this.getChildExpIndex(match);\r\n                expIndex = expIndex == -1 ? 0 : expIndex;\r\n                foldType = rule.foldType[expIndex];\r\n            }\r\n        } else if (typeof rule.foldType === 'function') {\r\n            foldType = rule.foldType({\r\n                value: match[0],\r\n                text: text,\r\n                index: match.index,\r\n                side: side\r\n            });\r\n        } else if (rule.start && rule.end) {\r\n            foldType = side == 'start' ? -1 : 1;\r\n        } else {\r\n            foldType = rule.foldType;\r\n        }\r\n        return foldType;\r\n    }\r\n    /**\r\n     * 获取子表达式索引位置\r\n     * @param {Array} match 正则exec结果\r\n     */\r\n    getChildExpIndex(match) {\r\n        if (match.childExpIndex !== undefined) {\r\n            return match.childExpIndex;\r\n        }\r\n        let captures = match.slice(1);\r\n        let hasChildExp = captures.filter((item) => {\r\n            return item\r\n        }).length > 1;\r\n        if (hasChildExp) { //正则里有子表达式\r\n            for (let i = 0; i < captures.length; i++) {\r\n                if (captures[i] != undefined) {\r\n                    captures = captures.slice(i + 1);\r\n                    break;\r\n                }\r\n            }\r\n            for (let i = 0; i < captures.length; i++) {\r\n                if (captures[i] != undefined) {\r\n                    match.childExpIndex = i;\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        match.childExpIndex = -1;\r\n        return -1;\r\n    }\r\n    getRegex(states, preRuleId) {\r\n        let preRule = this.ruleIdMap[preRuleId];\r\n        while (preRule && states.indexOf(preRule.ruleId) == -1 && preRule.endBy) {\r\n            while (states.peek() != preRule.endBy) {\r\n                states.pop();\r\n            }\r\n            states.pop();\r\n            preRule = this.ruleIdMap[preRule.endBy];\r\n        }\r\n        if (preRule && states.indexOf(preRule.ruleId) == -1 && preRule.startBy) {\r\n            states.push(preRule.startBy);\r\n        }\r\n        return this.getCombRegex(states);\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-07 10:07:14\r\n * @Description: \r\n */\r\nexport default function () {\r\n    Array.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    Array.prototype._isArray = true;\r\n    String.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    var keywords = [\r\n        \"if\", \"in\", \"do\", \"var\", \"for\", \"new\",\r\n        \"try\", \"let\", \"this\", \"else\", \"case\",\r\n        \"void\", \"with\", \"enum\", \"while\", \"break\",\r\n        \"catch\", \"throw\", \"const\", \"yield\", \"class\",\r\n        \"super\", \"return\", \"typeof\", \"delete\",\r\n        \"switch\", \"export\", \"import\", \"default\",\r\n        \"finally\", \"extends\", \"function\", \"continue\",\r\n        \"debugger\", \"instanceof\", \"async\", \"await\"\r\n    ];\r\n    var assignOperator = ['=', '>>>=', '>>=', '<<=', '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^='];\r\n    var binaryOperator = [\r\n        '+', '-', '*', '/', '%', '&', '|', '^', '&&', '||', '===', '==', '!=', '!==',\r\n        '>', '>=', '<', '<=', '>>', '>>>', '<<', 'instanceof', 'in'\r\n    ];\r\n    var unitOperator = ['+', '-', '~', '!', 'typeof', 'delete', 'void'];\r\n    var brackets = ['{', '}', '[', ']', '(', ')'];\r\n    var regs = {\r\n        space: /^\\s+/,\r\n        number: /^(?:\\d+(?:\\.\\d*)?|\\.\\d+?|0x[a-z0-9]+?)(?:e[\\+\\-]?\\d+(?:\\.\\d*)?)?\\b/i,\r\n        identifier: /^[a-zA-Z_$][a-zA-Z0-9_$]*/,\r\n        comment: /\\*\\//,\r\n        string1: /\\\\*'/,\r\n        string2: /\\\\*\"/,\r\n        string3: /(\\\\*`)|(\\$\\{)/,\r\n        regex: /^\\/(?:\\\\[\\s\\S]|[^\\\\])+?\\//,\r\n        other: /^[^\\s+\\-\\*\\/%&\\|\\^\\=\\!\\>\\<\\~\\{\\}\\(\\)]+/\r\n    }\r\n    var regflagsMap = {\r\n        'i': true,\r\n        'm': true,\r\n        'g': true,\r\n        'gi': true,\r\n        'gm': true,\r\n        'im': true,\r\n        'gim': true,\r\n    }\r\n    var maxErrors = 100;\r\n\r\n    function TokenType(type, label) {\r\n        this.type = type;\r\n        this.label = label;\r\n        this._isTokenType = true;\r\n    }\r\n\r\n    TokenType.prototype.toString = function () {\r\n        return this.label;\r\n    }\r\n\r\n    TokenType.NUMBER = new TokenType(1, 'number');\r\n    TokenType.BOOLEAN = new TokenType(2, 'boolean');\r\n    TokenType.STRING = new TokenType(3, 'string');\r\n    TokenType.IDENTIFIER = new TokenType(4, 'identifier');\r\n    TokenType.KEYWORD = new TokenType(5, 'keyword');\r\n    TokenType.OPERATOR = new TokenType(6, 'operator');\r\n    TokenType.BRACKET = new TokenType(7, 'bracket');\r\n    TokenType.PUNCTUATOR = new TokenType(8, 'punctuator');\r\n    TokenType.REGEXP = new TokenType(9, 'regexp');\r\n    TokenType.OTHER = new TokenType(10, 'other');\r\n\r\n    function ErrorType(type) {\r\n        this.type = type;\r\n    }\r\n\r\n    ErrorType.UNEXPECTED = new ErrorType(1);\r\n    ErrorType.EXPECTED = new ErrorType(2);\r\n    ErrorType.MISS = new ErrorType(3);\r\n    ErrorType.UNMATCH = new ErrorType(4);\r\n\r\n    function Error(token, type, param) {\r\n        token = token || {};\r\n        this.type = type;\r\n        this.param = param;\r\n        this.line = token.line;\r\n        this.column = token.column;\r\n        this.value = token.value;\r\n        this.error = this.toString();\r\n    }\r\n\r\n    Error.prototype.toString = function () {\r\n        var error = '';\r\n        var param = this.param instanceof Array ? this.param : [this.param];\r\n        param = `${param.length === 1 ? 'a ' : ''}'${param.join(`'、'`)}'`;\r\n        switch (this.type) {\r\n            case ErrorType.UNEXPECTED:\r\n                error = `unexpected '${this.value}'`;\r\n                break;\r\n            case ErrorType.EXPECTED:\r\n                error = `expected ${param}`;\r\n                if (this.value) {\r\n                    error += ` and instead saw '${this.value}'`;\r\n                }\r\n                break;\r\n            case ErrorType.MISS:\r\n                error = `missing ${param}`;\r\n                if (this.value) {\r\n                    error += ` before '${this.value}'`\r\n                }\r\n                break;\r\n            case ErrorType.UNMATCH:\r\n                error = `unmatched '${this.value}'`\r\n                break;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    Error.push = function (error) {\r\n        Error.errors.push(error);\r\n    }\r\n\r\n    Error.expectedIdentifier = function (token) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, TokenType.IDENTIFIER));\r\n    }\r\n\r\n    Error.expectedSemicolon = function (token) {\r\n        Error.push(new Error(token, ErrorType.MISS, ';'));\r\n    }\r\n\r\n    Error.expected = function (token, value) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, value));\r\n    }\r\n\r\n    Error.unexpected = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNEXPECTED));\r\n    }\r\n\r\n    Error.unmatch = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNMATCH));\r\n    }\r\n\r\n    // 词法分析器\r\n    function Lexer() {\r\n        this.init();\r\n    }\r\n\r\n    Lexer.prototype.init = function () {\r\n        Error.errors = [];\r\n        this.lines = [''];\r\n        this.line = 1;\r\n        this.column = 0;\r\n        this.input = '';\r\n        this.assignOperatorMap = {};\r\n        this.unitOperatorMap = {};\r\n        this.binaryOperatorMap = {};\r\n        this.keywordsMap = new Map();\r\n        this.bracketsMap = new Map();\r\n        assignOperator.map((item) => {\r\n            this.assignOperatorMap[item] = true;\r\n        });\r\n        unitOperator.map((item) => {\r\n            this.unitOperatorMap[item] = true;\r\n        });\r\n        binaryOperator.map((item) => {\r\n            this.binaryOperatorMap[item] = true;\r\n        });\r\n        keywords.map((item) => {\r\n            this.keywordsMap.set(item, true);\r\n        });\r\n        brackets.map((item) => {\r\n            this.bracketsMap.set(item, true);\r\n        });\r\n    }\r\n\r\n    Lexer.prototype.reset = function (option) {\r\n        this.lines = option.texts;\r\n        this.line = option.line || 1;\r\n        this.column = option.column || 0\r\n        this.input = this.lines[this.line - 1].slice(this.column);\r\n    }\r\n\r\n    Lexer.prototype.skip = function (length) {\r\n        this.input = length ? this.input.slice(length) : this.input;\r\n        this.column += length;\r\n    }\r\n\r\n    Lexer.prototype.skipLine = function (length) {\r\n        this.line += length;\r\n        this.column = 0;\r\n        this.input = this.lines[this.line - 1] || '';\r\n    }\r\n\r\n    Lexer.prototype.hasNext = function () {\r\n        if (Error.errors.length > maxErrors) {\r\n            return false;\r\n        }\r\n        return this.line < this.lines.length ||\r\n            this.line == this.lines.length && this.lines.peek().length > this.column\r\n    }\r\n\r\n    Lexer.prototype.isVariable = function (token) {\r\n        return token.type == TokenType.IDENTIFIER || token.value == 'this';\r\n    }\r\n\r\n    Lexer.prototype.isValue = function (token) {\r\n        return this.isScalar(token) || this.isVariable(token);\r\n    }\r\n\r\n    Lexer.prototype.isScalar = function (token) {\r\n        return (\r\n            token.type == TokenType.NUMBER ||\r\n            token.type == TokenType.STRING ||\r\n            token.type == TokenType.BOOLEAN ||\r\n            token.type == TokenType.REGEXP\r\n        );\r\n    }\r\n\r\n    Lexer.prototype.isDotAble = function (token) {\r\n        return token.type === TokenType.IDENTIFIER || token.type === TokenType.KEYWORD;\r\n    }\r\n\r\n    Lexer.prototype.isPostOp = function (token) {\r\n        return token.value === '++' || token.value === '--';\r\n    }\r\n\r\n    Lexer.prototype.isPreOp = function (token) {\r\n        return token.value === '++' || token.value === '--';\r\n    }\r\n\r\n    Lexer.prototype.isAssignOperator = function (token) {\r\n        return this.assignOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isUnitOperator = function (token) {\r\n        return this.unitOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isBinaryOperator = function (token) {\r\n        return this.binaryOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isKeyWord = function (value) {\r\n        return this.keywordsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isBracket = function (value) {\r\n        return this.bracketsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isTokenType = function (type) {\r\n        return type._isTokenType;\r\n    }\r\n\r\n    Lexer.prototype.craeteToken = function (value, type) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        if (line > this.lines.length) {\r\n            line = this.lines.length;\r\n            column = this.lines.peek().length;\r\n        }\r\n        return {\r\n            type: type,\r\n            line: line,\r\n            column: column,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanSpace = function () {\r\n        var exec = null;\r\n        while (!this.input.length && this.line < this.lines.length) { //去掉空行\r\n            this.skipLine(1);\r\n        }\r\n        exec = regs.space.exec(this.input);\r\n        if (exec) {\r\n            this.skip(exec.index + exec[0].length);\r\n            exec.index >= this.input.length - 1 && this.scanSpace();\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanComment = function () {\r\n        var exec = null;\r\n        var ch1 = null;\r\n        var ch2 = null;\r\n        var startToken = null;\r\n        this.scanSpace(); //去掉空格\r\n        ch1 = this.input[0];\r\n        ch2 = this.input[1];\r\n        if (ch1 === '/' && ch2 == '/') {\r\n            this.skipLine(1);\r\n            this.scanComment();\r\n        } else if (ch1 === '/' && ch2 === '*') {\r\n            startToken = this.craeteToken('/*');\r\n            this.skip(2);\r\n            while (this.hasNext() && !(exec = regs.comment.exec(this.input))) {\r\n                this.skipLine(1);\r\n            }\r\n            if (exec) {\r\n                this.skip(exec.index + exec[0].length);\r\n            } else {\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanString = function () {\r\n        var that = this;\r\n        var exec = null;\r\n        var token = null;\r\n        var startToken = null;\r\n        if (this.input[0] === '\\'') {\r\n            startToken = this.craeteToken('\\'', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string1);\r\n            token = this.craeteToken('\\'', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '\"') {\r\n            startToken = this.craeteToken('\"', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string2);\r\n            token = this.craeteToken('\"', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '`') {\r\n            startToken = this.craeteToken('`', TokenType.STRING);\r\n            this.skip(1);\r\n            while (this.hasNext()) {\r\n                exec = regs.string3.exec(this.input)\r\n                if (exec && exec[2]) { //模板字符串内的表达式：${test}\r\n                    _parseTmpStr(exec);\r\n                } else if (!exec || exec[0].length % 2 === 0) { //含有基数个\\：\\\\\\`\r\n                    this.skipLine(1);\r\n                } else {\r\n                    this.skip(exec.index + exec[0].length);\r\n                    break;\r\n                }\r\n            }\r\n            token = this.craeteToken('`', TokenType.STRING);\r\n            if (!(exec && exec[0].length % 2 === 1)) { //未匹配到结束符\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n        return token;\r\n\r\n        function _end(reg) {\r\n            if (exec = reg.exec(that.input)) {\r\n                that.skip(exec.index + exec[0].length);\r\n                if (exec[0].length % 2 === 0) { //含有奇数个\\:\\\\\\'\r\n                    return _end(reg);\r\n                }\r\n                return true;\r\n            } else if (that.input.peek() === '\\\\') {\r\n                that.skipLine(1);\r\n                return _end(reg);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function _parseTmpStr(exec) {\r\n            let preToken = that.parser.preToken;\r\n            let backs = that.parser.backs.slice(0);\r\n            let parseList = that.parser.parseList.slice(0);\r\n            that.skip(exec.index + exec[2].length);\r\n            //清空状态--begin\r\n            that.parser.preToken = null;\r\n            that.parser.backs = [];\r\n            that.parser.parseList = [];\r\n            //清空状态--end\r\n            that.parser.parseExprStmt();\r\n            that.parser.peekMatch('}');\r\n            //恢复状态--begin\r\n            that.parser.preToken = preToken;\r\n            that.parser.backs = backs;\r\n            that.parser.parseList = parseList;\r\n            //恢复状态--end\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanNunmber = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.number.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.NUMBER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanIdentifier = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.identifier.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], this.isKeyWord(exec[0]) ? TokenType.KEYWORD : TokenType.IDENTIFIER);\r\n            if (token.value === 'true' || token.value === 'false') {\r\n                token.type = TokenType.BOOLEAN;\r\n            }\r\n            if (token.value === 'null') {\r\n                token.type = TokenType.NUMBER;\r\n            }\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanBracket = function () {\r\n        var token = null;\r\n        var ch = this.input[0];\r\n        if (this.isBracket(ch)) {\r\n            token = this.craeteToken(ch, TokenType.BRACKET);\r\n            this.skip(1);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    // 操作符号\r\n    Lexer.prototype.scanOperator = function () {\r\n        var ch1 = this.input[0];\r\n        var ch2 = this.input[1];\r\n        var ch3 = this.input[2];\r\n        var ch4 = this.input[3];\r\n        var token = null;\r\n        if (ch1 == '.' && ch2 === '.' && ch3 === '.') {\r\n            token = this.craeteToken('...', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \">\" && ch4 === \"=\") {\r\n            token = this.craeteToken('>>>=', TokenType.OPERATOR);\r\n        } else if (ch1 === \"=\" && ch2 === \"=\" && ch3 === \"=\") {\r\n            token = this.craeteToken('===', TokenType.OPERATOR);\r\n        } else if (ch1 === \"!\" && ch2 === \"=\" && ch3 === \"=\") {\r\n            token = this.craeteToken('!==', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \">\") {\r\n            token = this.craeteToken('>>>', TokenType.OPERATOR);\r\n        } else if (ch1 === \"<\" && ch2 === \"<\" && ch3 === \"=\") {\r\n            token = this.craeteToken('<<=', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \"=\") {\r\n            token = this.craeteToken('>>=', TokenType.OPERATOR);\r\n        } else if (ch1 === \"=\" && ch2 === \">\") {\r\n            token = this.craeteToken('=>', TokenType.OPERATOR);\r\n        } else if (ch1 === ch2 && (\"+-<>&|*\".indexOf(ch1) >= 0)) {\r\n            if (ch1 === \"*\" && ch3 === \"=\") {\r\n                token = this.craeteToken(ch1 + ch2 + ch3, TokenType.OPERATOR);\r\n            } else {\r\n                token = this.craeteToken(ch1 + ch2, TokenType.OPERATOR);\r\n            }\r\n        } else if (\"<>=!+-*%&|^/\".indexOf(ch1) >= 0) {\r\n            if (ch2 === \"=\") {\r\n                token = this.craeteToken(ch1 + ch2, TokenType.OPERATOR);\r\n            } else {\r\n                token = this.craeteToken(ch1, TokenType.OPERATOR);\r\n            }\r\n        } else if ('?:.;,~'.indexOf(ch1) > -1) {\r\n            token = this.craeteToken(ch1, TokenType.OPERATOR);\r\n        }\r\n        token && this.skip(token.value.length);\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanOther = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.other.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.OTHER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token\r\n    }\r\n\r\n    Lexer.prototype.next = function () {\r\n        let token = null;\r\n        let that = this;\r\n        this.scanComment();\r\n        if (this.hasNext()) {\r\n            token =\r\n                this.scanIdentifier() ||\r\n                this.scanBracket() ||\r\n                this.scanNunmber() ||\r\n                this.scanString() ||\r\n                _scanOp()\r\n            if (!token) { //存在非法变量\r\n                token = this.scanOther();\r\n                token && Error.unexpected(token);\r\n                return this.next();\r\n            }\r\n        }\r\n        this.preToken = token;\r\n        return token;\r\n\r\n        function _scanOp() {\r\n            let token = null;\r\n            if (\r\n                that.input[0] === '/' &&\r\n                (\r\n                    !that.preToken ||\r\n                    that.preToken.type === TokenType.OPERATOR ||\r\n                    that.preToken.value === '{' ||\r\n                    that.preToken.value === '[' ||\r\n                    that.preToken.value === '(' ||\r\n                    that.preToken.value === 'return'\r\n                )\r\n            ) {\r\n                let exec = regs.regex.exec(that.input);\r\n                if (exec) {\r\n                    token = that.craeteToken(exec[0], TokenType.REGEXP);\r\n                    that.skip(exec.index + exec[0].length);\r\n                } else {\r\n                    token = that.craeteToken(that.input, TokenType.REGEXP);\r\n                    that.skipLine(1);\r\n                    if (token.value.peek() !== '/') {\r\n                        let _token = Object.assign({}, token);\r\n                        _token.value = '/';\r\n                        Error.unmatch(_token);\r\n                    }\r\n                }\r\n            } else {\r\n                token = that.scanOperator();\r\n            }\r\n            return token;\r\n        }\r\n    }\r\n\r\n    // 语法分析器\r\n    function Parser(lexer) {\r\n        this.lexer = lexer;\r\n        this.cacheList = [];\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        Error.errors = [];\r\n    }\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        this.recovery(text);\r\n        Error.errors = [];\r\n    }\r\n\r\n    // 添加缓存\r\n    Parser.prototype.cache = function () {\r\n        if (this.cacheList.length && this.cacheList.peek().line == this.lexer.line) {\r\n            this.cacheList.pop();\r\n        }\r\n        this.preToken && this.cacheList.push({\r\n            line: this.preToken.line,\r\n            column: this.preToken.column,\r\n            parseList: this.parseList.slice(0)\r\n        });\r\n    }\r\n\r\n    // 从缓存中恢复\r\n    Parser.prototype.recovery = function (text) {\r\n        var index = 0;\r\n        var texts = text.split('\\n') || [''];\r\n        var hasCache = false;\r\n        while (index < texts.length && index < this.lexer.lines.length && texts[index] === this.lexer.lines[index]) {\r\n            index++;\r\n        }\r\n        if (index > 0) {\r\n            var cacheIndex = -1;\r\n            for (var i = 0; i < this.cacheList.length; i++) {\r\n                if (this.cacheList[i].line <= index) {\r\n                    cacheIndex = i;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            if (cacheIndex > -1) {\r\n                var cache = this.cacheList[cacheIndex];\r\n                this.parseList = cache.parseList;\r\n                this.cacheList = this.cacheList.slice(0, cacheIndex + 1);\r\n                this.lexer.reset({\r\n                    texts: texts,\r\n                    line: cache.line,\r\n                    column: cache.column\r\n                });\r\n                this.next();\r\n                hasCache = true;\r\n            }\r\n        }\r\n        if (!hasCache) {\r\n            this.cacheList = [];\r\n            this.lexer.reset({\r\n                texts: texts\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.match = function (token, value) {\r\n        var pass = false;\r\n        for (var i = 0; i < value.length; i++) {\r\n            if (this.lexer.isTokenType(value[i])) {\r\n                if (value[i] === token.type) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            } else if (value[i] === token.value) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        };\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.next = function (length) {\r\n        var token = null;\r\n        length = length || 1;\r\n        while (length > 0) {\r\n            if (this.backs.length) {\r\n                token = this.backs.shift();\r\n            } else {\r\n                token = this.lexer.next();\r\n            }\r\n            this.pre2Token = this.preToken;\r\n            this.preToken = token || this.preToken;\r\n            length--;\r\n        }\r\n        this.puted = false;\r\n        return token;\r\n    }\r\n\r\n    Parser.prototype.nextMatch = function (value) {\r\n        var token = this.next() || {};\r\n        var pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (!pass) {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.peek = function (length) {\r\n        var token = null;\r\n        length = length || 1;\r\n        if (this.backs.length) {\r\n            token = this.backs[length - 1];\r\n        }\r\n        if (!token) {\r\n            length -= this.backs.length;\r\n            while (length > 0) {\r\n                length--;\r\n                token = this.lexer.next();\r\n                token && this.backs.push(token);\r\n            }\r\n        }\r\n        return token || {};\r\n    }\r\n\r\n    Parser.prototype.peekMatch = function (value) {\r\n        var token = this.peek() || {};\r\n        var pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (pass) {\r\n            this.next();\r\n        } else {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.hasNext = function () {\r\n        var lookahead = this.peek();\r\n        return lookahead.value\r\n    }\r\n\r\n    Parser.prototype.putBack = function () {\r\n        if (this.preToken && !this.puted) {\r\n            this.backs.unshift(this.preToken);\r\n            this.preToken = this.pre2Token;\r\n            this.puted = true;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.skipSemicolon = function (length) {\r\n        length = length || Infinity\r\n        while (this.peek().value === ';' && length > 0) {\r\n            this.next();\r\n            length--;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        var count = 0;\r\n        var startTime = Date.now();\r\n        while (this.hasNext()) {\r\n            this.parseStmt();\r\n            !Error.errors.length && this.cache();\r\n            if (++count % 10 === 0 && Date.now() - startTime > 200) {\r\n                this.parseTimer = setTimeout(() => {\r\n                    this.parseStmt();\r\n                }, 10);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 代码块\r\n    Parser.prototype.parseStmt = function (skipCheckSemicolon) {\r\n        var lookahead = this.peek();\r\n        if (skipCheckSemicolon) {\r\n            if (lookahead.value === ';') {\r\n                return;\r\n            }\r\n        } else if (this.preToken && this.preToken.line == lookahead.line &&\r\n            this.preToken.value != '{' && this.preToken.value != '}' &&\r\n            lookahead.value != ';') { //两条语句在同一行，且没有分隔符\r\n            Error.expectedSemicolon(lookahead);\r\n        }\r\n        this.skipSemicolon();\r\n        lookahead = this.peek();\r\n        if (lookahead.type === TokenType.IDENTIFIER && this.peek(2).value === ':') { //跳转标记\r\n            this.next(2);\r\n            lookahead = this.peek();\r\n        }\r\n        switch (lookahead.value) {\r\n            case 'var':\r\n            case 'let':\r\n            case 'const':\r\n                this.parseDeclareStmt();\r\n                break;\r\n            case '{':\r\n                if (this.peek(3).value === ':') {\r\n                    this.parseObjectStmt();\r\n                } else {\r\n                    this.parseBlockStmt();\r\n                }\r\n                break;\r\n            case 'import':\r\n                this.parseImportStmt();\r\n                break;\r\n            case 'export':\r\n                this.parseExportStmt();\r\n                break;\r\n            case 'if':\r\n                this.parseIfStmt();\r\n                break;\r\n            case 'switch':\r\n                this.parseSwitchStmt();\r\n                break;\r\n            case 'with':\r\n                this.parseWithStmt();\r\n                break;\r\n            case 'while':\r\n                this.parseWhileStmt();\r\n                break;\r\n            case 'do':\r\n                this.parseDoStmt();\r\n                break;\r\n            case 'try':\r\n                this.parseTryStmt();\r\n                break;\r\n            case 'for':\r\n                this.parseForStmt();\r\n                break;\r\n            case 'class':\r\n                this.parseClassStmt();\r\n                break;\r\n            case 'continue':\r\n            case 'break':\r\n                this.parseControlStmt();\r\n                break;\r\n            case 'return':\r\n                this.parseReturnStmt();\r\n                break;\r\n            case 'throw':\r\n                this.parseThrowStmt();\r\n                break;\r\n            case 'function':\r\n                this.parseFunctionStmt(true);\r\n                break;\r\n            default:\r\n                this.parseExprStmt();\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 代码块\r\n    Parser.prototype.parseBlockStmt = function (ends) {\r\n        let start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext()) {\r\n            this.skipSemicolon();\r\n            let lookahead = this.peek();\r\n            if (lookahead.value === '}' || ends && ends.indexOf(lookahead.value) > -1) {\r\n                break;\r\n            }\r\n            this.parseStmt(true);\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 对象字面量\r\n    Parser.prototype.parseObjectStmt = function () {\r\n        var start = this.peek();\r\n        var lookahead = null;\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek().value === '...') { //对象展开运算符\r\n                this.next();\r\n                if (this.peek().value === '{') { //{...{a:1}}\r\n                    this.parseObjectStmt();\r\n                } else { //{...a}\r\n                    this.nextMatch(TokenType.IDENTIFIER);\r\n                }\r\n            } else {\r\n                if (this.peek().value === '[') { //{[1]:1}\r\n                    this.next();\r\n                    this.parseExpr();\r\n                    this.peekMatch(']');\r\n                } else if (this.peek().type === TokenType.OPERATOR) { //非法属性名\r\n                    Error.unexpected(this.next());\r\n                } else if (!this.hasNext()) {\r\n                    break;\r\n                } else {\r\n                    this.next();\r\n                }\r\n                lookahead = this.peek();\r\n                if (lookahead.value === ':' || this.preToken.value === ']') { //{a:1,[1]:1}\r\n                    this.peekMatch(':');\r\n                    this.parseExpr();\r\n                } else { //{a,b}\r\n                    if (this.preToken.type !== TokenType.IDENTIFIER) {\r\n                        Error.expected(lookahead, ':');\r\n                    }\r\n                    if (lookahead.value === '(') { //{a(){},b}\r\n                        this.parseFunArgsStmt();\r\n                        this.parseBlockStmt();\r\n                    } else if (this.peek(2).value === '(') { //{get a(){}, static b(){}}\r\n                        if (this.preToken.value !== 'get' && this.preToken.value !== 'static') {\r\n                            Error.expected(this.preToken, ['get', 'static']);\r\n                        }\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                        this.parseFunArgsStmt();\r\n                        this.parseBlockStmt();\r\n                    }\r\n                }\r\n            }\r\n            if (this.peek().value != '}') {\r\n                if (!this.peekMatch(',')) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 声明语句\r\n    Parser.prototype.parseDeclareStmt = function () {\r\n        let that = this;\r\n        this.nextMatch(['var', 'let', 'const']);\r\n        _identifier()\r\n        if (this.peek().value === '=') {\r\n            _assign();\r\n        }\r\n        while (this.hasNext() && this.peek().value === ',') {\r\n            this.next();\r\n            _identifier();\r\n            if (this.peek().value === '=') {\r\n                _assign();\r\n            }\r\n        }\r\n\r\n        function _assign() {\r\n            that.next();\r\n            that.parseExpr();\r\n        }\r\n\r\n        function _identifier() {\r\n            let lookahead = that.peek();\r\n            if (lookahead.value === '{' || lookahead.value === '[') { //es6:const {a,b} = {a:1,b:2}、const [a,b] = [1,2]\r\n                let startToken = that.next();\r\n                let value = lookahead.value === '{' ? '}' : ']';\r\n                that.nextMatch(TokenType.IDENTIFIER);\r\n                while (that.hasNext() && that.peek().value !== value) {\r\n                    that.peekMatch(',')\r\n                    if (!that.peekMatch(TokenType.IDENTIFIER)) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (!that.peekMatch(value)) {\r\n                    Error.unmatch(startToken);\r\n                }\r\n            } else {\r\n                that.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 赋值语句\r\n    Parser.prototype.parseAssignStmt = function (value) {\r\n        value = value || '=';\r\n        this.nextMatch(value);\r\n        while (this.hasNext()) {\r\n            if (this.peek(2).value === '=') { //a=1,b=2\r\n                !this.lexer.isVariable(this.next()) && Error.expected(TokenType.IDENTIFIER);\r\n                this.parseAssignStmt('=');\r\n                break;\r\n            } else {\r\n                this.parseExpr();\r\n            }\r\n            if (this.peek().value !== ',') {\r\n                break;\r\n            }\r\n            this.next();\r\n        }\r\n    }\r\n\r\n    // import语句\r\n    Parser.prototype.parseImportStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('import');\r\n        lookahead = this.peek();\r\n        if (lookahead.type === TokenType.STRING) { //import 'test.css'\r\n            this.next();\r\n        } else {\r\n            if (lookahead.value === '{') { //import {a,b,c} from 'test'\r\n                this.next();\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                while (this.hasNext() && this.peek().value != '}') {\r\n                    this.peekMatch(',')\r\n                    if (!this.peekMatch(TokenType.IDENTIFIER)) {\r\n                        break;\r\n                    }\r\n                    if (this.peek().value === 'as') { //import {a as b} from 'test'\r\n                        this.next();\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                    }\r\n                }\r\n                if (!this.peekMatch('}')) {\r\n                    Error.unmatch(lookahead);\r\n                }\r\n            } else if (lookahead.value === '*') { //import * as a from 'test'\r\n                this.next();\r\n                this.nextMatch('as');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            } else { //import a from 'test'\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n            this.nextMatch('from');\r\n            this.nextMatch(TokenType.STRING);\r\n        }\r\n    }\r\n\r\n    // export语句\r\n    Parser.prototype.parseExportStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('export');\r\n        lookahead = this.peek();\r\n        if (lookahead.value === 'function') { //export function test\r\n            this.next();\r\n            this.parseFunctionStmt();\r\n        } else if (lookahead.value === 'default') { //export default test\r\n            this.next();\r\n            lookahead = this.peek();\r\n            if (lookahead.value == 'function') { //export default function\r\n                this.parseFunctionStmt();\r\n            } else if (lookahead.value === 'class') { //export default class {}\r\n                this.parseClassStmt();\r\n            } else {\r\n                this.parseExprStmt();\r\n            }\r\n        } else if (lookahead.value === '{') { //export {a,b,c} from 'test'\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            while (this.hasNext() && this.peek().value != '}') {\r\n                this.peekMatch(',')\r\n                if (!this.peekMatch(TokenType.IDENTIFIER)) {\r\n                    break;\r\n                }\r\n                if (this.peek().value === 'as') { //export {a as b} from 'test'\r\n                    this.next();\r\n                    this.nextMatch(TokenType.IDENTIFIER);\r\n                }\r\n            }\r\n            if (!this.peekMatch('}')) {\r\n                Error.unmatch(lookahead);\r\n            }\r\n            if (this.peek().value === 'from') {\r\n                this.next();\r\n                this.nextMatch(TokenType.STRING);\r\n            }\r\n        } else if (lookahead.value === '*') { //export * as a from 'test'\r\n            this.next();\r\n            if (this.peek().value === 'as') {\r\n                this.nextMatch('as');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n            this.nextMatch('from');\r\n            this.nextMatch(TokenType.STRING);\r\n        } else { //export let a=1,b,c\r\n            this.parseDeclareStmt();\r\n        }\r\n    }\r\n\r\n    // if语句\r\n    Parser.prototype.parseIfStmt = function () {\r\n        let that = this;\r\n        let lookahead = null;\r\n        this.nextMatch('if');\r\n        this.parseList.push('if');\r\n        _nextExpr();\r\n        if (_stmt() && this.peek().value === ';') {\r\n            lookahead = this.peek(2);\r\n        } else {\r\n            lookahead = this.peek();\r\n        }\r\n        if (lookahead.value === 'else') {\r\n            this.next().value === ';' && this.next();\r\n            if (this.peek().value === 'if') {\r\n                this.parseIfStmt();\r\n            } else {\r\n                _stmt();\r\n            }\r\n        }\r\n        this.parseList.pop();\r\n\r\n        function _nextExpr() {\r\n            that.peekMatch('(');\r\n            that.parseExprStmt();\r\n            that.peekMatch(')');\r\n        }\r\n\r\n        function _stmt() {\r\n            if (that.peek().value === '{') {\r\n                that.parseBlockStmt(['else']);\r\n            } else {\r\n                that.parseStmt(true);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // switch语句\r\n    Parser.prototype.parseSwitchStmt = function () {\r\n        let start = null;\r\n        let lookahead = null;\r\n        this.parseList.push('switch');\r\n        this.nextMatch('switch');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek().value === 'default') {\r\n                this.nextMatch('default');\r\n            } else {\r\n                this.nextMatch('case');\r\n                this.parseExprStmt();\r\n            }\r\n            this.peekMatch(':');\r\n            while (this.hasNext()) {\r\n                this.skipSemicolon();\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '}' ||\r\n                    lookahead.value === 'break' ||\r\n                    lookahead.value === 'case' ||\r\n                    lookahead.value === 'default') {\r\n                    break;\r\n                }\r\n                this.parseStmt(true);\r\n            }\r\n            if (this.peek().value === 'break') {\r\n                let map = {\r\n                    '}': true,\r\n                    'case': true,\r\n                    'default': true,\r\n                }\r\n                this.next();\r\n                this.skipSemicolon();\r\n                lookahead = this.peek();\r\n                if (!map[lookahead.value]) { //break后面只能跟随case\r\n                    Error.expected(lookahead, ['case', 'default']);\r\n                    while (this.hasNext() && !map[this.peek().value]) {\r\n                        this.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // with语句\r\n    Parser.prototype.parseWithStmt = function () {\r\n        this.nextMatch('with');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        this.parseBlockStmt();\r\n    }\r\n\r\n    // while语句\r\n    Parser.prototype.parseWhileStmt = function () {\r\n        this.parseList.push('while');\r\n        this.nextMatch('while');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // do while语句\r\n    Parser.prototype.parseDoStmt = function () {\r\n        this.parseList.push('do');\r\n        this.nextMatch('do');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n            this.skipSemicolon(1);\r\n        }\r\n        this.nextMatch('while');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // try catch语句\r\n    Parser.prototype.parseTryStmt = function () {\r\n        let lookahead = null;\r\n        this.nextMatch('try');\r\n        this.parseBlockStmt();\r\n        lookahead = this.peek();\r\n        if (lookahead.value !== 'catch' && lookahead.value !== 'finally') {\r\n            Error.expected(lookahead, ['catch', 'finally']);\r\n        } else {\r\n            if (lookahead.value === 'catch') {\r\n                this.nextMatch('catch');\r\n                this.peekMatch('(');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.peekMatch(')');\r\n                this.parseBlockStmt();\r\n            }\r\n            if (this.peek().value === 'finally') {\r\n                this.next();\r\n                this.parseBlockStmt();\r\n            }\r\n        }\r\n    }\r\n\r\n    // for语句\r\n    Parser.prototype.parseForStmt = function () {\r\n        this.parseList.push('for');\r\n        this.nextMatch('for');\r\n        this.peekMatch('(');\r\n        if (this.peek(2).value === 'in' ||\r\n            this.peek(2).value === 'of' ||\r\n            this.peek(3).value === 'in' ||\r\n            this.peek(3).value === 'of') { //for in、es6 for of 语句\r\n            if (this.peek(3).value === 'in' || this.peek(3).value === 'of') {\r\n                this.nextMatch(['var', 'let', 'const']);\r\n            }\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            this.nextMatch(['in', 'of']);\r\n            this.parseExprStmt();\r\n        } else {\r\n            if (['var', 'let', 'const'].indexOf(this.peek().value) > -1) {\r\n                this.parseDeclareStmt();\r\n            } else if (this.peek().value != ';') {\r\n                this.parseExprStmt();\r\n            }\r\n            this.nextMatch(';');\r\n            this.peek().value != ';' && this.parseExprStmt();\r\n            this.nextMatch(';');\r\n            this.peek().value != ')' && this.parseExprStmt();\r\n        }\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // 函数声明\r\n    Parser.prototype.parseFunctionStmt = function (needName) {\r\n        this.nextMatch('function');\r\n        if (this.peek().type === TokenType.IDENTIFIER || needName) {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        this.parseFunArgsStmt();\r\n        this.parseBlockStmt();\r\n    }\r\n\r\n    // 类声明\r\n    Parser.prototype.parseClassStmt = function () {\r\n        var start = null;\r\n        var needName = !this.preToken || ['(', '=', 'default'].indexOf(this.preToken.value) == -1;\r\n        this.nextMatch('class');\r\n        if (this.peek().type === TokenType.IDENTIFIER || needName) {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        if (this.peek().value === 'extends') {\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek(2).value === '=') { //属性\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.parseAssignStmt('=');\r\n            } else { //方法\r\n                if (this.peek().value === 'static' || this.peek().value === 'get') {\r\n                    this.next();\r\n                }\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.parseFunArgsStmt();\r\n                this.parseBlockStmt();\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 函数参数\r\n    Parser.prototype.parseFunArgsStmt = function () {\r\n        let that = this;\r\n        this.peekMatch('(');\r\n        if (this.peek().value != ')') {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        if (this.peek().value === '=') { //es6预设值\r\n            _assign();\r\n        }\r\n        while (this.hasNext() && this.peek().value === ',') {\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            if (this.peek().value === '=') {\r\n                _assign();\r\n            }\r\n        }\r\n        this.peekMatch(')');\r\n\r\n        function _assign() {\r\n            that.next();\r\n            that.parseExpr();\r\n        }\r\n    }\r\n\r\n    // break,continue\r\n    Parser.prototype.parseControlStmt = function () {\r\n        var token = this.next();\r\n        if (!this.checkIn(['for', 'while', 'do', 'if'])) {\r\n            Error.unexpected(token);\r\n        } else if (this.peek().type === TokenType.IDENTIFIER) { //continue flag\r\n            this.next();\r\n        }\r\n    }\r\n\r\n    // return语句\r\n    Parser.prototype.parseReturnStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('return');\r\n        lookahead = this.peek();\r\n        if (lookahead.value !== ';' && lookahead.value !== '}' && lookahead.line === this.preToken.line) {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    // throw语句\r\n    Parser.prototype.parseThrowStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('throw');\r\n        lookahead = this.peek();\r\n        if (lookahead.line !== this.preToken.line) {\r\n            Error.expected(lookahead, 'expression');\r\n        } else {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.checkIn = function (value) {\r\n        value = value instanceof Array ? value : [value];\r\n        for (var i = this.parseList.length; i >= 0; i--) {\r\n            if (value.indexOf(this.parseList[i]) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 正则表达式\r\n    Parser.prototype.parseRegex = function () {\r\n        this.next();\r\n        if (this.peek().type === TokenType.IDENTIFIER) {\r\n            let value = this.peek().value.toLowerCase();\r\n            if (regflagsMap[value.split('').sort().join('')]) {\r\n                this.next();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表达式分析\r\n    Parser.prototype.parseExprStmt = function () {\r\n        while (this.hasNext()) {\r\n            this.parseExpr();\r\n            if (this.peek().value == ',') { //下一个表达式\r\n                this.next();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 单条表达式分析\r\n    Parser.prototype.parseExpr = function () {\r\n        var originToken = this.peek();\r\n        var lookahead = null;\r\n        if (!this.hasNext()) {\r\n            Error.expected(null, 'expression');\r\n            return;\r\n        }\r\n        while (true) {\r\n            var leftHand = this.parseLeftHand();\r\n            if (leftHand.end) { //前面非标识符\r\n                break;\r\n            }\r\n            lookahead = this.peek();\r\n            if (lookahead.value === '.' && this.preToken.type !== TokenType.NUMBER) { //点运算符\r\n                this.parseDot();\r\n                lookahead = this.peek();\r\n                leftHand.assignAble = true;\r\n            }\r\n            if (lookahead.value === '[' && this.preToken.type !== TokenType.NUMBER) { //属性运算符\r\n                this.parseProperty();\r\n                lookahead = this.peek();\r\n                leftHand.assignAble = true;\r\n            }\r\n            if (this.lexer.isPostOp(lookahead)) { //后置运算符\r\n                !leftHand.assignAble && Error.expectedIdentifier(lookahead);\r\n                leftHand.assignAble = false;\r\n                this.next();\r\n                lookahead = this.peek();\r\n            }\r\n            if (lookahead.value === '?') { //三元运算符\r\n                this.nextMatch('?');\r\n                this.parseExpr();\r\n                this.peekMatch(':');\r\n                continue;\r\n            }\r\n            if (this.lexer.isAssignOperator(lookahead) && leftHand.assignAble) { //赋值运算符\r\n                this.parseAssignStmt(this.peek().value);\r\n                break;\r\n            }\r\n            if (!this.lexer.isBinaryOperator(lookahead)) { //下一个不是二元运算符，表达式结束\r\n                break;\r\n            }\r\n            this.next();\r\n            if (!this.hasNext()) { //表达式未结束\r\n                Error.unexpected(this.preToken);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseLeftHand = function () {\r\n        let preToken = this.preToken;\r\n        let token = this.next();\r\n        let lookahead = null;\r\n        let assignAble = false; //是否可赋值\r\n        let end = false; //是否结束当前表达式\r\n        let isPreOp = false;\r\n        let isSignOp = false;\r\n        if (this.lexer.isUnitOperator(token)) { //一元运算符:+1,-1\r\n            if (token.value === '!' || token.value === 'delete' || token.value === 'void') {\r\n                let value = token.value;\r\n                while (token && token.value === value) { //!!!...\r\n                    preToken = token;\r\n                    token = this.next();\r\n                }\r\n            } else {\r\n                preToken = token;\r\n                token = this.next();\r\n            }\r\n            isSignOp = true;\r\n        }\r\n        if (token && this.lexer.isPreOp(token)) { //前置运算符:++a,--a\r\n            preToken = token;\r\n            token = this.next();\r\n            token && !this.lexer.isVariable(token) && Error.expectedIdentifier(token);\r\n            isPreOp = true;\r\n        }\r\n        lookahead = this.peek();\r\n        if (!token) {\r\n            Error.expectedIdentifier();\r\n            end = true;\r\n        } else if (token.value === 'function') { //函数声明\r\n            this.putBack();\r\n            this.parseFunctionStmt();\r\n            if (this.peek().value === '(') { //function(){}()\r\n                this.parseCallArgs();\r\n            }\r\n        } else if (token.value === '(') {\r\n            this.putBack();\r\n            this.parseParen();\r\n            assignAble = true;\r\n        } else if (token.value === '[') { //数组\r\n            this.putBack();\r\n            this.parseArray();\r\n        } else if (token.value === 'new') { //new对象\r\n            this.putBack();\r\n            this.parseNew();\r\n        } else if (token.value == '{') { //对象字面量\r\n            this.putBack();\r\n            this.parseObjectStmt();\r\n        } else if (token.type === TokenType.REGEXP) { //正则表达式\r\n            this.putBack();\r\n            this.parseRegex();\r\n        } else if (lookahead.value === '(' && !isPreOp) { //函数调用test()\r\n            this.parseCallArgs();\r\n        } else if (lookahead.value === '=>' &&\r\n            !isPreOp && !isSignOp && this.lexer.isVariable(token)) { //es6箭头函数test=>{}\r\n            this.parseArrorwFunction(preToken && preToken.value === ':');\r\n            end = true;\r\n        } else if (!isPreOp && !isSignOp && this.lexer.isVariable(token)) { //是否可赋值\r\n            assignAble = true;\r\n        } else if (!this.lexer.isValue(token)) { //非运算对象\r\n            Error.expectedIdentifier(token);\r\n            end = true;\r\n        }\r\n        return {\r\n            assignAble: assignAble,\r\n            end: end\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseParen = function () {\r\n        let lookLength = 1;\r\n        let startToken = this.peek();\r\n        let preToken = this.preToken;\r\n        this.nextMatch('(');\r\n        let lookToken = this.peek();\r\n        while (lookToken.value && lookToken.value != ')') {\r\n            lookLength++;\r\n            lookToken = this.peek(lookLength);\r\n        }\r\n        if (lookToken.value === ')' && this.peek(lookLength + 1).value === '=>') { //es6箭头函数\r\n            this.putBack();\r\n            this.parseFunArgsStmt();\r\n            this.parseArrorwFunction(preToken && preToken.value === ':');\r\n        } else {\r\n            this.parseExprStmt();\r\n            !this.peekMatch(')') && Error.unmatch(startToken);\r\n            if (this.peek().value === '(') { //(a)()\r\n                this.parseCallArgs();\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseArray = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('[');\r\n        while (this.hasNext() && this.peek().value !== ']') {\r\n            if (this.peek().value === '...') { // [...a]\r\n                this.next();\r\n            }\r\n            this.parseExpr();\r\n            lookahead = this.peek();\r\n            if (lookahead.value === ',') {\r\n                this.next();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        this.nextMatch(']');\r\n    }\r\n\r\n    Parser.prototype.parseNew = function () {\r\n        this.nextMatch('new');\r\n        if (this.peek().value === '(') {\r\n            this.parseParen();\r\n        } else {\r\n            this.nextMatch([TokenType.IDENTIFIER, TokenType.KEYWORD]);\r\n        }\r\n        if (this.peek().value === '(') {\r\n            this.parseCallArgs();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseArrorwFunction = function (skipNextExpr) {\r\n        this.nextMatch('=>');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else if (skipNextExpr) { //{a:t=>t()}\r\n            this.parseExpr();\r\n        } else {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    // 函数调用\r\n    Parser.prototype.parseCallArgs = function () {\r\n        this.peekMatch('(');\r\n        if (this.peek().value !== ')') {\r\n            while (this.hasNext()) {\r\n                if (this.peek().value === '...') {\r\n                    this.next();\r\n                    if (this.peek().value === '{') {\r\n                        this.parseObjectStmt();\r\n                    } else {\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                    }\r\n                } else {\r\n                    this.parseExpr();\r\n                }\r\n                if (this.peek().value === ')') {\r\n                    break;\r\n                }\r\n                this.peekMatch(',');\r\n            }\r\n        }\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '(') {\r\n            this.parseCallArgs();\r\n        }\r\n    }\r\n\r\n    // 点运算符\r\n    Parser.prototype.parseDot = function () {\r\n        var lookahead = null;\r\n        if (this.preToken.type !== TokenType.NUMBER && this.preToken.type !== TokenType.BOOLEAN) {\r\n            this.nextMatch('.');\r\n            lookahead = this.peek();\r\n            if (this.lexer.isDotAble(lookahead)) {\r\n                this.next();\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '(') { //函数调用test()\r\n                    this.parseCallArgs();\r\n                }\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '[') {\r\n                    this.parseProperty();\r\n                } else if (lookahead.value === '.') {\r\n                    this.parseDot();\r\n                }\r\n            } else {\r\n                Error.expected(lookahead, TokenType.IDENTIFIER);\r\n            }\r\n        } else {\r\n            Error.unexpected(this.next());\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseProperty = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('[');\r\n        this.parseExprStmt();\r\n        this.nextMatch(']');\r\n        lookahead = this.peek();\r\n        if (lookahead.value === '(') { //函数调用test()\r\n            this.parseCallArgs();\r\n        }\r\n        lookahead = this.peek();\r\n        if (lookahead.value === '[') {\r\n            this.parseProperty();\r\n        } else if (lookahead.value === '.') {\r\n            this.parseDot();\r\n        }\r\n    }\r\n\r\n    var lexer = new Lexer();\r\n    var parser = new Parser(lexer);\r\n    lexer.parser = parser;\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            clearTimeout(parser.parseTimer);\r\n            parser.reset(text);\r\n            parser.parse();\r\n            result = Error.errors.map((item) => {\r\n                var line = item.line;\r\n                var column = item.column;\r\n                if (!item.line || item.line > lexer.lines.length) {\r\n                    line = lexer.lines.length;\r\n                    column = lexer.lines.peek().length;\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column,\r\n                    error: item.error\r\n                }\r\n            }).sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            console.log(result);\r\n            return result;\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-08 10:31:22\r\n * @Description: \r\n */\r\nexport default function () {\r\n    Array.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    Array.prototype._isArray = true;\r\n    String.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    const brackets = ['{', '}', '[', ']', '(', ')'];\r\n    const regs = {\r\n        space: /^\\s+/,\r\n        tag: /^@?[a-zA-Z_\\-][a-zA-Z0-9_\\-]*/,\r\n        propertyName: /^[\\*]?[a-zA-Z_$][a-zA-Z0-9_\\-$]*/,\r\n        numValue: /^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[sS%]|px|PX)?/,\r\n        propertyValue: /^[+\\-]?[a-zA-Z0-9_\\-$%]+|^#[a-zA-Z0-9]+/,\r\n        punctuator: /^[\\+\\-\\*\\~\\,\\:\\;\\.\\#\\=\\!]/,\r\n        comment: /\\*\\//,\r\n        string1: /\\\\*'/,\r\n        string2: /\\\\*\"/,\r\n        other: /^[\\s\\S]/\r\n    }\r\n    const maxErrors = 100;\r\n\r\n    function TokenType(type, label) {\r\n        this.type = type;\r\n        this.label = label;\r\n        this._isTokenType = true;\r\n    }\r\n\r\n    TokenType.prototype.toString = function () {\r\n        return this.label;\r\n    }\r\n\r\n    TokenType.STRING = new TokenType(2, 'string');\r\n    TokenType.SELECTOR = new TokenType(3, 'selector');\r\n    TokenType.PROPERTY = new TokenType(4, 'property');\r\n    TokenType.VALUE = new TokenType(5, 'value');\r\n    TokenType.NUM_VALUE = new TokenType(6, 'numValue');\r\n    TokenType.BRACKET = new TokenType(7, 'bracket');\r\n    TokenType.PUNCTUATOR = new TokenType(8, 'punctuator');\r\n    TokenType.OTHER = new TokenType(10, 'other');\r\n\r\n    function ErrorType(type) {\r\n        this.type = type;\r\n    }\r\n\r\n    ErrorType.UNEXPECTED = new ErrorType(1);\r\n    ErrorType.EXPECTED = new ErrorType(2);\r\n    ErrorType.MISS = new ErrorType(3);\r\n    ErrorType.UNMATCH = new ErrorType(4);\r\n\r\n    function Error(token, type, param) {\r\n        token = token || {};\r\n        this.type = type;\r\n        this.param = param;\r\n        this.line = token.line;\r\n        this.column = token.column;\r\n        this.value = token.value;\r\n        this.error = this.toString();\r\n    }\r\n\r\n    Error.prototype.toString = function () {\r\n        let error = '';\r\n        let param = this.param instanceof Array ? this.param : [this.param];\r\n        param = `${param.length === 1 ? 'a ' : ''}'${param.join(`'、'`)}'`;\r\n        switch (this.type) {\r\n            case ErrorType.UNEXPECTED:\r\n                error = `unexpected '${this.value}'`;\r\n                break;\r\n            case ErrorType.EXPECTED:\r\n                error = `expected ${param}`;\r\n                if (this.value) {\r\n                    error += ` and instead saw '${this.value}'`;\r\n                }\r\n                break;\r\n            case ErrorType.MISS:\r\n                error = `missing ${param}`;\r\n                if (this.value) {\r\n                    error += ` before '${this.value}'`\r\n                }\r\n                break;\r\n            case ErrorType.UNMATCH:\r\n                error = `unmatched '${this.value}'`\r\n                break;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    Error.push = function (error) {\r\n        Error.errors.push(error);\r\n    }\r\n\r\n    Error.expected = function (token, value) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, value));\r\n    }\r\n\r\n    Error.unexpected = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNEXPECTED));\r\n    }\r\n\r\n    Error.unmatch = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNMATCH));\r\n    }\r\n\r\n    // 词法分析器\r\n    function Lexer() {\r\n        this.init();\r\n    }\r\n\r\n    Lexer.prototype.init = function () {\r\n        Error.errors = [];\r\n        this.lines = [''];\r\n        this.line = 1;\r\n        this.column = 0;\r\n        this.input = '';\r\n        this.bracketsMap = new Map();\r\n        brackets.map((item) => {\r\n            this.bracketsMap.set(item, true);\r\n        });\r\n    }\r\n\r\n    Lexer.prototype.reset = function (option) {\r\n        this.lines = option.texts;\r\n        this.line = option.line || 1;\r\n        this.column = option.column || 0\r\n        this.input = this.lines[this.line - 1].slice(this.column);\r\n    }\r\n\r\n    Lexer.prototype.skip = function (length) {\r\n        this.input = length ? this.input.slice(length) : this.input;\r\n        this.column += length;\r\n    }\r\n\r\n    Lexer.prototype.skipLine = function (length) {\r\n        this.line += length;\r\n        this.column = 0;\r\n        this.input = this.lines[this.line - 1] || '';\r\n    }\r\n\r\n    Lexer.prototype.hasNext = function () {\r\n        if (Error.errors.length > maxErrors) {\r\n            return false;\r\n        }\r\n        return this.line < this.lines.length ||\r\n            this.line == this.lines.length && this.lines.peek().length > this.column\r\n    }\r\n\r\n    Lexer.prototype.isBracket = function (value) {\r\n        return this.bracketsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isTokenType = function (type) {\r\n        return type._isTokenType;\r\n    }\r\n\r\n    Lexer.prototype.isProp = function (token) {\r\n        return token.type === TokenType.SELECTOR ||\r\n            token.type === TokenType.PROPERTY\r\n    }\r\n\r\n    Lexer.prototype.isValue = function (token) {\r\n        return token.type === TokenType.VALUE ||\r\n            token.type === TokenType.NUM_VALUE ||\r\n            token.type === TokenType.SELECTOR ||\r\n            token.type === TokenType.PROPERTY ||\r\n            token.type === TokenType.STRING\r\n    }\r\n\r\n    Lexer.prototype.craeteToken = function (value, type) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        if (line > this.lines.length) {\r\n            line = this.lines.length;\r\n            column = this.lines.peek().length;\r\n        }\r\n        return {\r\n            type: type,\r\n            line: line,\r\n            column: column,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanSpace = function () {\r\n        let exec = null;\r\n        while (!this.input.length && this.line < this.lines.length) { //去掉空行\r\n            this.skipLine(1);\r\n        }\r\n        exec = regs.space.exec(this.input);\r\n        if (exec) {\r\n            this.skip(exec.index + exec[0].length);\r\n            exec.index >= this.input.length - 1 && this.scanSpace();\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanComment = function () {\r\n        let exec = null;\r\n        let ch1 = null;\r\n        let ch2 = null;\r\n        let startToken = null;\r\n        this.scanSpace(); //去掉空格\r\n        ch1 = this.input[0];\r\n        ch2 = this.input[1];\r\n        if (ch1 === '/' && ch2 === '*') {\r\n            startToken = this.craeteToken('/*');\r\n            this.skip(2);\r\n            while (this.hasNext() && !(exec = regs.comment.exec(this.input))) {\r\n                this.skipLine(1);\r\n            }\r\n            if (exec) {\r\n                this.skip(exec.index + exec[0].length);\r\n            } else {\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanString = function () {\r\n        let that = this;\r\n        let exec = null;\r\n        let token = null;\r\n        let startToken = null;\r\n        if (this.input[0] === '\\'') {\r\n            startToken = this.craeteToken('\\'', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string1);\r\n            token = this.craeteToken('\\'', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '\"') {\r\n            startToken = this.craeteToken('\"', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string2);\r\n            token = this.craeteToken('\"', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        }\r\n        return token;\r\n\r\n        function _end(reg) {\r\n            if (!that.hasNext()) {\r\n                return false;\r\n            }\r\n            if (exec = reg.exec(that.input)) {\r\n                that.skip(exec.index + exec[0].length);\r\n                if (exec[0].length % 2 === 0) { //含有奇数个\\:\\\\\\'\r\n                    return _end(reg);\r\n                }\r\n                return true;\r\n            } else {\r\n                that.skipLine(1);\r\n                return _end(reg);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanIdentifier = function () {\r\n        let exec = null;\r\n        let token = null;\r\n        if (exec = regs.tag.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.SELECTOR);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.propertyName.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.PROPERTY);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.numValue.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.NUM_VALUE);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.propertyValue.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.VALUE);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanBracket = function () {\r\n        let token = null;\r\n        let ch = this.input[0];\r\n        if (this.isBracket(ch)) {\r\n            token = this.craeteToken(ch, TokenType.BRACKET);\r\n            this.skip(1);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    // 操作符号\r\n    Lexer.prototype.scanPunctuator = function () {\r\n        let token = null;\r\n        if (exec = regs.punctuator.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.PUNCTUATOR);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanOther = function () {\r\n        let exec = null;\r\n        let token = null;\r\n        if (exec = regs.other.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.OTHER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token\r\n    }\r\n\r\n    Lexer.prototype.next = function () {\r\n        let token = null;\r\n        this.scanComment();\r\n        if (this.hasNext()) {\r\n            token =\r\n                this.scanIdentifier() ||\r\n                this.scanBracket() ||\r\n                this.scanString() ||\r\n                this.scanPunctuator()\r\n            if (!token) { //存在非法字符\r\n                token = this.scanOther();\r\n                token && Error.unexpected(token);\r\n                return this.next();\r\n            }\r\n        }\r\n        this.preToken = token;\r\n        return token;\r\n    }\r\n\r\n    // 语法分析器\r\n    function Parser(lexer) {\r\n        this.lexer = lexer;\r\n        this.cacheList = [];\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        Error.errors = [];\r\n    }\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        this.recovery(text);\r\n        Error.errors = [];\r\n    }\r\n\r\n    // 添加缓存\r\n    Parser.prototype.cache = function () {\r\n        if (this.cacheList.length && this.cacheList.peek().line == this.lexer.line) {\r\n            this.cacheList.pop();\r\n        }\r\n        this.preToken && this.cacheList.push({\r\n            line: this.preToken.line,\r\n            column: this.preToken.column,\r\n            parseList: this.parseList.slice(0)\r\n        });\r\n    }\r\n\r\n    // 从缓存中恢复\r\n    Parser.prototype.recovery = function (text) {\r\n        let index = 0;\r\n        let texts = text.split('\\n') || [''];\r\n        let hasCache = false;\r\n        while (index < texts.length && index < this.lexer.lines.length && texts[index] === this.lexer.lines[index]) {\r\n            index++;\r\n        }\r\n        if (index > 0) {\r\n            let cacheIndex = -1;\r\n            for (let i = 0; i < this.cacheList.length; i++) {\r\n                if (this.cacheList[i].line <= index) {\r\n                    cacheIndex = i;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            if (cacheIndex > -1) {\r\n                let cache = this.cacheList[cacheIndex];\r\n                this.parseList = cache.parseList;\r\n                this.cacheList = this.cacheList.slice(0, cacheIndex + 1);\r\n                this.lexer.reset({\r\n                    texts: texts,\r\n                    line: cache.line,\r\n                    column: cache.column\r\n                });\r\n                this.next();\r\n                hasCache = true;\r\n            }\r\n        }\r\n        if (!hasCache) {\r\n            this.cacheList = [];\r\n            this.lexer.reset({\r\n                texts: texts\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.match = function (token, value) {\r\n        let pass = false;\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (this.lexer.isTokenType(value[i])) {\r\n                if (value[i] === token.type) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            } else if (value[i] === token.value) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        };\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.next = function (length) {\r\n        let token = null;\r\n        length = length || 1;\r\n        while (length > 0) {\r\n            if (this.backs.length) {\r\n                token = this.backs.shift();\r\n            } else {\r\n                token = this.lexer.next();\r\n            }\r\n            this.pre2Token = this.preToken;\r\n            this.preToken = token || this.preToken;\r\n            length--;\r\n        }\r\n        this.puted = false;\r\n        return token;\r\n    }\r\n\r\n    Parser.prototype.nextMatch = function (value) {\r\n        let token = this.next() || {};\r\n        let pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (!pass) {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.peek = function (length) {\r\n        let token = null;\r\n        length = length || 1;\r\n        if (this.backs.length) {\r\n            token = this.backs[length - 1];\r\n        }\r\n        if (!token) {\r\n            length -= this.backs.length;\r\n            while (length > 0) {\r\n                length--;\r\n                token = this.lexer.next();\r\n                token && this.backs.push(token);\r\n            }\r\n        }\r\n        return token || {};\r\n    }\r\n\r\n    Parser.prototype.peekMatch = function (value) {\r\n        let token = this.peek() || {};\r\n        let pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (pass) {\r\n            this.next();\r\n        } else {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.hasNext = function () {\r\n        let lookahead = this.peek();\r\n        return lookahead.value\r\n    }\r\n\r\n    Parser.prototype.putBack = function () {\r\n        if (this.preToken && !this.puted) {\r\n            this.backs.unshift(this.preToken);\r\n            this.preToken = this.pre2Token;\r\n            this.puted = true;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.skipSemicolon = function (length) {\r\n        length = length || Infinity\r\n        while (this.peek().value === ';' && length > 0) {\r\n            this.next();\r\n            length--;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        let count = 0;\r\n        let startTime = Date.now();\r\n        while (this.hasNext()) {\r\n            this.parseStmt();\r\n            !Error.errors.length && this.cache();\r\n            if (++count % 10 === 0 && Date.now() - startTime > 200) {\r\n                this.parseTimer = setTimeout(() => {\r\n                    this.parseStmt();\r\n                }, 10);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseStmt = function () {\r\n        let token = this.peek();\r\n        if (token.value === '@import') {\r\n            this.parseImport();\r\n            return;\r\n        }\r\n        if (token.value === '@charset') {\r\n            this.parseCharset();\r\n            return;\r\n        }\r\n        if (token.value === '@keyframes' || token.value === '@-webkit-keyframes') {\r\n            this.parseKeyFrames();\r\n            return;\r\n        }\r\n        if (token.value === '@media') {\r\n            this.parseMedia();\r\n            return;\r\n        }\r\n        this.parseSelector();\r\n        if (this.peek().value === '{') {\r\n            this.parseBlock();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseImport = function () {\r\n        this.nextMatch('@import');\r\n        this.nextMatch(TokenType.STRING);\r\n        if (['all', 'print', 'screen', 'speech'].indexOf(this.peek().value) > -1) {\r\n            this.parseMedia(true);\r\n        }\r\n        this.peekMatch(';');\r\n    }\r\n\r\n    Parser.prototype.parseCharset = function () {\r\n        this.nextMatch('@charset');\r\n        this.nextMatch(TokenType.STRING);\r\n        this.peekMatch(';');\r\n    }\r\n\r\n    Parser.prototype.parseMedia = function (onlyValue) {\r\n        let token = null;\r\n        !onlyValue && this.nextMatch('@media');\r\n        token = this.peek();\r\n        if (token.value === 'not' || token.value === 'only') {\r\n            this.next();\r\n        }\r\n        this.nextMatch(['all', 'print', 'screen', 'speech']);\r\n        while (this.hasNext()) {\r\n            token = this.peek();\r\n            if (token.value === 'and' || token.value === 'or') {\r\n                this.next();\r\n                this.nextMatch('(');\r\n                token = this.next() || {};\r\n                if (!this.lexer.isProp(token)) {\r\n                    Error.expected(token, TokenType.PROPERTY);\r\n                }\r\n                if (this.peek().value != ')') {\r\n                    this.peekMatch(':')\r\n                    token = this.next() || {};\r\n                    if (!this.lexer.isValue(token)) {\r\n                        Error.expected(token, TokenType.VALUE);\r\n                    }\r\n                    this.peekMatch(')');\r\n                }\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (!onlyValue) {\r\n            this.peekMatch('{');\r\n            this.parseStmt();\r\n            this.peekMatch('}');\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseKeyFrames = function () {\r\n        let token = null;\r\n        this.nextMatch(['@keyframes', '@-webkit-keyframes']);\r\n        token = this.next();\r\n        if (token.type !== TokenType.SELECTOR) {\r\n            Error.expected(token, 'name');\r\n        }\r\n        this.peekMatch('{');\r\n        while (this.hasNext()) {\r\n            if (this.peek().value === '}') {\r\n                break;\r\n            }\r\n            this.nextMatch(TokenType.NUM_VALUE);\r\n            this.parseBlock();\r\n        }\r\n        this.peekMatch('}');\r\n    }\r\n\r\n    Parser.prototype.parseSelector = function () {\r\n        let token = this.next() || {};\r\n        if (token.value === '.' || token.value === '#') { //类、ID选择器\r\n            this.nextMatch(TokenType.SELECTOR);\r\n        } else if (token.value === '[') { //属性选择器\r\n            this.nextMatch(TokenType.SELECTOR);\r\n            if (this.peek().value !== ']') {\r\n                this.nextMatch('=');\r\n                token = this.peek();\r\n                if (!this.lexer.isValue(token)) {\r\n                    Error.expected(token, 'value');\r\n                } else {\r\n                    this.next();\r\n                }\r\n                this.peekMatch(']');\r\n            } else {\r\n                this.next();\r\n            }\r\n        } else if (token.value === ':') { //伪类选择器\r\n            if (this.peek().value === ':') {\r\n                this.next();\r\n            }\r\n            this.nextMatch(TokenType.SELECTOR);\r\n            if (this.peek().value === '(') { //:not(p)\r\n                this.next();\r\n                this.parseSelector();\r\n                this.peekMatch(')');\r\n            }\r\n        } else if (token.value !== '*') { //标签选择器\r\n            this.putBack();\r\n            this.nextMatch(TokenType.SELECTOR);\r\n        }\r\n        if (this.hasNext() && this.peek().value !== '{') {\r\n            token = this.peek();\r\n            if (token.value === '+' || token.value === '~') { //兄弟选择器\r\n                this.next();\r\n            } else if (token.value === ',') { //并列选择器\r\n                this.next();\r\n            }\r\n            this.parseSelector();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseBlock = function () {\r\n        let that = this;\r\n        this.nextMatch('{');\r\n        while (this.hasNext()) {\r\n            if (this.peek().value === '}') {\r\n                break;\r\n            }\r\n            _nextMatchProperty();\r\n            this.peekMatch(':');\r\n            _nextMatchValue();\r\n            if (this.peek().value !== '}') {\r\n                this.peekMatch(';');\r\n            }\r\n        }\r\n        this.peekMatch('}');\r\n\r\n        function _nextMatchProperty() {\r\n            let token = that.next();\r\n            if (token.type !== TokenType.SELECTOR && token.type !== TokenType.PROPERTY) {\r\n                Error.expected(TokenType.PROPERTY);\r\n            }\r\n        }\r\n\r\n        function _nextMatchValue() {\r\n            let hasValue = false;\r\n            while (that.hasNext()) {\r\n                let token = that.peek();\r\n                if (token.value === ';' || token.value === '}' || token.value === ')') {\r\n                    break;\r\n                }\r\n                token = that.next();\r\n                if (that.lexer.isValue(token)) {\r\n                    hasValue = true;\r\n                } else if (token.value === '(') {\r\n                    let lbraces = 1;\r\n                    while (that.hasNext() && lbraces) {\r\n                        let token = that.next() || {};\r\n                        if (token.value === ')') {\r\n                            lbraces--;\r\n                        } else if (token.value === '(') {\r\n                            lbraces++;\r\n                        }\r\n                    }\r\n                    lbraces && that.peekMatch(')');\r\n                } else if (hasValue && token.value === ',') {\r\n                    _nextMatchValue();\r\n                    break;\r\n                } else if (hasValue && token.value === '!') {\r\n                    that.peekMatch('important');\r\n                    break;\r\n                } else {\r\n                    Error.expected(token, TokenType.VALUE);\r\n                }\r\n            }\r\n            if (!hasValue) {\r\n                Error.expected(null, TokenType.VALUE);\r\n            }\r\n            return hasValue;\r\n        }\r\n    }\r\n\r\n    let lexer = new Lexer();\r\n    let parser = new Parser(lexer);\r\n    lexer.parser = parser;\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            clearTimeout(parser.parseTimer);\r\n            parser.reset(text);\r\n            parser.parse();\r\n            result = Error.errors.map((item) => {\r\n                let line = item.line;\r\n                let column = item.column;\r\n                if (!item.line || item.line > lexer.lines.length) {\r\n                    line = lexer.lines.length;\r\n                    column = lexer.lines.peek().length;\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column,\r\n                    error: item.error\r\n                }\r\n            }).sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            console.log(result);\r\n            return result;\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-09 21:33:03\r\n * @Description: \r\n */\r\nimport jsLint from './javascript';\r\nimport cssLint from './css';\r\n\r\nfunction htmlLint() {\r\n    let regs = {\r\n        js: /(?<!\\<[^\\>]*?['\"][^\\>]*?)(\\<script(?:\\s[^\\>]*?)?\\>)([\\s\\S]*?)\\<\\/script\\>/,\r\n        css: /(?<!\\<[^\\>]*?['\"][^\\>]*?)(\\<style(?:\\s[^\\>]*?)?\\>)([\\s\\S]*?)\\<\\/style\\>/,\r\n        enter: /\\n/g,\r\n        column: /\\n[^\\n]*?$/,\r\n        comment: /\\<\\!--[\\s\\S]*?--\\>/\r\n    }\r\n\r\n    function Parser() {}\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.text = text;\r\n        this.comments = [];\r\n    }\r\n\r\n    Parser.prototype.parseComentRange = function () {\r\n        let exec = null;\r\n        let pos = {\r\n            line: 1,\r\n            column: 0,\r\n            index: 0\r\n        }\r\n        let text = this.text;\r\n        let start = null;\r\n        let end = null;\r\n        while (exec = regs.comment.exec(text)) {\r\n            this.setLineColumn(text.slice(0, exec.index), pos);\r\n            pos.index += exec.index;\r\n            start = Object.assign({}, pos);\r\n            this.setLineColumn(exec[0], pos);\r\n            pos.index += exec[0].length;\r\n            end = Object.assign({}, pos);\r\n            text = this.text.slice(pos.index);\r\n            this.comments.push({\r\n                start: start,\r\n                end: end\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.setLineColumn = function (text, pos) {\r\n        let lines = text.match(regs.enter);\r\n        lines = lines && lines.length || 0;\r\n        pos.line += lines;\r\n        if (lines) {\r\n            pos.column = regs.column.exec(text)[0].length;\r\n        } else {\r\n            pos.column += text.length;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        this.parseComentRange();\r\n        return parser.parseJs().concat(parser.parseCss());\r\n    }\r\n\r\n    Parser.prototype.parseJs = function () {\r\n        let parseJs = jsParser().parse;\r\n        return this._parse(regs.js, parseJs);\r\n    }\r\n\r\n    Parser.prototype.parseCss = function () {\r\n        let parseCss = cssParser().parse;\r\n        return this._parse(regs.css, parseCss);\r\n    }\r\n\r\n    Parser.prototype._parse = function (reg, parseFun) {\r\n        let exec = null;\r\n        let pos = {\r\n            line: 1,\r\n            column: 0,\r\n            index: 0\r\n        }\r\n        let text = this.text;\r\n        let result = [];\r\n        while (exec = reg.exec(text)) {\r\n            this.setLineColumn(text.slice(0, exec.index), pos);\r\n            pos.index += exec.index;\r\n            if (!this.checkInComment(pos)) {\r\n                text = this.text.slice(pos.index);\r\n                continue;\r\n            }\r\n            this.setLineColumn(exec[1], pos);\r\n            pos.index += exec[1].length;\r\n            if (exec[2]) {\r\n                let r = parseFun(exec[2]);\r\n                r.map((item) => {\r\n                    if (item.line == 1) {\r\n                        item.column += pos.column;\r\n                    }\r\n                    item.line += pos.line - 1;\r\n                });\r\n                result = result.concat(r);\r\n            }\r\n            this.setLineColumn(exec[0].slice(exec[1].length), pos);\r\n            pos.index += exec[0].slice(exec[1].length).length;\r\n            text = this.text.slice(pos.index);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    Parser.prototype.checkInComment = function (pos) {\r\n        for (let i = 0; i < this.comments.length; i++) {\r\n            let item = this.comments[i];\r\n            if (_compare(item.start, pos) < 0 && _compare(item.end, pos) > 0) {\r\n                pos.line = item.end.line;\r\n                pos.column = item.end.column;\r\n                pos.index = item.end.index;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n\r\n        function _compare(a, b) {\r\n            if (a.line === b.line) {\r\n                return a.column - b.column\r\n            }\r\n            return a.line - b.line;\r\n        }\r\n    }\r\n\r\n    let parser = new Parser();\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            parser.reset(text);\r\n            result = parser.parse();\r\n            result.sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Function(`function jsParser()${jsLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nfunction cssParser()${cssLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nfunction htmlParser()${htmlLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nreturn htmlParser();\r\n`)","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-05 14:28:42\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nimport htmlLint from '../language/html';\r\nimport jsLint from '../language/javascript';\r\nimport cssLint from '../language/css';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.parseId = 1;\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, context, ['htmls', ]);\r\n        Util.defineProperties(this, editor, ['setErrorMap']);\r\n    }\r\n    initLanguage(language) {\r\n        let that = this;\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.worker && this.worker.terminate();\r\n        this.worker = null;\r\n        this.setErrorMap({});\r\n        switch (language) {\r\n            case 'HTML':\r\n                this.worker = this.createWorker(htmlLint);\r\n                break;\r\n            case 'JavaScript':\r\n                this.worker = this.createWorker(jsLint);\r\n                break;\r\n            case 'CSS':\r\n                this.worker = this.createWorker(cssLint);\r\n                break;\r\n        }\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        this.worker.onmessage = function (e) {\r\n            let parseId = e.data.parseId;\r\n            let errors = e.data.errors;\r\n            let index = 0;\r\n            let errorMap = {};\r\n            if (that.parseId != parseId) {\r\n                return;\r\n            }\r\n            while (index < errors.length) {\r\n                let line = errors[index].line;\r\n                let arr = [];\r\n                while (index < errors.length && errors[index].line === line) {\r\n                    arr.push(errors[index].error);\r\n                    index++;\r\n                }\r\n                line = line || that.htmls.length;\r\n                errorMap[line] = arr.join('<br>');\r\n            }\r\n            that.setErrorMap(errorMap);\r\n        }\r\n        this.parse();\r\n    }\r\n    createWorker(mod) {\r\n        var funStr = mod.toString().replace(/^[^\\)]+?\\)/, '');\r\n        var str =\r\n            `function fun()${funStr}\r\n            let parser = fun();\r\n            self.onmessage = function(e) {\r\n                var parseId = e.data.parseId;\r\n                var errors = parser.parse(e.data.text);\r\n                self.postMessage({\r\n                    errors: errors,\r\n                    parseId: parseId\r\n                });\r\n            }`;\r\n        return Util.createWorker(str);\r\n    }\r\n    onInsertContentBefore(nowLine) {}\r\n    onInsertContentAfter(nowLine) {\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        clearTimeout(this.parseTimer);\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    onDeleteContentBefore(nowLine) {}\r\n    onDeleteContentAfter(nowLine) {\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        clearTimeout(this.parseTimer);\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    parse() {\r\n        let text = this.htmls.map((item) => {\r\n            return item.text;\r\n        }).join('\\n');\r\n        this.parseId++;\r\n        this.worker.postMessage({\r\n            text: text,\r\n            parseId: this.parseId\r\n        });\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 14:42:01\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.editorFunObj = {};\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this.editorFunObj, editor, ['unFold']);\r\n        Util.defineProperties(this, editor, ['selectedRange']);\r\n        Util.defineProperties(this, context, ['htmls', 'folds', 'foldMap']);\r\n    }\r\n    onInsertContentBefore(nowLine) {\r\n        if (this.folds.length) {\r\n            let index = this.findFoldIndex(nowLine);\r\n            let unFolds = [];\r\n            while (index < this.folds.length && this.folds[index].start.line < nowLine && this.folds[index].end.line > nowLine) {\r\n                unFolds.push(this.folds[index].start.line);\r\n                index++;\r\n            }\r\n            unFolds.map((line) => {\r\n                this.editorFunObj.unFold(line);\r\n            });\r\n        }\r\n    }\r\n    onInsertContentAfter(nowLine) {}\r\n    onDeleteContentBefore(nowLine) {\r\n        if (this.selectedRange) {\r\n            let start = this.selectedRange.start;\r\n            let end = this.selectedRange.end;\r\n            for (let line = start.line; line < end.line; line++) { //删除折叠区域\r\n                this.editorFunObj.unFold(line);\r\n            }\r\n        }\r\n    }\r\n    onDeleteContentAfter(nowLine) {\r\n        if (this.folds.length) {\r\n            let index = this.findFoldIndex(nowLine);\r\n            let unFolds = [];\r\n            while (index < this.folds.length && this.folds[index].start.line < nowLine && this.folds[index].end.line > nowLine) {\r\n                unFolds.push(this.folds[index].start.line);\r\n                index++;\r\n            }\r\n            unFolds.map((line) => {\r\n                this.editorFunObj.unFold(line);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 寻找第一个包裹nowLine的折叠对象的下标\r\n     * @param {Number} nowLine \r\n     */\r\n    findFoldIndex(nowLine) {\r\n        let left = 0;\r\n        let right = this.folds.length - 1;\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            let fold = this.folds[mid];\r\n            if (fold.start.line < nowLine) {\r\n                if (fold.end.line <= nowLine) {\r\n                    left = mid + 1;\r\n                } else {\r\n                    right = mid;\r\n                }\r\n            } else if (fold.start.line == nowLine) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid - 1;\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n    // 折叠行\r\n    foldLine(line) {\r\n        let startLine = line;\r\n        let resultFold = this.getRangeFold(line);\r\n        if (resultFold) {\r\n            for (let line = resultFold.start.line; line < resultFold.end.line; line++) {\r\n                if (this.foldMap.has(line)) {\r\n                    if (this.foldMap.get(line).end.line > resultFold.end.line) {\r\n                        this.unFold(line);\r\n                    }\r\n                }\r\n            }\r\n            this.foldMap.set(startLine, resultFold);\r\n            this.folds.push(resultFold);\r\n            this.folds.sort((a, b) => {\r\n                return a.start.line - b.start.line;\r\n            });\r\n        }\r\n        return resultFold;\r\n    }\r\n    // 展开折叠行\r\n    unFold(line) {\r\n        let left = 0;\r\n        let right = this.folds.length;\r\n        if (!this.foldMap.has(line)) {\r\n            return false;\r\n        }\r\n        while (left <= right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (this.folds[mid].start.line == line) {\r\n                this.folds.splice(mid, 1);\r\n                break;\r\n            } else if (this.folds[mid].start.line > line) {\r\n                right = mid - 1;\r\n            } else {\r\n                left = mid + 1;\r\n            }\r\n        }\r\n        this.foldMap.delete(line);\r\n        return true;\r\n    }\r\n    /**\r\n     * 获取折叠范围\r\n     * @param {Number} line 行号\r\n     * @param {Boolean} foldIconCheck 检测是否显示折叠图标\r\n     */\r\n    getRangeFold(line, foldIconCheck) {\r\n        let stack = [];\r\n        let startLine = line;\r\n        let lineObj = this.htmls[startLine - 1];\r\n        let resultFold = null;\r\n        line++;\r\n        if (lineObj.folds && lineObj.folds.length) {\r\n            for (let i = 0; i < lineObj.folds.length; i++) {\r\n                let fold = lineObj.folds[i];\r\n                if (fold.type == -1) {\r\n                    if (!stack.length || stack.peek().name == fold.name) {\r\n                        stack.push(fold);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        while (stack.length && line <= this.htmls.length && (!foldIconCheck || line - startLine <= 1)) {\r\n            lineObj = this.htmls[line - 1];\r\n            if (lineObj.folds && lineObj.folds.length) {\r\n                for (let i = 0; i < lineObj.folds.length; i++) {\r\n                    let fold = lineObj.folds[i];\r\n                    if (fold.type == -1) {\r\n                        if (stack.peek().name == fold.name) {\r\n                            stack.push(fold);\r\n                        }\r\n                    } else if (stack.peek().name == fold.name) {\r\n                        if (stack.length == 1) {\r\n                            if (foldIconCheck) {\r\n                                return line - startLine > 1;\r\n                            } else {\r\n                                resultFold = {\r\n                                    start: {\r\n                                        line: startLine,\r\n                                        start: stack.peek().start\r\n                                    },\r\n                                    end: {\r\n                                        line: line,\r\n                                        end: fold.end\r\n                                    },\r\n                                    name: fold.name\r\n                                }\r\n                                stack.pop();\r\n                                break;\r\n                            }\r\n                        }\r\n                        stack.pop();\r\n                    }\r\n                }\r\n            }\r\n            line++;\r\n        }\r\n        return foldIconCheck ? line - startLine > 1 : resultFold;\r\n    }\r\n    // 根据相对行号获取真实行号(折叠后行号会改变)\r\n    getRealLine(line) {\r\n        let i = 0;\r\n        let lineCount = 1;\r\n        let realLine = 1;\r\n        while (i < this.folds.length && lineCount < line) {\r\n            let fold = this.folds[i];\r\n            if (lineCount + fold.start.line - realLine < line) {\r\n                lineCount += fold.start.line + 1 - realLine;\r\n                realLine = fold.end.line;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < this.folds.length && this.folds[i].end.line <= fold.end.line) { //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        realLine += line - lineCount;\r\n        return realLine;\r\n    }\r\n    // 根据真实行号获取相对行号\r\n    getRelativeLine(line) {\r\n        let relLine = line;\r\n        let i = 0;\r\n        while (i < this.folds.length) {\r\n            let fold = this.folds[i];\r\n            if (line >= fold.end.line) {\r\n                relLine -= fold.end.line - fold.start.line - 1;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < this.folds.length && this.folds[i].end.line <= fold.end.line) { //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        return relLine;\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 15:11:27\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['insertContent', 'deleteContent', 'setCursorPos', 'setSelectedRange']);\r\n        Util.defineProperties(this, context, ['history']);\r\n    }\r\n    // 撤销操作\r\n    undo() {\r\n        if (this.history.index > 0) {\r\n            let command = this.history[this.history.index - 1];\r\n            this.doCommand(command);\r\n            this.history.index--;\r\n        }\r\n    }\r\n    // 重做操作\r\n    redo() {\r\n        if (this.history.index < this.history.length) {\r\n            let command = this.history[this.history.index];\r\n            this.history.index++;\r\n            this.doCommand(command);\r\n        }\r\n    }\r\n    // 操作命令\r\n    doCommand(command) {\r\n        switch (command.type) {\r\n            case Util.command.DELETE:\r\n                this.setSelectedRange(command.start, command.end);\r\n                this.deleteContent(Util.keyCode.BACKSPACE, true);\r\n                break;\r\n            case Util.command.INSERT:\r\n                this.setCursorPos(command.cursorPos.line, command.cursorPos.column);\r\n                this.insertContent(command.text, true);\r\n                break;\r\n        }\r\n    }\r\n    // 添加历史记录\r\n    pushHistory(command) {\r\n        var lastCommand = this.history[this.history.index - 1];\r\n        while (this.history.length > this.history.index) {\r\n            this.history.pop();\r\n        }\r\n        // 两次操作可以合并\r\n        if (lastCommand && lastCommand.type == command.type && Date.now() - this.pushHistoryTime < 2000) {\r\n            if (\r\n                lastCommand.type == Util.command.DELETE &&\r\n                command.end.line == command.start.line &&\r\n                Util.comparePos(lastCommand.end, command.start) == 0) {\r\n                lastCommand.end = command.end;\r\n            } else if (\r\n                lastCommand.type == Util.command.INSERT &&\r\n                command.preCursorPos.line == command.cursorPos.line &&\r\n                Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0\r\n            ) {\r\n                lastCommand.text = command.text + lastCommand.text;\r\n                lastCommand.cursorPos = command.cursorPos;\r\n            } else {\r\n                this.history.push(command);\r\n            }\r\n        } else {\r\n            this.history.push(command);\r\n        }\r\n        this.history.index = this.history.length;\r\n        this.pushHistoryTime = Date.now();\r\n    }\r\n    // 更新历史记录\r\n    updateHistory(index, command) {\r\n        this.history[index - 1] = command;\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-status-bar\",style:({height:_vm.height+'px'}),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-editor-status-left\"},[_c('div',{staticClass:\"my-editor-status-item\"},[_c('span',[_vm._v(\"Line \"+_vm._s(_vm.line)+\", Column \"+_vm._s(_vm.column))])])]),_c('div',{staticClass:\"my-editor-status-right\"},[_c('div',{staticClass:\"my-editor-status-item clickable\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showTabsize.apply(null, arguments)}}},[_c('span',[_vm._v(\"Tab Size:\"+_vm._s(_vm._tabSize))]),_c('panel',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tabsizeVisible),expression:\"tabsizeVisible\"}],attrs:{\"menuList\":_vm.tabSizeList,\"styles\":{right: 0, bottom: _vm.height+'px'}},on:{\"change\":_vm.onTabsizeChange}})],1),_c('div',{staticClass:\"my-editor-status-item clickable\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showLanguage.apply(null, arguments)}}},[_c('span',[_vm._v(_vm._s(_vm._language))]),_c('panel',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.languageVisible),expression:\"languageVisible\"}],attrs:{\"menuList\":_vm.languageList,\"styles\":{right: 0, bottom: _vm.height+'px'}},on:{\"change\":_vm.onLnaguageChange}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-panel\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},_vm._l((_vm.menuList),function(group){return _c('div',{staticClass:\"my-editor-menu-group\"},_vm._l((group),function(item){return _c('div',{staticClass:\"my-editor-menu-item\",class:{checked: _vm.checkable && item.checked, disabled: item.disabled},on:{\"mousedown\":function($event){return _vm.onClick(item, group)}}},[_c('div',{staticClass:\"my-editor-menu-content\"},[_vm._v(_vm._s(item.name))]),(item.shortcut)?_c('div',{staticClass:\"my-editor-menu-shortcut\"},[_vm._v(_vm._s(item.shortcut))]):_vm._e()])}),0)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-editor-panel\">\r\n\t\t<div class=\"my-editor-menu-group\" v-for=\"group in menuList\">\r\n\t\t\t<div\r\n\t\t\t\t:class=\"{checked: checkable && item.checked, disabled: item.disabled}\"\r\n\t\t\t\t@mousedown=\"onClick(item, group)\"\r\n\t\t\t\tclass=\"my-editor-menu-item\"\r\n\t\t\t\tv-for=\"item in group\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"my-editor-menu-content\">{{item.name}}</div>\r\n\t\t\t\t<div class=\"my-editor-menu-shortcut\" v-if=\"item.shortcut\">{{item.shortcut}}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Panel',\r\n    props: {\r\n        menuList: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n        styles: {\r\n            type: Object\r\n        },\r\n        checkable: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        onClick(item, group) {\r\n            if (item.disabled) {\r\n                return;\r\n            }\r\n            group.map((item) => {\r\n                item.checked = false;\r\n            });\r\n            item.checked = true;\r\n            this.$emit('change', item);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Panel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Panel.vue?vue&type=template&id=eefcc5a0&\"\nimport script from \"./Panel.vue?vue&type=script&lang=js&\"\nexport * from \"./Panel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"{height:height+'px'}\" @contextmenu.stop.prevent class=\"my-editor-status-bar\">\r\n\t\t<div class=\"my-editor-status-left\">\r\n\t\t\t<div class=\"my-editor-status-item\">\r\n\t\t\t\t<span>Line {{line}}, Column {{column}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"my-editor-status-right\">\r\n\t\t\t<div @mousedown.stop=\"showTabsize\" class=\"my-editor-status-item clickable\">\r\n\t\t\t\t<span>Tab Size:{{_tabSize}}</span>\r\n\t\t\t\t<panel :menuList=\"tabSizeList\" :styles=\"{right: 0, bottom: height+'px'}\" @change=\"onTabsizeChange\" v-show=\"tabsizeVisible\"></panel>\r\n\t\t\t</div>\r\n\t\t\t<div @mousedown.stop=\"showLanguage\" class=\"my-editor-status-item clickable\">\r\n\t\t\t\t<span>{{_language}}</span>\r\n\t\t\t\t<panel :menuList=\"languageList\" :styles=\"{right: 0, bottom: height+'px'}\" @change=\"onLnaguageChange\" v-show=\"languageVisible\"></panel>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport Panel from './Panel';\r\nexport default {\r\n    name: 'StatusBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25\r\n        },\r\n        line: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        column: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        language: {\r\n            type: String,\r\n            default: 'JavaScript'\r\n        },\r\n        tabSize: {\r\n            type: Number,\r\n            default: 4\r\n        }\r\n    },\r\n    components: {\r\n        Panel\r\n    },\r\n    data() {\r\n        return {\r\n            _tabSize: 0,\r\n            _language: '',\r\n            tabsizeVisible: false,\r\n            languageVisible: false,\r\n            tabSizeList: [[]],\r\n            languageList: [[{ name: 'JavaScript' }, { name: 'HTML' }, { name: 'CSS' }]]\r\n        }\r\n    },\r\n    created() {\r\n        for (let i = 1; i <= 8; i++) {\r\n            this.tabSizeList[0].push({\r\n                name: `Tab Width：${i}`,\r\n                size: i\r\n            });\r\n        }\r\n        this._tabSize = this.tabSize;\r\n        this._language = this.language;\r\n        this.setDefault();\r\n    },\r\n    methods: {\r\n        setDefault() {\r\n            this.tabSizeList[0].map((item) => {\r\n                item.checked = item.size == this._tabSize;\r\n            });\r\n            this.languageList[0].map((item) => {\r\n                item.checked = item.name == this._language;\r\n            });\r\n        },\r\n        showTabsize() {\r\n            let visible = this.tabsizeVisible;\r\n            this.closeAllPanel();\r\n            this.tabsizeVisible = !visible;\r\n        },\r\n        showLanguage() {\r\n            let visible = this.languageVisible;\r\n            this.closeAllPanel();\r\n            this.languageVisible = !visible;\r\n        },\r\n        closeAllPanel() {\r\n            this.languageVisible = false;\r\n            this.tabsizeVisible = false;\r\n        },\r\n        onTabsizeChange(item) {\r\n            if (this._tabSize != item.size) {\r\n                this._tabSize = item.size;\r\n                this.$emit('update:tabSize', item.size);\r\n            }\r\n            this.tabsizeVisible = false;\r\n        },\r\n        onLnaguageChange(item) {\r\n            if (this._language != item.name) {\r\n                this._language = item.name;\r\n                this.$emit('update:language', item.name);\r\n            }\r\n            this.languageVisible = false;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatusBar.vue?vue&type=template&id=bc078c04&\"\nimport script from \"./StatusBar.vue?vue&type=script&lang=js&\"\nexport * from \"./StatusBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-tip\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-editor-tip\">\r\n\t\t<div v-html=\"content\"></div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Tip',\r\n    props: {\r\n        content: String,\r\n        styles: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tip.vue?vue&type=template&id=187bba82&\"\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n\t<div\r\n\t\t:style=\"{'padding-bottom': _statusHeight}\"\r\n\t\t@contextmenu.prevent=\"onContextmenu\"\r\n\t\t@mousedown=\"onClickEditor\"\r\n\t\t@selectstart.prevent\r\n\t\t@wheel.prevent=\"onWheel\"\r\n\t\tclass=\"my-editor-wrap\"\r\n\t\tref=\"editor\"\r\n\t>\r\n\t\t<!-- 行号 -->\r\n\t\t<div :style=\"{top: _numTop}\" class=\"my-editor-nums\">\r\n\t\t\t<!-- 占位行号，避免行号宽度滚动时变化 -->\r\n\t\t\t<div class=\"my-editor-num\" style=\"visibility:hidden\">{{maxLine}}</div>\r\n\t\t\t<div\r\n\t\t\t\t:class=\"{'my-editor-num-active': cursorPos.line==line.num}\"\r\n\t\t\t\t:key=\"line.num\"\r\n\t\t\t\t:style=\"{height:_lineHeight, 'line-height':_lineHeight}\"\r\n\t\t\t\tclass=\"my-editor-num\"\r\n\t\t\t\tv-for=\"line in renderHtmls\"\r\n\t\t\t>\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"[errorMap[line.num]?'my-editor-icon-error':'']\"\r\n\t\t\t\t\t@mouseleave=\"onIconMouseLeave\"\r\n\t\t\t\t\t@mouseover=\"onIconMouseOver(line.num, $event)\"\r\n\t\t\t\t\tclass=\"my-editor-icon my-editor-center\"\r\n\t\t\t\t></span>\r\n\t\t\t\t<span>{{line.num}}</span>\r\n\t\t\t\t<!-- 折叠图标 -->\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"[line.fold=='open'?'my-editor-fold-open':'my-editor-fold-close']\"\r\n\t\t\t\t\t@click=\"onToggleFold(line.num)\"\r\n\t\t\t\t\tclass=\"my-editor-fold my-editor-center\"\r\n\t\t\t\t\tv-if=\"line.fold\"\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div :style=\"{'box-shadow': _leftShadow}\" class=\"my-editor-content-wrap\">\r\n\t\t\t<!-- 可滚动区域 -->\r\n\t\t\t<div @mousedown=\"onScrollerMdown\" class=\"my-editor-content-scroller\" ref=\"scroller\">\r\n\t\t\t\t<!-- 内如区域 -->\r\n\t\t\t\t<div :style=\"{top: _top, minWidth: _contentMinWidth}\" @selectend.prevent=\"onSelectend\" class=\"my-editor-content\" ref=\"content\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\t:class=\"{active: cursorPos.line == line.num}\"\r\n\t\t\t\t\t\t:data-line=\"line.num\"\r\n\t\t\t\t\t\t:id=\"'line_'+line.num\"\r\n\t\t\t\t\t\t:key=\"line.num\"\r\n\t\t\t\t\t\t:style=\"{height:_lineHeight, 'line-height':_lineHeight}\"\r\n\t\t\t\t\t\tclass=\"my-editor-line\"\r\n\t\t\t\t\t\tv-for=\"line in renderHtmls\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<!-- my-editor-bg-color为选中的背景颜色 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:class=\"[line.selected ? 'my-editor-bg-color' : '', line.fold == 'close' ? 'fold-close' : '']\"\r\n\t\t\t\t\t\t\t:data-line=\"line.num\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-code\"\r\n\t\t\t\t\t\t\tv-html=\"line.html\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<!-- 选中时的首行背景 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:style=\"{left: selectedRange.start.left + 'px', width: selectedRange.start.width + 'px'}\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-line-bg my-editor-bg-color\"\r\n\t\t\t\t\t\t\tv-if=\"_startBgLineVisible(line.num)\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<!-- 选中时的末行背景 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:style=\"{left: selectedRange.end.left + 'px', width: selectedRange.end.width + 'px'}\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-line-bg my-editor-bg-color\"\r\n\t\t\t\t\t\t\tv-if=\"_endBgLineVisible(line.num)\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<span :style=\"{left: _tabLineLeft(tab)}\" class=\"my-editor-tab-line\" v-for=\"tab in line.tabNum\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- 模拟光标 -->\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\t:style=\"{height: _lineHeight, top: cursorRealPos.top, left: cursorRealPos.left, visibility: _cursorVisible}\"\r\n\t\t\t\t\t\tclass=\"my-editor-cursor\"\r\n\t\t\t\t\t\tv-show=\"cursorPos.show\"\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 水平滚动条 -->\r\n\t\t\t<div @mousedown.stop @mouseup.stop @scroll=\"onHscroll\" class=\"my-editor-h-scroller-wrap\" ref=\"hScroller\">\r\n\t\t\t\t<div :style=\"{width: _hScrollWidth}\" class=\"my-editor-h-scroller\"></div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 垂直滚动条 -->\r\n\t\t\t<div @mousedown.stop @mouseup.stop @scroll=\"onVscroll\" class=\"my-editor-v-scroller-wrap\" ref=\"vScroller\">\r\n\t\t\t\t<div :style=\"{height: scrollerHeight}\" class=\"my-editor-v-scroller\"></div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 输入框 -->\r\n\t\t\t<textarea\r\n\t\t\t\t:style=\"{top: _textAreaPos.top, left: _textAreaPos.left}\"\r\n\t\t\t\t@blur=\"onBlur\"\r\n\t\t\t\t@compositionend=\"onCompositionend\"\r\n\t\t\t\t@compositionstart=\"onCompositionstart\"\r\n\t\t\t\t@copy.prevent=\"onCopy\"\r\n\t\t\t\t@cut.prevent=\"onCut\"\r\n\t\t\t\t@focus=\"onFocus\"\r\n\t\t\t\t@input=\"onInput\"\r\n\t\t\t\t@keydown=\"onKeyDown\"\r\n\t\t\t\t@paste.prevent=\"onPaste\"\r\n\t\t\t\tclass=\"my-editor-textarea\"\r\n\t\t\t\tref=\"textarea\"\r\n\t\t\t></textarea>\r\n\t\t</div>\r\n\t\t<!-- 状态栏 -->\r\n\t\t<status-bar :column=\"cursorPos.column+1\" :height=\"statusHeight\" :language.sync=\"language\" :line=\"cursorPos.line\" :tabSize.sync=\"tabSize\" ref=\"statusBar\"></status-bar>\r\n\t\t<!-- 右键菜单 -->\r\n\t\t<panel :checkable=\"false\" :menuList=\"menuList\" :styles=\"menuStyle\" @change=\"onClickMenu\" ref=\"menu\" v-show=\"menuVisble\"></panel>\r\n\t\t<tip :content=\"tipContent\" :styles=\"tipStyle\" v-show=\"tipContent\"></tip>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport Tokenizer from '@/module/tokenizer/core/index';\r\nimport Lint from '@/module/lint/core/index';\r\nimport Fold from '@/module/fold/index';\r\nimport History from '@/module/history/index';\r\nimport StatusBar from './StatusBar';\r\nimport Panel from './Panel';\r\nimport Tip from './Tip';\r\nimport Util from '@/common/Util';\r\nimport $ from 'jquery';\r\nconst context = {\r\n    htmls: [],\r\n    folds: [],\r\n    history: [], // 操作历史\r\n    lineIdMap: new Map(), //htmls的唯一标识对象\r\n    renderedIdMap: new Map(), //renderHtmls的唯一标识对象\r\n    foldMap: new Map() //folds的唯一标识对象\r\n}\r\nexport default {\r\n    name: 'Home',\r\n    components: {\r\n        StatusBar,\r\n        Panel,\r\n        Tip\r\n    },\r\n    data() {\r\n        return {\r\n            charObj: {\r\n                charWidth: 7.15,\r\n                fullAngleCharWidth: 15,\r\n                charHight: 19,\r\n            },\r\n            cursorPos: {\r\n                line: 1,\r\n                column: 0,\r\n                top: 0,\r\n                left: 0,\r\n                show: false,\r\n                visible: true,\r\n            },\r\n            cursorRealPos: {\r\n                top: '0px',\r\n                left: '0px'\r\n            },\r\n            language: 'HTML',\r\n            // language: 'JavaScript',\r\n            // language: 'CSS',\r\n            statusHeight: 23,\r\n            tabSize: 4,\r\n            renderHtmls: [],\r\n            startLine: 1,\r\n            startToEndToken: null,\r\n            top: 0,\r\n            scrollLeft: 0,\r\n            scrollTop: 0,\r\n            maxVisibleLines: 1,\r\n            maxLine: 1,\r\n            scrollerHeight: 'auto',\r\n            scrollerArea: {},\r\n            selectedRange: null,\r\n            maxWidthObj: {\r\n                lineId: null,\r\n                text: '',\r\n                width: 0\r\n            },\r\n            menuList: [[{\r\n                name: 'Cut',\r\n                op: 'cut',\r\n                shortcut: 'Ctrl+X'\r\n            }, {\r\n                name: 'Copy',\r\n                op: 'copy',\r\n                shortcut: 'Ctrl+C'\r\n            }, {\r\n                name: 'Paste',\r\n                op: 'paste',\r\n                shortcut: 'Ctrl+V'\r\n            }]],\r\n            menuStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n                'min-width': '200px'\r\n            },\r\n            tipStyle: {\r\n                top: '0px',\r\n                left: '0px'\r\n            },\r\n            errorMap: {},\r\n            menuVisble: false,\r\n            tipContent: false,\r\n            tipContent: '',\r\n        }\r\n    },\r\n    computed: {\r\n        _numTop() {\r\n            return this.top - this.charObj.charHight + 'px';\r\n        },\r\n        _leftShadow() {\r\n            return this.scrollLeft ? '17px 0 16px -16px rgba(0, 0, 0, 0.8) inset' : 'none';\r\n        },\r\n        _top() {\r\n            return this.top + 'px';\r\n        },\r\n        _lineHeight() {\r\n            return this.charObj.charHight + 'px';\r\n        },\r\n        _statusHeight() {\r\n            return this.statusHeight + 4 + 'px';\r\n        },\r\n        _cursorVisible() {\r\n            return this.cursorPos.visible ? 'visible' : 'hidden';\r\n        },\r\n        _hScrollWidth() {\r\n            return this._contentMinWidth;\r\n        },\r\n        _contentMinWidth() {\r\n            let width = 0;\r\n            if (this.$content) {\r\n                width = Util.getStrExactWidth(this.maxWidthObj.text, this.tabSize, this.$content);\r\n                width += this.charObj.fullAngleCharWidth;\r\n            }\r\n            width = this.scrollerArea.width > width ? this.scrollerArea.width : width;\r\n            return width + 'px';\r\n        },\r\n        _textAreaPos() {\r\n            let cursorRealPos = this.cursorRealPos;\r\n            let left = Util.getNum(cursorRealPos.left);\r\n            let top = Util.getNum(cursorRealPos.top) + this.top;\r\n            left -= this.scrollLeft;\r\n            left = left < this.charObj.charWidth ? this.charObj.charWidth : left;\r\n            left = left > this.scrollerArea.width - this.charObj.charWidth ? this.scrollerArea.width - this.charObj.charWidth : left;\r\n            top += this.charObj.charHight;\r\n            if (top > this.scrollerArea.height - 2 * this.charObj.charHight) {\r\n                top = this.scrollerArea.height - 2 * this.charObj.charHight;\r\n            }\r\n            return {\r\n                top: top + 'px',\r\n                left: left + 'px'\r\n            }\r\n        },\r\n        _startBgLineVisible() {\r\n            return (num) => {\r\n                return this.selectedRange && num == this.selectedRange.start.line\r\n            }\r\n        },\r\n        _endBgLineVisible() {\r\n            return (num) => {\r\n                return this.selectedRange && num == this.selectedRange.end.line && this.selectedRange.end.line > this.selectedRange.start.line\r\n            }\r\n        },\r\n        _tabLineLeft() {\r\n            return (tab) => {\r\n                return (tab - 1) * this.tabSize * this.charObj.charWidth + 'px';\r\n            }\r\n        },\r\n        space() {\r\n            return Util.space(this.tabSize);\r\n        }\r\n    },\r\n    watch: {\r\n        language: function (newVal) {\r\n            context.htmls.map((lineObj) => {\r\n                lineObj.tokens = null;\r\n                lineObj.folds = null;\r\n                lineObj.states = null;\r\n                lineObj.html = '';\r\n            });\r\n            this.render();\r\n            this.tokenizer.initLanguage(newVal);\r\n            this.tokenizer.tokenizeVisibleLins();\r\n            this.tokenizer.tokenizeLines(1);\r\n            this.lint.initLanguage(newVal);\r\n        },\r\n        tabSize: function (newVal) {\r\n            this.render();\r\n            this.maxWidthObj = { lineId: null, text: '', width: 0 };\r\n            this.setLineWidth(context.htmls);\r\n        },\r\n        maxLine: function (newVal) {\r\n            this.setScrollerHeight();\r\n        }\r\n    },\r\n    created() {\r\n        window.editor = this;\r\n        window.context = context;\r\n        this.initData();\r\n        this.initEvent();\r\n    },\r\n    mounted() {\r\n        this.$editor = this.$refs.editor;\r\n        this.$scroller = this.$refs.scroller;\r\n        this.$content = this.$refs.content;\r\n        this.$textarea = this.$refs.textarea;\r\n        this.$vScroller = this.$refs.vScroller;\r\n        this.$hScroller = this.$refs.hScroller;\r\n        this.charObj = Util.getCharWidth(this.$content);\r\n        this.maxVisibleLines = Math.ceil(this.$scroller.clientHeight / this.charObj.charHight) + 1;\r\n        this.render();\r\n        this.focus();\r\n    },\r\n    methods: {\r\n        // 初始化数据\r\n        initData() {\r\n            this.lineId = Number.MIN_SAFE_INTEGER;\r\n            context.htmls.push({\r\n                lineId: this.lineId++,\r\n                text: '',\r\n                html: '',\r\n                width: 0,\r\n                tokens: [],\r\n                folds: [],\r\n                states: []\r\n            });\r\n            context.lineIdMap.set(context.htmls[0].lineId, context.htmls[0]);\r\n            this.maxWidthObj.lineId = context.htmls[0].lineId;\r\n            this.tokenizer = new Tokenizer(this, context);\r\n            this.lint = new Lint(this, context);\r\n            this.folder = new Fold(this, context);\r\n            this.history = new History(this, context);\r\n        },\r\n        // 初始化文档事件\r\n        initEvent() {\r\n            $(document).on('mousemove', (e) => {\r\n                this.onScrollerMmove(e);\r\n            });\r\n            $(document).on('mouseup', (e) => {\r\n                this.onScrollerMup(e);\r\n            });\r\n        },\r\n        // 显示光标\r\n        showCursor() {\r\n            if (this.cursorPos.show) {\r\n                return;\r\n            }\r\n            this.cursorPos.show = true;\r\n            this.cursorPos.visible = true;\r\n            let _timer = () => {\r\n                clearTimeout(this.curserTimer);\r\n                this.curserTimer = setTimeout(() => {\r\n                    this.cursorPos.visible = !this.cursorPos.visible;\r\n                    _timer();\r\n                }, 500);\r\n            }\r\n            _timer();\r\n        },\r\n        // 隐藏光标\r\n        hideCursor() {\r\n            clearTimeout(this.curserTimer);\r\n            this.cursorPos.show = false;\r\n        },\r\n        // 聚焦\r\n        focus() {\r\n            this.$textarea.focus();\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    this.$textarea.focus();\r\n                }, 100);\r\n            }, 100);\r\n        },\r\n        // 渲染\r\n        render() {\r\n            this.renderLine();\r\n            this.$nextTick(() => {\r\n                this.scrollerArea = {\r\n                    height: this.$scroller.clientHeight,\r\n                    width: this.$scroller.clientWidth,\r\n                }\r\n            });\r\n        },\r\n        // 渲染代码\r\n        renderLine(lineId) {\r\n            let that = this;\r\n            // 只更新一行\r\n            if (lineId) {\r\n                if (context.renderedIdMap.has(lineId)) {\r\n                    let item = context.lineIdMap.get(lineId);\r\n                    let obj = context.renderedIdMap.get(lineId);\r\n                    Object.assign(obj, _getObj(item, obj.num));\r\n                }\r\n                return;\r\n            }\r\n            context.renderedIdMap.clear();\r\n            this.renderHtmls = [];\r\n            for (let i = 0, startLine = this.startLine; i < this.maxVisibleLines && startLine <= context.htmls.length; i++) {\r\n                let lineObj = context.htmls[startLine - 1];\r\n                let lineId = lineObj.lineId;\r\n                let obj = _getObj(lineObj, startLine);\r\n                this.renderHtmls.push(obj);\r\n                context.renderedIdMap.set(lineId, obj);\r\n                if (context.foldMap.has(startLine)) {\r\n                    let fold = context.foldMap.get(startLine);\r\n                    startLine = fold.end.line;\r\n                } else {\r\n                    startLine++;\r\n                }\r\n            }\r\n\r\n            function _getObj(item, line) {\r\n                let selected = false;\r\n                let spaceNum = /^\\s+/.exec(item.text);\r\n                let tabNum = 0;\r\n                let fold = '';\r\n                if (spaceNum) {\r\n                    tabNum = /\\t+/.exec(spaceNum[0]);\r\n                    tabNum = tabNum && tabNum[0].length || 0;\r\n                    tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / that.tabSize);\r\n                }\r\n                if (that.selectedRange && line > that.selectedRange.start.line && line < that.selectedRange.end.line) {\r\n                    selected = true;\r\n                }\r\n                if (context.foldMap.has(line)) { //该行已经折叠\r\n                    fold = 'close';\r\n                } else if (that.folder.getRangeFold(line, true)) { //可折叠\r\n                    fold = 'open';\r\n                }\r\n                let html = item.html || Util.htmlTrans(item.text);\r\n                html = html.replace(/\\t/g, that.space);\r\n                return {\r\n                    html: html,\r\n                    num: line,\r\n                    tabNum: tabNum,\r\n                    selected: selected,\r\n                    fold: fold,\r\n                }\r\n            }\r\n        },\r\n        // 渲染选中背景\r\n        renderSelectedBg(forceCursorView) {\r\n            if (!this.selectedRange) {\r\n                return;\r\n            }\r\n            let start = this.selectedRange.start;\r\n            let end = this.selectedRange.end;\r\n            let same = Util.comparePos(start, end);\r\n            this.setCursorPos(end.line, end.column, forceCursorView);\r\n            if (same > 0) {\r\n                let tmp = start;\r\n                start = end;\r\n                end = tmp;\r\n            } else if (!same) {\r\n                this.clearRnage();\r\n                return;\r\n            }\r\n            let text = context.htmls[start.line - 1].text;\r\n            start.left = this.getStrWidth(text, 0, start.column);\r\n            if (start.line == end.line) {\r\n                start.width = this.getStrWidth(text, start.column, end.column);\r\n            } else {\r\n                start.width = this.getStrWidth(text, start.column);\r\n                end.left = 0;\r\n                text = context.htmls[end.line - 1].text;\r\n                end.width = this.getStrWidth(text, 0, end.column);\r\n                this.renderHtmls.map((item) => {\r\n                    item.selected = item.num > start.line && item.num < end.line;\r\n                });\r\n            }\r\n            this.setSelectedRange(start, end);\r\n        },\r\n        // 清除选中背景\r\n        clearRnage() {\r\n            this.selectedRange = null;\r\n            this.renderHtmls.map((item) => {\r\n                item.selected = false;\r\n            });\r\n        },\r\n        // 插入内容\r\n        insertContent(text, isDoCommand) {\r\n            // 如果有选中区域，需要先删除选中区域\r\n            if (this.selectedRange) {\r\n                this.deleteContent();\r\n            }\r\n            let nowLineText = context.htmls[this.cursorPos.line - 1].text;\r\n            let nowColume = this.cursorPos.column;\r\n            let nowLine = this.cursorPos.line;\r\n            let newLine = nowLine;\r\n            let newColumn = nowColume;\r\n            this.tokenizer.onInsertContentBefore(nowLine);\r\n            this.lint.onInsertContentBefore(nowLine);\r\n            this.folder.onInsertContentBefore(nowLine);\r\n            text = text.split(/\\r\\n|\\n/);\r\n            text = text.map((item) => {\r\n                item = {\r\n                    lineId: this.lineId++,\r\n                    text: item,\r\n                    html: '',\r\n                    width: 0,\r\n                    tokens: null,\r\n                    folds: null,\r\n                    states: null\r\n                };\r\n                context.lineIdMap.set(item.lineId, item);\r\n                return item;\r\n            });\r\n            if (text.length > 1) { // 插入多行\r\n                newColumn = text[text.length - 1].text.length;\r\n                text[0].text = nowLineText.slice(0, nowColume) + text[0].text;\r\n                text[text.length - 1].text = text[text.length - 1].text + nowLineText.slice(nowColume);\r\n                context.htmls = context.htmls.slice(0, this.cursorPos.line - 1).concat(text).concat(context.htmls.slice(this.cursorPos.line));\r\n            } else { // 插入一行\r\n                newColumn += text[0].text.length;\r\n                text[0].text = nowLineText.slice(0, nowColume) + text[0].text + nowLineText.slice(this.cursorPos.column);\r\n                context.htmls.splice(this.cursorPos.line - 1, 1, text[0]);\r\n            }\r\n            newLine += text.length - 1;\r\n            this.maxLine = context.htmls.length;\r\n            this.render();\r\n            this.tokenizer.onInsertContentAfter(newLine);\r\n            this.lint.onInsertContentAfter(newLine);\r\n            this.folder.onInsertContentAfter(newLine);\r\n            this.setLineWidth(text);\r\n            if (context.foldMap.has(nowLine) && text.length > 1) {\r\n                this.unFold(nowLine);\r\n            }\r\n            this.setCursorPos(newLine, newColumn);\r\n            let historyObj = {\r\n                type: Util.command.DELETE,\r\n                start: {\r\n                    line: nowLine,\r\n                    column: nowColume\r\n                },\r\n                end: {\r\n                    line: newLine,\r\n                    column: newColumn\r\n                }\r\n            }\r\n            if (!isDoCommand) { // 新增历史记录\r\n                this.history.pushHistory(historyObj);\r\n            } else { // 撤销或重做操作后，更新历史记录\r\n                this.history.updateHistory(context.history.index, historyObj);\r\n            }\r\n        },\r\n        // 删除内容\r\n        deleteContent(keyCode, isDoCommand) {\r\n            let start = null;\r\n            let startObj = context.htmls[this.cursorPos.line - 1];\r\n            let text = startObj.text;\r\n            let originPos = { line: this.cursorPos.line, column: this.cursorPos.column };\r\n            let deleteText = '';\r\n            let rangeUuid = [];\r\n            let newLine = this.cursorPos.line;\r\n            let newColumn = this.cursorPos.column;\r\n            this.tokenizer.onDeleteContentBefore(this.cursorPos.line);\r\n            this.lint.onDeleteContentBefore(this.cursorPos.line);\r\n            this.folder.onDeleteContentBefore(this.cursorPos.line);\r\n            if (this.selectedRange) { // 删除选中区域\r\n                let end = this.selectedRange.end;\r\n                let endObj = context.htmls[end.line - 1];\r\n                start = this.selectedRange.start;\r\n                startObj = context.htmls[start.line - 1];\r\n                originPos = { line: end.line, column: end.column };\r\n                text = startObj.text;\r\n                deleteText = this.getRangeText(this.selectedRange.start, this.selectedRange.end);\r\n                if (start.line == 1 && end.line == this.maxLine) { //全选删除\r\n                    rangeUuid = [this.maxWidthObj.lineId];\r\n                    context.lineIdMap.clear();\r\n                } else {\r\n                    rangeUuid = context.htmls.slice(start.line - 1, end.line).map((item) => {\r\n                        context.lineIdMap.delete(item.lineId);\r\n                        return item.lineId;\r\n                    });\r\n                }\r\n                context.lineIdMap.set(startObj.lineId, startObj);\r\n                if (start.line == end.line) { // 单行选中\r\n                    text = text.slice(0, start.column) + text.slice(end.column);\r\n                    startObj.text = text;\r\n                } else { // 多行选中\r\n                    text = text.slice(0, start.column);\r\n                    startObj.text = text;\r\n                    text = endObj.text;\r\n                    text = text.slice(end.column);\r\n                    startObj.text += text;\r\n                    context.htmls.splice(start.line, end.line - start.line);\r\n                }\r\n                newLine = start.line;\r\n                newColumn = start.column;\r\n            } else if (Util.keyCode.DELETE == keyCode) { // 向后删除一个字符\r\n                if (this.cursorPos.column == text.length) { // 光标处于行尾\r\n                    if (this.cursorPos.line < context.htmls.length) {\r\n                        context.lineIdMap.delete(context.htmls[this.cursorPos.line].lineId);\r\n                        text = startObj.text + context.htmls[this.cursorPos.line].text;\r\n                        context.htmls.splice(this.cursorPos.line, 1);\r\n                        deleteText = '\\n';\r\n                    }\r\n                } else {\r\n                    deleteText = text[this.cursorPos.column];\r\n                    text = text.slice(0, this.cursorPos.column) + text.slice(this.cursorPos.column + 1);\r\n                }\r\n                startObj.text = text;\r\n            } else { // 向前删除一个字符\r\n                if (this.cursorPos.column == 0) { // 光标处于行首\r\n                    if (this.cursorPos.line > 1) {\r\n                        let column = context.htmls[this.cursorPos.line - 2].text.length;\r\n                        context.lineIdMap.delete(context.htmls[this.cursorPos.line - 2].lineId);\r\n                        text = context.htmls[this.cursorPos.line - 2].text + text;\r\n                        context.htmls.splice(this.cursorPos.line - 2, 1);\r\n                        deleteText = '\\n';\r\n                        newLine = this.cursorPos.line - 1;\r\n                        newColumn = column;\r\n                    }\r\n                } else {\r\n                    deleteText = text[this.cursorPos.column - 1];\r\n                    text = text.slice(0, this.cursorPos.column - 1) + text.slice(this.cursorPos.column);\r\n                    newColumn = this.cursorPos.column - 1;\r\n                }\r\n                startObj.text = text;\r\n            }\r\n            startObj.width = this.getStrWidth(startObj.text);\r\n            startObj.tokens = null;\r\n            startObj.folds = null;\r\n            startObj.states = null;\r\n            this.maxLine = context.htmls.length;\r\n            this.render(); //必须放在tokenizer前面，renderline(lineId)的时候.obj.num将失效\r\n            this.clearRnage();\r\n            this.tokenizer.onDeleteContentAfter(newLine);\r\n            this.lint.onDeleteContentAfter(newLine);\r\n            this.folder.onDeleteContentAfter(newLine);\r\n            if (newLine != this.cursorPos.line || this.cursorPos.column != newColumn) {\r\n                this.setCursorPos(newLine, newColumn);\r\n            }\r\n            // 更新最大文本宽度\r\n            if (startObj.width >= this.maxWidthObj.width) {\r\n                this.maxWidthObj = {\r\n                    lineId: startObj.lineId,\r\n                    text: startObj.text,\r\n                    width: startObj.width\r\n                }\r\n            } else if (rangeUuid.indexOf(this.maxWidthObj.lineId) > -1) {\r\n                this.setMaxWidth();\r\n            }\r\n            let historyObj = {\r\n                type: Util.command.INSERT,\r\n                keyCode: keyCode,\r\n                cursorPos: Util.deepAssign({}, this.cursorPos),\r\n                preCursorPos: originPos,\r\n                text: deleteText\r\n            };\r\n            if (!isDoCommand) { // 新增历史记录\r\n                deleteText && this.history.pushHistory(historyObj);\r\n            } else { // 撤销或重做操作后，更新历史记录\r\n                this.history.updateHistory(context.history.index, historyObj);\r\n            }\r\n        },\r\n        // 折叠行\r\n        foldLine(line) {\r\n            let resultFold = this.folder.foldLine(line);\r\n            this.focus();\r\n            if (resultFold) {\r\n                if (this.cursorPos.line > line && this.cursorPos.line < resultFold.end.line) {\r\n                    let lineObj = context.htmls[line - 1];\r\n                    this.setCursorPos(line, lineObj.text.length);\r\n                }\r\n                this.setScrollerHeight();\r\n                this.setCursorRealPos();\r\n                this.render();\r\n            }\r\n        },\r\n        // 展开折叠行\r\n        unFold(line) {\r\n            this.focus();\r\n            if (this.folder.unFold(line)) {\r\n                this.setScrollerHeight();\r\n                this.setCursorRealPos();\r\n                this.render();\r\n            }\r\n        },\r\n        // 设置光标位置\r\n        setCursorPos(line, column, forceCursorView) {\r\n            this.cursorPos.line = line;\r\n            this.cursorPos.column = column;\r\n            this.cursorPos.visible = true;\r\n            this.forceCursorView = forceCursorView === undefined ? true : forceCursorView;\r\n            cancelAnimationFrame(this.setCursorPos.timer);\r\n            this.setCursorPos.timer = requestAnimationFrame(() => {\r\n                this.$nextTick(() => {\r\n                    this.setCursorRealPos();\r\n                });\r\n            });\r\n        },\r\n        // 设置真实光标位置\r\n        setCursorRealPos() {\r\n            let that = this;\r\n            let left = 0;\r\n            let lineObj = context.htmls[that.cursorPos.line - 1];\r\n            if ($('#line_' + this.cursorPos.line).length && lineObj.tokens && lineObj.tokens.length) {\r\n                left = _getExactLeft();\r\n            } else {\r\n                left = this.getStrWidthByLine(this.cursorPos.line, 0, this.cursorPos.column);\r\n            }\r\n            let top = (this.folder.getRelativeLine(this.cursorPos.line) - this.folder.getRelativeLine(this.startLine)) * this.charObj.charHight;\r\n            let relTop = this.folder.getRelativeLine(this.cursorPos.line) * this.charObj.charHight;\r\n            // 强制滚动使光标处于可见区域\r\n            if (this.forceCursorView) {\r\n                if (relTop > this.scrollTop + this.scrollerArea.height - this.charObj.charHight) {\r\n                    this.$vScroller.scrollTop = relTop + this.charObj.charHight - this.scrollerArea.height;\r\n                } else if (top < 0 || top == 0 && this.top < 0) {\r\n                    this.$vScroller.scrollTop = (this.cursorPos.line - 1) * this.charObj.charHight;\r\n                }\r\n                if (left > this.scrollerArea.width + this.scrollLeft - this.charObj.fullAngleCharWidth) {\r\n                    this.$hScroller.scrollLeft = left + this.charObj.fullAngleCharWidth - this.scrollerArea.width;\r\n                } else if (left < this.scrollLeft) {\r\n                    this.$hScroller.scrollLeft = left - 1;\r\n                }\r\n            }\r\n            this.cursorRealPos = {\r\n                top: top + 'px',\r\n                left: left + 'px'\r\n            };\r\n\r\n            function _getExactLeft() {\r\n                let lineObj = context.htmls[that.cursorPos.line - 1];\r\n                let token = lineObj.tokens[0];\r\n                for (let i = 1; i < lineObj.tokens.length; i++) {\r\n                    if (lineObj.tokens[i].column < that.cursorPos.column) {\r\n                        token = lineObj.tokens[i];\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                let $token = $('#line_' + that.cursorPos.line).children('.my-editor-code').children('span[data-column=\"' + token.column + '\"]');\r\n                let text = token.value.slice(0, that.cursorPos.column - token.column);\r\n                return $token[0].offsetLeft + that.getStrWidth(text);\r\n            }\r\n        },\r\n        // 获取最大宽度\r\n        setMaxWidth() {\r\n            let maxWidthObj = { line: context.htmls[0].lineId, width: 0 };\r\n            context.htmls.map((item) => {\r\n                if (item.width > maxWidthObj.width) {\r\n                    maxWidthObj = {\r\n                        lineId: item.lineId,\r\n                        text: item.text,\r\n                        width: item.width\r\n                    }\r\n                }\r\n            });\r\n            this.maxWidthObj = maxWidthObj;\r\n        },\r\n        /**\r\n         * 设置每行文本的宽度\r\n         * @param {Array} texts\r\n         */\r\n        setLineWidth(texts) {\r\n            let index = 0;\r\n            let that = this;\r\n            let startTime = Date.now();\r\n            clearTimeout(this.setLineWidth.timer);\r\n            _setLineWidth();\r\n\r\n            function _setLineWidth() {\r\n                while (index < texts.length) {\r\n                    let lineObj = texts[index];\r\n                    if (context.lineIdMap.has(lineObj.lineId)) {\r\n                        let width = that.getStrWidth(lineObj.text);\r\n                        lineObj.width = width;\r\n                        if (width > that.maxWidthObj.width) {\r\n                            that.maxWidthObj = {\r\n                                lineId: lineObj.lineId,\r\n                                text: lineObj.text,\r\n                                width: width\r\n                            }\r\n                        }\r\n                    }\r\n                    index++;\r\n                    if (Date.now() - startTime > 20) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (index < texts.length) {\r\n                    that.setLineWidth.timer = setTimeout(() => {\r\n                        _setLineWidth();\r\n                    }, 20);\r\n                }\r\n            }\r\n        },\r\n        setScrollerHeight() {\r\n            let maxLine = context.htmls.length;\r\n            maxLine = this.folder.getRelativeLine(maxLine);\r\n            this.scrollerHeight = maxLine * this.charObj.charHight + 'px';\r\n        },\r\n        /**\r\n         * 设置选中区域\r\n         * @param {Object} start\r\n         * @param {Object} end\r\n         */\r\n        setSelectedRange(start, end) {\r\n            this.selectedRange = {\r\n                start: start,\r\n                end: end\r\n            }\r\n        },\r\n        setErrorMap(errorMap) {\r\n            this.errorMap = errorMap;\r\n        },\r\n        // 获取文本在浏览器中的宽度\r\n        getStrWidth(str, start, end) {\r\n            return Util.getStrWidth(str, this.charObj.charWidth, this.charObj.fullAngleCharWidth, this.tabSize, start, end);\r\n        },\r\n        // 获取行对应的文本在浏览器中的宽度\r\n        getStrWidthByLine(line, start, end) {\r\n            return this.getStrWidth(context.htmls[line - 1].text, start, end);\r\n        },\r\n        // 根据文本宽度计算当前列号\r\n        getColumnByWidth(text, offsetX) {\r\n            let left = 0, right = text.length;\r\n            let mid, width, w1, w2;\r\n            while (left < right) {\r\n                mid = Math.floor((left + right) / 2);\r\n                width = this.getStrWidth(text, 0, mid);\r\n                w1 = text[mid - 1] && this.getStrWidth(text[mid - 1]) / 2;\r\n                w2 = text[mid] && this.getStrWidth(text[mid]) / 2 || w1;\r\n                if (width >= offsetX && width - offsetX < w1 || offsetX >= width && offsetX - width < w2) {\r\n                    left = mid;\r\n                    break;\r\n                } else if (width > offsetX) {\r\n                    right = mid;\r\n                } else {\r\n                    left = mid + 1;\r\n                }\r\n            }\r\n            return left;\r\n        },\r\n        // 根据鼠标事件对象获取行列坐标\r\n        getPosByEvent(e) {\r\n            let that = this;\r\n            let $target = $(e.target);\r\n            if ($target.attr('data-line') || $target.attr('data-column')) {\r\n                return _getExactPos(e);\r\n            }\r\n            let $scroller = $(this.$scroller);\r\n            let offset = $scroller.offset();\r\n            let column = 0;\r\n            let clientX = e.clientX < 0 ? 0 : e.clientX;\r\n            let clientY = e.clientY < 0 ? 0 : e.clientY;\r\n            let line = Math.ceil((clientY + this.scrollTop - offset.top) / this.charObj.charHight) || 1;\r\n            line = this.folder.getRealLine(line);\r\n            if (line > context.htmls.length) {\r\n                line = context.htmls.length;\r\n                column = context.htmls[line - 1].text.length;\r\n            } else {\r\n                column = this.getColumnByWidth(context.htmls[line - 1].text, clientX + this.scrollLeft - offset.left);\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column\r\n            }\r\n\r\n            function _getExactPos(e) {\r\n                let $target = $(e.target);\r\n                let line = $target.attr('data-line') - 0;\r\n                let column = $target.attr('data-column');\r\n                if (!line) {\r\n                    line = $target.parent().attr('data-line') - 0;\r\n                }\r\n                let lineObj = context.htmls[line - 1];\r\n                if (!column) {\r\n                    column = lineObj.text.length;\r\n                } else {\r\n                    column = column - 0;\r\n                    for (let i = 0; i < lineObj.tokens.length; i++) {\r\n                        if (lineObj.tokens[i].column == column) {\r\n                            column += that.getColumnByWidth(lineObj.tokens[i].value, e.offsetX);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column\r\n                }\r\n            }\r\n        },\r\n        // 获取选中范围内的文本\r\n        getRangeText(start, end) {\r\n            var text = context.htmls[start.line - 1].text;\r\n            if (start.line != end.line) {\r\n                let arr = [];\r\n                text = text.slice(start.column);\r\n                arr = context.htmls.slice(start.line, end.line - 1);\r\n                arr = arr.map((item) => {\r\n                    return item.text;\r\n                });\r\n                text += arr.length ? '\\n' + arr.join('\\n') : '';\r\n                text += '\\n' + context.htmls[end.line - 1].text.slice(0, end.column);\r\n            } else {\r\n                text = text.slice(start.column, end.column);\r\n            }\r\n            return text;\r\n        },\r\n        // 右键菜单事件\r\n        onContextmenu(e) {\r\n            let panelWidth = 0;\r\n            let panelHeight = 0;\r\n            let $editor = $(this.$editor);\r\n            let offset = $editor.offset();\r\n            this.menuVisble = true;\r\n            this.$nextTick(() => {\r\n                panelWidth = this.$refs.menu.$el.clientWidth;\r\n                panelHeight = this.$refs.menu.$el.clientHeight;\r\n                if (panelHeight + e.clientY > offset.top + this.scrollerArea.height) {\r\n                    this.menuStyle.top = e.clientY - offset.top - panelHeight + 'px';\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + 'px';\r\n                }\r\n                if (panelWidth + e.clientX > offset.left + $editor[0].clientWidth) {\r\n                    this.menuStyle.left = e.clientX - offset.left - panelWidth + 'px';\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + 'px';\r\n                }\r\n            });\r\n            // this.menuList[0].map((menu) => {\r\n            //     if (['cut', 'copy'].indexOf(menu.op) > -1) {\r\n            //         menu.disabled = !this.selectedRange;\r\n            //     }\r\n            // });\r\n        },\r\n        // 选中菜单\r\n        onClickMenu(menu) {\r\n            switch (menu.op) {\r\n                case 'cut':\r\n                case 'copy':\r\n                    if (this.selectedRange) {\r\n                        let text = this.getRangeText(this.selectedRange.start, this.selectedRange.end);\r\n                        if (menu.op == 'cut') {\r\n                            this.deleteContent();\r\n                        }\r\n                        Util.writeClipboard(text);\r\n                    } else {\r\n                        let text = context.htmls[this.cursorPos.line - 1].text;\r\n                        if (menu.op === 'cut') {\r\n                            text && this.setSelectedRange({ line: this.cursorPos.line, column: 0 }, { line: this.cursorPos.line, column: text.length });\r\n                            text && this.deleteContent();\r\n                        }\r\n                        Util.writeClipboard(text);\r\n                    }\r\n                    break;\r\n                case 'paste':\r\n                    if (this.selectedRange) {\r\n                        this.deleteContent();\r\n                    }\r\n                    this.$textarea.focus();\r\n                    Util.readClipboard().then((text) => {\r\n                        this.insertContent(text);\r\n                    });\r\n                    break;\r\n            }\r\n            this.menuVisble = false;\r\n            this.focus();\r\n        },\r\n        // 提示图标hover事件\r\n        onIconMouseOver(line, e) {\r\n            let $editor = $(this.$editor);\r\n            let offset = $editor.offset();\r\n            this.tipStyle = {\r\n                left: e.clientX - offset.left + 10 + 'px',\r\n                top: e.clientY - offset.top + 10 + 'px'\r\n            }\r\n            this.tipContent = this.errorMap[line];\r\n        },\r\n        onIconMouseLeave() {\r\n            this.tipContent = '';\r\n        },\r\n        // 折叠/展开\r\n        onToggleFold(line) {\r\n            if (context.foldMap.has(line)) {\r\n                this.unFold(line);\r\n                return;\r\n            } else {\r\n                this.foldLine(line);\r\n            }\r\n        },\r\n        // 点击编辑器\r\n        onClickEditor() {\r\n            this.$refs.statusBar.closeAllPanel();\r\n            this.menuVisble = false;\r\n        },\r\n        // 滚动区域鼠标按下事件\r\n        onScrollerMdown(e) {\r\n            this.focus();\r\n            if (e.which == 3) { //右键\r\n                return;\r\n            }\r\n            let pos = this.getPosByEvent(e);\r\n            this.setCursorPos(pos.line, pos.column);\r\n            this.mouseStartObj = {\r\n                time: Date.now(),\r\n                start: pos\r\n            }\r\n        },\r\n        // 鼠标移动事件\r\n        onScrollerMmove(e) {\r\n            let that = this;\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                var offset = $(this.$scroller).offset();\r\n                this.setSelectedRange(Object.assign({}, this.mouseStartObj.start), this.getPosByEvent(e));\r\n                this.renderSelectedBg();\r\n                cancelAnimationFrame(this.selectMoveTimer);\r\n                if (e.clientY > offset.top + this.scrollerArea.height) { //鼠标超出底部区域\r\n                    _move('down', e.clientY - offset.top - this.scrollerArea.height);\r\n                } else if (e.clientY < offset.top) { //鼠标超出顶部区域\r\n                    _move('up', offset.top - e.clientY);\r\n                } else if (e.clientX < offset.left) { //鼠标超出左边区域\r\n                    _move('left', offset.left - e.clientX);\r\n                } else if (e.clientX > offset.left + this.scrollerArea.width) { //鼠标超出右边区域\r\n                    _move('right', e.clientX - offset.left - this.scrollerArea.width);\r\n                }\r\n            }\r\n            function _move(autoDirect, speed) {\r\n                let originLine = that.cursorPos.line;\r\n                let originColumn = that.cursorPos.column;\r\n                let count = 0; // 累计滚动距离\r\n                _run(autoDirect, speed);\r\n\r\n                function _run(autoDirect, speed) {\r\n                    let line = originLine;\r\n                    let column = originColumn;\r\n                    switch (autoDirect) {\r\n                        case 'up':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine - line;\r\n                            break;\r\n                        case 'down':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine + line;\r\n                            break;\r\n                        case 'left':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn - column;\r\n                            break;\r\n                        case 'right':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn + column;\r\n                            break;\r\n                    }\r\n                    line = line < 1 ? 1 : (line > context.htmls.length ? context.htmls.length : line);\r\n                    column = column < 0 ? 0 : (column > context.htmls[originLine - 1].text.length ? context.htmls[originLine - 1].text.length : column);\r\n                    that.setCursorPos(line, column);\r\n                    that.setSelectedRange(that.mouseStartObj.start, { line: line, column: column });\r\n                    that.renderSelectedBg();\r\n                    that.selectMoveTimer = requestAnimationFrame(() => {\r\n                        _run(autoDirect, speed)\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        // 鼠标抬起事件\r\n        onScrollerMup(e) {\r\n            // 按下到抬起的间隔大于100ms，属于选中结束事件\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                let end = this.getPosByEvent(e);\r\n                this.setSelectedRange(this.mouseStartObj.start, end);\r\n                this.renderSelectedBg();\r\n                this.setCursorPos(end.line, end.column);\r\n            } else if (e.which != 3) {\r\n                this.clearRnage();\r\n            }\r\n            // 停止滚动选中\r\n            cancelAnimationFrame(this.selectMoveTimer);\r\n            this.mouseStartObj = null;\r\n        },\r\n        // 左右滚动事件\r\n        onHscroll(e) {\r\n            this.scrollLeft = e.target.scrollLeft;\r\n            this.$scroller.scrollLeft = this.scrollLeft;\r\n            this.forceCursorView = false;\r\n        },\r\n        // 上下滚动事件\r\n        onVscroll(e) {\r\n            let startLine = 1;\r\n            this.scrollTop = e.target.scrollTop;\r\n            startLine = Math.floor(this.scrollTop / this.charObj.charHight);\r\n            startLine++;\r\n            this.startLine = this.folder.getRealLine(startLine);\r\n            this.top = -this.scrollTop % this.charObj.charHight;\r\n            this.forceCursorView = false;\r\n            this.tokenizer.onScroll();\r\n            this.render();\r\n            this.setCursorRealPos();\r\n        },\r\n        // 滚动滚轮\r\n        onWheel(e) {\r\n            this.$vScroller.scrollTop = this.scrollTop + e.deltaY;\r\n            this.$hScroller.scrollLeft = this.scrollLeft + e.deltaX;\r\n        },\r\n        // 中文输入开始\r\n        onCompositionstart() {\r\n            clearTimeout(this.compositionendTimer);\r\n            this.compositionstart = true;\r\n        },\r\n        // 中文输入结束\r\n        onCompositionend() {\r\n            if (this.compositionstart) {\r\n                let text = this.$textarea.value || '';\r\n                if (text) {\r\n                    this.insertContent(text);\r\n                    this.$textarea.value = '';\r\n                }\r\n            }\r\n            //避免有些浏览器compositionend在input事件之前触发的bug\r\n            this.compositionendTimer = setTimeout(() => {\r\n                this.compositionstart = false;\r\n            }, 100);\r\n        },\r\n        // 输入事件\r\n        onInput() {\r\n            if (!this.compositionstart) {\r\n                let text = this.$textarea.value || '';\r\n                if (text) {\r\n                    this.insertContent(text);\r\n                    this.$textarea.value = '';\r\n                }\r\n            }\r\n        },\r\n        // 复制事件\r\n        onCopy(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            if (this.selectedRange) {\r\n                let text = this.getRangeText(this.selectedRange.start, this.selectedRange.end);\r\n                clipboardData.setData(mime, text);\r\n            } else {\r\n                clipboardData.setData(mime, context.htmls[this.cursorPos.line - 1].text);\r\n            }\r\n        },\r\n        onCut(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            if (this.selectedRange) {\r\n                let text = this.getRangeText(this.selectedRange.start, this.selectedRange.end);\r\n                clipboardData.setData(mime, text);\r\n                this.deleteContent();\r\n            } else {\r\n                let text = context.htmls[this.cursorPos.line - 1].text;\r\n                text && clipboardData.setData(mime, context.htmls[this.cursorPos.line - 1].text);\r\n                text && this.setSelectedRange({ line: this.cursorPos.line, column: 0 }, { line: this.cursorPos.line, column: text.length });\r\n                this.deleteContent();\r\n            }\r\n        },\r\n        // 粘贴事件\r\n        onPaste(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            let copyText = '';\r\n            copyText = clipboardData.getData(mime);\r\n            this.insertContent(copyText);\r\n        },\r\n        // 获得焦点\r\n        onFocus() {\r\n            this.showCursor();\r\n        },\r\n        // 失去焦点\r\n        onBlur() {\r\n            this.hideCursor();\r\n            this.menuVisble = false;\r\n        },\r\n        // 键盘按下事件\r\n        onKeyDown(e) {\r\n            if (e.ctrlKey) {\r\n                switch (e.keyCode) {\r\n                    case 65://ctrl+a,全选\r\n                        e.preventDefault();\r\n                        this.setSelectedRange({ line: 1, column: 0 }, { line: context.htmls.length, column: context.htmls.peek().text.length })\r\n                        this.renderSelectedBg(false);\r\n                        break;\r\n                    case 90: //ctrl+z，撤销\r\n                    case 122:\r\n                        e.preventDefault();\r\n                        this.history.undo();\r\n                        break;\r\n                    case 89: //ctrl+y，重做\r\n                    case 121:\r\n                        e.preventDefault();\r\n                        this.history.redo();\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (e.keyCode) {\r\n                    case 9: //tab键\r\n                        e.preventDefault();\r\n                        this.insertContent('\\t');\r\n                        break;\r\n                    case 37: //left arrow\r\n                        if (this.cursorPos.column > 0) {\r\n                            this.setCursorPos(this.cursorPos.line, this.cursorPos.column - 1);\r\n                        } else if (this.cursorPos.line > 1) {\r\n                            this.setCursorPos(this.cursorPos.line - 1, context.htmls[this.cursorPos.line - 2].text.length);\r\n                        }\r\n                        this.clearRnage();\r\n                        break;\r\n                    case 38: //up arrow\r\n                        if (this.cursorPos.line > 1) {\r\n                            let text = context.htmls[this.cursorPos.line - 1].text;\r\n                            let width = this.getStrWidth(text, 0, this.cursorPos.column);\r\n                            text = context.htmls[this.cursorPos.line - 2].text;\r\n                            let column = this.getColumnByWidth(text, width);\r\n                            this.setCursorPos(this.cursorPos.line - 1, column);\r\n                        }\r\n                        this.clearRnage();\r\n                        break;\r\n                    case 39: //right arrow\r\n                        let text = context.htmls[this.cursorPos.line - 1].text;\r\n                        if (this.cursorPos.column < text.length) {\r\n                            this.setCursorPos(this.cursorPos.line, this.cursorPos.column + 1);\r\n                        } else if (this.cursorPos.line < context.htmls.length) {\r\n                            this.setCursorPos(this.cursorPos.line + 1, 0);\r\n                        }\r\n                        this.clearRnage();\r\n                        break;\r\n                    case 40: //down arrow\r\n                        if (this.cursorPos.line < context.htmls.length) {\r\n                            let text = context.htmls[this.cursorPos.line - 1].text;\r\n                            let width = this.getStrWidth(text, 0, this.cursorPos.column);\r\n                            text = context.htmls[this.cursorPos.line].text;\r\n                            let column = this.getColumnByWidth(text, width);\r\n                            this.setCursorPos(this.cursorPos.line + 1, column);\r\n                        }\r\n                        this.clearRnage();\r\n                        break;\r\n                    case Util.keyCode.DELETE: //delete\r\n                        this.deleteContent(Util.keyCode.DELETE);\r\n                        break;\r\n                    case Util.keyCode.BACKSPACE: //backspace\r\n                        this.deleteContent(Util.keyCode.BACKSPACE);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=55393754&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './components/Home.vue';\r\n\r\nVue.use(Router)\r\n\r\nvar router = new Router({\r\n    routes: [{\r\n            path: '/home',\r\n            name: 'Home',\r\n            component: Home,\r\n            meta: {\r\n                title: 'my-editor'\r\n            }\r\n        },\r\n        {\r\n            path: '*',\r\n            redirect: '/home'\r\n        }\r\n    ]\r\n})\r\n\r\nexport default router;","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport './scss/editor.scss'\r\nimport './scss/highlight/js.scss';\r\nimport './scss/highlight/html.scss';\r\nimport './scss/highlight/css.scss';\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n}).$mount('#app')"],"sourceRoot":""}