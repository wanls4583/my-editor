{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?adbe","webpack:///src/App.vue","webpack:///./src/App.vue?4c4f","webpack:///./src/App.vue","webpack:///./src/components/Home.vue?779a","webpack:///./src/module/tokenizer/rules/javascript.js","webpack:///./src/module/tokenizer/rules/css.js","webpack:///./src/module/tokenizer/rules/html.js","webpack:///./src/common/Util.js","webpack:///./src/module/tokenizer/core/index.js","webpack:///./src/module/lint/language/javascript.js","webpack:///./src/module/lint/language/css.js","webpack:///./src/module/lint/language/html.js","webpack:///./src/module/lint/core/index.js","webpack:///./src/module/fold/index.js","webpack:///./src/module/search/index.js","webpack:///./src/module/select/index.js","webpack:///./src/module/cursor/index.js","webpack:///./src/module/history/index.js","webpack:///./src/module/context/index.js","webpack:///./src/module/shortcut/index.js","webpack:///./src/components/StatusBar.vue?41fe","webpack:///./src/components/Menu.vue?14b5","webpack:///src/components/Menu.vue","webpack:///./src/components/Menu.vue?b35d","webpack:///./src/components/Menu.vue","webpack:///src/components/StatusBar.vue","webpack:///./src/components/StatusBar.vue?3f37","webpack:///./src/components/StatusBar.vue","webpack:///./src/components/Search.vue?24d9","webpack:///src/components/Search.vue","webpack:///./src/components/Search.vue?d79a","webpack:///./src/components/Search.vue","webpack:///./src/components/Tip.vue?9e11","webpack:///src/components/Tip.vue","webpack:///./src/components/Tip.vue?e042","webpack:///./src/components/Tip.vue","webpack:///src/components/Home.vue","webpack:///./src/components/Home.vue?6ab4","webpack:///./src/components/Home.vue","webpack:///./src/router.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","component","ref","staticClass","style","_statusHeight","on","$event","preventDefault","onContextmenu","arguments","onClickEditor","onWheel","top","_numTop","staticStyle","_v","_s","maxLine","_l","line","num","class","_activeLine","height","_lineHeight","errorMap","onIconMouseLeave","onIconMouseOver","fold","onToggleFold","_e","_leftShadow","onScrollerMdown","onScrollerMup","_top","minWidth","_contentMinWidth","onSelectend","active","selected","isFsearch","domProps","html","range","left","width","tab","_tabLineLeft","visibility","_cursorVisible","stopPropagation","onHscroll","_hScrollWidth","onVscroll","scrollerHeight","_textAreaPos","onBlur","onCompositionend","onCompositionstart","onCopy","onCut","onFocus","onInput","onKeyDown","onPaste","_nowColumn","statusHeight","language","_nowLine","tabSize","directives","rawName","expression","menuList","menuStyle","onClickMenu","tipContent","tipStyle","searchCount","searchNow","onCloseSearch","onSearchNext","onSearchPrev","replace","replaceAll","onSearch","variable","strValid","e","side","tplStrChild","tplStrReg","start","end","token","plainToken","foldName","valid","childRule","rules","level","regexp","regex","option","text","index","RegExp","foldType","comment","braces","styleRules","attrRules","tagFoldName","tagFoldType","scriptStart","tagToken","scriptEnd","styleStart","styleEnd","exec","jsRules","cssRules","Util","clipboardData","Promise","resolve","getData","navigator","clipboard","readText","setData","writeText","String","Number","val","tmp","arr","sort","arg1","arg2","wrap","str1","str2","id1","getUUID","id2","$tempDom","$","append","dom","charWidth","scrollWidth","charHight","clientHeight","fontSize","getComputedStyle","currentStyle","fullAngleCharWidth","remove","str","charW","fullCharW","substr","substring","match","fullAngleReg","tabNum","getStrExactWidth","count","id","_splitStr","clientWidth","Math","floor","column","htmlTrans","join","space","cont","targetObj","originObj","excludeKeys","_assign","Map","assigned","indexOf","nodeName","nodeType","has","Array","set","len","random","toString","funStr","blob","Blob","url","URL","createObjectURL","worker","Worker","target","context","properties","map","defineProperties","peek","empty","insert","item","right","mid","keyCode","DELETE","BACKSPACE","command","INSERT","MOVEUP","MOVEDOWN","COPY_UP","COPY_DOWN","DELETE_UP","DELETE_DOWN","REPLACE","constData","PAIR_START","PAIR_START_END","PAIR_END","FOLD_OPEN","FOLD_CLOSE","DEFAULT","editor","currentLine","languageMap","initProperties","initLanguage","clearTimeout","tokenizeLines","timer","initRules","htmlRules","obj","ruleIdMap","regexMap","ruleId","deepAssign","setRuleId","rule","startBy","endBy","_item","states","statesKey","sources","sourceMap","regexs","resultStates","getEndRegex","reverse","getStartRegex","source","nowLine","onInsertContentBefore","$nextTick","tokenizeVisibleLins","tokenizeVisibleLinsId","startLine","maxVisibleLines","endLine","processedLines","processedTime","Date","now","lineObj","htmls","tokens","tokenizeLine","folds","type","split","renderLine","lineId","setTimeout","lastIndex","preEnd","newStates","getRegex","resultObj","splitLongToken","groups","undefined","getTokenType","getFold","getToken","startCol","pop","expIndex","getChildExpIndex","getFoldName","getFoldType","_checkFold","childExpIndex","captures","hasChildExp","filter","preRuleId","preRule","getCombRegex","_isArray","keywords","assignOperator","binaryOperator","unitOperator","brackets","regs","number","identifier","string1","string2","string3","other","regflagsMap","maxErrors","TokenType","label","_isTokenType","ErrorType","Error","param","error","Lexer","init","Parser","lexer","cacheList","backs","parseList","preToken","errors","NUMBER","BOOLEAN","STRING","IDENTIFIER","KEYWORD","OPERATOR","BRACKET","PUNCTUATOR","REGEXP","OTHER","UNEXPECTED","EXPECTED","MISS","UNMATCH","expectedIdentifier","expectedSemicolon","expected","unexpected","unmatch","lines","input","assignOperatorMap","unitOperatorMap","binaryOperatorMap","keywordsMap","bracketsMap","reset","texts","skip","skipLine","hasNext","isVariable","isValue","isScalar","isDotAble","isPostOp","isPreOp","isAssignOperator","isUnitOperator","isBinaryOperator","isKeyWord","isBracket","isTokenType","craeteToken","scanSpace","scanComment","ch1","ch2","startToken","scanString","that","_end","_parseTmpStr","reg","parser","parseExprStmt","peekMatch","scanNunmber","scanIdentifier","scanBracket","ch","scanOperator","ch3","ch4","scanOther","next","_scanOp","_token","assign","recovery","cache","hasCache","cacheIndex","pass","pre2Token","puted","nextMatch","lookahead","putBack","unshift","skipSemicolon","Infinity","parse","startTime","parseStmt","parseTimer","skipCheckSemicolon","parseDeclareStmt","parseObjectStmt","parseBlockStmt","parseImportStmt","parseExportStmt","parseIfStmt","parseSwitchStmt","parseWithStmt","parseWhileStmt","parseDoStmt","parseTryStmt","parseForStmt","parseClassStmt","parseControlStmt","parseReturnStmt","parseThrowStmt","parseFunctionStmt","ends","parseExpr","parseFunArgsStmt","_identifier","parseAssignStmt","_nextExpr","_stmt","needName","checkIn","parseRegex","toLowerCase","leftHand","parseLeftHand","parseDot","assignAble","parseProperty","isSignOp","parseCallArgs","parseParen","parseArray","parseNew","parseArrorwFunction","lookLength","lookToken","skipNextExpr","a","b","console","log","tag","propertyName","numValue","propertyValue","punctuator","SELECTOR","PROPERTY","VALUE","NUM_VALUE","isProp","scanPunctuator","parseSelector","parseBlock","parseMedia","parseKeyFrames","parseCharset","parseImport","onlyValue","_nextMatchProperty","_nextMatchValue","hasValue","lbraces","htmlLint","js","css","enter","comments","parseComentRange","pos","setLineColumn","parseJs","concat","parseCss","jsParser","_parse","cssParser","parseFun","checkInComment","_compare","Function","jsLint","cssLint","parseId","terminate","setErrorMap","createWorker","onmessage","mod","postMessage","editorFunObj","cursorPos","preCursorPos","findFoldIndex","unFolds","unFold","foldMap","delete","onDeleteContentBefore","selecter","selectedRanges","selectedRange","checkSelectedActive","delLine","resultFold","getRangeFold","foldIconCheck","stack","lineCount","realLine","relLine","preExec","resultCaches","rangePos","strs","regStr","wholeWord","ignoreCase","nowCursorPos","comparePos","list","resultIndexMap","cacheData","indexs","keys","direct","cursorFocus","checkCache","0","setContextData","prop","cursor","multiCursorPos","checkCursorSelected","moveCursor","_cursorPos","addSelectedRange","filterSelectedRanges","renderSelectedBg","same","clearRange","cursorPosList","getCursorsByLine","delCurposMap","preRnage","nextRange","del","size","word","dWord","setNowCursorPos","posArr","setCursorRealPos","lineDelta","preColumn","nowColumn","prePos","columnDelta","originPos","getStrWidth","getColumnByWidth","updateCursorPos","sReg","history","doCommand","commandType","clearCursorPos","deleteContent","insertContent","moveLineUp","moveLineDown","copyLineDown","deleteLineDown","copyLineUp","deleteLineUp","lastCommand","sortComand","pushHistoryTime","_checkSameOp","_combCheck","_combCommand","commandList","_index","MIN_SAFE_INTEGER","lineIdMap","renderedIdMap","renderedLineMap","initData","setEditorData","commandObj","historyArr","historyObj","addCursorPos","preOriginPos","_text","_insertContent","updateHistory","pushHistory","nowLineText","nowColume","newLine","newColumn","tokenizer","lint","folder","onInsertContentAfter","refreshSearch","setLineWidth","render","isCommand","rangeList","_deleteCursorPos","_deleteContent","_deleteRangePos","originRangePos","filterCursorPos","startObj","deleteText","rangeUuid","endObj","getRangeText","maxWidthObj","clear","onDeleteContentAfter","setMaxWidth","historyPosList","_moveLineUp","upLineText","_moveLineDown","downLineText","copyedLineMap","updateAfterPos","copyLine","upText","downText","deleteLine","ranges","historyRnageList","setCursorPos","cut","searchText","ctrlKey","shiftKey","select","altKey","_moveCursor","setSelectedRange","searchWord","openSearch","undo","redo","showTabsize","_tabSize","tabSizeList","bottom","onTabsizeChange","showLanguage","_language","languageList","onLnaguageChange","group","checked","checkable","disabled","onClick","shortcut","showReplace","replaceVisible","input1Focus","composing","changeCase","changeWhole","color","input2Focus","onKeyDown2","replaceText","searchPrevActive","searchPrev","searchNextActive","searchNext","close","content","Vue","use","Router","router","routes","path","Home","meta","title","redirect","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.48756b36.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('keep-alive',[_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div id=\"app\">\n\t\t<keep-alive>\n\t\t\t<router-view></router-view>\n\t\t</keep-alive>\n\t</div>\n</template>\n\n<script>\n\nexport default {\n    name: 'App',\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=151c70cd&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editor\",staticClass:\"my-editor-wrap\",style:({'padding-bottom': _vm._statusHeight}),on:{\"contextmenu\":function($event){$event.preventDefault();return _vm.onContextmenu.apply(null, arguments)},\"mousedown\":_vm.onClickEditor,\"selectstart\":function($event){$event.preventDefault();},\"wheel\":function($event){$event.preventDefault();return _vm.onWheel.apply(null, arguments)}}},[_c('div',{staticClass:\"my-editor-nums\",style:({top: _vm._numTop})},[_c('div',{staticClass:\"my-editor-num\",staticStyle:{\"visibility\":\"hidden\"}},[_vm._v(_vm._s(_vm.maxLine))]),_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-editor-num\",class:{'my-editor-num-active': _vm._activeLine(line.num)},style:({height:_vm._lineHeight, 'line-height':_vm._lineHeight})},[_c('span',{staticClass:\"my-editor-icon my-editor-center\",class:[_vm.errorMap[line.num]?'my-editor-icon-error':''],on:{\"mouseleave\":_vm.onIconMouseLeave,\"mouseover\":function($event){return _vm.onIconMouseOver(line.num, $event)}}}),_c('span',[_vm._v(_vm._s(line.num))]),(line.fold)?_c('span',{staticClass:\"my-editor-fold my-editor-center\",class:[line.fold=='open'?'my-editor-fold-open':'my-editor-fold-close'],on:{\"click\":function($event){return _vm.onToggleFold(line.num)}}}):_vm._e()])})],2),_c('div',{staticClass:\"my-editor-content-wrap\",style:({'box-shadow': _vm._leftShadow})},[_c('div',{ref:\"scroller\",staticClass:\"my-editor-content-scroller\",on:{\"mousedown\":_vm.onScrollerMdown,\"mouseup\":_vm.onScrollerMup}},[_c('div',{ref:\"content\",staticClass:\"my-editor-content\",style:({top: _vm._top, minWidth: _vm._contentMinWidth}),on:{\"selectend\":function($event){$event.preventDefault();return _vm.onSelectend.apply(null, arguments)}}},_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-editor-line\",class:{active: _vm._activeLine(line.num)},style:({height:_vm._lineHeight, 'line-height':_vm._lineHeight}),attrs:{\"data-line\":line.num,\"id\":'line_'+line.num}},[_c('div',{staticClass:\"my-editor-code\",class:[line.selected ? 'my-editor-select-bg my-editor-select-active' : '', line.isFsearch ? 'my-editor-select-f' : '', line.fold == 'close' ? 'fold-close' : ''],attrs:{\"data-line\":line.num},domProps:{\"innerHTML\":_vm._s(line.html)}}),_vm._l((line.selectStarts),function(range){return _c('div',{staticClass:\"my-editor-line-bg my-editor-select-bg\",class:{'my-editor-select-active': range.active,'my-editor-select-f': range.isFsearch},style:({left: range.left + 'px', width: range.width + 'px'})})}),_vm._l((line.selectEnds),function(range){return _c('div',{staticClass:\"my-editor-line-bg my-editor-select-bg\",class:{'my-editor-select-active': range.active,'my-editor-select-f': range.isFsearch},style:({left: range.left + 'px', width: range.width + 'px'})})}),_vm._l((line.tabNum),function(tab){return _c('span',{staticClass:\"my-editor-tab-line\",style:({left: _vm._tabLineLeft(tab)})})}),_vm._l((line.cursorList),function(left){return _c('div',{staticClass:\"my-editor-cursor\",staticStyle:{\"top\":\"0px\"},style:({height: _vm._lineHeight, left: left, visibility: _vm._cursorVisible})})})],2)}),0)]),_c('div',{ref:\"hScroller\",staticClass:\"my-editor-h-scroller-wrap\",on:{\"mousedown\":function($event){$event.stopPropagation();},\"mouseup\":function($event){$event.stopPropagation();},\"scroll\":_vm.onHscroll}},[_c('div',{staticClass:\"my-editor-h-scroller\",style:({width: _vm._hScrollWidth})})]),_c('div',{ref:\"vScroller\",staticClass:\"my-editor-v-scroller-wrap\",on:{\"mousedown\":function($event){$event.stopPropagation();},\"mouseup\":function($event){$event.stopPropagation();},\"scroll\":_vm.onVscroll}},[_c('div',{staticClass:\"my-editor-v-scroller\",style:({height: _vm.scrollerHeight})})]),_c('textarea',{ref:\"textarea\",staticClass:\"my-editor-textarea\",style:({top: _vm._textAreaPos.top, left: _vm._textAreaPos.left}),on:{\"blur\":_vm.onBlur,\"compositionend\":_vm.onCompositionend,\"compositionstart\":_vm.onCompositionstart,\"copy\":function($event){$event.preventDefault();return _vm.onCopy.apply(null, arguments)},\"cut\":function($event){$event.preventDefault();return _vm.onCut.apply(null, arguments)},\"focus\":_vm.onFocus,\"input\":_vm.onInput,\"keydown\":_vm.onKeyDown,\"paste\":function($event){$event.preventDefault();return _vm.onPaste.apply(null, arguments)}}})]),_c('status-bar',{ref:\"statusBar\",attrs:{\"column\":_vm._nowColumn,\"height\":_vm.statusHeight,\"language\":_vm.language,\"line\":_vm._nowLine,\"tabSize\":_vm.tabSize},on:{\"update:language\":function($event){_vm.language=$event},\"update:tabSize\":function($event){_vm.tabSize=$event},\"update:tab-size\":function($event){_vm.tabSize=$event}}}),_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisble),expression:\"menuVisble\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onClickMenu}}),_c('tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tipContent),expression:\"tipContent\"}],attrs:{\"content\":_vm.tipContent,\"styles\":_vm.tipStyle}}),_c('search-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchVisible),expression:\"searchVisible\"}],ref:\"search\",attrs:{\"count\":_vm.searchCount,\"now\":_vm.searchNow},on:{\"close\":_vm.onCloseSearch,\"next\":_vm.onSearchNext,\"prev\":_vm.onSearchPrev,\"replace\":_vm.replace,\"replaceAll\":_vm.replaceAll,\"search\":_vm.onSearch}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const variable = `[\\\\$_a-zA-Z][\\\\$_a-zA-Z0-9]*?`\r\nconst strValid = function (e) {\r\n    let value = e.value;\r\n    if (e.side === 'end' && value[0] === '\\\\' && value.length % 2 === 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nconst tplStrChild = {};\r\n//字符串``\r\nconst tplStrReg = {\r\n    start: /`/,\r\n    end: /\\\\*?`/,\r\n    token: 'js-string',\r\n    plainToken: 'js-string',\r\n    foldName: 'js-string',\r\n    valid: strValid,\r\n    childRule: {\r\n        rules: [{\r\n            start: /\\$\\{/,\r\n            end: /\\}/,\r\n            foldName: 'js-string-expr',\r\n            level: 1,\r\n            childRule: tplStrChild\r\n        }]\r\n    }\r\n};\r\n// 正则字面量\r\nconst regexp = {\r\n    start: /(?<=^|[\\(\\{\\[\\;\\,\\:\\?\\!\\+\\-\\*\\%\\=\\>\\<\\&\\|]\\s*?)\\//,\r\n    end: /(?<=(?:\\\\[\\s\\S]|[^\\\\])+?)\\/(?:i|m|g|im|mi|ig|gi|mg|gm|img|igm|mig|mgi|gim|gmi)?|$/i,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /\\\\b/,\r\n            token: 'js-regex-ctrl'\r\n        }, {\r\n            regex: /\\\\[\\s\\S]/,\r\n            token: 'js-regex-escape'\r\n        }, {\r\n            regex: /\\?\\=|\\?\\<\\=|\\?\\!|\\?\\<\\!/,\r\n            token: 'js-regex'\r\n        }, {\r\n            regex: /\\*|\\^|\\$|\\?/,\r\n            token: 'js-regex-ctrl'\r\n        }, {\r\n            start: /\\[/,\r\n            end: /(?<!\\\\)\\]/,\r\n            token: 'js-regex-bracket',\r\n            childRule: {\r\n                rules: [{\r\n                    regex: /\\^/,\r\n                    token: 'js-regex-ctrl',\r\n                    valid: function (option) {\r\n                        let text = option.text;\r\n                        let index = option.index;\r\n                        if (text[index - 1] === '[' && text[index - 2] !== '\\\\') {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }]\r\n            }\r\n        }]\r\n    },\r\n    token: 'js-regex'\r\n}\r\nconst rules = [\r\n    tplStrReg,\r\n    //字符串''\r\n    {\r\n        start: /'/,\r\n        end: /\\\\*?'|[^\\\\]$|^$/,\r\n        token: 'js-string',\r\n        foldName: 'js-single-string',\r\n        valid: strValid\r\n    },\r\n    //字符串\"\"\"\r\n    {\r\n        start: /\"/,\r\n        end: /\\\\*?\"|[^\\\\]$|^$/,\r\n        token: 'js-string',\r\n        foldName: 'js-double-string',\r\n        valid: strValid\r\n    },\r\n    //多行注释\r\n    {\r\n        start: /\\/\\*/,\r\n        end: /\\*\\//,\r\n        token: 'js-comment',\r\n        foldName: 'js-comment'\r\n    }, {\r\n        regex: /\\/\\/[\\s\\S]*$/,\r\n        token: 'js-comment'\r\n    },\r\n    regexp,\r\n    {\r\n        regex: /\\bvar\\b|\\blet\\b|\\bconst\\b/,\r\n        token: 'js-type'\r\n    },\r\n    {\r\n        regex: /\\bcontinue\\b|\\bbreak\\b|\\bswitch\\b|\\bcase\\b|\\bdo\\b|\\bwhile\\b|\\belse\\b|\\bfor\\b|\\bif\\b|\\bnew\\b|\\breturn\\b|\\bfrom\\b|\\btypeof|\\beach\\b|\\bin\\b|\\bimport\\b|\\bexport\\b|\\bdefault\\b|\\bwith\\b|\\bthrow\\b|\\btry\\b|\\bcatch\\b|\\bfinally\\b/,\r\n        token: 'js-key'\r\n    }, {\r\n        regex: /\\bclass\\b/, //class {}\r\n        token: 'js-class'\r\n    }, {\r\n        regex: /\\b[A-Z][\\\\$_a-zA-Z0-9]*?(?=\\.)/, //Token.\r\n        token: 'js-function-class'\r\n    }, {\r\n        regex: /\\bfunction\\b/,\r\n        token: 'js-function'\r\n    }, {\r\n        regex: new RegExp(`(${variable})\\\\s*?(?=\\\\([^\\\\(\\\\)]*?\\\\)\\\\s*?\\\\{)`), //ie. test(){}\r\n        token: 'js-function-name'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\bfunction\\\\s+?)${variable}`), //ie. function test\r\n        token: 'js-function-name'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\bnew\\\\s+?)${variable}(?=\\\\s*?\\\\()`), //ie. new Test()\r\n        token: 'js-new-class'\r\n    }, {\r\n        regex: /(\\{)|(\\[)|(\\()/,\r\n        token: ['js-lbraces', 'js-lbracket', 'js-lparen'],\r\n        foldType: -1,\r\n        foldName: ['js-braces', 'js-bracket', 'js-paren']\r\n    }, {\r\n        regex: /(\\})|(\\])|(\\))/,\r\n        token: ['js-rbraces', 'js-rbracket', 'js-rparen'],\r\n        foldType: 1,\r\n        foldName: ['js-braces', 'js-bracket', 'js-paren']\r\n    }, {\r\n        regex: /(?<=\\.)(?:prototype\\b|toString\\b|valueOf\\b|toLocaleString\\b|hasOwnProperty\\b|isPrototypeOf\\b|propertyIsEnumerable\\b)/,\r\n        token: 'js-local'\r\n    }, {\r\n        regex: /\\bwindow\\b|\\bdocument\\b|\\bmodule\\b|\\bexports\\b/,\r\n        token: 'js-local'\r\n    }, {\r\n        regex: /\\bthis\\b|\\bself\\b/,\r\n        token: 'js-this'\r\n    }, {\r\n        regex: /\\+|\\-|\\*|\\/|\\=|\\!|>|<|\\&|\\||\\?/,\r\n        token: 'js-oprator'\r\n    }, {\r\n        regex: new RegExp(`\\\\b\\\\d+\\\\b|\\\\b0[xX][a-zA-Z0-9]*?\\\\b|\\\\bundefined\\\\b|\\\\bnull\\\\b|\\\\btrue\\\\b|\\\\bfalse\\\\b|\\\\bNaN\\\\b`),\r\n        token: 'js-number'\r\n    }, {\r\n        regex: new RegExp(`(${variable})(?=\\\\()`), //ie. test(),.test()\r\n        token: 'js-function-exec'\r\n    }, {\r\n        regex: new RegExp(`(?<=\\\\s*?class\\\\s*?)${variable}(?=\\\\s*?\\\\{)`), //ie. calss Test{}\r\n        token: 'js-class-name'\r\n    }\r\n];\r\ntplStrChild.rules = rules;\r\n\r\nexport default {\r\n    rules: rules\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-24 16:08:20\r\n * @Description: \r\n */\r\nconst comment = {\r\n    start: /\\/\\*/,\r\n    end: /\\*\\//,\r\n    token: 'css-comment',\r\n    foldName: 'css-comment'\r\n}\r\nconst braces = {\r\n    start: /\\{/,\r\n    end: /\\}/,\r\n    token: ['css-lbraces', 'css-rbraces'],\r\n    foldName: 'css-braces',\r\n    childRule: {\r\n        rules: [\r\n            comment,\r\n            null,\r\n            {\r\n                regex: /;/,\r\n                token: 'css-split'\r\n            }, {\r\n                regex: /:/,\r\n                token: 'css-value-start'\r\n            }, {\r\n                regex: /[a-zA-Z][^;\\:\\s\\}]*?(?=\\s*?\\:)/,\r\n                token: 'css-property'\r\n            }, {\r\n                regex: /(?<=\\:\\s*?)[^;\\:\\}]+?(?=;|}|$)/,\r\n                token: 'css-value'\r\n            }, {\r\n                regex: /(?:\\d+(?:\\.\\d*)?|\\.\\d+)%/,\r\n                token: 'css-percent'\r\n            }\r\n        ]\r\n    }\r\n}\r\nbraces.childRule.rules[1] = braces;\r\n\r\nexport default {\r\n    rules: [\r\n        comment,\r\n        braces,\r\n        {\r\n            regex: /[#\\.]?[^\\s\\,\\:\\{]+/,\r\n            token: function (value) {\r\n                if (value[0] == '.') {\r\n                    return 'css-selector-class';\r\n                } else if (value[0] == '#') {\r\n                    return 'css-selector-id';\r\n                } else {\r\n                    return 'css-selector-tag';\r\n                }\r\n            }\r\n        }, {\r\n            regex: /(?<=\\:)[^\\s\\,\\:]+/,\r\n            token: 'css-pseudo'\r\n        }\r\n    ]\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-10 09:31:38\r\n * @Description: \r\n */\r\nimport jsRules from './javascript.js';\r\nimport cssRules from './css.js';\r\n\r\nconst styleRules = [{\r\n    regex: /(?<=\\:(?:\\s*?\\w+?\\s*?){0,})\\d+/,\r\n    token: 'html-style-number'\r\n}, {\r\n    regex: /(?<=\\:\\s*?\\d+)px\\b/,\r\n    token: 'html-style-px'\r\n}, {\r\n    regex: /(?<=(?:\\;|'|\")\\s*?)[^\\<\\>\\:\\;'\"]+/,\r\n    token: 'html-style-name'\r\n}, {\r\n    regex: /(?<=\\:\\s*?)[^\\<\\>\\:\\;'\"]+/,\r\n    token: 'html-style-value'\r\n}];\r\n\r\nconst attrRules = [{\r\n    start: /(?<=style\\s*?\\=\\s*?)'/,\r\n    end: /'/,\r\n    token: 'xml-attr-value',\r\n    level: 1,\r\n    childRule: {\r\n        rules: styleRules\r\n    }\r\n}, {\r\n    start: /(?<=style\\s*?\\=\\s*?)\"/,\r\n    end: /\"/,\r\n    token: 'xml-attr-value',\r\n    level: 1,\r\n    childRule: {\r\n        rules: styleRules\r\n    }\r\n}, {\r\n    start: /(?<=\\=\\s*?)\"/,\r\n    end: /\"/,\r\n    level: 1,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    start: /(?<=\\=\\s*?)'/,\r\n    end: /'/,\r\n    level: 1,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    regex: /(?<=\\<\\/?)\\w+\\b/,\r\n    token: 'xml-tag-name',\r\n    foldName: tagFoldName,\r\n    foldType: tagFoldType\r\n}, {\r\n    regex: /(?<=\\=)\\s*?[^\\<\\>\\s\\'\\\"]+\\b/,\r\n    token: 'xml-attr-value'\r\n}, {\r\n    regex: /\\b[^'\"=\\s\\>\\<]+\\b/,\r\n    token: 'xml-attr-name'\r\n}];\r\n\r\nconst scriptStart = {\r\n    start: /\\<(?=script\\b)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: attrRules\r\n    }\r\n}\r\n\r\nconst scriptEnd = {\r\n    start: /\\<\\/(?=script\\>)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /(?<=\\<\\/?)\\w+\\b/,\r\n            token: 'xml-tag-name',\r\n            foldName: tagFoldName,\r\n            foldType: tagFoldType\r\n        }]\r\n    }\r\n}\r\n\r\nconst styleStart = {\r\n    start: /\\<(?=style\\b)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: attrRules\r\n    }\r\n}\r\n\r\nconst styleEnd = {\r\n    start: /\\<\\/(?=style\\s*?\\>)/,\r\n    end: /\\>/,\r\n    token: tagToken,\r\n    childRule: {\r\n        rules: [{\r\n            regex: /(?<=\\<\\/?)\\w+\\b/,\r\n            token: 'xml-tag-name',\r\n            foldName: tagFoldName,\r\n            foldType: tagFoldType\r\n        }]\r\n    }\r\n}\r\n\r\nfunction tagToken(e) {\r\n    if (e.side == 'start') {\r\n        if (e.value[1] == '/') {\r\n            return 'xml-end-tag-open';\r\n        } else {\r\n            return 'xml-tag-open';\r\n        }\r\n    } else if (e.side === 'end') {\r\n        return 'xml-tag-close';\r\n    }\r\n}\r\n\r\nfunction tagFoldName(e) {\r\n    if (/hr|br|meta|img|link|input/i.exec(e.value)) { //单标签，不折叠\r\n        return '';\r\n    }\r\n    return e.value;\r\n}\r\n\r\nfunction tagFoldType(e) {\r\n    if (e.text[e.index - 1] == '/') {\r\n        return 1;\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport default {\r\n    rules: [{\r\n        start: scriptStart,\r\n        end: scriptEnd,\r\n        childRule: jsRules\r\n    }, {\r\n        start: styleStart,\r\n        end: styleEnd,\r\n        childRule: cssRules\r\n    }, {\r\n        start: /\\<\\/?(?=\\w+\\b)/,\r\n        end: /\\/?\\>/,\r\n        token: tagToken,\r\n        childRule: {\r\n            rules: attrRules\r\n        }\r\n    }, {\r\n        start: /\\<\\!\\-\\-/,\r\n        end: /\\-\\-\\>/,\r\n        token: 'xml-comment',\r\n        foldName: 'xml-comment'\r\n    }]\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2020-10-31 13:48:50\r\n * @Description: 工具类\r\n */\r\nimport $ from 'jquery';\r\n\r\nclass Util {\r\n    static readClipboard() {\r\n        if (window.clipboardData) {\r\n            return new Promise((resolve) => {\r\n                resolve(clipboardData.getData('Text'));\r\n            });\r\n        } else if (navigator.clipboard) {\r\n            return navigator.clipboard.readText();\r\n        }\r\n    }\r\n    static writeClipboard(text) {\r\n        if (window.clipboardData) {\r\n            clipboardData.setData('Text', text);\r\n        } else if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(text);\r\n        }\r\n    }\r\n    //获取数字\r\n    static getNum(value) {\r\n        value = String(value);\r\n        value = value.replace(/[^0123456789\\.]/g, '');\r\n        var regex = /^\\d+(\\.\\d*)?$/;\r\n        var r = regex.exec(value);\r\n        var num = r && r[0] || '';\r\n        if (num) {\r\n            num = Number(r[0]);\r\n        }\r\n        return num;\r\n    }\r\n    //生成指定个数的空白符\r\n    static space(tabSize) {\r\n        var val = '';\r\n        for (var tmp = 0; tmp < tabSize; tmp++) {\r\n            val += ' '\r\n        };\r\n        return val;\r\n    }\r\n    //数组数字排序\r\n    static sortNum(arr) {\r\n        arr.sort(function (arg1, arg2) {\r\n            return Number(arg1) - Number(arg2);\r\n        })\r\n    }\r\n    //获取字符宽度\r\n    static getCharWidth(wrap) {\r\n        var str1 = '------------------------------------------------------------------------------------';\r\n        var str2 = '一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一';\r\n        var id1 = 'char-width-' + Util.getUUID();\r\n        var id2 = 'char-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-editor-line\">\r\n        <div class=\"my-editor-code\"><span id=\"${id1}\">${str1}</span><span id=\"${id2}\">${str2}</span></div>\r\n        </div>`);\r\n        $(wrap).append($tempDom)\r\n        var dom = $('#' + id1)[0];\r\n        var charWidth = dom.scrollWidth / str1.length;\r\n        var charHight = dom.clientHeight;\r\n        var fontSize = window.getComputedStyle ? window.getComputedStyle(dom, null).fontSize : dom.currentStyle.fontSize;\r\n        var fullAngleCharWidth = $('#' + id2)[0].scrollWidth / str2.length;\r\n        $tempDom.remove();\r\n        return {\r\n            charWidth: charWidth,\r\n            fullAngleCharWidth: fullAngleCharWidth,\r\n            charHight: charHight,\r\n            fontSize: fontSize\r\n        }\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {number} charW     半角符号/文字宽度\r\n     * @param  {number} fullCharW 全角符号/文字宽度\r\n     * @param  {number} tabSize   tab符所占宽度\r\n     * @param  {number} start     文本开始索引\r\n     * @param  {number} end       文本结束索引\r\n     * @return {number}           文本真实宽度\r\n     */\r\n    static getStrWidth(str, charW, fullCharW, tabSize, start, end) {\r\n        tabSize = tabSize || 4;\r\n        if (typeof start != 'undefined') {\r\n            str = str.substr(start);\r\n        }\r\n        if (typeof end != 'undefined') {\r\n            str = str.substring(0, end - start);\r\n        }\r\n        var match = str.match(this.fullAngleReg);\r\n        var width = str.length * charW;\r\n        var tabNum = str.match(/\\t/g);\r\n        tabNum = tabNum && tabNum.length || 0;\r\n        match = match && match.length || 0;\r\n        if (match) {\r\n            match = match - tabNum;\r\n            width = match * fullCharW + (str.length - match) * charW;\r\n            width += tabNum * charW * (tabSize - 1);\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {DOM} wrap     容器\r\n     */\r\n    static getStrExactWidth(str, tabSize, wrap) {\r\n        Util.getStrExactWidth.count = Util.getStrExactWidth.count || 0;\r\n        Util.getStrExactWidth.count++;\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n        var id = 'str-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-editor-line my-editor-temp-text\" style=\"visibility:hidden\">\r\n        <div class=\"my-editor-code\" id=\"${id}\">${_splitStr(str)}</div>\r\n        </div>`);\r\n        $(wrap).append($tempDom)\r\n        var dom = $('#' + id)[0];\r\n        var charWidth = dom.clientWidth;\r\n        $('.my-editor-temp-text').remove();\r\n        // if (Util.getStrExactWidth.count > 5) { //避免频繁删除dom导致浏览器卡顿\r\n        //     $('.my-editor-temp-text').remove();\r\n        // } else {\r\n        //     clearTimeout(Util.getStrExactWidth.timer);\r\n        //     Util.getStrExactWidth.timer = setTimeout(() => {\r\n        //         $('.my-editor-temp-text').remove();\r\n        //     }, 500);\r\n        // }\r\n        return charWidth;\r\n\r\n        function _splitStr(str) {\r\n            let count = Math.floor(str.length / 100);\r\n            let result = [];\r\n            for (let i = 0; i < count; i++) {\r\n                let column = i * 100;\r\n                result.push(Util.htmlTrans(str.slice(column, column + 100)));\r\n            }\r\n            count = count * 100;\r\n            if (count < str.length) {\r\n                result.push(Util.htmlTrans(str.slice(count)));\r\n            }\r\n            return `<span>${result.join('</span><span>').replace(/\\t/g, Util.space(tabSize || 4))}</span>`;\r\n        }\r\n    }\r\n    //<,>转义\r\n    static htmlTrans(cont) {\r\n        cont = cont.replace(/\\&\\#/g, '&amp;#');\r\n        return cont.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n    }\r\n    // 深度克隆\r\n    static deepAssign(targetObj, originObj, excludeKeys) {\r\n        return _assign(targetObj, originObj, excludeKeys, new Map());\r\n\r\n        function _assign(targetObj, originObj, excludeKeys, assigned) {\r\n            excludeKeys = excludeKeys || [];\r\n            for (var key in originObj) {\r\n                var value = originObj[key];\r\n                if (excludeKeys.indexOf(key) > -1) {\r\n                    continue;\r\n                }\r\n                if (typeof value === 'object' && !(value instanceof RegExp) && value !== null &&\r\n                    (!value.nodeName || !value.nodeType)) {\r\n                    if (assigned.has(value)) {\r\n                        targetObj[key] = assigned.get(value);\r\n                    } else {\r\n                        let tmp = null;\r\n                        if (value instanceof Array) {\r\n                            tmp = targetObj[key] || [];\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, excludeKeys, new Map(assigned));\r\n                        } else {\r\n                            tmp = targetObj[key] || {};\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, excludeKeys, new Map(assigned));\r\n                        }\r\n                    }\r\n                } else {\r\n                    targetObj[key] = value;\r\n                }\r\n            }\r\n            return targetObj;\r\n        }\r\n    }\r\n    static getUUID(len) {\r\n        len = len || 16;\r\n        var str = '';\r\n        for (var i = 0; i < len; i++) {\r\n            str += (Math.random() * 16 | 0).toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 比较坐标的前后\r\n     * @param {Object} start \r\n     * @param {Object} end \r\n     */\r\n    static comparePos(start, end) {\r\n        if (start.line > end.line || start.line == end.line && start.column > end.column) {\r\n            return 1;\r\n        } else if (start.line == end.line && start.column == end.column) {\r\n            return 0\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    static createWorker(funStr) {\r\n        var blob = new Blob([funStr]);\r\n        var url = window.URL.createObjectURL(blob);\r\n        var worker = new Worker(url);\r\n        return worker;\r\n    }\r\n    static defineProperties(target, context, properties) {\r\n        let result = {};\r\n        properties.map((property) => {\r\n            result[property] = {\r\n                get: function () {\r\n                    if (typeof context[property] == 'function') {\r\n                        return context[property].bind(context);\r\n                    } else {\r\n                        return context[property];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        Object.defineProperties(target, result);\r\n    }\r\n}\r\nArray.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n}\r\nArray.prototype.empty = function () {\r\n    this.length = 0;\r\n    return this;\r\n}\r\nArray.prototype.insert = function (item, sort) {\r\n    if (sort && this.length) {\r\n        let left = 0,\r\n            right = this.length - 1;\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (sort(item, this[mid]) > 0) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid;\r\n            }\r\n        }\r\n        if (sort(item, this[left]) < 0) {\r\n            left--;\r\n        }\r\n        this.splice(left + 1, 0, item);\r\n    } else {\r\n        this.push(item);\r\n    }\r\n}\r\nString.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n}\r\n//全角符号和中文字符\r\nUtil.fullAngleReg = /[\\x00-\\x1f\\x80-\\xa0\\xad\\u1680\\u180E\\u2000-\\u200f\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF\\uFFF9-\\uFFFC]|[\\u1100-\\u115F\\u11A3-\\u11A7\\u11FA-\\u11FF\\u2329-\\u232A\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3000-\\u303E\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u3190-\\u31BA\\u31C0-\\u31E3\\u31F0-\\u321E\\u3220-\\u3247\\u3250-\\u32FE\\u3300-\\u4DBF\\u4E00-\\uA48C\\uA490-\\uA4C6\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFAFF\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFF01-\\uFF60\\uFFE0-\\uFFE6]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nUtil.keyCode = {\r\n    DELETE: 46,\r\n    BACKSPACE: 8\r\n}\r\nUtil.command = {\r\n    DELETE: 'delete',\r\n    INSERT: 'insert',\r\n    MOVEUP: 'moveLineUp',\r\n    MOVEDOWN: 'moveLineDown',\r\n    COPY_UP: 'copyLineUp',\r\n    COPY_DOWN: 'copyLineDown',\r\n    DELETE_UP: 'delteLineUp',\r\n    DELETE_DOWN: 'delteLineDown',\r\n    REPLACE: 'replace',\r\n}\r\nUtil.constData = {\r\n    PAIR_START: -1,\r\n    PAIR_START_END: 0,\r\n    PAIR_END: 1,\r\n    FOLD_OPEN: 1,\r\n    FOLD_CLOSE: -1,\r\n    DEFAULT: 'default'\r\n}\r\nexport default Util;","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-15 11:39:41\r\n * @Description: \r\n */\r\nimport jsRules from '@/module/tokenizer/rules/javascript.js';\r\nimport htmlRules from '@/module/tokenizer/rules/html.js';\r\nimport cssRules from '@/module/tokenizer/rules/css.js';\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.currentLine = 1;\r\n        this.languageMap = [];\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initLanguage(language) {\r\n        this.language = language;\r\n        clearTimeout(this.tokenizeLines.timer);\r\n        switch (language) {\r\n            case 'JavaScript':\r\n                this.initRules(jsRules);\r\n                break;\r\n            case 'HTML':\r\n                this.initRules(htmlRules);\r\n                break;\r\n            case 'CSS':\r\n                this.initRules(cssRules);\r\n                break;\r\n            default:\r\n                this.language = 'plain';\r\n        }\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['startLine', 'maxVisibleLines', 'maxLine', 'renderLine', '$nextTick']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    initRules(rules) {\r\n        if (this.languageMap[this.language]) {\r\n            let obj = this.languageMap[this.language];\r\n            this.rules = obj.rules;\r\n            this.ruleIdMap = obj.ruleIdMap;\r\n            this.regexMap = obj.regexMap;\r\n            return;\r\n        }\r\n        this.ruleId = 1;\r\n        this.ruleIdMap = {};\r\n        this.regexMap = {};\r\n        this.rules = Util.deepAssign({}, rules);\r\n        this.rules.rules.map((item) => {\r\n            this.setRuleId(item);\r\n        });\r\n        this.languageMap[this.language] = {\r\n            rules: this.rules,\r\n            ruleIdMap: this.ruleIdMap,\r\n            regexMap: this.regexMap\r\n        };\r\n    }\r\n    setRuleId(rule) {\r\n        // 每个规则生成一个唯一标识\r\n        rule.ruleId = this.ruleId++;\r\n        rule.level = rule.level || 0;\r\n        rule.token = rule.token || '';\r\n        this.ruleIdMap[rule.ruleId] = rule;\r\n        if (typeof rule.start === 'object' && !(rule.start instanceof RegExp)) {\r\n            this.setRuleId(rule.start);\r\n            rule.start.startBy = rule.ruleId;\r\n        }\r\n        if (typeof rule.end === 'object' && !(rule.end instanceof RegExp)) {\r\n            this.setRuleId(rule.end);\r\n            rule.end.endBy = rule.ruleId;\r\n        }\r\n        if (rule.childRule && rule.childRule.rules) {\r\n            rule.childRule.rules.map((_item) => {\r\n                !_item.ruleId && this.setRuleId(_item);\r\n            });\r\n            rule.rules = rule.childRule.rules;\r\n        }\r\n    }\r\n    // 组合正则表达式\r\n    getCombRegex(states) {\r\n        states = states || [];\r\n        let statesKey = states + '' || '0';\r\n        let sources = [];\r\n        let sourceMap = {};\r\n        let regexs = [];\r\n        let index = 0;\r\n        let rule = null;\r\n        if (this.regexMap[statesKey]) {\r\n            return this.regexMap[statesKey];\r\n        }\r\n        if (states.length > 1) {\r\n            let resultStates = [];\r\n            while (index < states.length - 1) {\r\n                rule = this.ruleIdMap[states[index + 1]];\r\n                if (rule.startBy === states[index] || rule.endBy === states[index]) { //处于同一层级\r\n                    index++;\r\n                    continue;\r\n                }\r\n                resultStates.push(states[index]);\r\n                index++;\r\n            }\r\n            resultStates.push(states[index]);\r\n            states = resultStates;\r\n        }\r\n        index = states.length - 1;\r\n        rule = states.length && this.ruleIdMap[states.peek()] || this.rules;\r\n        while (index >= 0 && this.ruleIdMap[states[index]].level >= rule.level) {\r\n            regexs.push(this.getEndRegex(this.ruleIdMap[states[index]]));\r\n            index--;\r\n        }\r\n        regexs.reverse();\r\n        rule.rules && rule.rules.map((item) => {\r\n            regexs.push(this.getStartRegex(item));\r\n        });\r\n        regexs.map((item) => {\r\n            let side = item.side === -1 ? 'start' : 'end';\r\n            if (!sourceMap[item.ruleId] || sourceMap[item.ruleId] !== side) {\r\n                sources.push(`?<${side}_${item.ruleId}>${item.regex.source}`);\r\n                sourceMap[item.ruleId] = side;\r\n            }\r\n        });\r\n        this.regexMap[statesKey] = new RegExp(`(${sources.join(')|(')})`, 'g');\r\n        return this.regexMap[statesKey];\r\n    }\r\n    getStartRegex(rule) {\r\n        if (rule.regex instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.regex,\r\n                side: -1\r\n            }\r\n        } else if (rule.start instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.start,\r\n                side: -1\r\n            };\r\n        } else if (rule.start.startBy) {\r\n            return this.getStartRegex(rule.start);\r\n        }\r\n    }\r\n    getEndRegex(rule, side) {\r\n        if (rule.regex instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.regex,\r\n                side: side || 1\r\n            }\r\n        } else if (rule.end instanceof RegExp) {\r\n            return {\r\n                ruleId: rule.ruleId,\r\n                regex: rule.end,\r\n                side: side || 1\r\n            };\r\n        } else if (rule.end.endBy) {\r\n            return this.getStartRegex(rule.end, -1);\r\n        }\r\n    }\r\n    onInsertContentBefore(nowLine) {\r\n        this.onInsertContentBefore.nowLine = nowLine;\r\n    }\r\n    onInsertContentAfter(nowLine) {\r\n        nowLine = this.onInsertContentBefore.nowLine;\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        if (nowLine <= this.currentLine) {\r\n            this.currentLine = nowLine;\r\n            clearTimeout(this.tokenizeLines.timer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== nowLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(nowLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onDeleteContentBefore(nowLine) {}\r\n    onDeleteContentAfter(nowLine) {\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        if (nowLine <= this.currentLine) {\r\n            this.currentLine = nowLine;\r\n            clearTimeout(this.tokenizeLines.timer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== nowLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(nowLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onScroll() {\r\n        if (this.language == 'plain') {\r\n            return;\r\n        }\r\n        this.tokenizeVisibleLins();\r\n    }\r\n    tokenizeVisibleLins() {\r\n        let tokenizeVisibleLinsId = this.tokenizeVisibleLins.id + 1 || 1;\r\n        this.tokenizeVisibleLins.id = tokenizeVisibleLinsId;\r\n        this.$nextTick(() => {\r\n            if (this.tokenizeVisibleLins.id !== tokenizeVisibleLinsId) {\r\n                return;\r\n            }\r\n            let currentLine = this.currentLine;\r\n            this.tokenizeLines(this.startLine, this.startLine + this.maxVisibleLines);\r\n            this.currentLine = currentLine;\r\n        });\r\n    }\r\n    tokenizeLines(startLine, endLine) {\r\n        let processedLines = 0;\r\n        let processedTime = Date.now();\r\n        endLine = endLine || this.maxLine;\r\n        endLine = endLine > this.maxLine ? this.maxLine : endLine;\r\n        while (startLine <= endLine) {\r\n            let lineObj = this.htmls[startLine - 1];\r\n            if (!lineObj.tokens) { //文本超过一万时跳过高亮\r\n                let data = this.tokenizeLine(startLine);\r\n                lineObj.tokens = data.tokens;\r\n                lineObj.folds = data.folds;\r\n                lineObj.html = data.tokens.map((item) => {\r\n                    let rule = this.ruleIdMap[item.ruleId];\r\n                    if (rule && typeof rule.value === 'function') {\r\n                        return rule.value(item.value);\r\n                    } else {\r\n                        return `<span class=\"${item.type.split('.').join(' ')}\" data-column=\"${item.column}\">${Util.htmlTrans(item.value)}</span>`;\r\n                    }\r\n                }).join('');\r\n                this.renderLine(lineObj.lineId);\r\n                if (lineObj.states + '' != data.states + '') {\r\n                    lineObj.states = data.states;\r\n                    lineObj = this.htmls[startLine];\r\n                    if (lineObj) {\r\n                        lineObj.tokens = null;\r\n                    }\r\n                }\r\n                processedLines++;\r\n                // 避免卡顿\r\n                if (processedLines % 10 == 0 && Date.now() - processedTime >= 20) {\r\n                    startLine++;\r\n                    break;\r\n                }\r\n            }\r\n            startLine++;\r\n        }\r\n        this.currentLine = startLine;\r\n        if (startLine <= endLine) {\r\n            this.tokenizeLines.timer = setTimeout(() => {\r\n                this.tokenizeLines(startLine, endLine);\r\n            }, 20);\r\n        }\r\n    }\r\n    tokenizeLine(line) {\r\n        let match = null;\r\n        let rule = null;\r\n        let lastIndex = 0;\r\n        let preEnd = 0;\r\n        let newStates = [];\r\n        let states = (line > 1 && this.htmls[line - 2].states || []).slice(0);\r\n        let lineObj = this.htmls[line - 1];\r\n        let regex = this.getRegex(states);\r\n        let resultObj = {\r\n            tokens: [],\r\n            folds: []\r\n        }\r\n        if (lineObj.text.length > 10000) {\r\n            return {\r\n                tokens: this.splitLongToken([{\r\n                    type: 'plain',\r\n                    column: 0,\r\n                    value: lineObj.text\r\n                }]),\r\n                folds: [],\r\n                states: states\r\n            }\r\n        }\r\n        while (match = regex.exec(lineObj.text)) {\r\n            let token = null;\r\n            let fold = null;\r\n            let valid = true;\r\n            let side = '';\r\n            for (let ruleId in match.groups) {\r\n                if (match.groups[ruleId] == undefined) {\r\n                    continue;\r\n                }\r\n                side = ruleId.split('_')[0];\r\n                ruleId = ruleId.split('_')[1] - 0;\r\n                rule = this.ruleIdMap[ruleId];\r\n                // side = this.getSide(rule, states, side);\r\n                if (preEnd < match.index) { //普通文本\r\n                    let value = lineObj.text.slice(preEnd, match.index);\r\n                    resultObj.tokens.push({\r\n                        value: value,\r\n                        column: preEnd,\r\n                        type: this.getTokenType({\r\n                            rule: this.ruleIdMap[states.peek()],\r\n                            index: preEnd,\r\n                            value: value,\r\n                            text: lineObj.text\r\n                        })\r\n                    });\r\n                    preEnd = match.index;\r\n                }\r\n                if (typeof rule.valid === 'function') {\r\n                    valid = rule.valid({\r\n                        index: match.index,\r\n                        text: lineObj.text,\r\n                        value: match[0],\r\n                        side: side\r\n                    });\r\n                    if (!valid) {\r\n                        break;\r\n                    }\r\n                }\r\n                fold = this.getFold(rule, match, states, resultObj, lineObj.text);\r\n                token = this.getToken(rule, match, states, newStates, resultObj, lineObj.text, side);\r\n                resultObj.tokens.push(token);\r\n                fold && resultObj.folds.push(fold);\r\n                preEnd = match.index + match[0].length;\r\n                break;\r\n            }\r\n            if (!match[0]) { //考虑/^$/的情况\r\n                break;\r\n            }\r\n            if (!valid) { //跳过当前无效结果\r\n                continue;\r\n            }\r\n            lastIndex = regex.lastIndex;\r\n            regex.lastIndex = 0;\r\n            regex = this.getRegex(states, rule.ruleId);\r\n            regex.lastIndex = lastIndex;\r\n        }\r\n        if (!resultObj.tokens.length && states.length) { // 整行被多行token包裹\r\n            resultObj.tokens.push({\r\n                value: lineObj.text,\r\n                column: 0,\r\n                type: this.getTokenType({\r\n                    rule: this.ruleIdMap[states.peek()],\r\n                    value: lineObj.text,\r\n                    text: lineObj.text\r\n                })\r\n            });\r\n        } else if (preEnd < lineObj.text.length) { //文本末尾\r\n            var value = lineObj.text.slice(preEnd);\r\n            resultObj.tokens.push({\r\n                value: value,\r\n                column: preEnd,\r\n                type: this.getTokenType({\r\n                    rule: this.ruleIdMap[states.peek()],\r\n                    index: preEnd,\r\n                    value: value,\r\n                    text: lineObj.text\r\n                })\r\n            });\r\n        }\r\n        regex.lastIndex = 0;\r\n        return {\r\n            tokens: this.splitLongToken(resultObj.tokens),\r\n            folds: resultObj.folds,\r\n            states: states\r\n        };\r\n    }\r\n    splitLongToken(tokens) {\r\n        let result = [];\r\n        tokens.map((token) => {\r\n            if (token.value.length > 100) { //将文本数量大于100的token分隔\r\n                let startCol = token.column;\r\n                let count = Math.floor(token.value.length / 100);\r\n                for (let i = 0; i < count; i++) {\r\n                    let column = i * 100;\r\n                    result.push({\r\n                        column: column + startCol,\r\n                        value: token.value.slice(column, column + 100),\r\n                        type: token.type\r\n                    });\r\n                }\r\n                count = count * 100;\r\n                if (count < token.value.length) {\r\n                    result.push({\r\n                        column: count + startCol,\r\n                        value: token.value.slice(count),\r\n                        type: token.type\r\n                    });\r\n                }\r\n            } else {\r\n                result.push(token);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    // getSide(rule, states) {\r\n    //     let index = states.length - 1;\r\n    //     if (states.indexOf(rule.ruleId) == -1) {\r\n    //         return 'start';\r\n    //     }\r\n    //     while (index >= 0 && states[index] != rule.ruleId) {\r\n    //         if (this.ruleIdMap[states[index]].level > rule.level) {\r\n    //             return 'start';\r\n    //         }\r\n    //         index--\r\n    //     }\r\n    //     return 'end';\r\n    // }\r\n    /**\r\n     * 获取折叠标记对象\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则结果对象\r\n     * @param {Array} states 状态栈\r\n     * @param {Array} newStates 当前行的新增状态栈\r\n     * @param {Object} resultObj 结果对象\r\n     * @param {String} text 当前行文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getToken(rule, match, states, newStates, resultObj, text, side) {\r\n        let result = match[0];\r\n        let token = {\r\n            ruleId: rule.ruleId,\r\n            value: result,\r\n            column: match.index\r\n        };\r\n        if (rule.start && rule.end) { //多行token-end\r\n            if (side === 'end') { //多行token尾\r\n                while (states.peek() != rule.ruleId) {\r\n                    states.pop();\r\n                }\r\n                states.pop();\r\n                if (!rule.rules) { //无子节点\r\n                    if (newStates.indexOf(rule.ruleId) > -1) { //在同一行匹配\r\n                        let value = '';\r\n                        token = resultObj.tokens.pop();\r\n                        value = token.value;\r\n                        if (token.ruleId !== rule.ruleId) {\r\n                            token = resultObj.tokens.pop();\r\n                            value = token.value + value;\r\n                        }\r\n                        token.value = value + result;\r\n                    } else { //跨行匹配\r\n                        resultObj.tokens.pop()\r\n                        token.value = text.slice(0, match.index + result.length);\r\n                        token.column = 0;\r\n                    }\r\n                }\r\n            } else { //多行token-start\r\n                states.push(rule.ruleId);\r\n                newStates.push(rule.ruleId);\r\n            }\r\n        }\r\n        token.type = this.getTokenType({\r\n            rule: rule,\r\n            index: match.index,\r\n            value: token.value,\r\n            text: text,\r\n            match: match,\r\n            side: side\r\n        });\r\n        return token;\r\n    }\r\n    /**\r\n     * 获取token类型\r\n     * @param {Object} option {\r\n     *  rule: 规则对象,\r\n     *  index: value在text中的开始索引,\r\n     *  text: 当前行的文本,\r\n     *  value: token的文本范围,\r\n     *  side: 开始/结束标记,\r\n     *  match: 正则执行后的结果对象\r\n     * } \r\n     */\r\n    getTokenType(option) {\r\n        let rule = option.rule;\r\n        let index = option.index || 0;\r\n        let value = option.value || option.text;\r\n        let text = option.text;\r\n        let match = option.match;\r\n        let side = option.side || (rule && rule.start && rule.end ? 'start' : '');\r\n        let type = '';\r\n        if (!rule) {\r\n            return 'plain';\r\n        }\r\n        if (typeof rule.token == 'function') {\r\n            type = rule.token({\r\n                value: value,\r\n                index: index,\r\n                text: text,\r\n                side: side\r\n            });\r\n        } else if (rule.token instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                if (side == 'start') {\r\n                    type = rule.token[0];\r\n                } else {\r\n                    type = rule.token[1];\r\n                }\r\n            } else {\r\n                let expIndex = match && this.getChildExpIndex(match) || -1;\r\n                if (expIndex > -1) {\r\n                    type = rule.token[expIndex];\r\n                } else {\r\n                    type = rule.token.join('.');\r\n                }\r\n            }\r\n        } else {\r\n            type = rule.token;\r\n        }\r\n        return type;\r\n    }\r\n    /**\r\n     * 获取折叠标记对象\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则结果对象\r\n     * @param {Array} states 状态栈\r\n     * @param {Object} resultObj 结果对象\r\n     * @param {String} text 当前行文本\r\n     */\r\n    getFold(rule, match, states, resultObj, text) {\r\n        let result = match[0];\r\n        let side = '';\r\n        let fold = null;\r\n        if (rule.start && rule.end) { //多行token被匹配\r\n            side = 'start';\r\n            if (states.indexOf(rule.ruleId) > -1) {\r\n                side = 'end';\r\n            }\r\n            if (rule.foldName) { //多行匹配可折叠\r\n                fold = {\r\n                    start: match.index,\r\n                    end: match.index + result.length,\r\n                    value: result\r\n                };\r\n            }\r\n        } else if (rule.foldName && rule.foldType) { //折叠标记\r\n            fold = {\r\n                start: match.index,\r\n                end: match.index + result.length,\r\n                value: result\r\n            };\r\n        }\r\n        if (fold) {\r\n            let foldName = this.getFoldName(rule, match, text, side);\r\n            if (!foldName) { //没有折叠名称无效\r\n                return null;\r\n            }\r\n            fold.name = foldName;\r\n            fold.type = this.getFoldType(rule, match, text, side);\r\n            if (fold.type == 1) {\r\n                fold = _checkFold(resultObj, fold);\r\n            }\r\n        }\r\n        return fold;\r\n\r\n        function _checkFold(resultObj, fold) {\r\n            let folds = resultObj.folds;\r\n            if (folds) {\r\n                for (let i = folds.length - 1; i >= 0; i--) {\r\n                    // 同行折叠无效\r\n                    if (folds[i].name == fold.name && folds[i].type == -1) {\r\n                        resultObj.folds = folds.slice(0, i);\r\n                        fold = null;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return fold;\r\n        }\r\n    }\r\n    /**\r\n     * 获取折叠名称[唯一标识]\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则执行后的结果对象\r\n     * @param {String} text 当前行的文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getFoldName(rule, match, text, side) {\r\n        let foldName = '';\r\n        if (rule.foldName instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                foldName = side == 'start' ? rule.foldName[0] : rule.foldName[1];\r\n            } else {\r\n                let expIndex = this.getChildExpIndex(match);\r\n                expIndex = expIndex == -1 ? 0 : expIndex;\r\n                foldName = rule.foldName[expIndex];\r\n            }\r\n        } else if (typeof rule.foldName === 'function') {\r\n            foldName = rule.foldName({\r\n                value: match[0],\r\n                text: text,\r\n                index: match.index,\r\n                side: side\r\n            });\r\n        } else {\r\n            foldName = rule.foldName;\r\n        }\r\n        return foldName;\r\n    }\r\n    /**\r\n     * 获取折叠类型[-1:首,1:尾]\r\n     * @param {Object} rule 规则对象\r\n     * @param {Object} match 正则执行后的结果对象\r\n     * @param {String} text 当前行的文本\r\n     * @param {String} side 开始/结束标记\r\n     */\r\n    getFoldType(rule, match, text, side) {\r\n        let foldType = '';\r\n        if (rule.foldType instanceof Array) {\r\n            if (rule.start && rule.end) {\r\n                foldType = side == 'start' ? rule.foldType[0] : rule.foldType[1];\r\n            } else {\r\n                let expIndex = this.getChildExpIndex(match);\r\n                expIndex = expIndex == -1 ? 0 : expIndex;\r\n                foldType = rule.foldType[expIndex];\r\n            }\r\n        } else if (typeof rule.foldType === 'function') {\r\n            foldType = rule.foldType({\r\n                value: match[0],\r\n                text: text,\r\n                index: match.index,\r\n                side: side\r\n            });\r\n        } else if (rule.start && rule.end) {\r\n            foldType = side == 'start' ? -1 : 1;\r\n        } else {\r\n            foldType = rule.foldType;\r\n        }\r\n        return foldType;\r\n    }\r\n    /**\r\n     * 获取子表达式索引位置\r\n     * @param {Array} match 正则exec结果\r\n     */\r\n    getChildExpIndex(match) {\r\n        if (match.childExpIndex !== undefined) {\r\n            return match.childExpIndex;\r\n        }\r\n        let captures = match.slice(1);\r\n        let hasChildExp = captures.filter((item) => {\r\n            return item\r\n        }).length > 1;\r\n        if (hasChildExp) { //正则里有子表达式\r\n            for (let i = 0; i < captures.length; i++) {\r\n                if (captures[i] != undefined) {\r\n                    captures = captures.slice(i + 1);\r\n                    break;\r\n                }\r\n            }\r\n            for (let i = 0; i < captures.length; i++) {\r\n                if (captures[i] != undefined) {\r\n                    match.childExpIndex = i;\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        match.childExpIndex = -1;\r\n        return -1;\r\n    }\r\n    getRegex(states, preRuleId) {\r\n        let preRule = this.ruleIdMap[preRuleId];\r\n        while (preRule && states.indexOf(preRule.ruleId) == -1 && preRule.endBy) {\r\n            while (states.peek() != preRule.endBy) {\r\n                states.pop();\r\n            }\r\n            states.pop();\r\n            preRule = this.ruleIdMap[preRule.endBy];\r\n        }\r\n        if (preRule && states.indexOf(preRule.ruleId) == -1 && preRule.startBy) {\r\n            states.push(preRule.startBy);\r\n        }\r\n        return this.getCombRegex(states);\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-07 10:07:14\r\n * @Description: \r\n */\r\nexport default function () {\r\n    Array.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    Array.prototype._isArray = true;\r\n    String.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    var keywords = [\r\n        \"if\", \"in\", \"do\", \"var\", \"for\", \"new\",\r\n        \"try\", \"let\", \"this\", \"else\", \"case\",\r\n        \"void\", \"with\", \"enum\", \"while\", \"break\",\r\n        \"catch\", \"throw\", \"const\", \"yield\", \"class\",\r\n        \"super\", \"return\", \"typeof\", \"delete\",\r\n        \"switch\", \"export\", \"import\", \"default\",\r\n        \"finally\", \"extends\", \"function\", \"continue\",\r\n        \"debugger\", \"instanceof\", \"async\", \"await\"\r\n    ];\r\n    var assignOperator = ['=', '>>>=', '>>=', '<<=', '+=', '-=', '*=', '/=', '%=', '&=', '|=', '^='];\r\n    var binaryOperator = [\r\n        '+', '-', '*', '/', '%', '&', '|', '^', '&&', '||', '===', '==', '!=', '!==',\r\n        '>', '>=', '<', '<=', '>>', '>>>', '<<', 'instanceof', 'in'\r\n    ];\r\n    var unitOperator = ['+', '-', '~', '!', 'typeof', 'delete', 'void'];\r\n    var brackets = ['{', '}', '[', ']', '(', ')'];\r\n    var regs = {\r\n        space: /^\\s+/,\r\n        number: /^(?:\\d+(?:\\.\\d*)?|\\.\\d+?|0x[a-z0-9]+?)(?:e[\\+\\-]?\\d+(?:\\.\\d*)?)?\\b/i,\r\n        identifier: /^[a-zA-Z_$][a-zA-Z0-9_$]*/,\r\n        comment: /\\*\\//,\r\n        string1: /\\\\*'/,\r\n        string2: /\\\\*\"/,\r\n        string3: /(\\\\*`)|(\\$\\{)/,\r\n        regex: /^\\/(?:\\\\[\\s\\S]|[^\\\\])+?\\//,\r\n        other: /^[^\\s+\\-\\*\\/%&\\|\\^\\=\\!\\>\\<\\~\\{\\}\\(\\)]+/\r\n    }\r\n    var regflagsMap = {\r\n        'i': true,\r\n        'm': true,\r\n        'g': true,\r\n        'gi': true,\r\n        'gm': true,\r\n        'im': true,\r\n        'gim': true,\r\n    }\r\n    var maxErrors = 100;\r\n\r\n    function TokenType(type, label) {\r\n        this.type = type;\r\n        this.label = label;\r\n        this._isTokenType = true;\r\n    }\r\n\r\n    TokenType.prototype.toString = function () {\r\n        return this.label;\r\n    }\r\n\r\n    TokenType.NUMBER = new TokenType(1, 'number');\r\n    TokenType.BOOLEAN = new TokenType(2, 'boolean');\r\n    TokenType.STRING = new TokenType(3, 'string');\r\n    TokenType.IDENTIFIER = new TokenType(4, 'identifier');\r\n    TokenType.KEYWORD = new TokenType(5, 'keyword');\r\n    TokenType.OPERATOR = new TokenType(6, 'operator');\r\n    TokenType.BRACKET = new TokenType(7, 'bracket');\r\n    TokenType.PUNCTUATOR = new TokenType(8, 'punctuator');\r\n    TokenType.REGEXP = new TokenType(9, 'regexp');\r\n    TokenType.OTHER = new TokenType(10, 'other');\r\n\r\n    function ErrorType(type) {\r\n        this.type = type;\r\n    }\r\n\r\n    ErrorType.UNEXPECTED = new ErrorType(1);\r\n    ErrorType.EXPECTED = new ErrorType(2);\r\n    ErrorType.MISS = new ErrorType(3);\r\n    ErrorType.UNMATCH = new ErrorType(4);\r\n\r\n    function Error(token, type, param) {\r\n        token = token || {};\r\n        this.type = type;\r\n        this.param = param;\r\n        this.line = token.line;\r\n        this.column = token.column;\r\n        this.value = token.value;\r\n        this.error = this.toString();\r\n    }\r\n\r\n    Error.prototype.toString = function () {\r\n        var error = '';\r\n        var param = this.param instanceof Array ? this.param : [this.param];\r\n        param = `${param.length === 1 ? 'a ' : ''}'${param.join(`'、'`)}'`;\r\n        switch (this.type) {\r\n            case ErrorType.UNEXPECTED:\r\n                error = `unexpected '${this.value}'`;\r\n                break;\r\n            case ErrorType.EXPECTED:\r\n                error = `expected ${param}`;\r\n                if (this.value) {\r\n                    error += ` and instead saw '${this.value}'`;\r\n                }\r\n                break;\r\n            case ErrorType.MISS:\r\n                error = `missing ${param}`;\r\n                if (this.value) {\r\n                    error += ` before '${this.value}'`\r\n                }\r\n                break;\r\n            case ErrorType.UNMATCH:\r\n                error = `unmatched '${this.value}'`\r\n                break;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    Error.push = function (error) {\r\n        Error.errors.push(error);\r\n    }\r\n\r\n    Error.expectedIdentifier = function (token) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, TokenType.IDENTIFIER));\r\n    }\r\n\r\n    Error.expectedSemicolon = function (token) {\r\n        Error.push(new Error(token, ErrorType.MISS, ';'));\r\n    }\r\n\r\n    Error.expected = function (token, value) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, value));\r\n    }\r\n\r\n    Error.unexpected = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNEXPECTED));\r\n    }\r\n\r\n    Error.unmatch = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNMATCH));\r\n    }\r\n\r\n    // 词法分析器\r\n    function Lexer() {\r\n        this.init();\r\n    }\r\n\r\n    Lexer.prototype.init = function () {\r\n        Error.errors = [];\r\n        this.lines = [''];\r\n        this.line = 1;\r\n        this.column = 0;\r\n        this.input = '';\r\n        this.assignOperatorMap = {};\r\n        this.unitOperatorMap = {};\r\n        this.binaryOperatorMap = {};\r\n        this.keywordsMap = new Map();\r\n        this.bracketsMap = new Map();\r\n        assignOperator.map((item) => {\r\n            this.assignOperatorMap[item] = true;\r\n        });\r\n        unitOperator.map((item) => {\r\n            this.unitOperatorMap[item] = true;\r\n        });\r\n        binaryOperator.map((item) => {\r\n            this.binaryOperatorMap[item] = true;\r\n        });\r\n        keywords.map((item) => {\r\n            this.keywordsMap.set(item, true);\r\n        });\r\n        brackets.map((item) => {\r\n            this.bracketsMap.set(item, true);\r\n        });\r\n    }\r\n\r\n    Lexer.prototype.reset = function (option) {\r\n        this.lines = option.texts;\r\n        this.line = option.line || 1;\r\n        this.column = option.column || 0\r\n        this.input = this.lines[this.line - 1].slice(this.column);\r\n    }\r\n\r\n    Lexer.prototype.skip = function (length) {\r\n        this.input = length ? this.input.slice(length) : this.input;\r\n        this.column += length;\r\n    }\r\n\r\n    Lexer.prototype.skipLine = function (length) {\r\n        this.line += length;\r\n        this.column = 0;\r\n        this.input = this.lines[this.line - 1] || '';\r\n    }\r\n\r\n    Lexer.prototype.hasNext = function () {\r\n        if (Error.errors.length > maxErrors) {\r\n            return false;\r\n        }\r\n        return this.line < this.lines.length ||\r\n            this.line == this.lines.length && this.lines.peek().length > this.column\r\n    }\r\n\r\n    Lexer.prototype.isVariable = function (token) {\r\n        return token.type == TokenType.IDENTIFIER || token.value == 'this';\r\n    }\r\n\r\n    Lexer.prototype.isValue = function (token) {\r\n        return this.isScalar(token) || this.isVariable(token);\r\n    }\r\n\r\n    Lexer.prototype.isScalar = function (token) {\r\n        return (\r\n            token.type == TokenType.NUMBER ||\r\n            token.type == TokenType.STRING ||\r\n            token.type == TokenType.BOOLEAN ||\r\n            token.type == TokenType.REGEXP\r\n        );\r\n    }\r\n\r\n    Lexer.prototype.isDotAble = function (token) {\r\n        return token.type === TokenType.IDENTIFIER || token.type === TokenType.KEYWORD;\r\n    }\r\n\r\n    Lexer.prototype.isPostOp = function (token) {\r\n        return token.value === '++' || token.value === '--';\r\n    }\r\n\r\n    Lexer.prototype.isPreOp = function (token) {\r\n        return token.value === '++' || token.value === '--';\r\n    }\r\n\r\n    Lexer.prototype.isAssignOperator = function (token) {\r\n        return this.assignOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isUnitOperator = function (token) {\r\n        return this.unitOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isBinaryOperator = function (token) {\r\n        return this.binaryOperatorMap[token.value];\r\n    }\r\n\r\n    Lexer.prototype.isKeyWord = function (value) {\r\n        return this.keywordsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isBracket = function (value) {\r\n        return this.bracketsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isTokenType = function (type) {\r\n        return type._isTokenType;\r\n    }\r\n\r\n    Lexer.prototype.craeteToken = function (value, type) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        if (line > this.lines.length) {\r\n            line = this.lines.length;\r\n            column = this.lines.peek().length;\r\n        }\r\n        return {\r\n            type: type,\r\n            line: line,\r\n            column: column,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanSpace = function () {\r\n        var exec = null;\r\n        while (!this.input.length && this.line < this.lines.length) { //去掉空行\r\n            this.skipLine(1);\r\n        }\r\n        exec = regs.space.exec(this.input);\r\n        if (exec) {\r\n            this.skip(exec.index + exec[0].length);\r\n            exec.index >= this.input.length - 1 && this.scanSpace();\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanComment = function () {\r\n        var exec = null;\r\n        var ch1 = null;\r\n        var ch2 = null;\r\n        var startToken = null;\r\n        this.scanSpace(); //去掉空格\r\n        ch1 = this.input[0];\r\n        ch2 = this.input[1];\r\n        if (ch1 === '/' && ch2 == '/') {\r\n            this.skipLine(1);\r\n            this.scanComment();\r\n        } else if (ch1 === '/' && ch2 === '*') {\r\n            startToken = this.craeteToken('/*');\r\n            this.skip(2);\r\n            while (this.hasNext() && !(exec = regs.comment.exec(this.input))) {\r\n                this.skipLine(1);\r\n            }\r\n            if (exec) {\r\n                this.skip(exec.index + exec[0].length);\r\n            } else {\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanString = function () {\r\n        var that = this;\r\n        var exec = null;\r\n        var token = null;\r\n        var startToken = null;\r\n        if (this.input[0] === '\\'') {\r\n            startToken = this.craeteToken('\\'', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string1);\r\n            token = this.craeteToken('\\'', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '\"') {\r\n            startToken = this.craeteToken('\"', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string2);\r\n            token = this.craeteToken('\"', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '`') {\r\n            startToken = this.craeteToken('`', TokenType.STRING);\r\n            this.skip(1);\r\n            while (this.hasNext()) {\r\n                exec = regs.string3.exec(this.input)\r\n                if (exec && exec[2]) { //模板字符串内的表达式：${test}\r\n                    _parseTmpStr(exec);\r\n                } else if (!exec || exec[0].length % 2 === 0) { //含有基数个\\：\\\\\\`\r\n                    this.skipLine(1);\r\n                } else {\r\n                    this.skip(exec.index + exec[0].length);\r\n                    break;\r\n                }\r\n            }\r\n            token = this.craeteToken('`', TokenType.STRING);\r\n            if (!(exec && exec[0].length % 2 === 1)) { //未匹配到结束符\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n        return token;\r\n\r\n        function _end(reg) {\r\n            if (exec = reg.exec(that.input)) {\r\n                that.skip(exec.index + exec[0].length);\r\n                if (exec[0].length % 2 === 0) { //含有奇数个\\:\\\\\\'\r\n                    return _end(reg);\r\n                }\r\n                return true;\r\n            } else if (that.input.peek() === '\\\\') {\r\n                that.skipLine(1);\r\n                return _end(reg);\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function _parseTmpStr(exec) {\r\n            let preToken = that.parser.preToken;\r\n            let backs = that.parser.backs.slice(0);\r\n            let parseList = that.parser.parseList.slice(0);\r\n            that.skip(exec.index + exec[2].length);\r\n            //清空状态--begin\r\n            that.parser.preToken = null;\r\n            that.parser.backs = [];\r\n            that.parser.parseList = [];\r\n            //清空状态--end\r\n            that.parser.parseExprStmt();\r\n            that.parser.peekMatch('}');\r\n            //恢复状态--begin\r\n            that.parser.preToken = preToken;\r\n            that.parser.backs = backs;\r\n            that.parser.parseList = parseList;\r\n            //恢复状态--end\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanNunmber = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.number.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.NUMBER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanIdentifier = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.identifier.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], this.isKeyWord(exec[0]) ? TokenType.KEYWORD : TokenType.IDENTIFIER);\r\n            if (token.value === 'true' || token.value === 'false') {\r\n                token.type = TokenType.BOOLEAN;\r\n            }\r\n            if (token.value === 'null') {\r\n                token.type = TokenType.NUMBER;\r\n            }\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanBracket = function () {\r\n        var token = null;\r\n        var ch = this.input[0];\r\n        if (this.isBracket(ch)) {\r\n            token = this.craeteToken(ch, TokenType.BRACKET);\r\n            this.skip(1);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    // 操作符号\r\n    Lexer.prototype.scanOperator = function () {\r\n        var ch1 = this.input[0];\r\n        var ch2 = this.input[1];\r\n        var ch3 = this.input[2];\r\n        var ch4 = this.input[3];\r\n        var token = null;\r\n        if (ch1 == '.' && ch2 === '.' && ch3 === '.') {\r\n            token = this.craeteToken('...', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \">\" && ch4 === \"=\") {\r\n            token = this.craeteToken('>>>=', TokenType.OPERATOR);\r\n        } else if (ch1 === \"=\" && ch2 === \"=\" && ch3 === \"=\") {\r\n            token = this.craeteToken('===', TokenType.OPERATOR);\r\n        } else if (ch1 === \"!\" && ch2 === \"=\" && ch3 === \"=\") {\r\n            token = this.craeteToken('!==', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \">\") {\r\n            token = this.craeteToken('>>>', TokenType.OPERATOR);\r\n        } else if (ch1 === \"<\" && ch2 === \"<\" && ch3 === \"=\") {\r\n            token = this.craeteToken('<<=', TokenType.OPERATOR);\r\n        } else if (ch1 === \">\" && ch2 === \">\" && ch3 === \"=\") {\r\n            token = this.craeteToken('>>=', TokenType.OPERATOR);\r\n        } else if (ch1 === \"=\" && ch2 === \">\") {\r\n            token = this.craeteToken('=>', TokenType.OPERATOR);\r\n        } else if (ch1 === ch2 && (\"+-<>&|*\".indexOf(ch1) >= 0)) {\r\n            if (ch1 === \"*\" && ch3 === \"=\") {\r\n                token = this.craeteToken(ch1 + ch2 + ch3, TokenType.OPERATOR);\r\n            } else {\r\n                token = this.craeteToken(ch1 + ch2, TokenType.OPERATOR);\r\n            }\r\n        } else if (\"<>=!+-*%&|^/\".indexOf(ch1) >= 0) {\r\n            if (ch2 === \"=\") {\r\n                token = this.craeteToken(ch1 + ch2, TokenType.OPERATOR);\r\n            } else {\r\n                token = this.craeteToken(ch1, TokenType.OPERATOR);\r\n            }\r\n        } else if ('?:.;,~'.indexOf(ch1) > -1) {\r\n            token = this.craeteToken(ch1, TokenType.OPERATOR);\r\n        }\r\n        token && this.skip(token.value.length);\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanOther = function () {\r\n        var exec = null;\r\n        var token = null;\r\n        if (exec = regs.other.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.OTHER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token\r\n    }\r\n\r\n    Lexer.prototype.next = function () {\r\n        let token = null;\r\n        let that = this;\r\n        this.scanComment();\r\n        if (this.hasNext()) {\r\n            token =\r\n                this.scanIdentifier() ||\r\n                this.scanBracket() ||\r\n                this.scanNunmber() ||\r\n                this.scanString() ||\r\n                _scanOp()\r\n            if (!token) { //存在非法变量\r\n                token = this.scanOther();\r\n                token && Error.unexpected(token);\r\n                return this.next();\r\n            }\r\n        }\r\n        this.preToken = token;\r\n        return token;\r\n\r\n        function _scanOp() {\r\n            let token = null;\r\n            if (\r\n                that.input[0] === '/' &&\r\n                (\r\n                    !that.preToken ||\r\n                    that.preToken.type === TokenType.OPERATOR ||\r\n                    that.preToken.value === '{' ||\r\n                    that.preToken.value === '[' ||\r\n                    that.preToken.value === '(' ||\r\n                    that.preToken.value === 'return'\r\n                )\r\n            ) {\r\n                let exec = regs.regex.exec(that.input);\r\n                if (exec) {\r\n                    token = that.craeteToken(exec[0], TokenType.REGEXP);\r\n                    that.skip(exec.index + exec[0].length);\r\n                } else {\r\n                    token = that.craeteToken(that.input, TokenType.REGEXP);\r\n                    that.skipLine(1);\r\n                    if (token.value.peek() !== '/') {\r\n                        let _token = Object.assign({}, token);\r\n                        _token.value = '/';\r\n                        Error.unmatch(_token);\r\n                    }\r\n                }\r\n            } else {\r\n                token = that.scanOperator();\r\n            }\r\n            return token;\r\n        }\r\n    }\r\n\r\n    // 语法分析器\r\n    function Parser(lexer) {\r\n        this.lexer = lexer;\r\n        this.cacheList = [];\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        Error.errors = [];\r\n    }\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        this.recovery(text);\r\n        Error.errors = [];\r\n    }\r\n\r\n    // 添加缓存\r\n    Parser.prototype.cache = function () {\r\n        if (this.cacheList.length && this.cacheList.peek().line == this.lexer.line) {\r\n            this.cacheList.pop();\r\n        }\r\n        this.preToken && this.cacheList.push({\r\n            line: this.preToken.line,\r\n            column: this.preToken.column,\r\n            parseList: this.parseList.slice(0)\r\n        });\r\n    }\r\n\r\n    // 从缓存中恢复\r\n    Parser.prototype.recovery = function (text) {\r\n        var index = 0;\r\n        var texts = text.split('\\n') || [''];\r\n        var hasCache = false;\r\n        while (index < texts.length && index < this.lexer.lines.length && texts[index] === this.lexer.lines[index]) {\r\n            index++;\r\n        }\r\n        if (index > 0) {\r\n            var cacheIndex = -1;\r\n            for (var i = 0; i < this.cacheList.length; i++) {\r\n                if (this.cacheList[i].line <= index) {\r\n                    cacheIndex = i;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            if (cacheIndex > -1) {\r\n                var cache = this.cacheList[cacheIndex];\r\n                this.parseList = cache.parseList;\r\n                this.cacheList = this.cacheList.slice(0, cacheIndex + 1);\r\n                this.lexer.reset({\r\n                    texts: texts,\r\n                    line: cache.line,\r\n                    column: cache.column\r\n                });\r\n                this.next();\r\n                hasCache = true;\r\n            }\r\n        }\r\n        if (!hasCache) {\r\n            this.cacheList = [];\r\n            this.lexer.reset({\r\n                texts: texts\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.match = function (token, value) {\r\n        var pass = false;\r\n        for (var i = 0; i < value.length; i++) {\r\n            if (this.lexer.isTokenType(value[i])) {\r\n                if (value[i] === token.type) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            } else if (value[i] === token.value) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        };\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.next = function (length) {\r\n        var token = null;\r\n        length = length || 1;\r\n        while (length > 0) {\r\n            if (this.backs.length) {\r\n                token = this.backs.shift();\r\n            } else {\r\n                token = this.lexer.next();\r\n            }\r\n            this.pre2Token = this.preToken;\r\n            this.preToken = token || this.preToken;\r\n            length--;\r\n        }\r\n        this.puted = false;\r\n        return token;\r\n    }\r\n\r\n    Parser.prototype.nextMatch = function (value) {\r\n        var token = this.next() || {};\r\n        var pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (!pass) {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.peek = function (length) {\r\n        var token = null;\r\n        length = length || 1;\r\n        if (this.backs.length) {\r\n            token = this.backs[length - 1];\r\n        }\r\n        if (!token) {\r\n            length -= this.backs.length;\r\n            while (length > 0) {\r\n                length--;\r\n                token = this.lexer.next();\r\n                token && this.backs.push(token);\r\n            }\r\n        }\r\n        return token || {};\r\n    }\r\n\r\n    Parser.prototype.peekMatch = function (value) {\r\n        var token = this.peek() || {};\r\n        var pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (pass) {\r\n            this.next();\r\n        } else {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.hasNext = function () {\r\n        var lookahead = this.peek();\r\n        return lookahead.value\r\n    }\r\n\r\n    Parser.prototype.putBack = function () {\r\n        if (this.preToken && !this.puted) {\r\n            this.backs.unshift(this.preToken);\r\n            this.preToken = this.pre2Token;\r\n            this.puted = true;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.skipSemicolon = function (length) {\r\n        length = length || Infinity\r\n        while (this.peek().value === ';' && length > 0) {\r\n            this.next();\r\n            length--;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        var count = 0;\r\n        var startTime = Date.now();\r\n        while (this.hasNext()) {\r\n            this.parseStmt();\r\n            !Error.errors.length && this.cache();\r\n            if (++count % 10 === 0 && Date.now() - startTime > 200) {\r\n                this.parseTimer = setTimeout(() => {\r\n                    this.parseStmt();\r\n                }, 10);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 代码块\r\n    Parser.prototype.parseStmt = function (skipCheckSemicolon) {\r\n        var lookahead = this.peek();\r\n        if (skipCheckSemicolon) {\r\n            if (lookahead.value === ';') {\r\n                return;\r\n            }\r\n        } else if (this.preToken && this.preToken.line == lookahead.line &&\r\n            this.preToken.value != '{' && this.preToken.value != '}' &&\r\n            lookahead.value != ';') { //两条语句在同一行，且没有分隔符\r\n            Error.expectedSemicolon(lookahead);\r\n        }\r\n        this.skipSemicolon();\r\n        lookahead = this.peek();\r\n        if (lookahead.type === TokenType.IDENTIFIER && this.peek(2).value === ':') { //跳转标记\r\n            this.next(2);\r\n            lookahead = this.peek();\r\n        }\r\n        switch (lookahead.value) {\r\n            case 'var':\r\n            case 'let':\r\n            case 'const':\r\n                this.parseDeclareStmt();\r\n                break;\r\n            case '{':\r\n                if (this.peek(3).value === ':') {\r\n                    this.parseObjectStmt();\r\n                } else {\r\n                    this.parseBlockStmt();\r\n                }\r\n                break;\r\n            case 'import':\r\n                this.parseImportStmt();\r\n                break;\r\n            case 'export':\r\n                this.parseExportStmt();\r\n                break;\r\n            case 'if':\r\n                this.parseIfStmt();\r\n                break;\r\n            case 'switch':\r\n                this.parseSwitchStmt();\r\n                break;\r\n            case 'with':\r\n                this.parseWithStmt();\r\n                break;\r\n            case 'while':\r\n                this.parseWhileStmt();\r\n                break;\r\n            case 'do':\r\n                this.parseDoStmt();\r\n                break;\r\n            case 'try':\r\n                this.parseTryStmt();\r\n                break;\r\n            case 'for':\r\n                this.parseForStmt();\r\n                break;\r\n            case 'class':\r\n                this.parseClassStmt();\r\n                break;\r\n            case 'continue':\r\n            case 'break':\r\n                this.parseControlStmt();\r\n                break;\r\n            case 'return':\r\n                this.parseReturnStmt();\r\n                break;\r\n            case 'throw':\r\n                this.parseThrowStmt();\r\n                break;\r\n            case 'function':\r\n                this.parseFunctionStmt(true);\r\n                break;\r\n            default:\r\n                this.parseExprStmt();\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 代码块\r\n    Parser.prototype.parseBlockStmt = function (ends) {\r\n        let start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext()) {\r\n            this.skipSemicolon();\r\n            let lookahead = this.peek();\r\n            if (lookahead.value === '}' || ends && ends.indexOf(lookahead.value) > -1) {\r\n                break;\r\n            }\r\n            this.parseStmt(true);\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 对象字面量\r\n    Parser.prototype.parseObjectStmt = function () {\r\n        var start = this.peek();\r\n        var lookahead = null;\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek().value === '...') { //对象展开运算符\r\n                this.next();\r\n                if (this.peek().value === '{') { //{...{a:1}}\r\n                    this.parseObjectStmt();\r\n                } else { //{...a}\r\n                    this.nextMatch(TokenType.IDENTIFIER);\r\n                }\r\n            } else {\r\n                if (this.peek().value === '[') { //{[1]:1}\r\n                    this.next();\r\n                    this.parseExpr();\r\n                    this.peekMatch(']');\r\n                } else if (this.peek().type === TokenType.OPERATOR) { //非法属性名\r\n                    Error.unexpected(this.next());\r\n                } else if (!this.hasNext()) {\r\n                    break;\r\n                } else {\r\n                    this.next();\r\n                }\r\n                lookahead = this.peek();\r\n                if (lookahead.value === ':' || this.preToken.value === ']') { //{a:1,[1]:1}\r\n                    this.peekMatch(':');\r\n                    this.parseExpr();\r\n                } else { //{a,b}\r\n                    if (this.preToken.type !== TokenType.IDENTIFIER) {\r\n                        Error.expected(lookahead, ':');\r\n                    }\r\n                    if (lookahead.value === '(') { //{a(){},b}\r\n                        this.parseFunArgsStmt();\r\n                        this.parseBlockStmt();\r\n                    } else if (this.peek(2).value === '(') { //{get a(){}, static b(){}}\r\n                        if (this.preToken.value !== 'get' && this.preToken.value !== 'static') {\r\n                            Error.expected(this.preToken, ['get', 'static']);\r\n                        }\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                        this.parseFunArgsStmt();\r\n                        this.parseBlockStmt();\r\n                    }\r\n                }\r\n            }\r\n            if (this.peek().value != '}') {\r\n                if (!this.peekMatch(',')) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 声明语句\r\n    Parser.prototype.parseDeclareStmt = function () {\r\n        let that = this;\r\n        this.nextMatch(['var', 'let', 'const']);\r\n        _identifier()\r\n        if (this.peek().value === '=') {\r\n            _assign();\r\n        }\r\n        while (this.hasNext() && this.peek().value === ',') {\r\n            this.next();\r\n            _identifier();\r\n            if (this.peek().value === '=') {\r\n                _assign();\r\n            }\r\n        }\r\n\r\n        function _assign() {\r\n            that.next();\r\n            that.parseExpr();\r\n        }\r\n\r\n        function _identifier() {\r\n            let lookahead = that.peek();\r\n            if (lookahead.value === '{' || lookahead.value === '[') { //es6:const {a,b} = {a:1,b:2}、const [a,b] = [1,2]\r\n                let startToken = that.next();\r\n                let value = lookahead.value === '{' ? '}' : ']';\r\n                that.nextMatch(TokenType.IDENTIFIER);\r\n                while (that.hasNext() && that.peek().value !== value) {\r\n                    that.peekMatch(',')\r\n                    if (!that.peekMatch(TokenType.IDENTIFIER)) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (!that.peekMatch(value)) {\r\n                    Error.unmatch(startToken);\r\n                }\r\n            } else {\r\n                that.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n        }\r\n    }\r\n\r\n    // 赋值语句\r\n    Parser.prototype.parseAssignStmt = function (value) {\r\n        value = value || '=';\r\n        this.nextMatch(value);\r\n        while (this.hasNext()) {\r\n            if (this.peek(2).value === '=') { //a=1,b=2\r\n                !this.lexer.isVariable(this.next()) && Error.expected(TokenType.IDENTIFIER);\r\n                this.parseAssignStmt('=');\r\n                break;\r\n            } else {\r\n                this.parseExpr();\r\n            }\r\n            if (this.peek().value !== ',') {\r\n                break;\r\n            }\r\n            this.next();\r\n        }\r\n    }\r\n\r\n    // import语句\r\n    Parser.prototype.parseImportStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('import');\r\n        lookahead = this.peek();\r\n        if (lookahead.type === TokenType.STRING) { //import 'test.css'\r\n            this.next();\r\n        } else {\r\n            if (lookahead.value === '{') { //import {a,b,c} from 'test'\r\n                this.next();\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                while (this.hasNext() && this.peek().value != '}') {\r\n                    this.peekMatch(',')\r\n                    if (!this.peekMatch(TokenType.IDENTIFIER)) {\r\n                        break;\r\n                    }\r\n                    if (this.peek().value === 'as') { //import {a as b} from 'test'\r\n                        this.next();\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                    }\r\n                }\r\n                if (!this.peekMatch('}')) {\r\n                    Error.unmatch(lookahead);\r\n                }\r\n            } else if (lookahead.value === '*') { //import * as a from 'test'\r\n                this.next();\r\n                this.nextMatch('as');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            } else { //import a from 'test'\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n            this.nextMatch('from');\r\n            this.nextMatch(TokenType.STRING);\r\n        }\r\n    }\r\n\r\n    // export语句\r\n    Parser.prototype.parseExportStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('export');\r\n        lookahead = this.peek();\r\n        if (lookahead.value === 'function') { //export function test\r\n            this.next();\r\n            this.parseFunctionStmt();\r\n        } else if (lookahead.value === 'default') { //export default test\r\n            this.next();\r\n            lookahead = this.peek();\r\n            if (lookahead.value == 'function') { //export default function\r\n                this.parseFunctionStmt();\r\n            } else if (lookahead.value === 'class') { //export default class {}\r\n                this.parseClassStmt();\r\n            } else {\r\n                this.parseExprStmt();\r\n            }\r\n        } else if (lookahead.value === '{') { //export {a,b,c} from 'test'\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            while (this.hasNext() && this.peek().value != '}') {\r\n                this.peekMatch(',')\r\n                if (!this.peekMatch(TokenType.IDENTIFIER)) {\r\n                    break;\r\n                }\r\n                if (this.peek().value === 'as') { //export {a as b} from 'test'\r\n                    this.next();\r\n                    this.nextMatch(TokenType.IDENTIFIER);\r\n                }\r\n            }\r\n            if (!this.peekMatch('}')) {\r\n                Error.unmatch(lookahead);\r\n            }\r\n            if (this.peek().value === 'from') {\r\n                this.next();\r\n                this.nextMatch(TokenType.STRING);\r\n            }\r\n        } else if (lookahead.value === '*') { //export * as a from 'test'\r\n            this.next();\r\n            if (this.peek().value === 'as') {\r\n                this.nextMatch('as');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n            }\r\n            this.nextMatch('from');\r\n            this.nextMatch(TokenType.STRING);\r\n        } else { //export let a=1,b,c\r\n            this.parseDeclareStmt();\r\n        }\r\n    }\r\n\r\n    // if语句\r\n    Parser.prototype.parseIfStmt = function () {\r\n        let that = this;\r\n        let lookahead = null;\r\n        this.nextMatch('if');\r\n        this.parseList.push('if');\r\n        _nextExpr();\r\n        if (_stmt() && this.peek().value === ';') {\r\n            lookahead = this.peek(2);\r\n        } else {\r\n            lookahead = this.peek();\r\n        }\r\n        if (lookahead.value === 'else') {\r\n            this.next().value === ';' && this.next();\r\n            if (this.peek().value === 'if') {\r\n                this.parseIfStmt();\r\n            } else {\r\n                _stmt();\r\n            }\r\n        }\r\n        this.parseList.pop();\r\n\r\n        function _nextExpr() {\r\n            that.peekMatch('(');\r\n            that.parseExprStmt();\r\n            that.peekMatch(')');\r\n        }\r\n\r\n        function _stmt() {\r\n            if (that.peek().value === '{') {\r\n                that.parseBlockStmt(['else']);\r\n            } else {\r\n                that.parseStmt(true);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // switch语句\r\n    Parser.prototype.parseSwitchStmt = function () {\r\n        let start = null;\r\n        let lookahead = null;\r\n        this.parseList.push('switch');\r\n        this.nextMatch('switch');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek().value === 'default') {\r\n                this.nextMatch('default');\r\n            } else {\r\n                this.nextMatch('case');\r\n                this.parseExprStmt();\r\n            }\r\n            this.peekMatch(':');\r\n            while (this.hasNext()) {\r\n                this.skipSemicolon();\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '}' ||\r\n                    lookahead.value === 'break' ||\r\n                    lookahead.value === 'case' ||\r\n                    lookahead.value === 'default') {\r\n                    break;\r\n                }\r\n                this.parseStmt(true);\r\n            }\r\n            if (this.peek().value === 'break') {\r\n                let map = {\r\n                    '}': true,\r\n                    'case': true,\r\n                    'default': true,\r\n                }\r\n                this.next();\r\n                this.skipSemicolon();\r\n                lookahead = this.peek();\r\n                if (!map[lookahead.value]) { //break后面只能跟随case\r\n                    Error.expected(lookahead, ['case', 'default']);\r\n                    while (this.hasNext() && !map[this.peek().value]) {\r\n                        this.next();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // with语句\r\n    Parser.prototype.parseWithStmt = function () {\r\n        this.nextMatch('with');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        this.parseBlockStmt();\r\n    }\r\n\r\n    // while语句\r\n    Parser.prototype.parseWhileStmt = function () {\r\n        this.parseList.push('while');\r\n        this.nextMatch('while');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // do while语句\r\n    Parser.prototype.parseDoStmt = function () {\r\n        this.parseList.push('do');\r\n        this.nextMatch('do');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n            this.skipSemicolon(1);\r\n        }\r\n        this.nextMatch('while');\r\n        this.peekMatch('(');\r\n        this.parseExprStmt();\r\n        this.peekMatch(')');\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // try catch语句\r\n    Parser.prototype.parseTryStmt = function () {\r\n        let lookahead = null;\r\n        this.nextMatch('try');\r\n        this.parseBlockStmt();\r\n        lookahead = this.peek();\r\n        if (lookahead.value !== 'catch' && lookahead.value !== 'finally') {\r\n            Error.expected(lookahead, ['catch', 'finally']);\r\n        } else {\r\n            if (lookahead.value === 'catch') {\r\n                this.nextMatch('catch');\r\n                this.peekMatch('(');\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.peekMatch(')');\r\n                this.parseBlockStmt();\r\n            }\r\n            if (this.peek().value === 'finally') {\r\n                this.next();\r\n                this.parseBlockStmt();\r\n            }\r\n        }\r\n    }\r\n\r\n    // for语句\r\n    Parser.prototype.parseForStmt = function () {\r\n        this.parseList.push('for');\r\n        this.nextMatch('for');\r\n        this.peekMatch('(');\r\n        if (this.peek(2).value === 'in' ||\r\n            this.peek(2).value === 'of' ||\r\n            this.peek(3).value === 'in' ||\r\n            this.peek(3).value === 'of') { //for in、es6 for of 语句\r\n            if (this.peek(3).value === 'in' || this.peek(3).value === 'of') {\r\n                this.nextMatch(['var', 'let', 'const']);\r\n            }\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            this.nextMatch(['in', 'of']);\r\n            this.parseExprStmt();\r\n        } else {\r\n            if (['var', 'let', 'const'].indexOf(this.peek().value) > -1) {\r\n                this.parseDeclareStmt();\r\n            } else if (this.peek().value != ';') {\r\n                this.parseExprStmt();\r\n            }\r\n            this.nextMatch(';');\r\n            this.peek().value != ';' && this.parseExprStmt();\r\n            this.nextMatch(';');\r\n            this.peek().value != ')' && this.parseExprStmt();\r\n        }\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else {\r\n            this.parseStmt(true);\r\n        }\r\n        this.parseList.pop();\r\n    }\r\n\r\n    // 函数声明\r\n    Parser.prototype.parseFunctionStmt = function (needName) {\r\n        this.nextMatch('function');\r\n        if (this.peek().type === TokenType.IDENTIFIER || needName) {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        this.parseFunArgsStmt();\r\n        this.parseBlockStmt();\r\n    }\r\n\r\n    // 类声明\r\n    Parser.prototype.parseClassStmt = function () {\r\n        var start = null;\r\n        var needName = !this.preToken || ['(', '=', 'default'].indexOf(this.preToken.value) == -1;\r\n        this.nextMatch('class');\r\n        if (this.peek().type === TokenType.IDENTIFIER || needName) {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        if (this.peek().value === 'extends') {\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        start = this.peek();\r\n        this.peekMatch('{');\r\n        while (this.hasNext() && this.peek().value != '}') {\r\n            if (this.peek(2).value === '=') { //属性\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.parseAssignStmt('=');\r\n            } else { //方法\r\n                if (this.peek().value === 'static' || this.peek().value === 'get') {\r\n                    this.next();\r\n                }\r\n                this.nextMatch(TokenType.IDENTIFIER);\r\n                this.parseFunArgsStmt();\r\n                this.parseBlockStmt();\r\n            }\r\n        }\r\n        if (!this.peekMatch('}') && start.value === '{') {\r\n            Error.unmatch(start);\r\n        }\r\n    }\r\n\r\n    // 函数参数\r\n    Parser.prototype.parseFunArgsStmt = function () {\r\n        let that = this;\r\n        this.peekMatch('(');\r\n        if (this.peek().value != ')') {\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n        }\r\n        if (this.peek().value === '=') { //es6预设值\r\n            _assign();\r\n        }\r\n        while (this.hasNext() && this.peek().value === ',') {\r\n            this.next();\r\n            this.nextMatch(TokenType.IDENTIFIER);\r\n            if (this.peek().value === '=') {\r\n                _assign();\r\n            }\r\n        }\r\n        this.peekMatch(')');\r\n\r\n        function _assign() {\r\n            that.next();\r\n            that.parseExpr();\r\n        }\r\n    }\r\n\r\n    // break,continue\r\n    Parser.prototype.parseControlStmt = function () {\r\n        var token = this.next();\r\n        if (!this.checkIn(['for', 'while', 'do', 'if'])) {\r\n            Error.unexpected(token);\r\n        } else if (this.peek().type === TokenType.IDENTIFIER) { //continue flag\r\n            this.next();\r\n        }\r\n    }\r\n\r\n    // return语句\r\n    Parser.prototype.parseReturnStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('return');\r\n        lookahead = this.peek();\r\n        if (lookahead.value !== ';' && lookahead.value !== '}' && lookahead.line === this.preToken.line) {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    // throw语句\r\n    Parser.prototype.parseThrowStmt = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('throw');\r\n        lookahead = this.peek();\r\n        if (lookahead.line !== this.preToken.line) {\r\n            Error.expected(lookahead, 'expression');\r\n        } else {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.checkIn = function (value) {\r\n        value = value instanceof Array ? value : [value];\r\n        for (var i = this.parseList.length; i >= 0; i--) {\r\n            if (value.indexOf(this.parseList[i]) > -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // 正则表达式\r\n    Parser.prototype.parseRegex = function () {\r\n        this.next();\r\n        if (this.peek().type === TokenType.IDENTIFIER) {\r\n            let value = this.peek().value.toLowerCase();\r\n            if (regflagsMap[value.split('').sort().join('')]) {\r\n                this.next();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 表达式分析\r\n    Parser.prototype.parseExprStmt = function () {\r\n        while (this.hasNext()) {\r\n            this.parseExpr();\r\n            if (this.peek().value == ',') { //下一个表达式\r\n                this.next();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 单条表达式分析\r\n    Parser.prototype.parseExpr = function () {\r\n        var originToken = this.peek();\r\n        var lookahead = null;\r\n        if (!this.hasNext()) {\r\n            Error.expected(null, 'expression');\r\n            return;\r\n        }\r\n        while (true) {\r\n            var leftHand = this.parseLeftHand();\r\n            if (leftHand.end) { //前面非标识符\r\n                break;\r\n            }\r\n            lookahead = this.peek();\r\n            if (lookahead.value === '.' && this.preToken.type !== TokenType.NUMBER) { //点运算符\r\n                this.parseDot();\r\n                lookahead = this.peek();\r\n                leftHand.assignAble = true;\r\n            }\r\n            if (lookahead.value === '[' && this.preToken.type !== TokenType.NUMBER) { //属性运算符\r\n                this.parseProperty();\r\n                lookahead = this.peek();\r\n                leftHand.assignAble = true;\r\n            }\r\n            if (this.lexer.isPostOp(lookahead)) { //后置运算符\r\n                !leftHand.assignAble && Error.expectedIdentifier(lookahead);\r\n                leftHand.assignAble = false;\r\n                this.next();\r\n                lookahead = this.peek();\r\n            }\r\n            if (lookahead.value === '?') { //三元运算符\r\n                this.nextMatch('?');\r\n                this.parseExpr();\r\n                this.peekMatch(':');\r\n                continue;\r\n            }\r\n            if (this.lexer.isAssignOperator(lookahead) && leftHand.assignAble) { //赋值运算符\r\n                this.parseAssignStmt(this.peek().value);\r\n                break;\r\n            }\r\n            if (!this.lexer.isBinaryOperator(lookahead)) { //下一个不是二元运算符，表达式结束\r\n                break;\r\n            }\r\n            this.next();\r\n            if (!this.hasNext()) { //表达式未结束\r\n                Error.unexpected(this.preToken);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseLeftHand = function () {\r\n        let preToken = this.preToken;\r\n        let token = this.next();\r\n        let lookahead = null;\r\n        let assignAble = false; //是否可赋值\r\n        let end = false; //是否结束当前表达式\r\n        let isPreOp = false;\r\n        let isSignOp = false;\r\n        if (this.lexer.isUnitOperator(token)) { //一元运算符:+1,-1\r\n            if (token.value === '!' || token.value === 'delete' || token.value === 'void') {\r\n                let value = token.value;\r\n                while (token && token.value === value) { //!!!...\r\n                    preToken = token;\r\n                    token = this.next();\r\n                }\r\n            } else {\r\n                preToken = token;\r\n                token = this.next();\r\n            }\r\n            isSignOp = true;\r\n        }\r\n        if (token && this.lexer.isPreOp(token)) { //前置运算符:++a,--a\r\n            preToken = token;\r\n            token = this.next();\r\n            token && !this.lexer.isVariable(token) && Error.expectedIdentifier(token);\r\n            isPreOp = true;\r\n        }\r\n        lookahead = this.peek();\r\n        if (!token) {\r\n            Error.expectedIdentifier();\r\n            end = true;\r\n        } else if (token.value === 'function') { //函数声明\r\n            this.putBack();\r\n            this.parseFunctionStmt();\r\n            if (this.peek().value === '(') { //function(){}()\r\n                this.parseCallArgs();\r\n            }\r\n        } else if (token.value === '(') {\r\n            this.putBack();\r\n            this.parseParen();\r\n            assignAble = true;\r\n        } else if (token.value === '[') { //数组\r\n            this.putBack();\r\n            this.parseArray();\r\n        } else if (token.value === 'new') { //new对象\r\n            this.putBack();\r\n            this.parseNew();\r\n        } else if (token.value == '{') { //对象字面量\r\n            this.putBack();\r\n            this.parseObjectStmt();\r\n        } else if (token.type === TokenType.REGEXP) { //正则表达式\r\n            this.putBack();\r\n            this.parseRegex();\r\n        } else if (lookahead.value === '(' && !isPreOp) { //函数调用test()\r\n            this.parseCallArgs();\r\n        } else if (lookahead.value === '=>' &&\r\n            !isPreOp && !isSignOp && this.lexer.isVariable(token)) { //es6箭头函数test=>{}\r\n            this.parseArrorwFunction(preToken && preToken.value === ':');\r\n            end = true;\r\n        } else if (!isPreOp && !isSignOp && this.lexer.isVariable(token)) { //是否可赋值\r\n            assignAble = true;\r\n        } else if (!this.lexer.isValue(token)) { //非运算对象\r\n            Error.expectedIdentifier(token);\r\n            end = true;\r\n        }\r\n        return {\r\n            assignAble: assignAble,\r\n            end: end\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseParen = function () {\r\n        let lookLength = 1;\r\n        let startToken = this.peek();\r\n        let preToken = this.preToken;\r\n        this.nextMatch('(');\r\n        let lookToken = this.peek();\r\n        while (lookToken.value && lookToken.value != ')') {\r\n            lookLength++;\r\n            lookToken = this.peek(lookLength);\r\n        }\r\n        if (lookToken.value === ')' && this.peek(lookLength + 1).value === '=>') { //es6箭头函数\r\n            this.putBack();\r\n            this.parseFunArgsStmt();\r\n            this.parseArrorwFunction(preToken && preToken.value === ':');\r\n        } else {\r\n            this.parseExprStmt();\r\n            !this.peekMatch(')') && Error.unmatch(startToken);\r\n            if (this.peek().value === '(') { //(a)()\r\n                this.parseCallArgs();\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseArray = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('[');\r\n        while (this.hasNext() && this.peek().value !== ']') {\r\n            if (this.peek().value === '...') { // [...a]\r\n                this.next();\r\n            }\r\n            this.parseExpr();\r\n            lookahead = this.peek();\r\n            if (lookahead.value === ',') {\r\n                this.next();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        this.nextMatch(']');\r\n    }\r\n\r\n    Parser.prototype.parseNew = function () {\r\n        this.nextMatch('new');\r\n        if (this.peek().value === '(') {\r\n            this.parseParen();\r\n        } else {\r\n            this.nextMatch([TokenType.IDENTIFIER, TokenType.KEYWORD]);\r\n        }\r\n        if (this.peek().value === '(') {\r\n            this.parseCallArgs();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseArrorwFunction = function (skipNextExpr) {\r\n        this.nextMatch('=>');\r\n        if (this.peek().value === '{') {\r\n            this.parseBlockStmt();\r\n        } else if (skipNextExpr) { //{a:t=>t()}\r\n            this.parseExpr();\r\n        } else {\r\n            this.parseExprStmt();\r\n        }\r\n    }\r\n\r\n    // 函数调用\r\n    Parser.prototype.parseCallArgs = function () {\r\n        this.peekMatch('(');\r\n        if (this.peek().value !== ')') {\r\n            while (this.hasNext()) {\r\n                if (this.peek().value === '...') {\r\n                    this.next();\r\n                    if (this.peek().value === '{') {\r\n                        this.parseObjectStmt();\r\n                    } else {\r\n                        this.nextMatch(TokenType.IDENTIFIER);\r\n                    }\r\n                } else {\r\n                    this.parseExpr();\r\n                }\r\n                if (this.peek().value === ')') {\r\n                    break;\r\n                }\r\n                this.peekMatch(',');\r\n            }\r\n        }\r\n        this.peekMatch(')');\r\n        if (this.peek().value === '(') {\r\n            this.parseCallArgs();\r\n        }\r\n    }\r\n\r\n    // 点运算符\r\n    Parser.prototype.parseDot = function () {\r\n        var lookahead = null;\r\n        if (this.preToken.type !== TokenType.NUMBER && this.preToken.type !== TokenType.BOOLEAN) {\r\n            this.nextMatch('.');\r\n            lookahead = this.peek();\r\n            if (this.lexer.isDotAble(lookahead)) {\r\n                this.next();\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '(') { //函数调用test()\r\n                    this.parseCallArgs();\r\n                }\r\n                lookahead = this.peek();\r\n                if (lookahead.value === '[') {\r\n                    this.parseProperty();\r\n                } else if (lookahead.value === '.') {\r\n                    this.parseDot();\r\n                }\r\n            } else {\r\n                Error.expected(lookahead, TokenType.IDENTIFIER);\r\n            }\r\n        } else {\r\n            Error.unexpected(this.next());\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseProperty = function () {\r\n        var lookahead = null;\r\n        this.nextMatch('[');\r\n        this.parseExprStmt();\r\n        this.nextMatch(']');\r\n        lookahead = this.peek();\r\n        if (lookahead.value === '(') { //函数调用test()\r\n            this.parseCallArgs();\r\n        }\r\n        lookahead = this.peek();\r\n        if (lookahead.value === '[') {\r\n            this.parseProperty();\r\n        } else if (lookahead.value === '.') {\r\n            this.parseDot();\r\n        }\r\n    }\r\n\r\n    var lexer = new Lexer();\r\n    var parser = new Parser(lexer);\r\n    lexer.parser = parser;\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            clearTimeout(parser.parseTimer);\r\n            parser.reset(text);\r\n            parser.parse();\r\n            result = Error.errors.map((item) => {\r\n                var line = item.line;\r\n                var column = item.column;\r\n                if (!item.line || item.line > lexer.lines.length) {\r\n                    line = lexer.lines.length;\r\n                    column = lexer.lines.peek().length;\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column,\r\n                    error: item.error\r\n                }\r\n            }).sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            console.log(result);\r\n            return result;\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-08 10:31:22\r\n * @Description: \r\n */\r\nexport default function () {\r\n    Array.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    Array.prototype._isArray = true;\r\n    String.prototype.peek = function (index) {\r\n        if (this.length) {\r\n            return this[this.length - (index || 1)];\r\n        }\r\n    }\r\n    const brackets = ['{', '}', '[', ']', '(', ')'];\r\n    const regs = {\r\n        space: /^\\s+/,\r\n        tag: /^@?[a-zA-Z_\\-][a-zA-Z0-9_\\-]*/,\r\n        propertyName: /^[\\*]?[a-zA-Z_$][a-zA-Z0-9_\\-$]*/,\r\n        numValue: /^(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[sS%]|px|PX)?/,\r\n        propertyValue: /^[+\\-]?[a-zA-Z0-9_\\-$%]+|^#[a-zA-Z0-9]+/,\r\n        punctuator: /^[\\+\\-\\*\\~\\,\\:\\;\\.\\#\\=\\!]/,\r\n        comment: /\\*\\//,\r\n        string1: /\\\\*'/,\r\n        string2: /\\\\*\"/,\r\n        other: /^[\\s\\S]/\r\n    }\r\n    const maxErrors = 100;\r\n\r\n    function TokenType(type, label) {\r\n        this.type = type;\r\n        this.label = label;\r\n        this._isTokenType = true;\r\n    }\r\n\r\n    TokenType.prototype.toString = function () {\r\n        return this.label;\r\n    }\r\n\r\n    TokenType.STRING = new TokenType(2, 'string');\r\n    TokenType.SELECTOR = new TokenType(3, 'selector');\r\n    TokenType.PROPERTY = new TokenType(4, 'property');\r\n    TokenType.VALUE = new TokenType(5, 'value');\r\n    TokenType.NUM_VALUE = new TokenType(6, 'numValue');\r\n    TokenType.BRACKET = new TokenType(7, 'bracket');\r\n    TokenType.PUNCTUATOR = new TokenType(8, 'punctuator');\r\n    TokenType.OTHER = new TokenType(10, 'other');\r\n\r\n    function ErrorType(type) {\r\n        this.type = type;\r\n    }\r\n\r\n    ErrorType.UNEXPECTED = new ErrorType(1);\r\n    ErrorType.EXPECTED = new ErrorType(2);\r\n    ErrorType.MISS = new ErrorType(3);\r\n    ErrorType.UNMATCH = new ErrorType(4);\r\n\r\n    function Error(token, type, param) {\r\n        token = token || {};\r\n        this.type = type;\r\n        this.param = param;\r\n        this.line = token.line;\r\n        this.column = token.column;\r\n        this.value = token.value;\r\n        this.error = this.toString();\r\n    }\r\n\r\n    Error.prototype.toString = function () {\r\n        let error = '';\r\n        let param = this.param instanceof Array ? this.param : [this.param];\r\n        param = `${param.length === 1 ? 'a ' : ''}'${param.join(`'、'`)}'`;\r\n        switch (this.type) {\r\n            case ErrorType.UNEXPECTED:\r\n                error = `unexpected '${this.value}'`;\r\n                break;\r\n            case ErrorType.EXPECTED:\r\n                error = `expected ${param}`;\r\n                if (this.value) {\r\n                    error += ` and instead saw '${this.value}'`;\r\n                }\r\n                break;\r\n            case ErrorType.MISS:\r\n                error = `missing ${param}`;\r\n                if (this.value) {\r\n                    error += ` before '${this.value}'`\r\n                }\r\n                break;\r\n            case ErrorType.UNMATCH:\r\n                error = `unmatched '${this.value}'`\r\n                break;\r\n        }\r\n        return error;\r\n    }\r\n\r\n    Error.push = function (error) {\r\n        Error.errors.push(error);\r\n    }\r\n\r\n    Error.expected = function (token, value) {\r\n        Error.push(new Error(token, ErrorType.EXPECTED, value));\r\n    }\r\n\r\n    Error.unexpected = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNEXPECTED));\r\n    }\r\n\r\n    Error.unmatch = function (token) {\r\n        Error.push(new Error(token, ErrorType.UNMATCH));\r\n    }\r\n\r\n    // 词法分析器\r\n    function Lexer() {\r\n        this.init();\r\n    }\r\n\r\n    Lexer.prototype.init = function () {\r\n        Error.errors = [];\r\n        this.lines = [''];\r\n        this.line = 1;\r\n        this.column = 0;\r\n        this.input = '';\r\n        this.bracketsMap = new Map();\r\n        brackets.map((item) => {\r\n            this.bracketsMap.set(item, true);\r\n        });\r\n    }\r\n\r\n    Lexer.prototype.reset = function (option) {\r\n        this.lines = option.texts;\r\n        this.line = option.line || 1;\r\n        this.column = option.column || 0\r\n        this.input = this.lines[this.line - 1].slice(this.column);\r\n    }\r\n\r\n    Lexer.prototype.skip = function (length) {\r\n        this.input = length ? this.input.slice(length) : this.input;\r\n        this.column += length;\r\n    }\r\n\r\n    Lexer.prototype.skipLine = function (length) {\r\n        this.line += length;\r\n        this.column = 0;\r\n        this.input = this.lines[this.line - 1] || '';\r\n    }\r\n\r\n    Lexer.prototype.hasNext = function () {\r\n        if (Error.errors.length > maxErrors) {\r\n            return false;\r\n        }\r\n        return this.line < this.lines.length ||\r\n            this.line == this.lines.length && this.lines.peek().length > this.column\r\n    }\r\n\r\n    Lexer.prototype.isBracket = function (value) {\r\n        return this.bracketsMap.has(value);\r\n    }\r\n\r\n    Lexer.prototype.isTokenType = function (type) {\r\n        return type._isTokenType;\r\n    }\r\n\r\n    Lexer.prototype.isProp = function (token) {\r\n        return token.type === TokenType.SELECTOR ||\r\n            token.type === TokenType.PROPERTY\r\n    }\r\n\r\n    Lexer.prototype.isValue = function (token) {\r\n        return token.type === TokenType.VALUE ||\r\n            token.type === TokenType.NUM_VALUE ||\r\n            token.type === TokenType.SELECTOR ||\r\n            token.type === TokenType.PROPERTY ||\r\n            token.type === TokenType.STRING\r\n    }\r\n\r\n    Lexer.prototype.craeteToken = function (value, type) {\r\n        let line = this.line;\r\n        let column = this.column;\r\n        if (line > this.lines.length) {\r\n            line = this.lines.length;\r\n            column = this.lines.peek().length;\r\n        }\r\n        return {\r\n            type: type,\r\n            line: line,\r\n            column: column,\r\n            value: value\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanSpace = function () {\r\n        let exec = null;\r\n        while (!this.input.length && this.line < this.lines.length) { //去掉空行\r\n            this.skipLine(1);\r\n        }\r\n        exec = regs.space.exec(this.input);\r\n        if (exec) {\r\n            this.skip(exec.index + exec[0].length);\r\n            exec.index >= this.input.length - 1 && this.scanSpace();\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanComment = function () {\r\n        let exec = null;\r\n        let ch1 = null;\r\n        let ch2 = null;\r\n        let startToken = null;\r\n        this.scanSpace(); //去掉空格\r\n        ch1 = this.input[0];\r\n        ch2 = this.input[1];\r\n        if (ch1 === '/' && ch2 === '*') {\r\n            startToken = this.craeteToken('/*');\r\n            this.skip(2);\r\n            while (this.hasNext() && !(exec = regs.comment.exec(this.input))) {\r\n                this.skipLine(1);\r\n            }\r\n            if (exec) {\r\n                this.skip(exec.index + exec[0].length);\r\n            } else {\r\n                Error.unmatch(startToken);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanString = function () {\r\n        let that = this;\r\n        let exec = null;\r\n        let token = null;\r\n        let startToken = null;\r\n        if (this.input[0] === '\\'') {\r\n            startToken = this.craeteToken('\\'', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string1);\r\n            token = this.craeteToken('\\'', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        } else if (this.input[0] === '\"') {\r\n            startToken = this.craeteToken('\"', TokenType.STRING);\r\n            this.skip(1);\r\n            exec = _end(regs.string2);\r\n            token = this.craeteToken('\"', TokenType.STRING);\r\n            if (!exec) {\r\n                Error.unmatch(startToken);\r\n                this.skipLine(1);\r\n            }\r\n            return token;\r\n        }\r\n        return token;\r\n\r\n        function _end(reg) {\r\n            if (!that.hasNext()) {\r\n                return false;\r\n            }\r\n            if (exec = reg.exec(that.input)) {\r\n                that.skip(exec.index + exec[0].length);\r\n                if (exec[0].length % 2 === 0) { //含有奇数个\\:\\\\\\'\r\n                    return _end(reg);\r\n                }\r\n                return true;\r\n            } else {\r\n                that.skipLine(1);\r\n                return _end(reg);\r\n            }\r\n        }\r\n    }\r\n\r\n    Lexer.prototype.scanIdentifier = function () {\r\n        let exec = null;\r\n        let token = null;\r\n        if (exec = regs.tag.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.SELECTOR);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.propertyName.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.PROPERTY);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.numValue.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.NUM_VALUE);\r\n            this.skip(exec.index + exec[0].length);\r\n        } else if (exec = regs.propertyValue.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.VALUE);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanBracket = function () {\r\n        let token = null;\r\n        let ch = this.input[0];\r\n        if (this.isBracket(ch)) {\r\n            token = this.craeteToken(ch, TokenType.BRACKET);\r\n            this.skip(1);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    // 操作符号\r\n    Lexer.prototype.scanPunctuator = function () {\r\n        let token = null;\r\n        if (exec = regs.punctuator.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.PUNCTUATOR);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token;\r\n    }\r\n\r\n    Lexer.prototype.scanOther = function () {\r\n        let exec = null;\r\n        let token = null;\r\n        if (exec = regs.other.exec(this.input)) {\r\n            token = this.craeteToken(exec[0], TokenType.OTHER);\r\n            this.skip(exec.index + exec[0].length);\r\n        }\r\n        return token\r\n    }\r\n\r\n    Lexer.prototype.next = function () {\r\n        let token = null;\r\n        this.scanComment();\r\n        if (this.hasNext()) {\r\n            token =\r\n                this.scanIdentifier() ||\r\n                this.scanBracket() ||\r\n                this.scanString() ||\r\n                this.scanPunctuator()\r\n            if (!token) { //存在非法字符\r\n                token = this.scanOther();\r\n                token && Error.unexpected(token);\r\n                return this.next();\r\n            }\r\n        }\r\n        this.preToken = token;\r\n        return token;\r\n    }\r\n\r\n    // 语法分析器\r\n    function Parser(lexer) {\r\n        this.lexer = lexer;\r\n        this.cacheList = [];\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        Error.errors = [];\r\n    }\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.backs = [];\r\n        this.parseList = [];\r\n        this.preToken = null;\r\n        this.recovery(text);\r\n        Error.errors = [];\r\n    }\r\n\r\n    // 添加缓存\r\n    Parser.prototype.cache = function () {\r\n        if (this.cacheList.length && this.cacheList.peek().line == this.lexer.line) {\r\n            this.cacheList.pop();\r\n        }\r\n        this.preToken && this.cacheList.push({\r\n            line: this.preToken.line,\r\n            column: this.preToken.column,\r\n            parseList: this.parseList.slice(0)\r\n        });\r\n    }\r\n\r\n    // 从缓存中恢复\r\n    Parser.prototype.recovery = function (text) {\r\n        let index = 0;\r\n        let texts = text.split('\\n') || [''];\r\n        let hasCache = false;\r\n        while (index < texts.length && index < this.lexer.lines.length && texts[index] === this.lexer.lines[index]) {\r\n            index++;\r\n        }\r\n        if (index > 0) {\r\n            let cacheIndex = -1;\r\n            for (let i = 0; i < this.cacheList.length; i++) {\r\n                if (this.cacheList[i].line <= index) {\r\n                    cacheIndex = i;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            if (cacheIndex > -1) {\r\n                let cache = this.cacheList[cacheIndex];\r\n                this.parseList = cache.parseList;\r\n                this.cacheList = this.cacheList.slice(0, cacheIndex + 1);\r\n                this.lexer.reset({\r\n                    texts: texts,\r\n                    line: cache.line,\r\n                    column: cache.column\r\n                });\r\n                this.next();\r\n                hasCache = true;\r\n            }\r\n        }\r\n        if (!hasCache) {\r\n            this.cacheList = [];\r\n            this.lexer.reset({\r\n                texts: texts\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.match = function (token, value) {\r\n        let pass = false;\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (this.lexer.isTokenType(value[i])) {\r\n                if (value[i] === token.type) {\r\n                    pass = true;\r\n                    break;\r\n                }\r\n            } else if (value[i] === token.value) {\r\n                pass = true;\r\n                break;\r\n            }\r\n        };\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.next = function (length) {\r\n        let token = null;\r\n        length = length || 1;\r\n        while (length > 0) {\r\n            if (this.backs.length) {\r\n                token = this.backs.shift();\r\n            } else {\r\n                token = this.lexer.next();\r\n            }\r\n            this.pre2Token = this.preToken;\r\n            this.preToken = token || this.preToken;\r\n            length--;\r\n        }\r\n        this.puted = false;\r\n        return token;\r\n    }\r\n\r\n    Parser.prototype.nextMatch = function (value) {\r\n        let token = this.next() || {};\r\n        let pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (!pass) {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.peek = function (length) {\r\n        let token = null;\r\n        length = length || 1;\r\n        if (this.backs.length) {\r\n            token = this.backs[length - 1];\r\n        }\r\n        if (!token) {\r\n            length -= this.backs.length;\r\n            while (length > 0) {\r\n                length--;\r\n                token = this.lexer.next();\r\n                token && this.backs.push(token);\r\n            }\r\n        }\r\n        return token || {};\r\n    }\r\n\r\n    Parser.prototype.peekMatch = function (value) {\r\n        let token = this.peek() || {};\r\n        let pass = false;\r\n        value = value._isArray ? value : [value];\r\n        pass = token.value && this.match(token, value);\r\n        if (pass) {\r\n            this.next();\r\n        } else {\r\n            if (token.value && this.match(this.peek(), value)) {\r\n                Error.unexpected(token);\r\n            } else {\r\n                Error.expected(token, value);\r\n            }\r\n        }\r\n        return pass;\r\n    }\r\n\r\n    Parser.prototype.hasNext = function () {\r\n        let lookahead = this.peek();\r\n        return lookahead.value\r\n    }\r\n\r\n    Parser.prototype.putBack = function () {\r\n        if (this.preToken && !this.puted) {\r\n            this.backs.unshift(this.preToken);\r\n            this.preToken = this.pre2Token;\r\n            this.puted = true;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.skipSemicolon = function (length) {\r\n        length = length || Infinity\r\n        while (this.peek().value === ';' && length > 0) {\r\n            this.next();\r\n            length--;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        let count = 0;\r\n        let startTime = Date.now();\r\n        while (this.hasNext()) {\r\n            this.parseStmt();\r\n            !Error.errors.length && this.cache();\r\n            if (++count % 10 === 0 && Date.now() - startTime > 200) {\r\n                this.parseTimer = setTimeout(() => {\r\n                    this.parseStmt();\r\n                }, 10);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseStmt = function () {\r\n        let token = this.peek();\r\n        if (token.value === '@import') {\r\n            this.parseImport();\r\n            return;\r\n        }\r\n        if (token.value === '@charset') {\r\n            this.parseCharset();\r\n            return;\r\n        }\r\n        if (token.value === '@keyframes' || token.value === '@-webkit-keyframes') {\r\n            this.parseKeyFrames();\r\n            return;\r\n        }\r\n        if (token.value === '@media') {\r\n            this.parseMedia();\r\n            return;\r\n        }\r\n        this.parseSelector();\r\n        if (this.peek().value === '{') {\r\n            this.parseBlock();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseImport = function () {\r\n        this.nextMatch('@import');\r\n        this.nextMatch(TokenType.STRING);\r\n        if (['all', 'print', 'screen', 'speech'].indexOf(this.peek().value) > -1) {\r\n            this.parseMedia(true);\r\n        }\r\n        this.peekMatch(';');\r\n    }\r\n\r\n    Parser.prototype.parseCharset = function () {\r\n        this.nextMatch('@charset');\r\n        this.nextMatch(TokenType.STRING);\r\n        this.peekMatch(';');\r\n    }\r\n\r\n    Parser.prototype.parseMedia = function (onlyValue) {\r\n        let token = null;\r\n        !onlyValue && this.nextMatch('@media');\r\n        token = this.peek();\r\n        if (token.value === 'not' || token.value === 'only') {\r\n            this.next();\r\n        }\r\n        this.nextMatch(['all', 'print', 'screen', 'speech']);\r\n        while (this.hasNext()) {\r\n            token = this.peek();\r\n            if (token.value === 'and' || token.value === 'or') {\r\n                this.next();\r\n                this.nextMatch('(');\r\n                token = this.next() || {};\r\n                if (!this.lexer.isProp(token)) {\r\n                    Error.expected(token, TokenType.PROPERTY);\r\n                }\r\n                if (this.peek().value != ')') {\r\n                    this.peekMatch(':')\r\n                    token = this.next() || {};\r\n                    if (!this.lexer.isValue(token)) {\r\n                        Error.expected(token, TokenType.VALUE);\r\n                    }\r\n                    this.peekMatch(')');\r\n                }\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n        if (!onlyValue) {\r\n            this.peekMatch('{');\r\n            this.parseStmt();\r\n            this.peekMatch('}');\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseKeyFrames = function () {\r\n        let token = null;\r\n        this.nextMatch(['@keyframes', '@-webkit-keyframes']);\r\n        token = this.next();\r\n        if (token.type !== TokenType.SELECTOR) {\r\n            Error.expected(token, 'name');\r\n        }\r\n        this.peekMatch('{');\r\n        while (this.hasNext()) {\r\n            if (this.peek().value === '}') {\r\n                break;\r\n            }\r\n            this.nextMatch(TokenType.NUM_VALUE);\r\n            this.parseBlock();\r\n        }\r\n        this.peekMatch('}');\r\n    }\r\n\r\n    Parser.prototype.parseSelector = function () {\r\n        let token = this.next() || {};\r\n        if (token.value === '.' || token.value === '#') { //类、ID选择器\r\n            this.nextMatch(TokenType.SELECTOR);\r\n        } else if (token.value === '[') { //属性选择器\r\n            this.nextMatch(TokenType.SELECTOR);\r\n            if (this.peek().value !== ']') {\r\n                this.nextMatch('=');\r\n                token = this.peek();\r\n                if (!this.lexer.isValue(token)) {\r\n                    Error.expected(token, 'value');\r\n                } else {\r\n                    this.next();\r\n                }\r\n                this.peekMatch(']');\r\n            } else {\r\n                this.next();\r\n            }\r\n        } else if (token.value === ':') { //伪类选择器\r\n            if (this.peek().value === ':') {\r\n                this.next();\r\n            }\r\n            this.nextMatch(TokenType.SELECTOR);\r\n            if (this.peek().value === '(') { //:not(p)\r\n                this.next();\r\n                this.parseSelector();\r\n                this.peekMatch(')');\r\n            }\r\n        } else if (token.value !== '*') { //标签选择器\r\n            this.putBack();\r\n            this.nextMatch(TokenType.SELECTOR);\r\n        }\r\n        if (this.hasNext() && this.peek().value !== '{') {\r\n            token = this.peek();\r\n            if (token.value === '+' || token.value === '~') { //兄弟选择器\r\n                this.next();\r\n            } else if (token.value === ',') { //并列选择器\r\n                this.next();\r\n            }\r\n            this.parseSelector();\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parseBlock = function () {\r\n        let that = this;\r\n        this.nextMatch('{');\r\n        while (this.hasNext()) {\r\n            if (this.peek().value === '}') {\r\n                break;\r\n            }\r\n            _nextMatchProperty();\r\n            this.peekMatch(':');\r\n            _nextMatchValue();\r\n            if (this.peek().value !== '}') {\r\n                this.peekMatch(';');\r\n            }\r\n        }\r\n        this.peekMatch('}');\r\n\r\n        function _nextMatchProperty() {\r\n            let token = that.next();\r\n            if (token.type !== TokenType.SELECTOR && token.type !== TokenType.PROPERTY) {\r\n                Error.expected(TokenType.PROPERTY);\r\n            }\r\n        }\r\n\r\n        function _nextMatchValue() {\r\n            let hasValue = false;\r\n            while (that.hasNext()) {\r\n                let token = that.peek();\r\n                if (token.value === ';' || token.value === '}' || token.value === ')') {\r\n                    break;\r\n                }\r\n                token = that.next();\r\n                if (that.lexer.isValue(token)) {\r\n                    hasValue = true;\r\n                } else if (token.value === '(') {\r\n                    let lbraces = 1;\r\n                    while (that.hasNext() && lbraces) {\r\n                        let token = that.next() || {};\r\n                        if (token.value === ')') {\r\n                            lbraces--;\r\n                        } else if (token.value === '(') {\r\n                            lbraces++;\r\n                        }\r\n                    }\r\n                    lbraces && that.peekMatch(')');\r\n                } else if (hasValue && token.value === ',') {\r\n                    _nextMatchValue();\r\n                    break;\r\n                } else if (hasValue && token.value === '!') {\r\n                    that.peekMatch('important');\r\n                    break;\r\n                } else {\r\n                    Error.expected(token, TokenType.VALUE);\r\n                }\r\n            }\r\n            if (!hasValue) {\r\n                Error.expected(null, TokenType.VALUE);\r\n            }\r\n            return hasValue;\r\n        }\r\n    }\r\n\r\n    let lexer = new Lexer();\r\n    let parser = new Parser(lexer);\r\n    lexer.parser = parser;\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            clearTimeout(parser.parseTimer);\r\n            parser.reset(text);\r\n            parser.parse();\r\n            result = Error.errors.map((item) => {\r\n                let line = item.line;\r\n                let column = item.column;\r\n                if (!item.line || item.line > lexer.lines.length) {\r\n                    line = lexer.lines.length;\r\n                    column = lexer.lines.peek().length;\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column,\r\n                    error: item.error\r\n                }\r\n            }).sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            console.log(result);\r\n            return result;\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-09 21:33:03\r\n * @Description: \r\n */\r\nimport jsLint from './javascript';\r\nimport cssLint from './css';\r\n\r\nfunction htmlLint() {\r\n    let regs = {\r\n        js: /(?<!\\<[^\\>]*?['\"][^\\>]*?)(\\<script(?:\\s[^\\>]*?)?\\>)([\\s\\S]*?)\\<\\/script\\>/,\r\n        css: /(?<!\\<[^\\>]*?['\"][^\\>]*?)(\\<style(?:\\s[^\\>]*?)?\\>)([\\s\\S]*?)\\<\\/style\\>/,\r\n        enter: /\\n/g,\r\n        column: /\\n([^\\n]+)$/,\r\n        comment: /\\<\\!--[\\s\\S]*?--\\>/\r\n    }\r\n\r\n    function Parser() {}\r\n\r\n    Parser.prototype.reset = function (text) {\r\n        this.text = text;\r\n        this.comments = [];\r\n    }\r\n\r\n    Parser.prototype.parseComentRange = function () {\r\n        let exec = null;\r\n        let pos = {\r\n            line: 1,\r\n            column: 0,\r\n            index: 0\r\n        }\r\n        let text = this.text;\r\n        let start = null;\r\n        let end = null;\r\n        while (exec = regs.comment.exec(text)) {\r\n            this.setLineColumn(text.slice(0, exec.index), pos);\r\n            pos.index += exec.index;\r\n            start = Object.assign({}, pos);\r\n            this.setLineColumn(exec[0], pos);\r\n            pos.index += exec[0].length;\r\n            end = Object.assign({}, pos);\r\n            text = this.text.slice(pos.index);\r\n            this.comments.push({\r\n                start: start,\r\n                end: end\r\n            });\r\n        }\r\n    }\r\n\r\n    Parser.prototype.setLineColumn = function (text, pos) {\r\n        let lines = text.match(regs.enter);\r\n        lines = lines && lines.length || 0;\r\n        pos.line += lines;\r\n        if (lines) {\r\n            let exec = regs.column.exec(text);\r\n            pos.column = exec && exec[1].length || 0;\r\n        } else {\r\n            pos.column += text.length;\r\n        }\r\n    }\r\n\r\n    Parser.prototype.parse = function () {\r\n        this.parseComentRange();\r\n        return parser.parseJs().concat(parser.parseCss());\r\n    }\r\n\r\n    Parser.prototype.parseJs = function () {\r\n        let parseJs = jsParser().parse;\r\n        return this._parse(regs.js, parseJs);\r\n    }\r\n\r\n    Parser.prototype.parseCss = function () {\r\n        let parseCss = cssParser().parse;\r\n        return this._parse(regs.css, parseCss);\r\n    }\r\n\r\n    Parser.prototype._parse = function (reg, parseFun) {\r\n        let exec = null;\r\n        let pos = {\r\n            line: 1,\r\n            column: 0,\r\n            index: 0\r\n        }\r\n        let text = this.text;\r\n        let result = [];\r\n        while (exec = reg.exec(text)) {\r\n            this.setLineColumn(text.slice(0, exec.index), pos);\r\n            pos.index += exec.index;\r\n            if (!this.checkInComment(pos)) {\r\n                text = this.text.slice(pos.index);\r\n                continue;\r\n            }\r\n            this.setLineColumn(exec[1], pos);\r\n            pos.index += exec[1].length;\r\n            if (exec[2]) {\r\n                let r = parseFun(exec[2]);\r\n                r.map((item) => {\r\n                    if (item.line == 1) {\r\n                        item.column += pos.column;\r\n                    }\r\n                    item.line += pos.line - 1;\r\n                });\r\n                result = result.concat(r);\r\n            }\r\n            this.setLineColumn(exec[0].slice(exec[1].length), pos);\r\n            pos.index += exec[0].slice(exec[1].length).length;\r\n            text = this.text.slice(pos.index);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    Parser.prototype.checkInComment = function (pos) {\r\n        for (let i = 0; i < this.comments.length; i++) {\r\n            let item = this.comments[i];\r\n            if (_compare(item.start, pos) < 0 && _compare(item.end, pos) > 0) {\r\n                pos.line = item.end.line;\r\n                pos.column = item.end.column;\r\n                pos.index = item.end.index;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n\r\n        function _compare(a, b) {\r\n            if (a.line === b.line) {\r\n                return a.column - b.column\r\n            }\r\n            return a.line - b.line;\r\n        }\r\n    }\r\n\r\n    let parser = new Parser();\r\n\r\n    return {\r\n        parse: function (text) {\r\n            let result = null;\r\n            parser.reset(text);\r\n            result = parser.parse();\r\n            result.sort((a, b) => {\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Function(`function jsParser()${jsLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nfunction cssParser()${cssLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nfunction htmlParser()${htmlLint.toString().replace(/^[^\\)]+?\\)/, '')}\r\nreturn htmlParser();\r\n`)","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-05 14:28:42\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nimport htmlLint from '../language/html';\r\nimport jsLint from '../language/javascript';\r\nimport cssLint from '../language/css';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.parseId = 1;\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, context, ['htmls', ]);\r\n        Util.defineProperties(this, editor, ['setErrorMap']);\r\n    }\r\n    initLanguage(language) {\r\n        let that = this;\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.worker && this.worker.terminate();\r\n        this.worker = null;\r\n        this.setErrorMap({});\r\n        switch (language) {\r\n            case 'HTML':\r\n                this.worker = this.createWorker(htmlLint);\r\n                break;\r\n            case 'JavaScript':\r\n                this.worker = this.createWorker(jsLint);\r\n                break;\r\n            case 'CSS':\r\n                this.worker = this.createWorker(cssLint);\r\n                break;\r\n        }\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        this.worker.onmessage = function (e) {\r\n            let parseId = e.data.parseId;\r\n            let errors = e.data.errors;\r\n            let index = 0;\r\n            let errorMap = {};\r\n            if (that.parseId != parseId) {\r\n                return;\r\n            }\r\n            while (index < errors.length) {\r\n                let line = errors[index].line;\r\n                let arr = [];\r\n                while (index < errors.length && errors[index].line === line) {\r\n                    arr.push(errors[index].error);\r\n                    index++;\r\n                }\r\n                line = line || that.htmls.length;\r\n                errorMap[line] = arr.join('<br>');\r\n            }\r\n            that.setErrorMap(errorMap);\r\n        }\r\n        this.parse();\r\n    }\r\n    createWorker(mod) {\r\n        var funStr = mod.toString().replace(/^[^\\)]+?\\)/, '');\r\n        var str =\r\n            `function fun()${funStr}\r\n            let parser = fun();\r\n            self.onmessage = function(e) {\r\n                var parseId = e.data.parseId;\r\n                var errors = parser.parse(e.data.text);\r\n                self.postMessage({\r\n                    errors: errors,\r\n                    parseId: parseId\r\n                });\r\n            }`;\r\n        return Util.createWorker(str);\r\n    }\r\n    onInsertContentBefore(nowLine) {}\r\n    onInsertContentAfter(nowLine) {\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        clearTimeout(this.parseTimer);\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    onDeleteContentBefore(nowLine) {}\r\n    onDeleteContentAfter(nowLine) {\r\n        if (!this.worker) {\r\n            return;\r\n        }\r\n        clearTimeout(this.parseTimer);\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    parse() {\r\n        let text = this.htmls.map((item) => {\r\n            return item.text;\r\n        }).join('\\n');\r\n        this.parseId++;\r\n        this.worker.postMessage({\r\n            text: text,\r\n            parseId: this.parseId\r\n        });\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 14:42:01\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.editorFunObj = {};\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this.editorFunObj, editor, ['unFold']);\r\n        Util.defineProperties(this, editor, ['selecter']);\r\n        Util.defineProperties(this, context, ['htmls', 'folds', 'foldMap']);\r\n    }\r\n    onInsertContentBefore(cursorPos) {\r\n        let nowLine = cursorPos.line;\r\n        this.onInsertContentBefore.preCursorPos = cursorPos;\r\n        if (this.folds.length) {\r\n            let index = this.findFoldIndex(nowLine);\r\n            let unFolds = [];\r\n            // 历史记录中操作光标在折叠区\r\n            while (index < this.folds.length && this.folds[index].start.line < nowLine && this.folds[index].end.line > nowLine) {\r\n                unFolds.push(this.folds[index].start.line);\r\n                index++;\r\n            }\r\n            unFolds.map((line) => {\r\n                this.editorFunObj.unFold(line);\r\n            });\r\n        }\r\n    }\r\n    onInsertContentAfter(cursorPos) {\r\n        let preCursorPos = this.onInsertContentBefore.preCursorPos;\r\n        this.folds.slice().reverse().map((fold) => {\r\n            if (fold.start.line > preCursorPos.line) {\r\n                if (cursorPos.line - preCursorPos.line > 0) {\r\n                    this.foldMap.delete(fold.start.line);\r\n                    fold.start.line += cursorPos.line - preCursorPos.line;\r\n                    fold.end.line += cursorPos.line - preCursorPos.line;\r\n                    this.foldMap.set(fold.start.line, fold);\r\n                }\r\n            } else if (fold.start.line === preCursorPos.line) {\r\n                if (cursorPos.line - preCursorPos.line > 0) {\r\n                    this.unFold(fold.start.line);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onDeleteContentBefore(cursorPos) {\r\n        this.onDeleteContentBefore.preCursorPos = cursorPos;\r\n        this.onDeleteContentBefore.maxLine = this.htmls.length;\r\n        this.selecter.selectedRanges.map((selectedRange) => {\r\n            if (this.selecter.checkSelectedActive(selectedRange)) {\r\n                let start = selectedRange.start;\r\n                let end = selectedRange.end;\r\n                for (let line = start.line; line <= end.line; line++) { //删除折叠区域\r\n                    this.editorFunObj.unFold(line);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    onDeleteContentAfter(cursorPos) {\r\n        let nowLine = cursorPos.line;\r\n        let preCursorPos = this.onDeleteContentBefore.preCursorPos;\r\n        let delLine = this.onDeleteContentBefore.maxLine - this.htmls.length;\r\n        if (this.folds.length) {\r\n            let index = this.findFoldIndex(nowLine);\r\n            let unFolds = [];\r\n            // 历史记录中操作光标在折叠区\r\n            while (index < this.folds.length && this.folds[index].start.line < nowLine && this.folds[index].end.line > nowLine) {\r\n                unFolds.push(this.folds[index].start.line);\r\n                index++;\r\n            }\r\n            unFolds.map((line) => {\r\n                this.editorFunObj.unFold(line);\r\n            });\r\n        }\r\n        this.folds.slice().reverse().map((fold) => {\r\n            if (fold.start.line > preCursorPos.line) {\r\n                if (delLine > 0) {\r\n                    if (delLine === 1 && preCursorPos.line === nowLine &&\r\n                        fold.start.line === preCursorPos.line + 1) {\r\n                        this.unFold(fold.start.line);\r\n                    } else {\r\n                        this.foldMap.delete(fold.start.line);\r\n                        fold.start.line -= delLine;\r\n                        fold.end.line -= delLine;\r\n                        this.foldMap.set(fold.start.line, fold);\r\n                    }\r\n                }\r\n            } else if (fold.start.line === preCursorPos.line) {\r\n                if (delLine > 0) {\r\n                    this.unFold(fold.start.line);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 寻找第一个包裹nowLine的折叠对象的下标\r\n     * @param {Number} nowLine \r\n     */\r\n    findFoldIndex(nowLine) {\r\n        let left = 0;\r\n        let right = this.folds.length - 1;\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            let fold = this.folds[mid];\r\n            if (fold.start.line < nowLine) {\r\n                if (fold.end.line <= nowLine) {\r\n                    left = mid + 1;\r\n                } else {\r\n                    right = mid;\r\n                }\r\n            } else if (fold.start.line == nowLine) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid - 1;\r\n            }\r\n        }\r\n        return left;\r\n    }\r\n    // 折叠行\r\n    foldLine(line) {\r\n        let startLine = line;\r\n        let resultFold = this.getRangeFold(line);\r\n        if (resultFold) {\r\n            for (let line = resultFold.start.line; line < resultFold.end.line; line++) {\r\n                if (this.foldMap.has(line)) {\r\n                    if (this.foldMap.get(line).end.line > resultFold.end.line) {\r\n                        this.unFold(line);\r\n                    }\r\n                }\r\n            }\r\n            this.foldMap.set(startLine, resultFold);\r\n            this.folds.push(resultFold);\r\n            this.folds.sort((a, b) => {\r\n                return a.start.line - b.start.line;\r\n            });\r\n        }\r\n        return resultFold;\r\n    }\r\n    // 展开折叠行\r\n    unFold(line) {\r\n        let left = 0;\r\n        let right = this.folds.length;\r\n        if (!this.foldMap.has(line)) {\r\n            return false;\r\n        }\r\n        while (left <= right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (this.folds[mid].start.line == line) {\r\n                this.folds.splice(mid, 1);\r\n                break;\r\n            } else if (this.folds[mid].start.line > line) {\r\n                right = mid - 1;\r\n            } else {\r\n                left = mid + 1;\r\n            }\r\n        }\r\n        this.foldMap.delete(line);\r\n        return true;\r\n    }\r\n    /**\r\n     * 获取折叠范围\r\n     * @param {Number} line 行号\r\n     * @param {Boolean} foldIconCheck 检测是否显示折叠图标\r\n     */\r\n    getRangeFold(line, foldIconCheck) {\r\n        let stack = [];\r\n        let startLine = line;\r\n        let lineObj = this.htmls[startLine - 1];\r\n        let resultFold = null;\r\n        line++;\r\n        if (lineObj.folds && lineObj.folds.length) {\r\n            for (let i = 0; i < lineObj.folds.length; i++) {\r\n                let fold = lineObj.folds[i];\r\n                if (fold.type == -1) {\r\n                    if (!stack.length || stack.peek().name == fold.name) {\r\n                        stack.push(fold);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        while (stack.length && line <= this.htmls.length && (!foldIconCheck || line - startLine <= 1)) {\r\n            lineObj = this.htmls[line - 1];\r\n            if (lineObj.folds && lineObj.folds.length) {\r\n                for (let i = 0; i < lineObj.folds.length; i++) {\r\n                    let fold = lineObj.folds[i];\r\n                    if (fold.type == -1) {\r\n                        if (stack.peek().name == fold.name) {\r\n                            stack.push(fold);\r\n                        }\r\n                    } else if (stack.peek().name == fold.name) {\r\n                        if (stack.length == 1) {\r\n                            if (foldIconCheck) {\r\n                                return line - startLine > 1;\r\n                            } else {\r\n                                resultFold = {\r\n                                    start: {\r\n                                        line: startLine,\r\n                                        start: stack.peek().start\r\n                                    },\r\n                                    end: {\r\n                                        line: line,\r\n                                        end: fold.end\r\n                                    },\r\n                                    name: fold.name\r\n                                }\r\n                                stack.pop();\r\n                                break;\r\n                            }\r\n                        }\r\n                        stack.pop();\r\n                    }\r\n                }\r\n            }\r\n            line++;\r\n        }\r\n        return foldIconCheck ? line - startLine > 1 : resultFold;\r\n    }\r\n    // 根据相对行号获取真实行号(折叠后行号会改变)\r\n    getRealLine(line) {\r\n        let i = 0;\r\n        let lineCount = 1;\r\n        let realLine = 1;\r\n        while (i < this.folds.length && lineCount < line) {\r\n            let fold = this.folds[i];\r\n            if (lineCount + fold.start.line - realLine < line) {\r\n                lineCount += fold.start.line + 1 - realLine;\r\n                realLine = fold.end.line;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < this.folds.length && this.folds[i].end.line <= fold.end.line) { //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        realLine += line - lineCount;\r\n        return realLine;\r\n    }\r\n    // 根据真实行号获取相对行号\r\n    getRelativeLine(line) {\r\n        let relLine = line;\r\n        let i = 0;\r\n        while (i < this.folds.length) {\r\n            let fold = this.folds[i];\r\n            if (line >= fold.end.line) {\r\n                relLine -= fold.end.line - fold.start.line - 1;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < this.folds.length && this.folds[i].end.line <= fold.end.line) { //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        return relLine;\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-12 09:52:06\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['selecter', 'nowCursorPos', 'cursorFocus']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    search(option) {\r\n        let reg = null,\r\n            exec = null,\r\n            preExec = null,\r\n            start = null,\r\n            end = null,\r\n            result = null,\r\n            resultCaches = [],\r\n            rangePos = null,\r\n            that = this,\r\n            line = 1,\r\n            column = 0\r\n        let text = this.htmls.map((item) => {\r\n            return item.text\r\n        }).join('\\n');\r\n        let strs = option.text.split(/\\n/);\r\n        let regStr = option.text.replace(/\\\\|\\.|\\*|\\+|\\-|\\?|\\(|\\)|\\[|\\]|{|\\}|\\^|\\$|\\~|\\!/g, '\\\\$&');\r\n        regStr = (option.wholeWord ? '(?:\\\\b|(?=[^0-9a-zA-Z]))' : '') + regStr + (option.wholeWord ? '(?:\\\\b|(?=[^0-9a-zA-Z]))' : '');\r\n        option = option || {};\r\n        reg = new RegExp('[^\\n]*?(' + regStr + ')|[^\\n]*?\\n', option.ignoreCase ? 'img' : 'mg');\r\n        while (exec = reg.exec(text)) {\r\n            if (!exec[1]) {\r\n                line++;\r\n                column = 0;\r\n            } else {\r\n                if (preExec && preExec[1] && preExec.index + preExec[0].length !== exec.index) {\r\n                    line++;\r\n                    column = 0;\r\n                }\r\n                start = {\r\n                    line: line,\r\n                    column: column + exec[0].length - strs[0].length\r\n                }\r\n                end = {\r\n                    line: line + strs.length - 1,\r\n                    column: strs.length > 1 ? strs.peek().length : column + exec[0].length\r\n                }\r\n                column = end.column;\r\n                rangePos = {\r\n                    start: start,\r\n                    end: end\r\n                };\r\n                resultCaches.push(rangePos);\r\n                if (!result && (!that.nowCursorPos || Util.comparePos(end, that.nowCursorPos) >= 0)) {\r\n                    let prePos = resultCaches[resultCaches.length - 2];\r\n                    result = rangePos;\r\n                    resultCaches.index = resultCaches.length - 1;\r\n                    // 寻找最接近当前光标的区域\r\n                    // if (prePos && that.nowCursorPos) {\r\n                    //     let distance1 = that.nowCursorPos.line - prePos.end.line;\r\n                    //     let distance2 = end.line - that.nowCursorPos.line;\r\n                    //     if (distance1 === distance2) {\r\n                    //         distance1 = that.nowCursorPos.column - prePos.end.column;\r\n                    //         distance2 = start.column - that.nowCursorPos.column;\r\n                    //     }\r\n                    //     if (distance2 > distance1) {\r\n                    //         result = prePos;\r\n                    //         resultCaches.index = resultCaches.index - 2;\r\n                    //     }\r\n                    // }\r\n                }\r\n            }\r\n            preExec = exec;\r\n        }\r\n        if (!resultCaches.length) {\r\n            return null;\r\n        }\r\n        if (!result && resultCaches.length) {\r\n            resultCaches.index = 0;\r\n            result = resultCaches[0];\r\n        }\r\n        this.cache(option, resultCaches);\r\n        return {\r\n            now: resultCaches.index + 1,\r\n            list: resultCaches,\r\n            result: result\r\n        };\r\n    }\r\n    cache(option, resultCaches) {\r\n        let resultIndexMap = {};\r\n        resultIndexMap[resultCaches.index] = true;\r\n        this.cacheData = {\r\n            option: option,\r\n            resultCaches: resultCaches,\r\n            resultIndexMap: resultIndexMap\r\n        };\r\n    }\r\n    clearCache(now) {\r\n        let index = now - 1;\r\n        if (now !== undefined) {\r\n            let resultCaches = this.cacheData.resultCaches;\r\n            let indexs = Object.keys(this.cacheData.resultIndexMap);\r\n            this.cacheData.resultIndexMap = {};\r\n            resultCaches.splice(index, 1);\r\n            if (resultCaches.index >= index) {\r\n                resultCaches.index--;\r\n            }\r\n            indexs.map((item) => {\r\n                if (item >= index) {\r\n                    item--;\r\n                }\r\n                if (item > -1) {\r\n                    this.cacheData.resultIndexMap[item] = true;\r\n                }\r\n            });\r\n        } else {\r\n            this.cacheData = null;\r\n        }\r\n    }\r\n    checkCache(direct) {\r\n        let resultCaches = this.cacheData.resultCaches;\r\n        let resultIndexMap = this.cacheData.resultIndexMap;\r\n        let index = resultCaches.index + (direct === 'up' ? -1 : 1);\r\n        let result = null;\r\n        if (index == resultCaches.length) {\r\n            index = 0;\r\n        } else if (index < 0) {\r\n            index = resultCaches.length - 1;\r\n        }\r\n        if (!resultIndexMap[index] || !this.cursorFocus) {\r\n            result = resultCaches[index];\r\n            resultCaches.index = index;\r\n            resultIndexMap[index] = true;\r\n        }\r\n        return {\r\n            now: index + 1,\r\n            list: resultCaches,\r\n            result: result\r\n        }\r\n    }\r\n    hasCache() {\r\n        return !!this.cacheData;\r\n    }\r\n    next() {\r\n        return this.checkCache();\r\n    }\r\n    prev() {\r\n        return this.checkCache('up');\r\n    }\r\n    now() {\r\n        let resultCaches = this.cacheData.resultCaches;\r\n        return {\r\n            now: resultCaches.index + 1,\r\n            list: resultCaches,\r\n            result: resultCaches[resultCaches.index]\r\n        }\r\n    }\r\n    hasNow() {\r\n        return this.cacheData && this.cacheData.resultCaches.index > -1;\r\n    }\r\n    clearNow() {\r\n        if (this.cacheData) {\r\n            this.cacheData.resultCaches.index = -1;\r\n            this.cacheData.resultIndexMap = {};\r\n        }\r\n    }\r\n    setNow(cursorPos) {\r\n        let resultCaches = this.cacheData.resultCaches;\r\n        this.cacheData.resultCaches.index = 0;\r\n        this.cacheData.resultIndexMap = {\r\n            0: true\r\n        };\r\n        for (let i = 0; i < resultCaches.length; i++) {\r\n            let item = resultCaches[i];\r\n            if (Util.comparePos(item.end, cursorPos) >= 0) {\r\n                this.cacheData.resultCaches.index = i;\r\n                this.cacheData.resultIndexMap = {\r\n                    i: true\r\n                };\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    getConfig() {\r\n        return Object.assign({}, this.cacheData.option);\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-13 10:41:16\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.selectedRanges = [];\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'renderSelectedBg',\r\n            'cursor',\r\n        ]);\r\n        Util.defineProperties(this, context, [\r\n            'htmls',\r\n        ]);\r\n        this.setContextData = (prop, value) => {\r\n            context.setData(prop, value);\r\n        }\r\n    }\r\n    select(direct, wholeWord) {\r\n        this.cursor.multiCursorPos.map((cursorPos) => {\r\n            let selectedRange = this.checkCursorSelected(cursorPos);\r\n            if (selectedRange) {\r\n                this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                if (Util.comparePos(cursorPos, selectedRange.start) < 0 ||\r\n                    Util.comparePos(cursorPos, selectedRange.end) <= 0 && direct === 'right') {\r\n                    selectedRange.start.line = cursorPos.line;\r\n                    selectedRange.start.column = cursorPos.column;\r\n                } else {\r\n                    selectedRange.end.line = cursorPos.line;\r\n                    selectedRange.end.column = cursorPos.column;\r\n                }\r\n            } else {\r\n                let _cursorPos = Object.assign({}, cursorPos);\r\n                cursorPos = this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                this.addSelectedRange(_cursorPos, cursorPos);\r\n            }\r\n        });\r\n        this.filterSelectedRanges();\r\n        this.renderSelectedBg();\r\n    }\r\n    // 添加选中区域\r\n    addSelectedRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return;\r\n        }\r\n        this.selectedRanges.push({\r\n            start: Object.assign({}, start),\r\n            end: Object.assign({}, end)\r\n        });\r\n    }\r\n    /**\r\n     * 设置选中区域\r\n     * @param {Object} start\r\n     * @param {Object} end\r\n     */\r\n    setSelectedRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return;\r\n        }\r\n        this.clearRange();\r\n        this.selectedRanges.empty();\r\n        this.selectedRanges.push({\r\n            start: start,\r\n            end: end\r\n        });\r\n    }\r\n    // 检测光标是否在选中区域范围内\r\n    checkCursorSelected(cursorPos) {\r\n        for (let i = 0; i < this.selectedRanges.length; i++) {\r\n            let selectedRange = this.selectedRanges[i];\r\n            if (Util.comparePos(cursorPos, selectedRange.start) >= 0 &&\r\n                Util.comparePos(cursorPos, selectedRange.end) <= 0) {\r\n                return selectedRange;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    checkSelectedActive(selectedRange) {\r\n        let cursorPosList = this.cursor.getCursorsByLine(selectedRange.start.line);\r\n        let start = selectedRange.start;\r\n        let end = selectedRange.end;\r\n        if (end.line > start.line) {\r\n            for (let i = 0; i < cursorPosList.length; i++) {\r\n                let item = cursorPosList[i];\r\n                if (Util.comparePos(item, selectedRange.start) === 0) {\r\n                    return item;\r\n                }\r\n            }\r\n            cursorPosList = this.cursor.getCursorsByLine(selectedRange.end.line);\r\n            for (let i = 0; i < cursorPosList.length; i++) {\r\n                let item = cursorPosList[i];\r\n                if (Util.comparePos(item, selectedRange.end) === 0) {\r\n                    return item;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < cursorPosList.length; i++) {\r\n                let item = cursorPosList[i];\r\n                if (Util.comparePos(item, selectedRange.start) === 0 ||\r\n                    Util.comparePos(item, selectedRange.end) === 0) {\r\n                    return item;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // 清除选中背景\r\n    clearRange(selectedRange) {\r\n        if (selectedRange) {\r\n            if (selectedRange.line && selectedRange.column) {\r\n                selectedRange = this.checkCursorSelected(selectedRange);\r\n            }\r\n            if (!selectedRange) {\r\n                return;\r\n            }\r\n            let selectedRanges = this.selectedRanges.filter((item) => {\r\n                if (Util.comparePos(item.start, selectedRange.start) >= 0 &&\r\n                    Util.comparePos(item.end, selectedRange.end) <= 0) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            this.selectedRanges = selectedRanges;\r\n        } else {\r\n            this.selectedRanges.empty();\r\n        }\r\n    }\r\n    // 过滤选中区域\r\n    filterSelectedRanges() {\r\n        let direct = this.checkCursorSelected(this.selectedRanges[0].start);\r\n        let delCurposMap = new Map();\r\n        let preRnage = this.selectedRanges[0];\r\n        direct = direct && 'left' || 'right';\r\n        for (let i = 1; i < this.selectedRanges.length; i++) {\r\n            let nextRange = this.selectedRanges[i];\r\n            if (Util.comparePos(preRnage.end, nextRange) >= 0) { //前后选中区域交叉则合并\r\n                preRnage.end = nextRange.end;\r\n                nextRange.del = true;\r\n                if (direct === 'left') {\r\n                    delCurposMap.set(nextRange.start.line + ',' + nextRange.start.column, true);\r\n                } else {\r\n                    delCurposMap.set(nextRange.end.line + ',' + nextRange.end.column, true);\r\n                }\r\n            } else {\r\n                preRnage = nextRange;\r\n            }\r\n        }\r\n        let selectedRanges = this.selectedRanges.slice();\r\n        this.selectedRanges.empty();\r\n        this.selectedRanges.empty().push(...selectedRanges.filter((item) => {\r\n            return !item.del && Util.comparePos(item.start, item.end) < 0;\r\n        }));\r\n        if (delCurposMap.size) {\r\n            let multiCursorPos = this.cursor.multiCursorPos.slice();\r\n            this.cursor.multiCursorPos.empty().push(...multiCursorPos.filter((item) => {\r\n                if (delCurposMap.has(item.line + ',' + item.column)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            }));\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-14 11:20:31\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nconst regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    dWord: Util.fullAngleReg,\r\n    space: /\\s/\r\n}\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.multiCursorPos = [];\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'nowCursorPos',\r\n            'fSelecter',\r\n            'fSearcher',\r\n            'setNowCursorPos',\r\n            'setCursorRealPos',\r\n            'getColumnByWidth',\r\n            'getStrWidth'\r\n        ]);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    clearCursorPos(cursorPos) {\r\n        if (cursorPos) {\r\n            let index = this.multiCursorPos.indexOf(cursorPos);\r\n            if (index > -1) {\r\n                this.multiCursorPos.splice(index, 1);\r\n                cursorPos.del = true;\r\n            }\r\n            return;\r\n        }\r\n        this.multiCursorPos.map((cursorPos) => {\r\n            cursorPos.del = true;\r\n        });\r\n        this.multiCursorPos.empty();\r\n        this.setNowCursorPos(null);\r\n    }\r\n    // 添加光标\r\n    addCursorPos(cursorPos) {\r\n        let posArr = this.getCursorsByLine(cursorPos.line);\r\n        for (let pos of posArr) {\r\n            // 添加的光标已存在\r\n            if (Util.comparePos(cursorPos, pos) === 0) {\r\n                this.setNowCursorPos(pos);\r\n                return pos;\r\n            }\r\n        }\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column\r\n        };\r\n        this.multiCursorPos.insert(cursorPos, Util.comparePos);\r\n        this.setNowCursorPos(cursorPos);\r\n        return cursorPos;\r\n    }\r\n    // 更新光标位置\r\n    updateCursorPos(cursorPos, line, column) {\r\n        cursorPos.line = line;\r\n        cursorPos.column = column;\r\n        this.setCursorRealPos();\r\n        if (cursorPos === this.nowCursorPos) { //触发滚动\r\n            this.setNowCursorPos(this.nowCursorPos);\r\n        }\r\n    }\r\n    updateAfterPos(cursorPos, line, column) {\r\n        this.multiCursorPos.map((item) => {\r\n            if (item != cursorPos) {\r\n                if (item.line > cursorPos.line) {\r\n                    item.line += line - cursorPos.line;\r\n                } else if (item.line === cursorPos.line && item.column >= cursorPos.column) {\r\n                    item.line += line - cursorPos.line;\r\n                    item.column += column - cursorPos.column;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    updateAllCursorPos(lineDelta, preColumn, nowColumn) {\r\n        let prePos = null;\r\n        let columnDelta = nowColumn - preColumn;\r\n        let column = columnDelta;\r\n        this.multiCursorPos.map((item) => {\r\n            let originPos = Object.assign({}, item);\r\n            if (!lineDelta) {\r\n                if (prePos && item.line > prePos.line) {\r\n                    column = columnDelta;\r\n                }\r\n                item.column += column;\r\n                column += columnDelta;\r\n            } else {\r\n                item.line += lineDelta;\r\n                if (lineDelta > 0) {\r\n                    item.column = nowColumn;\r\n                } else {\r\n                    item.column += nowColumn - preColumn;\r\n                }\r\n            }\r\n            if (item === this.nowCursorPos) { //触发滚动\r\n                this.setNowCursorPos(item);\r\n            }\r\n            prePos = originPos;\r\n            lineDelta += lineDelta;\r\n        });\r\n        this.setCursorRealPos();\r\n    }\r\n    // 设置光标\r\n    setCursorPos(cursorPos) {\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column\r\n        };\r\n        if (this.multiCursorPos.length == 1) {\r\n            let pos = this.multiCursorPos[0];\r\n            if (Util.comparePos(pos, cursorPos) === 0) {\r\n                return;\r\n            }\r\n        }\r\n        this.multiCursorPos.empty();\r\n        this.multiCursorPos.push(cursorPos);\r\n        this.setNowCursorPos(cursorPos);\r\n    }\r\n    getCursorsByLine(line) {\r\n        let left = 0;\r\n        let right = this.multiCursorPos.length - 1;\r\n        let result = [];\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (this.multiCursorPos[mid].line == line) {\r\n                left = mid;\r\n                break;\r\n            } else if (this.multiCursorPos[mid].line > line) {\r\n                right = mid - 1;\r\n            } else {\r\n                left = mid + 1;\r\n            }\r\n        }\r\n        let index = left;\r\n        while (index < this.multiCursorPos.length && this.multiCursorPos[index].line === line) {\r\n            result.push(this.multiCursorPos[index]);\r\n            index++;\r\n        }\r\n        index = left - 1;\r\n        while (index >= 0 && this.multiCursorPos[index].line === line) {\r\n            result.push(this.multiCursorPos[index]);\r\n            index--;\r\n        }\r\n        return result;\r\n    }\r\n    // 移动光标\r\n    moveCursor(cursorPos, direct, wholeWord) {\r\n        let text = this.htmls[cursorPos.line - 1].text;\r\n        let line = cursorPos.line;\r\n        let column = cursorPos.column;\r\n        if (direct === 'up') {\r\n            if (line > 1) {\r\n                let width = this.getStrWidth(text, 0, column);\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'down') {\r\n            if (line < this.htmls.length) {\r\n                let width = this.getStrWidth(text, 0, column);\r\n                line++;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'left') {\r\n            while (column === 0 && line > 1) {\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = text.length;\r\n            }\r\n            if (column === 0) {\r\n                this.updateCursorPos(cursorPos, line, column);\r\n                return {\r\n                    line: line,\r\n                    column: column\r\n                }\r\n            }\r\n            if (wholeWord) {\r\n                let sReg = null;\r\n                //过滤开始的空格\r\n                while (column && text[column - 1].match(regs.space)) {\r\n                    column--;\r\n                }\r\n                if (column == 0) {\r\n                    this.updateCursorPos(cursorPos, line, column);\r\n                    return {\r\n                        line: line,\r\n                        column: column\r\n                    }\r\n                }\r\n                if (text[column - 1].match(regs.word)) { //半角文字\r\n                    sReg = regs.word;\r\n                } else if (text[column - 1].match(regs.dWord)) { //全角文字或字符\r\n                    sReg = regs.dWord;\r\n                }\r\n                if (sReg) {\r\n                    while (column && text[column - 1].match(sReg)) {\r\n                        column--\r\n                    }\r\n                } else {\r\n                    while (column &&\r\n                        !text[column - 1].match(regs.space) &&\r\n                        !text[column - 1].match(regs.word) &&\r\n                        !text[column - 1].match(regs.dWord)) {\r\n                        column--\r\n                    }\r\n                }\r\n            } else if (cursorPos.line === line) {\r\n                column--;\r\n            }\r\n        } else {\r\n            while (column === text.length && line < this.htmls.length) {\r\n                line++;\r\n                column = 0;\r\n                text = this.htmls[line - 1].text;\r\n            }\r\n            if (column == text.length) {\r\n                this.updateCursorPos(cursorPos, line, column);\r\n                return {\r\n                    line: line,\r\n                    column: column\r\n                }\r\n            }\r\n            if (wholeWord) {\r\n                let sReg = null;\r\n                //过滤开始的空格\r\n                while (column < text.length && text[column].match(regs.space)) {\r\n                    column++;\r\n                }\r\n                if (column == text.length) {\r\n                    this.updateCursorPos(cursorPos, line, column);\r\n                    return {\r\n                        line: line,\r\n                        column: column\r\n                    }\r\n                }\r\n                if (text[column].match(regs.word)) { //半角文字\r\n                    sReg = regs.word;\r\n                } else if (text[column].match(regs.dWord)) { //全角文字或字符\r\n                    sReg = regs.dWord;\r\n                }\r\n                if (sReg) {\r\n                    while (column < text.length && text[column].match(sReg)) {\r\n                        column++\r\n                    }\r\n                } else {\r\n                    while (column < text.length &&\r\n                        !text[column].match(regs.space) &&\r\n                        !text[column].match(regs.word) &&\r\n                        !text[column].match(regs.dWord)) {\r\n                        column++\r\n                    }\r\n                }\r\n            } else if (cursorPos.line === line) {\r\n                column++;\r\n            }\r\n        }\r\n        this.updateCursorPos(cursorPos, line, column);\r\n        return {\r\n            line: line,\r\n            column: column\r\n        }\r\n    }\r\n    // 过滤重叠光标\r\n    filterCursorPos() {\r\n        let multiCursorPos = [];\r\n        let prePos = null;\r\n        this.multiCursorPos.map((item) => {\r\n            if (!prePos || Util.comparePos(item, prePos) !== 0) {\r\n                multiCursorPos.push(item);\r\n            }\r\n            prePos = item;\r\n        });\r\n        this.multiCursorPos = multiCursorPos;\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 15:11:27\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.history = [];\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'cursor',\r\n        ]);\r\n        Util.defineProperties(this, context, [\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n            'deleteLineUp',\r\n            'deleteLineDown',\r\n            'replace',\r\n        ]);\r\n    }\r\n    // 撤销操作\r\n    undo() {\r\n        if (this.history.index > 0) {\r\n            let command = this.history[this.history.index - 1];\r\n            this.doCommand(command);\r\n            this.history.index--;\r\n        }\r\n    }\r\n    // 重做操作\r\n    redo() {\r\n        if (this.history.index < this.history.length) {\r\n            let command = this.history[this.history.index];\r\n            this.history.index++;\r\n            this.doCommand(command);\r\n        }\r\n    }\r\n    // 操作命令\r\n    doCommand(command) {\r\n        let commandType = command.type || (command instanceof Array ? command[0].type : command.type);\r\n        switch (commandType) {\r\n            case Util.command.DELETE:\r\n                this.cursor.clearCursorPos();\r\n                if (command instanceof Array) {\r\n                    var list = command.map((command) => {\r\n                        return {\r\n                            start: command.preCursorPos,\r\n                            end: command.cursorPos\r\n                        };\r\n                    });\r\n                    this.deleteContent(Util.keyCode.BACKSPACE, list, true);\r\n                } else {\r\n                    this.deleteContent(Util.keyCode.BACKSPACE, {\r\n                        start: command.preCursorPos,\r\n                        end: command.cursorPos\r\n                    }, true);\r\n                }\r\n                break;\r\n            case Util.command.INSERT:\r\n                this.cursor.clearCursorPos();\r\n                if (command instanceof Array) {\r\n                    var text = [];\r\n                    var cursorPos = [];\r\n                    command.map((command) => {\r\n                        text.push(command.text);\r\n                        cursorPos.push(command.cursorPos);\r\n                    });\r\n                    this.insertContent(text, cursorPos, {\r\n                        keyCode: command[0].keyCode\r\n                    });\r\n                } else {\r\n                    this.insertContent(command.text, Object.assign({}, command.cursorPos), {\r\n                        keyCode: command.keyCode\r\n                    });\r\n                }\r\n                break;\r\n            case Util.command.MOVEUP:\r\n                this.moveLineUp(command.cursorPos, true);\r\n                break;\r\n            case Util.command.MOVEDOWN:\r\n                this.moveLineDown(command.cursorPos, true);\r\n                break;\r\n            case Util.command.COPY_DOWN:\r\n                this.copyLineDown(command.cursorPos, true);\r\n                break;\r\n            case Util.command.DELETE_DOWN:\r\n                this.deleteLineDown(command.cursorPos, true);\r\n                break;\r\n            case Util.command.COPY_UP:\r\n                this.copyLineUp(command.cursorPos, true);\r\n                break;\r\n            case Util.command.DELETE_UP:\r\n                this.deleteLineUp(command.cursorPos, true);\r\n                break;\r\n            case Util.command.REPLACE:\r\n                this.replace(command.text, command.cursorPos, true);\r\n                break;\r\n        }\r\n    }\r\n    // 添加历史记录\r\n    pushHistory(command) {\r\n        while (this.history.length > this.history.index) {\r\n            this.history.pop();\r\n        }\r\n        let that = this;\r\n        let lastCommand = this.history[this.history.index - 1];\r\n        command = this.sortComand(command);\r\n        if (lastCommand instanceof Array &&\r\n            command instanceof Array &&\r\n            lastCommand.length === command.length &&\r\n            Date.now() - this.pushHistoryTime < 2000) {\r\n            if (_checkSameOp(lastCommand) && _checkSameOp(command) &&\r\n                _combCheck(lastCommand[0], command[0])) {\r\n                for (let i = 0; i < lastCommand.length; i++) {\r\n                    _combCommand(lastCommand[i], command[i]);\r\n                }\r\n            } else {\r\n                this.history.push(command);\r\n            }\r\n        } else if (_combCheck(lastCommand, command)) {\r\n            _combCommand(lastCommand, command);\r\n        } else {\r\n            this.history.push(command);\r\n        }\r\n        this.history.index = this.history.length;\r\n        this.pushHistoryTime = Date.now();\r\n\r\n        function _checkSameOp(commandList) {\r\n            for (let i = 1; i < commandList.length; i++) {\r\n                if (commandList[i].type !== commandList[i - 1].type) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function _combCheck(lastCommand, command) {\r\n            // 检测是否为连续插入或连续删除\r\n            if (lastCommand && lastCommand.type == command.type &&\r\n                (lastCommand.type == Util.command.DELETE || lastCommand.type === Util.command.INSERT) &&\r\n                command.preCursorPos.line == command.cursorPos.line &&\r\n                Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0 &&\r\n                Date.now() - that.pushHistoryTime < 2000) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // 检查两次操作是否可以合并\r\n        function _combCommand(lastCommand, command) {\r\n            if (lastCommand.type === Util.command.DELETE) {\r\n                command.preCursorPos.column -= lastCommand.cursorPos.column - lastCommand.preCursorPos.column;\r\n                lastCommand.preCursorPos = command.preCursorPos;\r\n                lastCommand.cursorPos = command.cursorPos;\r\n            } else {\r\n                lastCommand.cursorPos = command.cursorPos;\r\n                if (command.keyCode === Util.keyCode.DELETE) {\r\n                    lastCommand.text = lastCommand.text + command.text;\r\n                } else {\r\n                    lastCommand.text = command.text + lastCommand.text;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 更新历史记录\r\n    updateHistory(command) {\r\n        let index = this.history.index;\r\n        if (command instanceof Array) {\r\n            command.map((item, _index) => {\r\n                item.keyCode = this.history[index - 1][_index].keyCode;\r\n            });\r\n        } else {\r\n            command.keyCode = this.history[index - 1].keyCode;\r\n        }\r\n        this.history[index - 1] = this.sortComand(command);\r\n    }\r\n    sortComand(command) {\r\n        if (command instanceof Array) {\r\n            command.sort((a, b) => {\r\n                a = a.cursorPos;\r\n                b = b.cursorPos;\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n        }\r\n        return command;\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 13:42:22\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\nimport cursor from '../cursor';\r\nlet regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    dWord: Util.fullAngleReg,\r\n    space: /\\s/\r\n}\r\n\r\nexport default class {\r\n    constructor(editor) {\r\n        this.lineId = Number.MIN_SAFE_INTEGER;\r\n        this.htmls = [];\r\n        this.folds = [];\r\n        this.lineIdMap = new Map(); //htmls的唯一标识对象\r\n        this.renderedIdMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.renderedLineMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.foldMap = new Map(); //folds的唯一标识对象\r\n        this.initProperties(editor);\r\n        this.initData();\r\n    }\r\n    initProperties(editor) {\r\n        Util.defineProperties(this, editor, [\r\n            'nowCursorPos',\r\n            'maxLine',\r\n            'maxWidthObj',\r\n            'cursor',\r\n            'history',\r\n            'tokenizer',\r\n            'lint',\r\n            'folder',\r\n            'selecter',\r\n            'fSelecter',\r\n            'render',\r\n            'unFold',\r\n            'renderSelectedBg',\r\n            'setMaxWidth',\r\n            'setLineWidth',\r\n            'setNowCursorPos',\r\n            'getStrWidth',\r\n            'refreshSearch',\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        }\r\n    }\r\n    initData() {\r\n        this.htmls.push({\r\n            lineId: this.lineId++,\r\n            text: '',\r\n            html: '',\r\n            width: 0,\r\n            tokens: [],\r\n            folds: [],\r\n            states: []\r\n        });\r\n        this.lineIdMap.set(this.htmls[0].lineId, this.htmls[0]);\r\n    }\r\n    setData(prop, value) {\r\n        if (typeof this[prop] === 'function') {\r\n            return;\r\n        }\r\n        this[prop] = value;\r\n    }\r\n    insertContent(text, cursorPos, commandObj) {\r\n        let historyArr = [];\r\n        let historyObj = null;\r\n        let cursorPosList = [];\r\n        if (!cursorPos) {\r\n            // 如果有选中区域，需要先删除选中区域\r\n            for (let i = 0; i < this.selecter.selectedRanges.length; i++) {\r\n                let item = this.selecter.selectedRanges[i];\r\n                if (this.selecter.checkSelectedActive(item)) {\r\n                    this.deleteContent();\r\n                    break;\r\n                }\r\n            }\r\n            cursorPosList = this.cursor.multiCursorPos;\r\n        } else {\r\n            cursorPos = cursorPos instanceof Array ? cursorPos : [cursorPos];\r\n            cursorPos.map((item) => {\r\n                cursorPosList.push(this.cursor.addCursorPos(item));\r\n            });\r\n        }\r\n        let texts = text instanceof Array ? text : text.split(/\\r\\n|\\n/);\r\n        let prePos = null;\r\n        let preOriginPos = null;\r\n        cursorPosList.map((cursorPos, index) => {\r\n            let _text = texts.length === this.cursor.multiCursorPos.length ? texts[index] : text;\r\n            let originPos = Object.assign({}, cursorPos);\r\n            if (prePos) {\r\n                if (preOriginPos.line === cursorPos.line) {\r\n                    cursorPos.line = prePos.line;\r\n                    cursorPos.column = prePos.column + cursorPos.column - preOriginPos.column;\r\n                } else {\r\n                    cursorPos.line = prePos.line + cursorPos.line - preOriginPos.line;\r\n                }\r\n            }\r\n            historyObj = this._insertContent(_text, cursorPos);\r\n            historyArr.push(historyObj);\r\n            cursorPos.line = historyObj.cursorPos.line;\r\n            cursorPos.column = historyObj.cursorPos.column;\r\n            prePos = cursorPos;\r\n            preOriginPos = originPos;\r\n        });\r\n        this.setNowCursorPos(this.cursor.multiCursorPos[0]);\r\n        historyObj = historyArr.length > 1 ? historyArr : historyArr[0];\r\n        if (!commandObj) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n    }\r\n    // 插入内容\r\n    _insertContent(text, cursorPos) {\r\n        let nowLineText = this.htmls[cursorPos.line - 1].text;\r\n        let originPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column\r\n        };\r\n        let nowColume = cursorPos.column;\r\n        let nowLine = cursorPos.line;\r\n        let newLine = nowLine;\r\n        let newColumn = nowColume;\r\n        this.tokenizer.onInsertContentBefore(nowLine);\r\n        this.lint.onInsertContentBefore(nowLine);\r\n        this.folder.onInsertContentBefore(Object.assign({}, originPos));\r\n        text = text.split(/\\r\\n|\\n/);\r\n        text = text.map((item) => {\r\n            item = {\r\n                lineId: this.lineId++,\r\n                text: item,\r\n                html: '',\r\n                width: 0,\r\n                tokens: null,\r\n                folds: null,\r\n                states: null\r\n            };\r\n            this.lineIdMap.set(item.lineId, item);\r\n            return item;\r\n        });\r\n        if (text.length > 1) { // 插入多行\r\n            newColumn = text[text.length - 1].text.length;\r\n            text[0].text = nowLineText.slice(0, nowColume) + text[0].text;\r\n            text[text.length - 1].text = text[text.length - 1].text + nowLineText.slice(nowColume);\r\n            this.htmls = this.htmls.slice(0, cursorPos.line - 1).concat(text).concat(this.htmls.slice(cursorPos.line));\r\n        } else { // 插入一行\r\n            newColumn += text[0].text.length;\r\n            text[0].text = nowLineText.slice(0, nowColume) + text[0].text + nowLineText.slice(cursorPos.column);\r\n            this.htmls.splice(cursorPos.line - 1, 1, text[0]);\r\n        }\r\n        newLine += text.length - 1;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.folder.onInsertContentAfter({\r\n            line: newLine,\r\n            column: newColumn\r\n        });\r\n        this.lint.onInsertContentAfter(newLine);\r\n        this.tokenizer.onInsertContentAfter(newLine);\r\n        this.selecter.clearRange();\r\n        this.refreshSearch();\r\n        this.setLineWidth(text);\r\n        this.render();\r\n        if (this.foldMap.has(nowLine) && text.length > 1) {\r\n            this.unFold(nowLine);\r\n        }\r\n        let historyObj = {\r\n            type: Util.command.DELETE,\r\n            cursorPos: {\r\n                line: newLine,\r\n                column: newColumn\r\n            },\r\n            preCursorPos: {\r\n                line: nowLine,\r\n                column: nowColume\r\n            }\r\n        }\r\n        return historyObj;\r\n    }\r\n    deleteContent(keyCode, rangePos, isCommand) {\r\n        let that = this;\r\n        let historyArr = [];\r\n        let historyObj = null;\r\n        let rangeList = [];\r\n        if (rangePos) {\r\n            rangeList = rangePos instanceof Array ? rangePos : [rangePos];\r\n        } else {\r\n            rangeList = this.cursor.multiCursorPos;\r\n        }\r\n        let prePos = null;\r\n        let preOriginPos = null;\r\n        rangeList.map((cursorPos) => {\r\n            if (cursorPos.start) {\r\n                _deleteRangePos(cursorPos);\r\n            } else {\r\n                _deleteCursorPos(cursorPos);\r\n            }\r\n        });\r\n        historyObj = historyArr.length > 1 ? historyArr : historyArr[0];\r\n        if (!isCommand) { // 新增历史记录\r\n            historyObj && this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            historyArr.map((item) => {\r\n                this.cursor.addCursorPos(item.cursorPos);\r\n            });\r\n        }\r\n        this.setNowCursorPos(this.cursor.multiCursorPos[0]);\r\n        this.cursor.filterCursorPos();\r\n\r\n        function _deleteCursorPos(cursorPos) {\r\n            let originPos = Object.assign({}, cursorPos);\r\n            if (prePos) {\r\n                if (preOriginPos.line === cursorPos.line) {\r\n                    cursorPos.line = prePos.line;\r\n                    cursorPos.column = prePos.column + cursorPos.column - preOriginPos.column;\r\n                } else {\r\n                    cursorPos.line = prePos.line + cursorPos.line - preOriginPos.line;\r\n                }\r\n            }\r\n            historyObj = that._deleteContent(cursorPos, keyCode);\r\n            historyArr.push(historyObj);\r\n            cursorPos.line = historyObj.cursorPos.line;\r\n            cursorPos.column = historyObj.cursorPos.column;\r\n            prePos = cursorPos;\r\n            preOriginPos = originPos;\r\n        }\r\n\r\n        function _deleteRangePos(rangePos) {\r\n            let originRangePos = {\r\n                start: Object.assign({}, rangePos.start),\r\n                end: Object.assign({}, rangePos.end)\r\n            }\r\n            if (prePos) {\r\n                if (preOriginPos.line === rangePos.start.line) {\r\n                    rangePos.start.line = prePos.line;\r\n                    rangePos.start.column = prePos.column + rangePos.start.column - preOriginPos.column;\r\n                    if (originRangePos.end.line === originRangePos.start.line) {\r\n                        rangePos.end.column = rangePos.end.column + rangePos.start.column - originRangePos.start.column;\r\n                    }\r\n                } else {\r\n                    rangePos.start.line = prePos.line + rangePos.start.line - preOriginPos.line;\r\n                    rangePos.end.line = rangePos.end.line + rangePos.start.line - originRangePos.start.line;\r\n                }\r\n            }\r\n            historyObj = that._deleteContent(rangePos, keyCode);\r\n            historyArr.push(historyObj);\r\n            rangePos.end.line = historyObj.cursorPos.line;\r\n            rangePos.end.column = historyObj.cursorPos.column;\r\n            prePos = historyObj.cursorPos;\r\n            preOriginPos = originRangePos.end;\r\n        }\r\n    }\r\n    // 删除内容\r\n    _deleteContent(cursorPos, keyCode) {\r\n        let selectedRange = null;\r\n        if (cursorPos.start && cursorPos.end) { //删除范围内的内容\r\n            selectedRange = cursorPos;\r\n            cursorPos = selectedRange.end;\r\n        } else { //光标在选中范围的边界\r\n            selectedRange = this.selecter.checkCursorSelected(cursorPos);\r\n        }\r\n        let start = null;\r\n        let startObj = this.htmls[cursorPos.line - 1];\r\n        let text = startObj.text;\r\n        let deleteText = '';\r\n        let rangeUuid = [];\r\n        let originPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column\r\n        };\r\n        let newLine = cursorPos.line;\r\n        let newColumn = cursorPos.column;\r\n        this.tokenizer.onDeleteContentBefore(cursorPos.line);\r\n        this.lint.onDeleteContentBefore(cursorPos.line);\r\n        this.folder.onDeleteContentBefore(Object.assign({}, cursorPos));\r\n        if (selectedRange) { // 删除选中区域\r\n            let end = selectedRange.end;\r\n            let endObj = this.htmls[end.line - 1];\r\n            start = selectedRange.start;\r\n            startObj = this.htmls[start.line - 1];\r\n            originPos = {\r\n                line: end.line,\r\n                column: end.column\r\n            };\r\n            text = startObj.text;\r\n            deleteText = this.getRangeText(selectedRange.start, selectedRange.end);\r\n            if (start.line == 1 && end.line == this.maxLine) { //全选删除\r\n                rangeUuid = [this.maxWidthObj.lineId];\r\n                this.lineIdMap.clear();\r\n            } else {\r\n                rangeUuid = this.htmls.slice(start.line - 1, end.line).map((item) => {\r\n                    this.lineIdMap.delete(item.lineId);\r\n                    return item.lineId;\r\n                });\r\n            }\r\n            this.lineIdMap.set(startObj.lineId, startObj);\r\n            if (start.line == end.line) { // 单行选中\r\n                text = text.slice(0, start.column) + text.slice(end.column);\r\n                startObj.text = text;\r\n            } else { // 多行选中\r\n                text = text.slice(0, start.column);\r\n                startObj.text = text;\r\n                text = endObj.text;\r\n                text = text.slice(end.column);\r\n                startObj.text += text;\r\n                this.htmls.splice(start.line, end.line - start.line);\r\n            }\r\n            newLine = start.line;\r\n            newColumn = start.column;\r\n        } else if (Util.keyCode.DELETE == keyCode) { // 向后删除一个字符\r\n            if (cursorPos.column == text.length) { // 光标处于行尾\r\n                if (cursorPos.line < this.htmls.length) {\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line].lineId);\r\n                    text = startObj.text + this.htmls[cursorPos.line].text;\r\n                    this.htmls.splice(cursorPos.line, 1);\r\n                    deleteText = '\\n';\r\n                    originPos = {\r\n                        line: cursorPos.line - 1,\r\n                        column: 0\r\n                    };\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column];\r\n                text = text.slice(0, cursorPos.column) + text.slice(cursorPos.column + 1);\r\n                originPos = {\r\n                    line: cursorPos.line,\r\n                    column: cursorPos.column + 1\r\n                };\r\n            }\r\n            startObj.text = text;\r\n        } else { // 向前删除一个字符\r\n            if (cursorPos.column == 0) { // 光标处于行首\r\n                if (cursorPos.line > 1) {\r\n                    let column = this.htmls[cursorPos.line - 2].text.length;\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line - 2].lineId);\r\n                    text = this.htmls[cursorPos.line - 2].text + text;\r\n                    this.htmls.splice(cursorPos.line - 2, 1);\r\n                    deleteText = '\\n';\r\n                    newLine = cursorPos.line - 1;\r\n                    newColumn = column;\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column - 1];\r\n                text = text.slice(0, cursorPos.column - 1) + text.slice(cursorPos.column);\r\n                newColumn = cursorPos.column - 1;\r\n            }\r\n            startObj.text = text;\r\n        }\r\n        startObj.width = this.getStrWidth(startObj.text);\r\n        startObj.tokens = null;\r\n        startObj.folds = null;\r\n        startObj.states = null;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.folder.onDeleteContentAfter({\r\n            line: newLine,\r\n            column: newColumn\r\n        });\r\n        this.lint.onDeleteContentAfter(newLine);\r\n        this.tokenizer.onDeleteContentAfter(newLine);\r\n        this.selecter.clearRange();\r\n        this.refreshSearch();\r\n        this.render();\r\n        // 更新最大文本宽度\r\n        if (startObj.width >= this.maxWidthObj.width) {\r\n            this.setEditorData('maxWidthObj', {\r\n                lineId: startObj.lineId,\r\n                text: startObj.text,\r\n                width: startObj.width\r\n            });\r\n        } else if (rangeUuid.indexOf(this.maxWidthObj.lineId) > -1) {\r\n            this.setMaxWidth();\r\n        }\r\n        let historyObj = {\r\n            type: Util.command.INSERT,\r\n            cursorPos: {\r\n                line: newLine,\r\n                column: newColumn\r\n            },\r\n            preCursorPos: {\r\n                line: originPos.line,\r\n                column: originPos.column\r\n            },\r\n            keyCode: keyCode,\r\n            text: deleteText\r\n        };\r\n        return historyObj;\r\n    }\r\n    moveLineUp(cursorPos, isCommand) {\r\n        let that = this;\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        if (cursorPos) {\r\n            cursorPosList = cursorPos instanceof Array ? cursorPos : [cursorPos];\r\n        } else {\r\n            that.cursor.multiCursorPos.map((item) => {\r\n                if (!prePos || item.line - prePos.line > 1) {\r\n                    item.line > 1 && cursorPosList.push(item);\r\n                    prePos = item;\r\n                }\r\n            });\r\n        }\r\n        cursorPosList.map((cursorPos) => {\r\n            cursorPos = this.cursor.addCursorPos(cursorPos);\r\n            _moveLineUp(cursorPos);\r\n            historyPosList.push({\r\n                line: cursorPos.line,\r\n                column: cursorPos.column\r\n            });\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.MOVEDOWN,\r\n            cursorPos: historyPosList\r\n        }\r\n        if (!isCommand) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n\r\n        function _moveLineUp(cursorPos) {\r\n            let upLineText = that.htmls[cursorPos.line - 2].text;\r\n            let nowLineText = that.htmls[cursorPos.line - 1].text;\r\n            let start = {\r\n                line: cursorPos.line - 1,\r\n                column: 0\r\n            };\r\n            that._deleteContent({\r\n                start: start,\r\n                end: {\r\n                    line: cursorPos.line,\r\n                    column: nowLineText.length\r\n                }\r\n            });\r\n            that._insertContent(nowLineText + '\\n' + upLineText, start);\r\n            that.cursor.getCursorsByLine(cursorPos.line).map((item) => {\r\n                that.cursor.updateCursorPos(item, item.line - 1, item.column);\r\n            });\r\n        }\r\n    }\r\n    moveLineDown(cursorPos, isCommand) {\r\n        let that = this;\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        if (cursorPos) {\r\n            cursorPosList = cursorPos instanceof Array ? cursorPos : [cursorPos];\r\n        } else {\r\n            that.cursor.multiCursorPos.map((item) => {\r\n                if (!prePos || item.line - prePos.line > 1) {\r\n                    item.line > 1 && cursorPosList.push(item);\r\n                    prePos = item;\r\n                }\r\n            });\r\n        }\r\n        cursorPosList.map((cursorPos) => {\r\n            cursorPos = this.cursor.addCursorPos(cursorPos);\r\n            _moveLineDown(cursorPos);\r\n            historyPosList.push({\r\n                line: cursorPos.line,\r\n                column: cursorPos.column\r\n            });\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.MOVEUP,\r\n            cursorPos: historyPosList\r\n        }\r\n        if (!isCommand) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n\r\n        function _moveLineDown(cursorPos) {\r\n            let downLineText = that.htmls[cursorPos.line].text;\r\n            let nowLineText = that.htmls[cursorPos.line - 1].text;\r\n            let start = {\r\n                line: cursorPos.line,\r\n                column: 0\r\n            };\r\n            that._deleteContent({\r\n                start: start,\r\n                end: {\r\n                    line: cursorPos.line + 1,\r\n                    column: downLineText.length\r\n                }\r\n            });\r\n            that._insertContent(downLineText + '\\n' + nowLineText, start);\r\n            that.cursor.getCursorsByLine(cursorPos.line).map((item) => {\r\n                that.cursor.updateCursorPos(item, item.line + 1, item.column);\r\n            });\r\n        }\r\n    }\r\n    copyLine(cursorPos, isCommand, direct) {\r\n        let copyedLineMap = {};\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        direct = direct || 'up';\r\n        if (cursorPos) {\r\n            cursorPosList = cursorPos instanceof Array ? cursorPos : [cursorPos];\r\n        } else {\r\n            this.cursor.multiCursorPos.map((item) => {\r\n                if (!copyedLineMap[item.line]) {\r\n                    cursorPosList.push(item);\r\n                    copyedLineMap[item.line] = true;\r\n                }\r\n            });\r\n        }\r\n        cursorPosList.slice().reverse().map((cursorPos) => {\r\n            let text = this.htmls[cursorPos.line - 1].text;\r\n            cursorPos = this.cursor.addCursorPos(cursorPos);\r\n            historyPosList.push(cursorPos);\r\n            this._insertContent('\\n' + text, {\r\n                line: cursorPos.line,\r\n                column: text.length\r\n            });\r\n            this.cursor.updateAfterPos({\r\n                line: cursorPos.line + (direct === 'up' ? 1 : 0),\r\n                column: 0\r\n            }, cursorPos.line + (direct === 'up' ? 2 : 1), 0);\r\n        });\r\n        historyPosList = historyPosList.map((item) => {\r\n            return {\r\n                line: item.line,\r\n                column: item.column\r\n            };\r\n        }).reverse();\r\n        this.renderSelectedBg();\r\n        let historyObj = {\r\n            type: direct === 'up' ? Util.command.DELETE_DOWN : Util.command.DELETE_UP,\r\n            cursorPos: historyPosList\r\n        }\r\n        if (!isCommand) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n    }\r\n    // 向上复制一行\r\n    copyLineUp(cursorPos, isCommand) {\r\n        this.copyLine(cursorPos, isCommand, 'up');\r\n    }\r\n    // 向下复制一行\r\n    copyLineDown(cursorPos, isCommand) {\r\n        this.copyLine(cursorPos, isCommand, 'down');\r\n    }\r\n    deleteLine(cursorPos, isCommand, direct) {\r\n        let copyedLineMap = {};\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        direct = direct || 'down';\r\n        if (cursorPos) {\r\n            cursorPosList = cursorPos instanceof Array ? cursorPos : [cursorPos];\r\n        } else {\r\n            this.cursor.multiCursorPos.reverse().slice().map((item) => {\r\n                if (!copyedLineMap[item.line]) {\r\n                    cursorPosList.push(item);\r\n                }\r\n            });\r\n        }\r\n        cursorPosList.slice().reverse().map((cursorPos) => {\r\n            let upText = this.htmls[cursorPos.line - (direct === 'down' ? 1 : 2)].text;\r\n            let downText = this.htmls[cursorPos.line - (direct === 'down' ? 0 : 1)].text;\r\n            cursorPos = this.cursor.addCursorPos(cursorPos);\r\n            historyPosList.push(cursorPos);\r\n            this._deleteContent({\r\n                start: {\r\n                    line: cursorPos.line + (direct === 'down' ? 0 : -1),\r\n                    column: upText.length\r\n                },\r\n                end: {\r\n                    line: cursorPos.line + (direct === 'down' ? 1 : 0),\r\n                    column: downText.length\r\n                }\r\n            });\r\n            this.cursor.updateAfterPos({\r\n                line: cursorPos.line + (direct === 'down' ? 1 : 0),\r\n                column: 0\r\n            }, cursorPos.line + (direct === 'down' ? 0 : -1), 0);\r\n        });\r\n        historyPosList = historyPosList.map((item) => {\r\n            return {\r\n                line: item.line,\r\n                column: item.column\r\n            };\r\n        }).reverse();\r\n        this.renderSelectedBg();\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.COPY_UP : Util.command.COPY_DOWN,\r\n            cursorPos: historyPosList\r\n        }\r\n        if (!isCommand) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n    }\r\n    // 删除上面一行\r\n    deleteLineUp(cursorPos, isCommand) {\r\n        this.deleteLine(cursorPos, isCommand, 'up');\r\n    }\r\n    // 删除下面一行\r\n    deleteLineDown(cursorPos, isCommand) {\r\n        this.deleteLine(cursorPos, isCommand, 'down');\r\n    }\r\n    replace(text, ranges, isCommand) {\r\n        let historyObj = null;\r\n        let historyRnageList = [];\r\n        let deleteText = this.getRangeText(ranges.peek().start, ranges.peek().end);\r\n        let direct = ranges.length > 1 && Util.comparePos(ranges[0].start, ranges[1].start) < 0 ? 'asc' : 'desc';\r\n        for (let i = ranges.length - 1; i >= 0; i--) {\r\n            let item = ranges[i];\r\n            let end = null;\r\n            deleteText && this._deleteContent({\r\n                start: item.start,\r\n                end: item.end\r\n            });\r\n            if (text) {\r\n                historyObj = this._insertContent(text, item.start);\r\n                end = historyObj.cursorPos;\r\n            } else {\r\n                end = item.start;\r\n            }\r\n            historyRnageList.push({\r\n                start: item.start,\r\n                end: end\r\n            });\r\n            if (direct === 'asc') {\r\n                i == 0 && this.cursor.setCursorPos(end);\r\n            } else {\r\n                i == ranges.length - 1 && this.cursor.setCursorPos(end);\r\n            }\r\n        }\r\n        historyObj = {\r\n            type: Util.command.REPLACE,\r\n            cursorPos: historyRnageList,\r\n            text: deleteText\r\n        }\r\n        if (!isCommand) { // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else { // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n        }\r\n    }\r\n    // 获取选中范围内的文本\r\n    getRangeText(start, end) {\r\n        var text = this.htmls[start.line - 1].text;\r\n        if (start.line != end.line) {\r\n            let arr = [];\r\n            text = text.slice(start.column);\r\n            arr = this.htmls.slice(start.line, end.line - 1);\r\n            arr = arr.map((item) => {\r\n                return item.text;\r\n            });\r\n            text += arr.length ? '\\n' + arr.join('\\n') : '';\r\n            text += '\\n' + this.htmls[end.line - 1].text.slice(0, end.column);\r\n        } else {\r\n            text = text.slice(start.column, end.column);\r\n        }\r\n        return text;\r\n    }\r\n    // 获取待复制的文本\r\n    getCopyText(cut) {\r\n        let text = '';\r\n        this.cursor.multiCursorPos.map((cursorPos) => {\r\n            let str = '';\r\n            let selectedRange = this.selecter.checkCursorSelected(cursorPos);\r\n            if (selectedRange) {\r\n                str = this.getRangeText(selectedRange.start, selectedRange.end);\r\n                if (cut) {\r\n                    this.deleteContent();\r\n                }\r\n            } else {\r\n                str = this.htmls[cursorPos.line - 1].text;\r\n                if (cut) {\r\n                    str && this.selecter.addSelectedRange({\r\n                        line: cursorPos.line,\r\n                        column: 0\r\n                    }, {\r\n                        line: cursorPos.line,\r\n                        column: str.length\r\n                    });\r\n                    str && this.deleteContent();\r\n                }\r\n            }\r\n            text += '\\n' + str;\r\n        });\r\n        return text.slice(1);\r\n    }\r\n    // 获取待搜索的文本\r\n    getToSearchObj() {\r\n        let selectedRange = this.selecter.checkCursorSelected(this.nowCursorPos);\r\n        let wholeWord = false;\r\n        let searchText = '';\r\n        if (selectedRange) {\r\n            searchText = this.getRangeText(selectedRange.start, selectedRange.end);\r\n        } else {\r\n            let text = this.htmls[this.nowCursorPos.line - 1].text;\r\n            let str = '';\r\n            let index = this.nowCursorPos.column;\r\n            let sReg = regs.word;\r\n            if (index && text[index - 1].match(regs.dWord)) {\r\n                sReg = regs.dWord;\r\n            }\r\n            while (index > 0 && text[index - 1].match(sReg)) {\r\n                str = text[index - 1] + str;\r\n                index--;\r\n            }\r\n            index = this.nowCursorPos.column;\r\n            while (index < text.length && text[index].match(sReg)) {\r\n                str += text[index];\r\n                index++;\r\n            }\r\n            wholeWord = true;\r\n            searchText = str;\r\n        }\r\n        return {\r\n            text: searchText,\r\n            wholeWord: wholeWord,\r\n            ignoreCase: wholeWord,\r\n        }\r\n    }\r\n}","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/Util';\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'nowCursorPos',\r\n            'cursor',\r\n            'selecter',\r\n            'history',\r\n            'searchWord',\r\n            'openSearch',\r\n            'renderSelectedBg',\r\n        ]);\r\n        Util.defineProperties(this, context, [\r\n            'htmls',\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        }\r\n    }\r\n    onKeyDown(e) {\r\n        let that = this;\r\n        if (e.ctrlKey && e.shiftKey) {\r\n            e.preventDefault();\r\n            switch (e.keyCode) {\r\n                case 37: //ctrl+shift+left\r\n                    this.selecter.select('left', true);\r\n                    break;\r\n                case 38: //ctrl+shift+up\r\n                    this.moveLineUp();\r\n                    break;\r\n                case 39: //ctrl+shift+right\r\n                    this.selecter.select('right', true);\r\n                    break;\r\n                case 40: //ctrl+shift+down\r\n                    this.moveLineDown();\r\n                    break;\r\n                case 68: //ctrl+shift+d\r\n                    this.copyLineUp();\r\n                    break;\r\n            }\r\n            return false;\r\n        } else if (e.altKey && e.shiftKey) {\r\n            e.preventDefault();\r\n            switch (e.keyCode) {\r\n                case 40:\r\n                    this.copyLineDown();\r\n                    break;\r\n            }\r\n        } else if (e.ctrlKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    _moveCursor('left', true);\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right', true);\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 65: //ctrl+a,全选\r\n                    e.preventDefault();\r\n                    let end = {\r\n                        line: this.htmls.length,\r\n                        column: this.htmls.peek().text.length\r\n                    };\r\n                    this.selecter.setSelectedRange({\r\n                        line: 1,\r\n                        column: 0\r\n                    }, end);\r\n                    this.setEditorData('forceCursorView', false);\r\n                    this.cursor.setCursorPos(end);\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 68: //ctrl+d，搜素\r\n                    e.preventDefault();\r\n                    this.searchWord();\r\n                    break;\r\n                case 70: //ctrl+f，搜素\r\n                    e.preventDefault();\r\n                    this.openSearch();\r\n                    break;\r\n                case 90: //ctrl+z，撤销\r\n                case 122:\r\n                    e.preventDefault();\r\n                    this.history.undo();\r\n                    break;\r\n                case 89: //ctrl+y，重做\r\n                case 121:\r\n                    e.preventDefault();\r\n                    this.history.redo();\r\n                    break;\r\n            }\r\n        } else if (e.shiftKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    this.selecter.select('left');\r\n                    break;\r\n                case 38: //up arrow\r\n                    this.selecter.select('up');\r\n                    break;\r\n                case 39: //right arrow\r\n                    this.selecter.select('right');\r\n                    break;\r\n                case 40: //down arrow\r\n                    this.selecter.select('down');\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (e.keyCode) {\r\n                case 9: //tab键\r\n                    e.preventDefault();\r\n                    this.insertContent('\\t');\r\n                    break;\r\n                case 37: //left arrow\r\n                    _moveCursor('left');\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 38: //up arrow\r\n                    _moveCursor('up');\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right');\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case 40: //down arrow\r\n                    _moveCursor('down');\r\n                    this.selecter.clearRange();\r\n                    this.renderSelectedBg();\r\n                    break;\r\n                case Util.keyCode.DELETE: //delete\r\n                    this.deleteContent(Util.keyCode.DELETE);\r\n                    break;\r\n                case Util.keyCode.BACKSPACE: //backspace\r\n                    this.deleteContent(Util.keyCode.BACKSPACE);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function _moveCursor(direct, wholeWord) {\r\n            //ctrl+d后，第一次移动光标只是取消选中状态\r\n            if (!that.selecter.checkCursorSelected(that.nowCursorPos)) {\r\n                that.cursor.multiCursorPos.map((cursorPos) => {\r\n                    that.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                });\r\n            }\r\n            that.cursor.filterCursorPos();\r\n        }\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-status-bar\",style:({height:_vm.height+'px'}),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-editor-status-left\"},[_c('div',{staticClass:\"my-editor-status-item\"},[_c('span',[_vm._v(\"Line \"+_vm._s(_vm.line)+\", Column \"+_vm._s(_vm.column))])])]),_c('div',{staticClass:\"my-editor-status-right\"},[_c('div',{staticClass:\"my-editor-status-item clickable\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showTabsize.apply(null, arguments)}}},[_c('span',[_vm._v(\"Tab Size:\"+_vm._s(_vm._tabSize))]),_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tabsizeVisible),expression:\"tabsizeVisible\"}],attrs:{\"menuList\":_vm.tabSizeList,\"styles\":{right: 0, bottom: _vm.height+'px'}},on:{\"change\":_vm.onTabsizeChange}})],1),_c('div',{staticClass:\"my-editor-status-item clickable\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showLanguage.apply(null, arguments)}}},[_c('span',[_vm._v(_vm._s(_vm._language))]),_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.languageVisible),expression:\"languageVisible\"}],attrs:{\"menuList\":_vm.languageList,\"styles\":{right: 0, bottom: _vm.height+'px'}},on:{\"change\":_vm.onLnaguageChange}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-menu\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},_vm._l((_vm.menuList),function(group){return _c('div',{staticClass:\"my-editor-menu-group\"},_vm._l((group),function(item){return _c('div',{staticClass:\"my-editor-menu-item\",class:{checked: _vm.checkable && item.checked, disabled: item.disabled},on:{\"mousedown\":function($event){return _vm.onClick(item, group)}}},[_c('div',{staticClass:\"my-editor-menu-content\"},[_vm._v(_vm._s(item.name))]),(item.shortcut)?_c('div',{staticClass:\"my-editor-menu-shortcut\"},[_vm._v(_vm._s(item.shortcut))]):_vm._e()])}),0)}),0)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-editor-menu\">\r\n\t\t<div class=\"my-editor-menu-group\" v-for=\"group in menuList\">\r\n\t\t\t<div\r\n\t\t\t\t:class=\"{checked: checkable && item.checked, disabled: item.disabled}\"\r\n\t\t\t\t@mousedown=\"onClick(item, group)\"\r\n\t\t\t\tclass=\"my-editor-menu-item\"\r\n\t\t\t\tv-for=\"item in group\"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"my-editor-menu-content\">{{item.name}}</div>\r\n\t\t\t\t<div class=\"my-editor-menu-shortcut\" v-if=\"item.shortcut\">{{item.shortcut}}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Menu',\r\n    props: {\r\n        menuList: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n        styles: {\r\n            type: Object\r\n        },\r\n        checkable: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        onClick(item, group) {\r\n            if (item.disabled) {\r\n                return;\r\n            }\r\n            group.map((item) => {\r\n                item.checked = false;\r\n            });\r\n            item.checked = true;\r\n            this.$emit('change', item);\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Menu.vue?vue&type=template&id=717ef36d&\"\nimport script from \"./Menu.vue?vue&type=script&lang=js&\"\nexport * from \"./Menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"{height:height+'px'}\" @contextmenu.stop.prevent class=\"my-editor-status-bar\">\r\n\t\t<div class=\"my-editor-status-left\">\r\n\t\t\t<div class=\"my-editor-status-item\">\r\n\t\t\t\t<span>Line {{line}}, Column {{column}}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"my-editor-status-right\">\r\n\t\t\t<div @mousedown.stop=\"showTabsize\" class=\"my-editor-status-item clickable\">\r\n\t\t\t\t<span>Tab Size:{{_tabSize}}</span>\r\n\t\t\t\t<Menu :menuList=\"tabSizeList\" :styles=\"{right: 0, bottom: height+'px'}\" @change=\"onTabsizeChange\" v-show=\"tabsizeVisible\"></Menu>\r\n\t\t\t</div>\r\n\t\t\t<div @mousedown.stop=\"showLanguage\" class=\"my-editor-status-item clickable\">\r\n\t\t\t\t<span>{{_language}}</span>\r\n\t\t\t\t<Menu :menuList=\"languageList\" :styles=\"{right: 0, bottom: height+'px'}\" @change=\"onLnaguageChange\" v-show=\"languageVisible\"></Menu>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport Menu from './Menu';\r\nexport default {\r\n    name: 'StatusBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25\r\n        },\r\n        line: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        column: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        language: {\r\n            type: String,\r\n            default: 'JavaScript'\r\n        },\r\n        tabSize: {\r\n            type: Number,\r\n            default: 4\r\n        }\r\n    },\r\n    components: {\r\n        Menu\r\n    },\r\n    data() {\r\n        return {\r\n            _tabSize: 0,\r\n            _language: '',\r\n            tabsizeVisible: false,\r\n            languageVisible: false,\r\n            tabSizeList: [[]],\r\n            languageList: [[{ name: 'JavaScript' }, { name: 'HTML' }, { name: 'CSS' }]]\r\n        }\r\n    },\r\n    created() {\r\n        for (let i = 1; i <= 8; i++) {\r\n            this.tabSizeList[0].push({\r\n                name: `Tab Width：${i}`,\r\n                size: i\r\n            });\r\n        }\r\n        this._tabSize = this.tabSize;\r\n        this._language = this.language;\r\n        this.setDefault();\r\n    },\r\n    methods: {\r\n        setDefault() {\r\n            this.tabSizeList[0].map((item) => {\r\n                item.checked = item.size == this._tabSize;\r\n            });\r\n            this.languageList[0].map((item) => {\r\n                item.checked = item.name == this._language;\r\n            });\r\n        },\r\n        showTabsize() {\r\n            let visible = this.tabsizeVisible;\r\n            this.closeAllMenu();\r\n            this.tabsizeVisible = !visible;\r\n        },\r\n        showLanguage() {\r\n            let visible = this.languageVisible;\r\n            this.closeAllMenu();\r\n            this.languageVisible = !visible;\r\n        },\r\n        closeAllMenu() {\r\n            this.languageVisible = false;\r\n            this.tabsizeVisible = false;\r\n        },\r\n        onTabsizeChange(item) {\r\n            if (this._tabSize != item.size) {\r\n                this._tabSize = item.size;\r\n                this.$emit('update:tabSize', item.size);\r\n            }\r\n            this.tabsizeVisible = false;\r\n        },\r\n        onLnaguageChange(item) {\r\n            if (this._language != item.name) {\r\n                this._language = item.name;\r\n                this.$emit('update:language', item.name);\r\n            }\r\n            this.languageVisible = false;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatusBar.vue?vue&type=template&id=fcfadb24&\"\nimport script from \"./StatusBar.vue?vue&type=script&lang=js&\"\nexport * from \"./StatusBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-search\",on:{\"contextmenu\":[function($event){$event.preventDefault();},function($event){$event.stopPropagation();}],\"mousedown\":function($event){$event.stopPropagation();},\"selectstart\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"my-editor-search-left\"},[_c('span',{staticClass:\"iconfont\",staticStyle:{\"font-size\":\"14px\"},attrs:{\"title\":\"Toggle Replace mode\"},on:{\"click\":_vm.showReplace}},[_vm._v(_vm._s(_vm.replaceVisible?'':''))])]),_c('div',{staticStyle:{\"flex-grow\":\"1\"}},[_c('div',{staticClass:\"my-editor-search-top\"},[_c('div',{staticClass:\"my-editor-search-input\",class:{'active-border':_vm.input1Focus}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchText),expression:\"searchText\"}],ref:\"input1\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.searchText)},on:{\"blur\":function($event){_vm.input1Focus=false},\"focus\":function($event){_vm.input1Focus=true},\"keydown\":_vm.onKeyDown,\"input\":function($event){if($event.target.composing){ return; }_vm.searchText=$event.target.value}}}),_c('span',{staticClass:\"my-editor-search-suffix\",class:{'active-suffix':_vm.ignoreCase},attrs:{\"title\":\"Match Case(Alt+C)\"},on:{\"click\":_vm.changeCase}},[_vm._v(\"Aa\")]),_c('span',{staticClass:\"my-editor-search-suffix iconfont\",class:{'active-suffix':_vm.wholeWord},attrs:{\"title\":\"Match Whole Word(Alt+W)\"},on:{\"click\":_vm.changeWhole}},[_vm._v(\"\")])]),(_vm.count)?_c('div',[_c('span',[_vm._v(_vm._s(_vm.now))]),_c('span',[_vm._v(\" of \")]),_c('span',[_vm._v(_vm._s(_vm.count))])]):_c('span',{style:({color:_vm.searchText?'red':'#333'})},[_vm._v(\"No results\")])]),(_vm.replaceVisible)?_c('div',{staticClass:\"my-editor-search-bottom\",staticStyle:{\"margin-top\":\"5px\"}},[_c('div',{staticClass:\"my-editor-search-input\",class:{'active-border':_vm.input2Focus}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.replaceText),expression:\"replaceText\"}],ref:\"input2\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.replaceText)},on:{\"blur\":function($event){_vm.input2Focus=false},\"focus\":function($event){_vm.input2Focus=true},\"keydown\":_vm.onKeyDown2,\"input\":function($event){if($event.target.composing){ return; }_vm.replaceText=$event.target.value}}})]),_c('span',{staticClass:\"iconfont active-click\",class:{'enabled-color':_vm.count>0,'disabled-color':_vm.count==0},staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace(Enter)\"},on:{\"click\":_vm.replace}},[_vm._v(\"\")]),_c('span',{staticClass:\"iconfont active-click\",class:{'enabled-color':_vm.count>0,'disabled-color':_vm.count==0},staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace All(Ctrl+Alt+Enter)\"},on:{\"click\":_vm.replaceAll}},[_vm._v(\"\")])]):_vm._e()]),_c('div',{staticClass:\"my-editor-search-right\"},[_c('span',{staticClass:\"iconfont\",class:{'active-border':_vm.searchPrevActive,'enabled-color':_vm.count>0,'disabled-color':_vm.count==0},staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Previous Match(Shift Enter)\"},on:{\"click\":_vm.searchPrev}},[_vm._v(\"\")]),_c('span',{staticClass:\"iconfont\",class:{'active-border':_vm.searchNextActive,'enabled-color':_vm.count>0,'disabled-color':_vm.count==0},staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Next Match(Enter)\"},on:{\"click\":_vm.searchNext}},[_vm._v(\"\")]),_c('span',{staticClass:\"iconfont\",attrs:{\"title\":\"Close\"},on:{\"click\":_vm.close}},[_vm._v(\"\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div @contextmenu.prevent @contextmenu.stop @mousedown.stop @selectstart.stop class=\"my-editor-search\">\r\n\t\t<div class=\"my-editor-search-left\">\r\n\t\t\t<span @click=\"showReplace\" class=\"iconfont\" style=\"font-size:14px\" title=\"Toggle Replace mode\">{{replaceVisible?'&#xe61a;':'&#xe682;'}}</span>\r\n\t\t</div>\r\n\t\t<div style=\"flex-grow:1\">\r\n\t\t\t<div class=\"my-editor-search-top\">\r\n\t\t\t\t<div :class=\"{'active-border':input1Focus}\" class=\"my-editor-search-input\">\r\n\t\t\t\t\t<input @blur=\"input1Focus=false\" @focus=\"input1Focus=true\" @keydown=\"onKeyDown\" ref=\"input1\" type=\"text\" v-model=\"searchText\" />\r\n\t\t\t\t\t<span :class=\"{'active-suffix':ignoreCase}\" @click=\"changeCase\" class=\"my-editor-search-suffix\" title=\"Match Case(Alt+C)\">Aa</span>\r\n\t\t\t\t\t<span :class=\"{'active-suffix':wholeWord}\" @click=\"changeWhole\" class=\"my-editor-search-suffix iconfont\" title=\"Match Whole Word(Alt+W)\">&#xed7d;</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div v-if=\"count\">\r\n\t\t\t\t\t<span>{{now}}</span>\r\n\t\t\t\t\t<span>&nbsp;of&nbsp;</span>\r\n\t\t\t\t\t<span>{{count}}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span :style=\"{color:searchText?'red':'#333'}\" v-else>No results</span>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"my-editor-search-bottom\" style=\"margin-top:5px\" v-if=\"replaceVisible\">\r\n\t\t\t\t<div :class=\"{'active-border':input2Focus}\" class=\"my-editor-search-input\">\r\n\t\t\t\t\t<input @blur=\"input2Focus=false\" @focus=\"input2Focus=true\" @keydown=\"onKeyDown2\" ref=\"input2\" type=\"text\" v-model=\"replaceText\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"{'enabled-color':count>0,'disabled-color':count==0}\"\r\n\t\t\t\t\t@click=\"replace\"\r\n\t\t\t\t\tclass=\"iconfont active-click\"\r\n\t\t\t\t\tstyle=\"margin-right:5px\"\r\n\t\t\t\t\ttitle=\"Replace(Enter)\"\r\n\t\t\t\t>&#xed7e;</span>\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"{'enabled-color':count>0,'disabled-color':count==0}\"\r\n\t\t\t\t\t@click=\"replaceAll\"\r\n\t\t\t\t\tclass=\"iconfont active-click\"\r\n\t\t\t\t\tstyle=\"margin-right:5px\"\r\n\t\t\t\t\ttitle=\"Replace All(Ctrl+Alt+Enter)\"\r\n\t\t\t\t>&#xed7c;</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"my-editor-search-right\">\r\n\t\t\t<span\r\n\t\t\t\t:class=\"{'active-border':searchPrevActive,'enabled-color':count>0,'disabled-color':count==0}\"\r\n\t\t\t\t@click=\"searchPrev\"\r\n\t\t\t\tclass=\"iconfont\"\r\n\t\t\t\tstyle=\"margin-right:5px\"\r\n\t\t\t\ttitle=\"Previous Match(Shift Enter)\"\r\n\t\t\t>&#xe6a9;</span>\r\n\t\t\t<span\r\n\t\t\t\t:class=\"{'active-border':searchNextActive,'enabled-color':count>0,'disabled-color':count==0}\"\r\n\t\t\t\t@click=\"searchNext\"\r\n\t\t\t\tclass=\"iconfont\"\r\n\t\t\t\tstyle=\"margin-right:5px\"\r\n\t\t\t\ttitle=\"Next Match(Enter)\"\r\n\t\t\t>&#xe6a8;</span>\r\n\t\t\t<span @click=\"close\" class=\"iconfont\" title=\"Close\">&#xe69a;</span>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Search',\r\n    props: {\r\n        now: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n        count: {\r\n            type: Number,\r\n            default: 0\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            searchText: '',\r\n            replaceText: '',\r\n            replaceVisible: false,\r\n            wholeWord: false,\r\n            ignoreCase: false,\r\n            searchPrevActive: false,\r\n            searchNextActive: false,\r\n            input1Focus: false,\r\n            input2Focus: false,\r\n        }\r\n    },\r\n    watch: {\r\n        searchText: function (newVal) {\r\n            this.search(100);\r\n        },\r\n        wholeWord: function (newVal) {\r\n            if (newVal) {\r\n                this.focus();\r\n            }\r\n        },\r\n        ignoreCase: function (newVal) {\r\n            if (newVal) {\r\n                this.focus();\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        initData(obj) {\r\n            for (let key in obj) {\r\n                this[key] = obj[key];\r\n            }\r\n            this.search();\r\n        },\r\n        search(delay) {\r\n            clearTimeout(this.search.timer);\r\n            this.search.timer = setTimeout(() => {\r\n                this.$emit('search', {\r\n                    text: this.searchText,\r\n                    ignoreCase: this.ignoreCase,\r\n                    wholeWord: this.wholeWord\r\n                });\r\n            }, delay || 0);\r\n        },\r\n        changeCase() {\r\n            this.ignoreCase = !this.ignoreCase;\r\n            this.search();\r\n        },\r\n        changeWhole() {\r\n            this.wholeWord = !this.wholeWord;\r\n            this.search();\r\n        },\r\n        showReplace() {\r\n            this.replaceVisible = !this.replaceVisible;\r\n        },\r\n        searchNext() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.searchNextActive = true;\r\n            this.focus();\r\n            this.$emit('next');\r\n        },\r\n        searchPrev() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.searchPrevActive = true;\r\n            this.focus();\r\n            this.$emit('prev');\r\n        },\r\n        replace() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replace', { text: this.replaceText });\r\n        },\r\n        replaceAll() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replaceAll', { text: this.replaceText });\r\n        },\r\n        close() {\r\n            this.$emit('close');\r\n        },\r\n        focus() {\r\n            this.$nextTick(() => {\r\n                this.$refs.input1.focus();\r\n            });\r\n        },\r\n        directBlur() {\r\n            this.searchPrevActive = false;\r\n            this.searchNextActive = false;\r\n        },\r\n        onKeyDown(e) {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            if (e.keyCode === 13) {\r\n                if (this.searchPrevActive || !this.searchNextActive && e.shiftKey) {\r\n                    this.$emit('prev');\r\n                } else {\r\n                    this.$emit('next');\r\n                }\r\n            }\r\n        },\r\n        onKeyDown2(e) {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            if (e.keyCode === 13) {\r\n                if (e.ctrlKey && e.altKey) {\r\n                    this.replaceAll();\r\n                } else {\r\n                    this.replace();\r\n                }\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=a09a0eb8&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-editor-tip\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-editor-tip\">\r\n\t\t<div v-html=\"content\"></div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Tip',\r\n    props: {\r\n        content: String,\r\n        styles: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tip.vue?vue&type=template&id=187bba82&\"\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n\t<div\r\n\t\t:style=\"{'padding-bottom': _statusHeight}\"\r\n\t\t@contextmenu.prevent=\"onContextmenu\"\r\n\t\t@mousedown=\"onClickEditor\"\r\n\t\t@selectstart.prevent\r\n\t\t@wheel.prevent=\"onWheel\"\r\n\t\tclass=\"my-editor-wrap\"\r\n\t\tref=\"editor\"\r\n\t>\r\n\t\t<!-- 行号 -->\r\n\t\t<div :style=\"{top: _numTop}\" class=\"my-editor-nums\">\r\n\t\t\t<!-- 占位行号，避免行号宽度滚动时变化 -->\r\n\t\t\t<div class=\"my-editor-num\" style=\"visibility:hidden\">{{maxLine}}</div>\r\n\t\t\t<div\r\n\t\t\t\t:class=\"{'my-editor-num-active': _activeLine(line.num)}\"\r\n\t\t\t\t:key=\"line.num\"\r\n\t\t\t\t:style=\"{height:_lineHeight, 'line-height':_lineHeight}\"\r\n\t\t\t\tclass=\"my-editor-num\"\r\n\t\t\t\tv-for=\"line in renderHtmls\"\r\n\t\t\t>\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"[errorMap[line.num]?'my-editor-icon-error':'']\"\r\n\t\t\t\t\t@mouseleave=\"onIconMouseLeave\"\r\n\t\t\t\t\t@mouseover=\"onIconMouseOver(line.num, $event)\"\r\n\t\t\t\t\tclass=\"my-editor-icon my-editor-center\"\r\n\t\t\t\t></span>\r\n\t\t\t\t<span>{{line.num}}</span>\r\n\t\t\t\t<!-- 折叠图标 -->\r\n\t\t\t\t<span\r\n\t\t\t\t\t:class=\"[line.fold=='open'?'my-editor-fold-open':'my-editor-fold-close']\"\r\n\t\t\t\t\t@click=\"onToggleFold(line.num)\"\r\n\t\t\t\t\tclass=\"my-editor-fold my-editor-center\"\r\n\t\t\t\t\tv-if=\"line.fold\"\r\n\t\t\t\t></span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div :style=\"{'box-shadow': _leftShadow}\" class=\"my-editor-content-wrap\">\r\n\t\t\t<!-- 可滚动区域 -->\r\n\t\t\t<div @mousedown=\"onScrollerMdown\" @mouseup=\"onScrollerMup\" class=\"my-editor-content-scroller\" ref=\"scroller\">\r\n\t\t\t\t<!-- 内如区域 -->\r\n\t\t\t\t<div :style=\"{top: _top, minWidth: _contentMinWidth}\" @selectend.prevent=\"onSelectend\" class=\"my-editor-content\" ref=\"content\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\t:class=\"{active: _activeLine(line.num)}\"\r\n\t\t\t\t\t\t:data-line=\"line.num\"\r\n\t\t\t\t\t\t:id=\"'line_'+line.num\"\r\n\t\t\t\t\t\t:key=\"line.num\"\r\n\t\t\t\t\t\t:style=\"{height:_lineHeight, 'line-height':_lineHeight}\"\r\n\t\t\t\t\t\tclass=\"my-editor-line\"\r\n\t\t\t\t\t\tv-for=\"line in renderHtmls\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<!-- my-editor-select-bg为选中状态 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:class=\"[line.selected ? 'my-editor-select-bg my-editor-select-active' : '', line.isFsearch ? 'my-editor-select-f' : '', line.fold == 'close' ? 'fold-close' : '']\"\r\n\t\t\t\t\t\t\t:data-line=\"line.num\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-code\"\r\n\t\t\t\t\t\t\tv-html=\"line.html\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<!-- 选中时的首行背景 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:class=\"{'my-editor-select-active': range.active,'my-editor-select-f': range.isFsearch}\"\r\n\t\t\t\t\t\t\t:style=\"{left: range.left + 'px', width: range.width + 'px'}\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-line-bg my-editor-select-bg\"\r\n\t\t\t\t\t\t\tv-for=\"range in line.selectStarts\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<!-- 选中时的末行背景 -->\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t:class=\"{'my-editor-select-active': range.active,'my-editor-select-f': range.isFsearch}\"\r\n\t\t\t\t\t\t\t:style=\"{left: range.left + 'px', width: range.width + 'px'}\"\r\n\t\t\t\t\t\t\tclass=\"my-editor-line-bg my-editor-select-bg\"\r\n\t\t\t\t\t\t\tv-for=\"range in line.selectEnds\"\r\n\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t<span :style=\"{left: _tabLineLeft(tab)}\" class=\"my-editor-tab-line\" v-for=\"tab in line.tabNum\"></span>\r\n\t\t\t\t\t\t<!-- 模拟光标 -->\r\n\t\t\t\t\t\t<div :style=\"{height: _lineHeight, left: left, visibility: _cursorVisible}\" class=\"my-editor-cursor\" style=\"top:0px\" v-for=\"left in line.cursorList\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 水平滚动条 -->\r\n\t\t\t<div @mousedown.stop @mouseup.stop @scroll=\"onHscroll\" class=\"my-editor-h-scroller-wrap\" ref=\"hScroller\">\r\n\t\t\t\t<div :style=\"{width: _hScrollWidth}\" class=\"my-editor-h-scroller\"></div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 垂直滚动条 -->\r\n\t\t\t<div @mousedown.stop @mouseup.stop @scroll=\"onVscroll\" class=\"my-editor-v-scroller-wrap\" ref=\"vScroller\">\r\n\t\t\t\t<div :style=\"{height: scrollerHeight}\" class=\"my-editor-v-scroller\"></div>\r\n\t\t\t</div>\r\n\t\t\t<!-- 输入框 -->\r\n\t\t\t<textarea\r\n\t\t\t\t:style=\"{top: _textAreaPos.top, left: _textAreaPos.left}\"\r\n\t\t\t\t@blur=\"onBlur\"\r\n\t\t\t\t@compositionend=\"onCompositionend\"\r\n\t\t\t\t@compositionstart=\"onCompositionstart\"\r\n\t\t\t\t@copy.prevent=\"onCopy\"\r\n\t\t\t\t@cut.prevent=\"onCut\"\r\n\t\t\t\t@focus=\"onFocus\"\r\n\t\t\t\t@input=\"onInput\"\r\n\t\t\t\t@keydown=\"onKeyDown\"\r\n\t\t\t\t@paste.prevent=\"onPaste\"\r\n\t\t\t\tclass=\"my-editor-textarea\"\r\n\t\t\t\tref=\"textarea\"\r\n\t\t\t></textarea>\r\n\t\t</div>\r\n\t\t<!-- 状态栏 -->\r\n\t\t<status-bar :column=\"_nowColumn\" :height=\"statusHeight\" :language.sync=\"language\" :line=\"_nowLine\" :tabSize.sync=\"tabSize\" ref=\"statusBar\"></status-bar>\r\n\t\t<!-- 右键菜单 -->\r\n\t\t<Menu :checkable=\"false\" :menuList=\"menuList\" :styles=\"menuStyle\" @change=\"onClickMenu\" ref=\"menu\" v-show=\"menuVisble\"></Menu>\r\n\t\t<tip :content=\"tipContent\" :styles=\"tipStyle\" v-show=\"tipContent\"></tip>\r\n\t\t<search-dialog\r\n\t\t\t:count=\"searchCount\"\r\n\t\t\t:now=\"searchNow\"\r\n\t\t\t@close=\"onCloseSearch\"\r\n\t\t\t@next=\"onSearchNext\"\r\n\t\t\t@prev=\"onSearchPrev\"\r\n\t\t\t@replace=\"replace\"\r\n\t\t\t@replaceAll=\"replaceAll\"\r\n\t\t\t@search=\"onSearch\"\r\n\t\t\tref=\"search\"\r\n\t\t\tv-show=\"searchVisible\"\r\n\t\t></search-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport Tokenizer from '@/module/tokenizer/core/index';\r\nimport Lint from '@/module/lint/core/index';\r\nimport Fold from '@/module/fold/index';\r\nimport Search from '@/module/search/index';\r\nimport Select from '@/module/select/index';\r\nimport Cursor from '@/module/cursor/index';\r\nimport History from '@/module/history/index';\r\nimport Context from '@/module/context/index';\r\nimport ShortCut from '@/module/shortcut/index';\r\nimport StatusBar from './StatusBar';\r\nimport SearchDialog from './Search';\r\nimport Menu from './Menu';\r\nimport Tip from './Tip';\r\nimport Util from '@/common/Util';\r\nimport $ from 'jquery';\r\nlet context = null;\r\n\r\nexport default {\r\n    name: 'Home',\r\n    components: {\r\n        StatusBar,\r\n        SearchDialog,\r\n        Menu,\r\n        Tip,\r\n    },\r\n    data() {\r\n        return {\r\n            charObj: {\r\n                charWidth: 7.15,\r\n                fullAngleCharWidth: 15,\r\n                charHight: 19,\r\n            },\r\n            nowCursorPos: {\r\n                line: 1,\r\n                column: 0,\r\n            },\r\n            cursorVisible: true,\r\n            cursorFocus: true,\r\n            language: 'HTML',\r\n            // language: 'JavaScript',\r\n            // language: 'CSS',\r\n            statusHeight: 23,\r\n            tabSize: 4,\r\n            renderHtmls: [],\r\n            startLine: 1,\r\n            startToEndToken: null,\r\n            top: 0,\r\n            textareaLeft: 0,\r\n            scrollLeft: 0,\r\n            scrollTop: 0,\r\n            maxVisibleLines: 1,\r\n            maxLine: 1,\r\n            scrollerHeight: 'auto',\r\n            scrollerArea: {},\r\n            maxWidthObj: {\r\n                lineId: null,\r\n                text: '',\r\n                width: 0\r\n            },\r\n            menuList: [[{\r\n                name: 'Cut',\r\n                op: 'cut',\r\n                shortcut: 'Ctrl+X'\r\n            }, {\r\n                name: 'Copy',\r\n                op: 'copy',\r\n                shortcut: 'Ctrl+C'\r\n            }, {\r\n                name: 'Paste',\r\n                op: 'paste',\r\n                shortcut: 'Ctrl+V'\r\n            }]],\r\n            menuStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n                'min-width': '200px'\r\n            },\r\n            tipStyle: {\r\n                top: '0px',\r\n                left: '0px'\r\n            },\r\n            errorMap: {},\r\n            menuVisble: false,\r\n            searchVisible: false,\r\n            tipContent: false,\r\n            tipContent: '',\r\n            searchNow: 1,\r\n            searchCount: 0\r\n        }\r\n    },\r\n    computed: {\r\n        _numTop() {\r\n            return this.top - this.charObj.charHight + 'px';\r\n        },\r\n        _leftShadow() {\r\n            return this.scrollLeft ? '17px 0 16px -16px rgba(0, 0, 0, 0.8) inset' : 'none';\r\n        },\r\n        _top() {\r\n            return this.top + 'px';\r\n        },\r\n        _lineHeight() {\r\n            return this.charObj.charHight + 'px';\r\n        },\r\n        _statusHeight() {\r\n            return this.statusHeight + 4 + 'px';\r\n        },\r\n        _cursorVisible() {\r\n            return this.cursorVisible && this.cursorFocus ? 'visible' : 'hidden';\r\n        },\r\n        _hScrollWidth() {\r\n            return this._contentMinWidth;\r\n        },\r\n        _contentMinWidth() {\r\n            let width = 0;\r\n            if (this.$content) {\r\n                width = Util.getStrExactWidth(this.maxWidthObj.text, this.tabSize, this.$content);\r\n                width += this.charObj.fullAngleCharWidth;\r\n            }\r\n            width = this.scrollerArea.width > width ? this.scrollerArea.width : width;\r\n            return width + 'px';\r\n        },\r\n        _textAreaPos() {\r\n            let left = 0;\r\n            let top = this.top;\r\n            if (this.nowCursorPos) {\r\n                top = (this.folder.getRelativeLine(this.nowCursorPos.line) - this.folder.getRelativeLine(this.startLine)) * this.charObj.charHight;\r\n                left = this.textareaLeft;\r\n                left -= this.scrollLeft;\r\n                left = left < this.charObj.charWidth ? this.charObj.charWidth : left;\r\n                left = left > this.scrollerArea.width - this.charObj.charWidth ? this.scrollerArea.width - this.charObj.charWidth : left;\r\n                top += this.charObj.charHight;\r\n                if (top > this.scrollerArea.height - 2 * this.charObj.charHight) {\r\n                    top = this.scrollerArea.height - 2 * this.charObj.charHight;\r\n                }\r\n            }\r\n            return {\r\n                top: top + 'px',\r\n                left: left + 'px'\r\n            }\r\n        },\r\n        _tabLineLeft() {\r\n            return (tab) => {\r\n                return (tab - 1) * this.tabSize * this.charObj.charWidth + 'px';\r\n            }\r\n        },\r\n        _activeLine() {\r\n            return (num) => {\r\n                return this.nowCursorPos && this.nowCursorPos.line == num;\r\n            }\r\n        },\r\n        _nowLine() {\r\n            return this.nowCursorPos && this.nowCursorPos.line || 1;\r\n        },\r\n        _nowColumn() {\r\n            return this.nowCursorPos && this.nowCursorPos.column || 0;\r\n        },\r\n        space() {\r\n            return Util.space(this.tabSize);\r\n        }\r\n    },\r\n    watch: {\r\n        language: function (newVal) {\r\n            context.htmls.map((lineObj) => {\r\n                lineObj.tokens = null;\r\n                lineObj.folds = null;\r\n                lineObj.states = null;\r\n                lineObj.html = '';\r\n            });\r\n            this.render();\r\n            this.tokenizer.initLanguage(newVal);\r\n            this.tokenizer.tokenizeVisibleLins();\r\n            this.tokenizer.tokenizeLines(1);\r\n            this.lint.initLanguage(newVal);\r\n        },\r\n        tabSize: function (newVal) {\r\n            this.render();\r\n            this.maxWidthObj = { lineId: null, text: '', width: 0 };\r\n            this.setLineWidth(context.htmls);\r\n        },\r\n        maxLine: function (newVal) {\r\n            this.setScrollerHeight();\r\n        },\r\n        startLine: function (newVal) {\r\n            this.forceCursorView = false;\r\n            this.tokenizer.onScroll();\r\n            this.render();\r\n        }\r\n    },\r\n    created() {\r\n        window.editor = this;\r\n        window.context = context;\r\n        this.initData();\r\n        this.initEvent();\r\n    },\r\n    mounted() {\r\n        this.$editor = this.$refs.editor;\r\n        this.$scroller = this.$refs.scroller;\r\n        this.$content = this.$refs.content;\r\n        this.$textarea = this.$refs.textarea;\r\n        this.$vScroller = this.$refs.vScroller;\r\n        this.$hScroller = this.$refs.hScroller;\r\n        this.charObj = Util.getCharWidth(this.$content);\r\n        this.maxVisibleLines = Math.ceil(this.$scroller.clientHeight / this.charObj.charHight) + 1;\r\n        this.render();\r\n        this.focus();\r\n    },\r\n    methods: {\r\n        // 初始化数据\r\n        initData() {\r\n            context = new Context(this);\r\n            this.maxWidthObj.lineId = context.htmls[0].lineId;\r\n            this.tokenizer = new Tokenizer(this, context);\r\n            this.lint = new Lint(this, context);\r\n            this.folder = new Fold(this, context);\r\n            this.history = new History(this, context);\r\n            this.searcher = new Search(this, context);\r\n            this.fSearcher = new Search(this, context);\r\n            this.selecter = new Select(this, context);\r\n            this.fSelecter = new Select(this, context);\r\n            this.shortcut = new ShortCut(this, context);\r\n            this.cursor = new Cursor(this, context);\r\n            this.cursor.addCursorPos(this.nowCursorPos);\r\n        },\r\n        // 初始化文档事件\r\n        initEvent() {\r\n            $(document).on('mousemove', (e) => {\r\n                this.onScrollerMmove(e);\r\n            });\r\n            $(document).on('mouseup', (e) => {\r\n                this.onDocumentMouseUp(e);\r\n            });\r\n            $(window).on('resize', (e) => {\r\n                this.render();\r\n            });\r\n        },\r\n        // 显示光标\r\n        showCursor() {\r\n            this.cursorFocus = true;\r\n            if (!this.cursor.multiCursorPos.length) {\r\n                this.showCursor.show = false;\r\n                return;\r\n            }\r\n            if (this.showCursor.show) {\r\n                return;\r\n            }\r\n            this.showCursor.show = true;\r\n            this.cursorVisible = true;\r\n            let _timer = () => {\r\n                clearTimeout(this.curserTimer);\r\n                this.curserTimer = setTimeout(() => {\r\n                    this.cursorVisible = !this.cursorVisible;\r\n                    _timer();\r\n                }, 500);\r\n            }\r\n            _timer();\r\n        },\r\n        // 隐藏光标\r\n        hideCursor() {\r\n            clearTimeout(this.curserTimer);\r\n            this.showCursor.show = false;\r\n            this.cursorFocus = false;\r\n        },\r\n        // 聚焦\r\n        focus() {\r\n            this.$textarea.focus();\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    this.$textarea.focus();\r\n                }, 100);\r\n            }, 100);\r\n        },\r\n        // 渲染\r\n        render() {\r\n            let renderId = this.render.id + 1 || 1;\r\n            this.render.id = renderId;\r\n            this.$nextTick(() => {\r\n                if (this.render.id !== renderId) {\r\n                    return;\r\n                }\r\n                this.renderLine();\r\n                this.renderSelectedBg();\r\n                this.$nextTick(() => {\r\n                    this.setCursorRealPos();\r\n                    this.scrollerArea = {\r\n                        height: this.$scroller.clientHeight,\r\n                        width: this.$scroller.clientWidth,\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        // 渲染代码\r\n        renderLine(lineId) {\r\n            let that = this;\r\n            // 只更新一行\r\n            if (lineId) {\r\n                if (context.renderedIdMap.has(lineId)) {\r\n                    let item = context.lineIdMap.get(lineId);\r\n                    let obj = context.renderedIdMap.get(lineId);\r\n                    // 高亮完成渲染某一行时，render可能还没完成，导致num没更新，此时跳过\r\n                    if (context.htmls[obj.num - 1] && context.htmls[obj.num - 1].lineId === lineId) {\r\n                        Object.assign(obj, _getObj(item, obj.num));\r\n                    }\r\n                    this.setCursorRealPos();\r\n                }\r\n                return;\r\n            }\r\n            context.renderedIdMap.clear();\r\n            context.renderedLineMap.clear();\r\n            this.renderHtmls = [];\r\n            for (let i = 0, startLine = this.startLine; i < this.maxVisibleLines && startLine <= context.htmls.length; i++) {\r\n                let lineObj = context.htmls[startLine - 1];\r\n                let lineId = lineObj.lineId;\r\n                let obj = _getObj(lineObj, startLine);\r\n                this.renderHtmls.push(obj);\r\n                context.renderedIdMap.set(lineId, obj);\r\n                context.renderedLineMap.set(startLine, obj);\r\n                if (context.foldMap.has(startLine)) {\r\n                    let fold = context.foldMap.get(startLine);\r\n                    startLine = fold.end.line;\r\n                } else {\r\n                    startLine++;\r\n                }\r\n            }\r\n\r\n            function _getObj(item, line) {\r\n                let selected = false;\r\n                let spaceNum = /^\\s+/.exec(item.text);\r\n                let tabNum = 0;\r\n                let fold = '';\r\n                let selectStarts = [];\r\n                let selectEnds = [];\r\n                if (spaceNum) {\r\n                    tabNum = /\\t+/.exec(spaceNum[0]);\r\n                    tabNum = tabNum && tabNum[0].length || 0;\r\n                    tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / that.tabSize);\r\n                }\r\n                if (context.foldMap.has(line)) { //该行已经折叠\r\n                    fold = 'close';\r\n                } else if (that.folder.getRangeFold(line, true)) { //可折叠\r\n                    fold = 'open';\r\n                }\r\n                let html = item.html || Util.htmlTrans(item.text);\r\n                html = html.replace(/\\t/g, that.space);\r\n                return {\r\n                    html: html,\r\n                    num: line,\r\n                    tabNum: tabNum,\r\n                    selectStarts: selectStarts,\r\n                    selectEnds: selectEnds,\r\n                    selected: selected,\r\n                    fold: fold,\r\n                    cursorList: [],\r\n                }\r\n            }\r\n        },\r\n        renderSelectedBg() {\r\n            let renderSelectedBgId = this.renderSelectedBg.id + 1 || 1;\r\n            this.renderSelectedBg.id = renderSelectedBgId;\r\n            this.$nextTick(() => {\r\n                if (this.renderSelectedBg.id != renderSelectedBgId) {\r\n                    return;\r\n                }\r\n                if (!this.renderHtmls.length) { //删除内容后，窗口还没滚动到可视区域\r\n                    requestAnimationFrame(() => {\r\n                        this.renderSelectedBg();\r\n                    });\r\n                }\r\n                this.renderHtmls.map((item) => {\r\n                    item.selected = false;\r\n                    item.selectStarts = [];\r\n                    item.selectEnds = [];\r\n                });\r\n                this.selecter.selectedRanges.map((selectedRange) => {\r\n                    this._renderSelectedBg(selectedRange);\r\n                });\r\n                this.fSelecter.selectedRanges.map((selectedRange) => {\r\n                    this._renderSelectedBg(selectedRange, true);\r\n                });\r\n            });\r\n        },\r\n        // 渲染选中背景\r\n        _renderSelectedBg(selectedRange, isFsearch) {\r\n            let selecter = isFsearch ? this.fSelecter : this.selecter;\r\n            let firstLine = this.renderHtmls[0].num;\r\n            let lastLine = this.renderHtmls.peek().num;\r\n            let start = selectedRange.start;\r\n            let end = selectedRange.end;\r\n            let text = context.htmls[start.line - 1].text;\r\n            let active = false;\r\n            start.left = this.getStrWidth(text, 0, start.column);\r\n            if (start.line == end.line) {\r\n                start.width = this.getStrWidth(text, start.column, end.column);\r\n            } else {\r\n                start.width = this.getStrWidth(text, start.column);\r\n                end.left = 0;\r\n                text = context.htmls[end.line - 1].text;\r\n                end.width = this.getStrWidth(text, 0, end.column);\r\n            }\r\n            selectedRange.start = start;\r\n            selectedRange.end = end;\r\n            firstLine = firstLine > start.line + 1 ? firstLine : start.line + 1;\r\n            lastLine = lastLine < end.line - 1 ? lastLine : end.line - 1;\r\n            for (let line = firstLine; line <= lastLine; line++) {\r\n                if (context.renderedLineMap.has(line)) {\r\n                    let lineObj = context.renderedLineMap.get(line);\r\n                    lineObj.selected = true;\r\n                    lineObj.isFsearch = isFsearch;\r\n                }\r\n            }\r\n            if (context.renderedLineMap.has(start.line)) {\r\n                active = selecter.checkSelectedActive(selectedRange);\r\n                context.renderedLineMap.get(start.line).selectStarts.push({\r\n                    left: start.left,\r\n                    width: start.width,\r\n                    active: active,\r\n                    isFsearch: isFsearch\r\n                });\r\n            }\r\n            if (end.line > start.line && context.renderedLineMap.has(end.line)) {\r\n                context.renderedLineMap.get(end.line).selectEnds.push({\r\n                    left: end.left,\r\n                    width: end.width,\r\n                    active: active || selecter.checkSelectedActive(selectedRange),\r\n                    isFsearch: isFsearch\r\n                });\r\n            }\r\n        },\r\n        // 折叠行\r\n        foldLine(line) {\r\n            let resultFold = this.folder.foldLine(line);\r\n            this.focus();\r\n            if (resultFold) {\r\n                this.cursor.multiCursorPos.map((cursorPos) => {\r\n                    if (cursorPos.line > line && cursorPos.line < resultFold.end.line) {\r\n                        let lineObj = context.htmls[line - 1];\r\n                        this.cursor.updateCursorPos(cursorPos, line, lineObj.text.length);\r\n                    }\r\n                });\r\n                this.forceCursorView = false;\r\n                this.setScrollerHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // 展开折叠行\r\n        unFold(line) {\r\n            this.focus();\r\n            if (this.folder.unFold(line)) {\r\n                this.forceCursorView = false;\r\n                this.setScrollerHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // ctrl+f打开搜索\r\n        openSearch() {\r\n            if (this.searchVisible) {\r\n                return;\r\n            }\r\n            let obj = {};\r\n            this.searchVisible = true;\r\n            this.forceCursorView = false;\r\n            if (this.selecter.selectedRanges.length) {\r\n                let selectedRange = this.selecter.selectedRanges[0];\r\n                obj.searchText = context.getRangeText(selectedRange.start, selectedRange.end);\r\n            }\r\n            this.$refs.search.initData(obj);\r\n            this.$refs.search.search();\r\n            this.$refs.search.focus();\r\n        },\r\n        // 内容改变后，刷新搜索\r\n        refreshSearch() {\r\n            if (this.searchVisible) {\r\n                let refreshSearchId = this.refreshSearch.id + 1 || 1;\r\n                this.refreshSearch.id = refreshSearchId;\r\n                this.$nextTick(() => {\r\n                    if (this.refreshSearch.id !== refreshSearchId) {\r\n                        return;\r\n                    }\r\n                    this.$refs.search.search();\r\n                });\r\n            }\r\n        },\r\n        // ctrl+d搜索完整单词\r\n        searchWord() {\r\n            if (this.searchVisible) {\r\n                let searchObj = context.getToSearchObj();\r\n                if (searchObj.text) {\r\n                    let $search = this.$refs.search;\r\n                    if ($search.searchText != searchObj.text || !$search.wholeWord || !$search.ignoreCase) {\r\n                        this.$refs.search.initData({\r\n                            searchText: searchObj.text,\r\n                            wholeWord: true,\r\n                            ignoreCase: true\r\n                        });\r\n                        this.$refs.search.search();\r\n                    } else {\r\n                        this.onSearchNext();\r\n                    }\r\n                }\r\n            } else {\r\n                this.search();\r\n            }\r\n        },\r\n        search(searcher, selecter, searchObj, direct) {\r\n            let resultObj = null;\r\n            let hasCache = false;\r\n            searcher = searcher || this.searcher;\r\n            selecter = selecter || this.selecter;\r\n            hasCache = searcher.hasCache();\r\n            if (hasCache) {\r\n                searchObj = searchObj || searcher.getConfig();\r\n                resultObj = direct === 'up' ? searcher.prev() : searcher.next();\r\n            } else {\r\n                searchObj = searchObj || context.getToSearchObj();\r\n                if (!searchObj.text) {\r\n                    return;\r\n                }\r\n                resultObj = searcher.search(searchObj);\r\n            }\r\n            if (resultObj && resultObj.result) {\r\n                if (!selecter.selectedRanges.length || !this.cursorFocus) {\r\n                    this.cursor.setCursorPos(resultObj.result.end);\r\n                } else {\r\n                    this.cursor.addCursorPos(resultObj.result.end);\r\n                }\r\n                if (!hasCache) {\r\n                    resultObj.list.map((rangePos) => {\r\n                        selecter.addSelectedRange(rangePos.start, rangePos.end);\r\n                    });\r\n                }\r\n                if (searcher === this.fSearcher) {\r\n                    this.searchNow = resultObj.now;\r\n                    this.searchCount = resultObj.list.length;\r\n                }\r\n                this.renderSelectedBg();\r\n            } else if (searcher === this.fSearcher && !resultObj) {\r\n                this.searchCount = 0;\r\n            }\r\n            this.setCursorRealPos();\r\n        },\r\n        replace(data) {\r\n            if (this.fSelecter.selectedRanges.length) {\r\n                let selectedRange = this.fSelecter.selectedRanges[this.searchNow - 1];\r\n                context.replace(data.text, [selectedRange]);\r\n            }\r\n        },\r\n        replaceAll(data) {\r\n            console.time('replaceAll');\r\n            if (this.fSelecter.selectedRanges.length) {\r\n                context.replace(data.text, this.fSelecter.selectedRanges.slice().sort((a, b) => {\r\n                    if (a.start.line === b.start.line) {\r\n                        return a.start.column - b.start.column;\r\n                    }\r\n                    return a.start.line - b.start.line;\r\n                }));\r\n                this.searchCount = 0;\r\n            }\r\n            console.timeEnd('replaceAll');\r\n        },\r\n        setData(prop, value) {\r\n            if (typeof this[prop] === 'function') {\r\n                return;\r\n            }\r\n            this[prop] = value;\r\n        },\r\n        setNowCursorPos(nowCursorPos) {\r\n            this.nowCursorPos = nowCursorPos;\r\n            if (nowCursorPos) {\r\n                let setNowCursorPosId = this.setNowCursorPos.id + 1 || 1;\r\n                this.setNowCursorPos.id = setNowCursorPosId;\r\n                // 强制滚动使光标处于可见区域\r\n                this.$nextTick(() => {\r\n                    if (this.setNowCursorPos.id != setNowCursorPosId) {\r\n                        return;\r\n                    }\r\n                    if (this.forceCursorView !== false) {\r\n                        let line = this.folder.getRelativeLine(nowCursorPos.line);\r\n                        let top = (line - this.folder.getRelativeLine(this.startLine)) * this.charObj.charHight;\r\n                        let relTop = line * this.charObj.charHight;\r\n                        if (relTop > this.scrollTop + this.scrollerArea.height - this.charObj.charHight) {\r\n                            this.$vScroller.scrollTop = relTop + this.charObj.charHight - this.scrollerArea.height;\r\n                            this.startLine = Math.floor(this.scrollTop / this.charObj.charHight);\r\n                            this.startLine++;\r\n                        } else if (top < 0 || top == 0 && this.top < 0) {\r\n                            this.$vScroller.scrollTop = (nowCursorPos.line - 1) * this.charObj.charHight;\r\n                            this.startLine = nowCursorPos.line;\r\n                        }\r\n                    }\r\n                    this.setCursorRealPos();\r\n                });\r\n            }\r\n        },\r\n        // 设置真实光标位置\r\n        setCursorRealPos() {\r\n            let that = this;\r\n            let setCursorRealPosId = this.setCursorRealPos.id + 1 || 1;\r\n            this.setCursorRealPos.id = setCursorRealPosId;\r\n            this.$nextTick(() => {\r\n                if (this.setCursorRealPos.id !== setCursorRealPosId) {\r\n                    return;\r\n                }\r\n                this.renderHtmls.map((item) => {\r\n                    _setLine(item);\r\n                });\r\n                this.cursorVisible = true;\r\n                this.forceCursorView = true;\r\n            });\r\n\r\n            function _setLine(item) {\r\n                let cursorList = [];\r\n                that.cursor.getCursorsByLine(item.num).map((cursorPos) => {\r\n                    cursorList.push(_setCursorRealPos(cursorPos));\r\n                });\r\n                item.cursorList = cursorList;\r\n            }\r\n\r\n            function _setCursorRealPos(cursorPos) {\r\n                let left = 0;\r\n                let lineObj = context.htmls[cursorPos.line - 1];\r\n                if (cursorPos.del) {\r\n                    return;\r\n                }\r\n                if ($('#line_' + cursorPos.line).length && lineObj.tokens && lineObj.tokens.length) {\r\n                    left = _getExactLeft(cursorPos);\r\n                    if (left < 0) { //token还没渲染完\r\n                        setTimeout(() => {\r\n                            _setCursorRealPos(cursorPos);\r\n                        });\r\n                        return;\r\n                    }\r\n                } else {\r\n                    left = that.getStrWidthByLine(cursorPos.line, 0, cursorPos.column);\r\n                }\r\n                // 强制滚动使光标处于可见区域\r\n                if (that.forceCursorView !== false && cursorPos === that.nowCursorPos) {\r\n                    if (left > that.scrollerArea.width + that.scrollLeft - that.charObj.fullAngleCharWidth) {\r\n                        that.$hScroller.scrollLeft = left + that.charObj.fullAngleCharWidth - that.scrollerArea.width;\r\n                    } else if (left < that.scrollLeft) {\r\n                        that.$hScroller.scrollLeft = left - 1;\r\n                    }\r\n                }\r\n                if (cursorPos === that.nowCursorPos) {\r\n                    that.textareaLeft = left;\r\n                }\r\n                return left + 'px';\r\n            }\r\n\r\n            function _getExactLeft(cursorPos) {\r\n                let lineObj = context.htmls[cursorPos.line - 1];\r\n                let token = lineObj.tokens[0];\r\n                for (let i = 1; i < lineObj.tokens.length; i++) {\r\n                    if (lineObj.tokens[i].column < cursorPos.column) {\r\n                        token = lineObj.tokens[i];\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                let $token = $('#line_' + cursorPos.line).\r\n                    children('.my-editor-code').\r\n                    children('span[data-column=\"' + token.column + '\"]');\r\n                if (!$token.length) {\r\n                    return -1;\r\n                }\r\n                let text = token.value.slice(0, cursorPos.column - token.column);\r\n                return $token[0].offsetLeft + that.getStrWidth(text);\r\n            }\r\n        },\r\n        // 获取最大宽度\r\n        setMaxWidth() {\r\n            let maxWidthObj = { line: context.htmls[0].lineId, width: 0 };\r\n            context.htmls.map((item) => {\r\n                if (item.width > maxWidthObj.width) {\r\n                    maxWidthObj = {\r\n                        lineId: item.lineId,\r\n                        text: item.text,\r\n                        width: item.width\r\n                    }\r\n                }\r\n            });\r\n            this.maxWidthObj = maxWidthObj;\r\n        },\r\n        /**\r\n         * 设置每行文本的宽度\r\n         * @param {Array} texts\r\n         */\r\n        setLineWidth(texts) {\r\n            let index = 0;\r\n            let that = this;\r\n            let startTime = Date.now();\r\n            clearTimeout(this.setLineWidth.timer);\r\n            _setLineWidth();\r\n\r\n            function _setLineWidth() {\r\n                while (index < texts.length) {\r\n                    let lineObj = texts[index];\r\n                    if (context.lineIdMap.has(lineObj.lineId)) {\r\n                        let width = that.getStrWidth(lineObj.text);\r\n                        lineObj.width = width;\r\n                        if (width > that.maxWidthObj.width) {\r\n                            that.maxWidthObj = {\r\n                                lineId: lineObj.lineId,\r\n                                text: lineObj.text,\r\n                                width: width\r\n                            }\r\n                        }\r\n                    }\r\n                    index++;\r\n                    if (Date.now() - startTime > 20) {\r\n                        break;\r\n                    }\r\n                }\r\n                if (index < texts.length) {\r\n                    that.setLineWidth.timer = setTimeout(() => {\r\n                        _setLineWidth();\r\n                    }, 20);\r\n                }\r\n            }\r\n        },\r\n        // 设置滚动区域真实高度\r\n        setScrollerHeight() {\r\n            let maxLine = context.htmls.length;\r\n            maxLine = this.folder.getRelativeLine(maxLine);\r\n            this.scrollerHeight = maxLine * this.charObj.charHight + 'px';\r\n        },\r\n        setErrorMap(errorMap) {\r\n            this.errorMap = errorMap;\r\n        },\r\n        // 获取文本在浏览器中的宽度\r\n        getStrWidth(str, start, end) {\r\n            return Util.getStrWidth(str, this.charObj.charWidth, this.charObj.fullAngleCharWidth, this.tabSize, start, end);\r\n        },\r\n        // 获取行对应的文本在浏览器中的宽度\r\n        getStrWidthByLine(line, start, end) {\r\n            return this.getStrWidth(context.htmls[line - 1].text, start, end);\r\n        },\r\n        // 根据文本宽度计算当前列号\r\n        getColumnByWidth(text, offsetX) {\r\n            let left = 0, right = text.length;\r\n            let mid, width, w1, w2;\r\n            while (left < right) {\r\n                mid = Math.floor((left + right) / 2);\r\n                width = this.getStrWidth(text, 0, mid);\r\n                w1 = text[mid - 1] && this.getStrWidth(text[mid - 1]) / 2;\r\n                w2 = text[mid] && this.getStrWidth(text[mid]) / 2 || w1;\r\n                if (width >= offsetX && width - offsetX < w1 || offsetX >= width && offsetX - width < w2) {\r\n                    left = mid;\r\n                    break;\r\n                } else if (width > offsetX) {\r\n                    right = mid;\r\n                } else {\r\n                    left = mid + 1;\r\n                }\r\n            }\r\n            return left;\r\n        },\r\n        // 根据鼠标事件对象获取行列坐标\r\n        getPosByEvent(e) {\r\n            let that = this;\r\n            let $target = $(e.target);\r\n            if ($target.attr('data-line') || $target.attr('data-column')) {\r\n                return _getExactPos(e);\r\n            }\r\n            let $scroller = $(this.$scroller);\r\n            let offset = $scroller.offset();\r\n            let column = 0;\r\n            let clientX = e.clientX < 0 ? 0 : e.clientX;\r\n            let clientY = e.clientY < 0 ? 0 : e.clientY;\r\n            let line = Math.ceil((clientY + this.scrollTop - offset.top) / this.charObj.charHight) || 1;\r\n            line = this.folder.getRealLine(line);\r\n            if (line > context.htmls.length) {\r\n                line = context.htmls.length;\r\n                column = context.htmls[line - 1].text.length;\r\n            } else {\r\n                column = this.getColumnByWidth(context.htmls[line - 1].text, clientX + this.scrollLeft - offset.left);\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column\r\n            }\r\n\r\n            function _getExactPos(e) {\r\n                let $target = $(e.target);\r\n                let line = $target.attr('data-line') - 0;\r\n                let column = $target.attr('data-column');\r\n                if (!line) {\r\n                    line = $target.parent().attr('data-line') - 0;\r\n                }\r\n                let lineObj = context.htmls[line - 1];\r\n                if (!column) {\r\n                    column = lineObj.text.length;\r\n                } else {\r\n                    column = column - 0;\r\n                    for (let i = 0; i < lineObj.tokens.length; i++) {\r\n                        if (lineObj.tokens[i].column == column) {\r\n                            column += that.getColumnByWidth(lineObj.tokens[i].value, e.offsetX);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return {\r\n                    line: line,\r\n                    column: column\r\n                }\r\n            }\r\n        },\r\n        // 右键菜单事件\r\n        onContextmenu(e) {\r\n            let menuWidth = 0;\r\n            let menuHeight = 0;\r\n            let $editor = $(this.$editor);\r\n            let offset = $editor.offset();\r\n            this.menuVisble = true;\r\n            this.$nextTick(() => {\r\n                menuWidth = this.$refs.menu.$el.clientWidth;\r\n                menuHeight = this.$refs.menu.$el.clientHeight;\r\n                if (menuHeight + e.clientY > offset.top + this.scrollerArea.height) {\r\n                    this.menuStyle.top = e.clientY - offset.top - menuHeight + 'px';\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + 'px';\r\n                }\r\n                if (menuWidth + e.clientX > offset.left + $editor[0].clientWidth) {\r\n                    this.menuStyle.left = e.clientX - offset.left - menuWidth + 'px';\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + 'px';\r\n                }\r\n            });\r\n        },\r\n        // 选中菜单\r\n        onClickMenu(menu) {\r\n            switch (menu.op) {\r\n                case 'cut':\r\n                case 'copy':\r\n                    Util.writeClipboard(context.getCopyText(menu.op === 'cut'));\r\n                    break;\r\n                case 'paste':\r\n                    this.$textarea.focus();\r\n                    Util.readClipboard().then((text) => {\r\n                        context.insertContent(text);\r\n                    });\r\n                    break;\r\n            }\r\n            this.menuVisble = false;\r\n            this.focus();\r\n        },\r\n        // 提示图标hover事件\r\n        onIconMouseOver(line, e) {\r\n            let $editor = $(this.$editor);\r\n            let offset = $editor.offset();\r\n            this.tipStyle = {\r\n                left: e.clientX - offset.left + 10 + 'px',\r\n                top: e.clientY - offset.top + 10 + 'px'\r\n            }\r\n            this.tipContent = this.errorMap[line];\r\n        },\r\n        onIconMouseLeave() {\r\n            this.tipContent = '';\r\n        },\r\n        // 折叠/展开\r\n        onToggleFold(line) {\r\n            if (context.foldMap.has(line)) {\r\n                this.unFold(line);\r\n                return;\r\n            } else {\r\n                this.foldLine(line);\r\n            }\r\n        },\r\n        // 点击编辑器\r\n        onClickEditor() {\r\n            this.$refs.statusBar.closeAllMenu();\r\n            this.menuVisble = false;\r\n        },\r\n        // 滚动区域鼠标按下事件\r\n        onScrollerMdown(e) {\r\n            if (e.which == 3) { //右键\r\n                return;\r\n            }\r\n            let pos = this.getPosByEvent(e);\r\n            this.cursor.setCursorPos(pos);\r\n            this.focus();\r\n            this.mouseStartObj = {\r\n                time: Date.now(),\r\n                start: pos\r\n            }\r\n        },\r\n        onScrollerMup(e) {\r\n            let end = this.getPosByEvent(e);\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100 &&\r\n                Util.comparePos(this.mouseStartObj.start, end) != 0) {\r\n                return;\r\n            }\r\n            if (e.which != 3) {\r\n                this.selecter.clearRange();\r\n                this.searcher.clearCache();\r\n                this.fSearcher.clearNow();\r\n                this.renderSelectedBg();\r\n                if (this.mouseUpTime && Date.now() - this.mouseUpTime < 300) { //双击选中单词\r\n                    this.search();\r\n                }\r\n            }\r\n        },\r\n        // 鼠标移动事件\r\n        onScrollerMmove(e) {\r\n            let that = this;\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                var offset = $(this.$scroller).offset();\r\n                let end = this.getPosByEvent(e);\r\n                this.selecter.setSelectedRange(Object.assign({}, this.mouseStartObj.start), end);\r\n                this.cursor.setCursorPos(end);\r\n                this.renderSelectedBg();\r\n                cancelAnimationFrame(this.selectMoveTimer);\r\n                if (e.clientY > offset.top + this.scrollerArea.height) { //鼠标超出底部区域\r\n                    _move('down', e.clientY - offset.top - this.scrollerArea.height);\r\n                } else if (e.clientY < offset.top) { //鼠标超出顶部区域\r\n                    _move('up', offset.top - e.clientY);\r\n                } else if (e.clientX < offset.left) { //鼠标超出左边区域\r\n                    _move('left', offset.left - e.clientX);\r\n                } else if (e.clientX > offset.left + this.scrollerArea.width) { //鼠标超出右边区域\r\n                    _move('right', e.clientX - offset.left - this.scrollerArea.width);\r\n                }\r\n            }\r\n            function _move(autoDirect, speed) {\r\n                let originLine = that.nowCursorPos.line;\r\n                let originColumn = that.nowCursorPos.column;\r\n                let count = 0; // 累计滚动距离\r\n                _run(autoDirect, speed);\r\n\r\n                function _run(autoDirect, speed) {\r\n                    let line = originLine;\r\n                    let column = originColumn;\r\n                    switch (autoDirect) {\r\n                        case 'up':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine - line;\r\n                            break;\r\n                        case 'down':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine + line;\r\n                            break;\r\n                        case 'left':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn - column;\r\n                            break;\r\n                        case 'right':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn + column;\r\n                            break;\r\n                    }\r\n                    line = line < 1 ? 1 : (line > context.htmls.length ? context.htmls.length : line);\r\n                    column = column < 0 ? 0 : (column > context.htmls[originLine - 1].text.length ? context.htmls[originLine - 1].text.length : column);\r\n                    that.cursor.setCursorPos({ line: line, column: column });\r\n                    that.selecter.setSelectedRange(that.mouseStartObj.start, { line: line, column: column });\r\n                    that.renderSelectedBg();\r\n                    that.selectMoveTimer = requestAnimationFrame(() => {\r\n                        _run(autoDirect, speed)\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        // 鼠标抬起事件\r\n        onDocumentMouseUp(e) {\r\n            let end = this.getPosByEvent(e);\r\n            // 按下到抬起的间隔大于100ms，属于选中结束事件\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100 &&\r\n                Util.comparePos(this.mouseStartObj.start, end) != 0) {\r\n                this.selecter.setSelectedRange(this.mouseStartObj.start, end);\r\n                this.cursor.setCursorPos(end);\r\n                this.renderSelectedBg();\r\n            }\r\n            // 停止滚动选中\r\n            cancelAnimationFrame(this.selectMoveTimer);\r\n            this.mouseStartObj = null;\r\n            this.mouseUpTime = Date.now();\r\n            this.$refs.search.directBlur();\r\n        },\r\n        // 左右滚动事件\r\n        onHscroll(e) {\r\n            this.scrollLeft = e.target.scrollLeft;\r\n            this.$scroller.scrollLeft = this.scrollLeft;\r\n            this.forceCursorView = false;\r\n        },\r\n        // 上下滚动事件\r\n        onVscroll(e) {\r\n            let startLine = 1;\r\n            this.scrollTop = e.target.scrollTop;\r\n            startLine = Math.floor(this.scrollTop / this.charObj.charHight);\r\n            startLine++;\r\n            this.startLine = this.folder.getRealLine(startLine);\r\n            this.top = -this.scrollTop % this.charObj.charHight;\r\n        },\r\n        // 滚动滚轮\r\n        onWheel(e) {\r\n            this.$vScroller.scrollTop = this.scrollTop + e.deltaY;\r\n            this.$hScroller.scrollLeft = this.scrollLeft + e.deltaX;\r\n        },\r\n        // 中文输入开始\r\n        onCompositionstart() {\r\n            clearTimeout(this.compositionendTimer);\r\n            this.compositionstart = true;\r\n        },\r\n        // 中文输入结束\r\n        onCompositionend() {\r\n            if (this.compositionstart) {\r\n                let text = this.$textarea.value || '';\r\n                if (text) {\r\n                    context.insertContent(text);\r\n                    this.$textarea.value = '';\r\n                }\r\n            }\r\n            //避免有些浏览器compositionend在input事件之前触发的bug\r\n            this.compositionendTimer = setTimeout(() => {\r\n                this.compositionstart = false;\r\n            }, 100);\r\n        },\r\n        // 输入事件\r\n        onInput() {\r\n            if (!this.compositionstart) {\r\n                let text = this.$textarea.value || '';\r\n                if (text) {\r\n                    context.insertContent(text);\r\n                    this.$textarea.value = '';\r\n                }\r\n            }\r\n        },\r\n        // 复制事件\r\n        onCopy(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, context.getCopyText());\r\n        },\r\n        onCut(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, context.getCopyText(true));\r\n        },\r\n        // 粘贴事件\r\n        onPaste(e) {\r\n            let mime = window.clipboardData ? \"Text\" : \"text/plain\";\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            let copyText = '';\r\n            copyText = clipboardData.getData(mime);\r\n            context.insertContent(copyText);\r\n        },\r\n        // 获得焦点\r\n        onFocus() {\r\n            clearTimeout(this.onBlur.timer);\r\n            this.showCursor();\r\n        },\r\n        // 失去焦点\r\n        onBlur() {\r\n            this.onBlur.timer = setTimeout(() => {\r\n                this.hideCursor();\r\n            }, 300);\r\n        },\r\n        // 键盘按下事件\r\n        onKeyDown(e) {\r\n            this.shortcut.onKeyDown(e);\r\n        },\r\n        onSearch(data) {\r\n            this.fSearcher.clearCache();\r\n            this.fSelecter.clearRange();\r\n            this.search(this.fSearcher, this.fSelecter, {\r\n                text: data.text,\r\n                wholeWord: data.wholeWord,\r\n                ignoreCase: data.ignoreCase,\r\n            });\r\n            this.renderSelectedBg();\r\n        },\r\n        onSearchNext() {\r\n            if (this.fSearcher.hasCache()) {\r\n                if (this.fSearcher.hasNow()) {\r\n                    this.search(this.fSearcher, this.fSelecter);\r\n                } else {\r\n                    let resultObj = null;\r\n                    this.fSearcher.setNow(this.nowCursorPos);\r\n                    resultObj = this.fSearcher.now();\r\n                    this.cursor.setCursorPos(resultObj.result.end);\r\n                    this.searchNow = resultObj.now;\r\n                    this.renderSelectedBg();\r\n                }\r\n            }\r\n        },\r\n        onSearchPrev() {\r\n            if (this.fSearcher.hasCache()) {\r\n                this.search(this.fSearcher, this.fSelecter, null, 'up');\r\n            }\r\n        },\r\n        onCloseSearch() {\r\n            this.searchVisible = false;\r\n            this.fSelecter.clearRange();\r\n            this.renderSelectedBg();\r\n            this.focus();\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=bde303de&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './components/Home.vue';\r\n\r\nVue.use(Router)\r\n\r\nvar router = new Router({\r\n    routes: [{\r\n            path: '/home',\r\n            name: 'Home',\r\n            component: Home,\r\n            meta: {\r\n                title: 'my-editor'\r\n            }\r\n        },\r\n        {\r\n            path: '*',\r\n            redirect: '/home'\r\n        }\r\n    ]\r\n})\r\n\r\nexport default router;","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport './scss/editor.scss'\r\nimport './scss/highlight/js.scss';\r\nimport './scss/highlight/html.scss';\r\nimport './scss/highlight/css.scss';\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),\r\n}).$mount('#app')"],"sourceRoot":""}