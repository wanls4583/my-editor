{"version":3,"file":"js/app.4b15a8d0.js","mappings":"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","sources":["webpack://my-editor/./src/App.vue?1f05","webpack://my-editor/src/App.vue","webpack://my-editor/./src/App.vue?6d50","webpack://my-editor/./src/App.vue","webpack://my-editor/./src/components/Window.vue?53ea","webpack://my-editor/./src/components/EditorBar.vue?d5d5","webpack://my-editor/./src/components/EditorBarMenu.vue?6fa6","webpack://my-editor/./src/components/Menu.vue?63c5","webpack://my-editor/src/components/Menu.vue","webpack://my-editor/./src/components/Menu.vue?6e3a","webpack://my-editor/./src/components/Menu.vue","webpack://my-editor/./src/event.js","webpack://my-editor/src/components/EditorBarMenu.vue","webpack://my-editor/./src/components/EditorBarMenu.vue?cbf0","webpack://my-editor/./src/components/EditorBarMenu.vue","webpack://my-editor/./src/data/globalData.js","webpack://my-editor/./src/common/util.js","webpack://my-editor/./src/module/shortcut/editor-bar.js","webpack://my-editor/src/components/EditorBar.vue","webpack://my-editor/./src/components/EditorBar.vue?3f41","webpack://my-editor/./src/components/EditorBar.vue","webpack://my-editor/./src/components/Editor.vue?cec4","webpack://my-editor/./src/module/tokenizer/index.js","webpack://my-editor/./src/module/lint/index.js","webpack://my-editor/./src/data/enum.js","webpack://my-editor/./src/module/autocomplete/index.js","webpack://my-editor/./src/common/btree.js","webpack://my-editor/./src/module/fold/index.js","webpack://my-editor/./src/module/search/index.js","webpack://my-editor/./src/module/select/index.js","webpack://my-editor/./src/module/cursor/index.js","webpack://my-editor/./src/module/history/index.js","webpack://my-editor/./src/module/context/index.js","webpack://my-editor/./src/module/shortcut/editor.js","webpack://my-editor/./src/components/Search.vue?2ea8","webpack://my-editor/src/components/Search.vue","webpack://my-editor/./src/components/Search.vue?fccb","webpack://my-editor/./src/components/Search.vue","webpack://my-editor/./src/components/AutoTip.vue?d675","webpack://my-editor/src/components/AutoTip.vue","webpack://my-editor/./src/components/AutoTip.vue?eaef","webpack://my-editor/./src/components/AutoTip.vue","webpack://my-editor/./src/components/Tip.vue?9a48","webpack://my-editor/src/components/Tip.vue","webpack://my-editor/./src/components/Tip.vue?76a9","webpack://my-editor/./src/components/Tip.vue","webpack://my-editor/src/components/Editor.vue","webpack://my-editor/./src/components/Editor.vue?010b","webpack://my-editor/./src/components/Editor.vue","webpack://my-editor/./src/components/TitleBar.vue?03aa","webpack://my-editor/./src/module/shortcut/menu-bar.js","webpack://my-editor/src/components/TitleBar.vue","webpack://my-editor/./src/components/TitleBar.vue?06d6","webpack://my-editor/./src/components/TitleBar.vue","webpack://my-editor/./src/components/StatusBar.vue?eafc","webpack://my-editor/src/components/StatusBar.vue","webpack://my-editor/./src/components/StatusBar.vue?4fcb","webpack://my-editor/./src/components/StatusBar.vue","webpack://my-editor/./src/components/SideBar.vue?f67e","webpack://my-editor/./src/components/SideTree.vue?ccf9","webpack://my-editor/src/components/SideTree.vue","webpack://my-editor/./src/components/SideTree.vue?37e6","webpack://my-editor/./src/components/SideTree.vue","webpack://my-editor/./src/components/SideBarMenu.vue?cf1a","webpack://my-editor/src/components/SideBarMenu.vue","webpack://my-editor/./src/components/SideBarMenu.vue?4351","webpack://my-editor/./src/components/SideBarMenu.vue","webpack://my-editor/src/components/SideBar.vue","webpack://my-editor/./src/components/SideBar.vue?4820","webpack://my-editor/./src/components/SideBar.vue","webpack://my-editor/./src/components/Dialog.vue?ff40","webpack://my-editor/src/components/Dialog.vue","webpack://my-editor/./src/components/Dialog.vue?8ac2","webpack://my-editor/./src/components/Dialog.vue","webpack://my-editor/./src/components/WindowMenu.vue?3724","webpack://my-editor/src/components/WindowMenu.vue","webpack://my-editor/./src/components/WindowMenu.vue?98a5","webpack://my-editor/./src/components/WindowMenu.vue","webpack://my-editor/./src/components/CmdPanel.vue?8ddc","webpack://my-editor/./src/module/theme/index.js","webpack://my-editor/src/components/CmdPanel.vue","webpack://my-editor/./src/components/CmdPanel.vue?4f19","webpack://my-editor/./src/components/CmdPanel.vue","webpack://my-editor/src/components/Window.vue","webpack://my-editor/./src/components/Window.vue?4e7f","webpack://my-editor/./src/components/Window.vue","webpack://my-editor/./src/router.js","webpack://my-editor/./src/main.js","webpack://my-editor/webpack/bootstrap","webpack://my-editor/webpack/runtime/chunk loaded","webpack://my-editor/webpack/runtime/compat get default export","webpack://my-editor/webpack/runtime/define property getters","webpack://my-editor/webpack/runtime/global","webpack://my-editor/webpack/runtime/hasOwnProperty shorthand","webpack://my-editor/webpack/runtime/jsonp chunk loading","webpack://my-editor/webpack/startup"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('keep-alive',[_c('router-view')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div id=\"app\">\n\t\t<keep-alive>\n\t\t\t<router-view></router-view>\n\t\t</keep-alive>\n\t</div>\n</template>\n\n<script>\n\nexport default {\n    name: 'App',\n}\n</script>\n\n<style>\n</style>\n","import mod from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=151c70cd&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"window\",staticClass:\"my-window\",style:({\n        'padding-top': _vm._topBarHeight,\n        'padding-bottom': _vm._statusHeight,\n    }),on:{\"mousedown\":_vm.onWindMouseDown}},[(_vm.mode === 'app')?_c('side-bar',{ref:\"sideBar\"}):_vm._e(),_c('div',{ref:\"rightWrap\",staticClass:\"my-right-wrap\",on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)}}},[_c('editor-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.editorList.length),expression:\"editorList.length\"}],attrs:{\"editorList\":_vm.editorList},on:{\"change\":_vm.onChangeTab,\"close\":_vm.onCloseTab,\"close-all\":_vm.onCloseAll,\"close-saved\":_vm.onCloseSaved,\"close-to-left\":_vm.onCloseToLeft,\"close-to-right\":_vm.onCloseToRight}}),_vm._l((_vm.editorList),function(item){return [_c('editor',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.active),expression:\"item.active\"}],key:item.id,ref:'editor' + item.id,refInFor:true,attrs:{\"active\":item.active,\"id\":item.id},on:{\"change\":function($event){return _vm.onFileChange(item.id)},\"save\":function($event){return _vm.onSaveFile(item.id)}}})]}),_c('window-menu',{ref:\"winMenu\"})],2),_c('title-bar',{ref:\"titleBar\",attrs:{\"height\":_vm.topBarHeight},on:{\"change\":_vm.onMenuChange}}),_c('status-bar',{ref:\"statusBar\",attrs:{\"height\":_vm.statusHeight,\"languageList\":_vm.languageList},on:{\"select-langeuage\":_vm.onSelectLanguage}}),_c('cmd-panel'),_c('Dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.dialogVisible),expression:\"dialogVisible\"}],attrs:{\"btns\":_vm.dialogBtns,\"content\":_vm.dialogContent,\"icon\":this.dialogIcon,\"icon-color\":this.dialogIconColor,\"overlay\":true,\"title\":_vm.dialogTilte},on:{\"close\":_vm.onDialogClose}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editorBar\",staticClass:\"my-editor-bar\",on:{\"selectstart\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"bar-scroller my-scroll-overlay my-scroll-mini\"},_vm._l((_vm.editorList),function(item){return _c('div',{staticClass:\"bar-item my-hover\",class:[item.active ? 'my-active' : ''],attrs:{\"title\":item.path},on:{\"click\":function($event){return _vm.onClickItem(item.id)},\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu($event, item.id)}}},[_c('div',{staticClass:\"bar-content\",class:[item.icon]},[_c('span',{staticClass:\"bar-text\"},[_vm._v(_vm._s(item.name))]),_c('div',{staticClass:\"bar-icon\"},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.saved),expression:\"item.saved\"}],staticClass:\"bar-close-icon iconfont icon-close\",attrs:{\"title\":\"close\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.onClose(item.id)}}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!item.saved),expression:\"!item.saved\"}],staticClass:\"bar-dot\"})])])])}),0),_c('editor-bar-menu',{ref:\"editorBarMenu\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrap\"},[_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"scroller\",staticClass:\"my-menu my-shadow my-border\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.visible),expression:\"visible\"}],ref:\"content\"},[_vm._l((_vm.myMenuList),function(group,index){return [_c('div',{staticClass:\"my-menu-group\"},_vm._l((group),function(item){return _c('div',{staticClass:\"my-menu-item my-center-between my-hover\",class:{\n                        'my-active': _vm.checkable && item.checked,\n                        disabled: item.disabled,\n                    },on:{\"mousedown\":function($event){return _vm.onClick(item)},\"mouseover\":function($event){return _vm.onHover(item)}}},[_c('div',{staticClass:\"my-menu-title\"},[_vm._v(_vm._s(item.name))]),(item.shortcut)?_c('div',{staticClass:\"my-menu-shortcut\"},[_vm._v(\" \"+_vm._s(item.shortcut)+\" \")]):_vm._e()])}),0),(index < _vm.myMenuList.length - 1)?_c('div',{staticClass:\"my-separator\"}):_vm._e()]})],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"styles\" @mousedown.stop class=\"my-menu my-shadow my-border\" ref=\"scroller\">\r\n        <div v-show=\"visible\" ref=\"content\">\r\n            <template v-for=\"(group, index) in myMenuList\">\r\n                <div class=\"my-menu-group\">\r\n                    <div\r\n                        :class=\"{\r\n                            'my-active': checkable && item.checked,\r\n                            disabled: item.disabled,\r\n                        }\"\r\n                        @mousedown=\"onClick(item)\"\r\n                        @mouseover=\"onHover(item)\"\r\n                        class=\"my-menu-item my-center-between my-hover\"\r\n                        v-for=\"item in group\"\r\n                    >\r\n                        <div class=\"my-menu-title\">{{ item.name }}</div>\r\n                        <div class=\"my-menu-shortcut\" v-if=\"item.shortcut\">\r\n                            {{ item.shortcut }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"my-separator\" v-if=\"index < myMenuList.length - 1\"></div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: 'Menu',\r\n    props: {\r\n        menuList: {\r\n            type: Array,\r\n            default: [],\r\n        },\r\n        styles: {\r\n            type: Object,\r\n        },\r\n        checkable: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        hoverCheck: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        value: {\r\n            type: [Number, String],\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            index: -1,\r\n            itemHeight: 26,\r\n            myMenuList: [],\r\n        };\r\n    },\r\n    computed: {\r\n        visible() {\r\n            for (let i = 0; i < this.myMenuList.length; i++) {\r\n                if (this.myMenuList[i].length) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n    },\r\n    watch: {\r\n        menuList() {\r\n            this.initMenu();\r\n        },\r\n        value(newVal) {\r\n            this.setChecked(newVal);\r\n        },\r\n        index() {\r\n            this.$nextTick(() => {\r\n                this.scrollToIndex();\r\n            });\r\n        },\r\n    },\r\n    created() {\r\n        this.initMenu();\r\n    },\r\n    mounted() {\r\n        this.keydownFn = (e) => {\r\n            if (this.$refs.content.clientHeight) {\r\n                if (e.keyCode === 38) {\r\n                    this.setCheckedByIndex(this.index - 1);\r\n                } else if (e.keyCode === 40) {\r\n                    this.setCheckedByIndex(this.index + 1);\r\n                } else if (e.keyCode === 13) {\r\n                    if (this.index > -1) {\r\n                        this.$emit('change', this.indexMap[this.index]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        $(window).on('keydown', this.keydownFn);\r\n    },\r\n    destroyed() {\r\n        $(window).unbind('keydown', this.keydownFn);\r\n    },\r\n    methods: {\r\n        initMenu() {\r\n            let index = -1;\r\n            let menuList = this.menuList;\r\n            this.index = -1;\r\n            this.maxIndex = -1;\r\n            this.indexMap = {};\r\n            if (menuList[0] && !(menuList[0] instanceof Array)) {\r\n                menuList = [menuList];\r\n            }\r\n            this.myMenuList = menuList.map((group) => {\r\n                return group.map((item) => {\r\n                    item = Object.assign({}, item);\r\n                    item.value = item.value === undefined ? item.name : item.value;\r\n                    item.checked = item.value === this.value;\r\n                    this.indexMap[++index] = item;\r\n                    this.maxIndex = index;\r\n                    if (item.checked) {\r\n                        this.index = index;\r\n                    }\r\n                    return item;\r\n                });\r\n            });\r\n        },\r\n        scrollToIndex() {\r\n            let $scroller = this.$refs.scroller;\r\n            let height = (this.index + 1) * this.itemHeight;\r\n            if ($scroller && height > $scroller.clientHeight + $scroller.scrollTop) {\r\n                $scroller.scrollTop = height - $scroller.clientHeight;\r\n            } else if ($scroller && height < $scroller.scrollTop + this.itemHeight) {\r\n                $scroller.scrollTop = height - this.itemHeight;\r\n            }\r\n        },\r\n        onClick(item) {\r\n            if (item.disabled) {\r\n                return;\r\n            }\r\n            this.clearChecked();\r\n            item.checked = true;\r\n            this.$emit('change', item);\r\n        },\r\n        onHover(item) {\r\n            this.hoverCheck && this.setChecked(item.value);\r\n        },\r\n        setChecked(value) {\r\n            let index = -1;\r\n            this.myMenuList.forEach((group) => {\r\n                group.forEach((item) => {\r\n                    item.checked = item.value === value;\r\n                    index++;\r\n                    if (item.checked) {\r\n                        this.index = index;\r\n                    }\r\n                });\r\n            });\r\n            this.myMenuList.splice();\r\n        },\r\n        setCheckedByIndex(index) {\r\n            this.clearChecked();\r\n            if (index < 0) {\r\n                index = this.maxIndex;\r\n            } else if (index > this.maxIndex) {\r\n                index = 0;\r\n            }\r\n            this.indexMap[index].checked = true;\r\n            this.index = index;\r\n            this.myMenuList.splice();\r\n        },\r\n        clearChecked() {\r\n            this.myMenuList.forEach((group) => {\r\n                group.forEach((item) => {\r\n                    item.checked = false;\r\n                });\r\n            });\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Menu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Menu.vue?vue&type=template&id=88f3abd8&\"\nimport script from \"./Menu.vue?vue&type=script&lang=js&\"\nexport * from \"./Menu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\r\n\r\nconst bus = new Vue();\r\n\r\nexport default bus;","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n            v-show=\"menuVisible\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from \"jquery\";\r\nimport Menu from \"./Menu\";\r\nimport EventBus from \"@/event\";\r\n\r\nexport default {\r\n    name: \"EditorBar\",\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            menuList: [\r\n                [\r\n                    {\r\n                        name: \"Close\",\r\n                        op: \"close\",\r\n                        shortcut: \"Ctrl+F4\",\r\n                    },\r\n                    {\r\n                        name: \"Close to the Left\",\r\n                        op: \"closeToLeft\",\r\n                    },\r\n                    {\r\n                        name: \"Close to the Right\",\r\n                        op: \"closeToRight\",\r\n                    },\r\n                    {\r\n                        name: \"Close Saved\",\r\n                        op: \"closeSaved\",\r\n                        shortcut: \"Ctrl+K U\",\r\n                    },\r\n                    {\r\n                        name: \"Close All\",\r\n                        op: \"closeAll\",\r\n                        shortcut: \"Ctrl+K W\",\r\n                    },\r\n                ],\r\n            ],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"10px\",\r\n                top: \"40px\",\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n        },\r\n        show(e, id) {\r\n            this.tabId = id;\r\n            this.menuVisible = true;\r\n            let $parent = $(this.$refs.wrap).parent();\r\n            this.$nextTick(() => {\r\n                let offset = $parent.offset();\r\n                let menuWidth = this.$refs.menu.$el.clientWidth;\r\n                if (\r\n                    menuWidth + e.clientX >\r\n                    offset.left + $parent[0].clientWidth\r\n                ) {\r\n                    this.menuStyle.left =\r\n                        e.clientX - offset.left - menuWidth + \"px\";\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n                }\r\n                this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n                case \"close\":\r\n                    this.$parent.$emit(\"close\", this.tabId);\r\n                    break;\r\n                case \"closeToLeft\":\r\n                    this.$parent.$emit(\"close-to-left\", this.tabId);\r\n                    break;\r\n                case \"closeToRight\":\r\n                    this.$parent.$emit(\"close-to-right\", this.tabId);\r\n                    break;\r\n                case \"closeSaved\":\r\n                    this.$parent.$emit(\"close-saved\", this.tabId);\r\n                    break;\r\n                case \"closeAll\":\r\n                    this.$parent.$emit(\"close-all\", this.tabId);\r\n                    break;\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBarMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBarMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditorBarMenu.vue?vue&type=template&id=dd126106&\"\nimport script from \"./EditorBarMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./EditorBarMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","const require = window.require || window.parent.require || function () {};\r\nconst remote = require('@electron/remote');\r\nconst path = require('path');\r\nconst dirname = remote.app.getAppPath();\r\n\r\nconst globalData = {\r\n    dirname: dirname,\r\n    scopeIdMap: {},\r\n    scopeReg: null,\r\n    colors: {},\r\n    nowTheme: {\r\n        value: 'Default Dark+',\r\n        type: 'dark',\r\n        path: path.join(dirname, 'main/extensions/theme-monokai/themes/monokai-color-theme.json'),\r\n    },\r\n    nowIconTheme: {\r\n        value: 'vs-seti',\r\n        path: path.join(dirname, 'main/extensions/theme-seti/icons/vs-seti-icon-theme.json'),\r\n    },\r\n    nowIconData: {},\r\n    themes: [],\r\n    iconThemes: [],\r\n    languageList: [],\r\n    scopeFileList: [],\r\n    scopeTokenList: [],\r\n    grammars: {},\r\n    sourceWordMap: {},\r\n    defaultWordPattern: \"(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\`\\\\~\\\\!\\\\@\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\'\\\\\\\"\\\\,\\\\.\\\\<\\\\>/\\\\?\\\\s]+)\"\r\n};\r\n\r\nexport default globalData;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2020-10-31 13:48:50\r\n * @Description: 工具类\r\n */\r\nimport globalData from '@/data/globalData';\r\nimport $ from 'jquery';\r\nimport stripJsonComments from 'strip-json-comments';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\n\r\nclass Util {\r\n    static readClipboard() {\r\n        if (window.clipboardData) {\r\n            return new Promise((resolve) => {\r\n                resolve(clipboardData.getData('Text'));\r\n            });\r\n        } else if (navigator.clipboard) {\r\n            return navigator.clipboard.readText();\r\n        }\r\n    }\r\n    static writeClipboard(text) {\r\n        if (window.clipboardData) {\r\n            clipboardData.setData('Text', text);\r\n        } else if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(text);\r\n        }\r\n    }\r\n    //获取数字\r\n    static getNum(value) {\r\n        value = String(value);\r\n        value = value.replace(/[^0123456789\\.]/g, '');\r\n        var regex = /^\\d+(\\.\\d*)?$/;\r\n        var r = regex.exec(value);\r\n        var num = (r && r[0]) || '';\r\n        if (num) {\r\n            num = Number(r[0]);\r\n        }\r\n        return num;\r\n    }\r\n    //生成指定个数的空白符\r\n    static space(tabSize) {\r\n        var val = '';\r\n        for (var tmp = 0; tmp < tabSize; tmp++) {\r\n            val += ' ';\r\n        }\r\n        return val;\r\n    }\r\n    //数组数字排序\r\n    static sortNum(arr) {\r\n        arr.sort(function (arg1, arg2) {\r\n            return Number(arg1) - Number(arg2);\r\n        });\r\n    }\r\n    //获取字符宽度\r\n    static getCharWidth(wrap) {\r\n        var str1 = '------------------------------------------------------------------------------------';\r\n        var str2 = '一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一';\r\n        var id1 = 'char-width-' + Util.getUUID();\r\n        var id2 = 'char-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-line\">\r\n        <div class=\"my-code\"><span id=\"${id1}\">${str1}</span><span id=\"${id2}\">${str2}</span></div>\r\n        </div>`);\r\n        $(wrap).append($tempDom);\r\n        var dom = $('#' + id1)[0];\r\n        var charWidth = dom.scrollWidth / str1.length;\r\n        var charHight = dom.clientHeight;\r\n        var fontSize = window.getComputedStyle ? window.getComputedStyle(dom, null).fontSize : dom.currentStyle.fontSize;\r\n        var fullAngleCharWidth = $('#' + id2)[0].scrollWidth / str2.length;\r\n        $tempDom.remove();\r\n        return {\r\n            charWidth: charWidth,\r\n            fullAngleCharWidth: fullAngleCharWidth,\r\n            charHight: charHight,\r\n            fontSize: fontSize,\r\n        };\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {number} charW     半角符号/文字宽度\r\n     * @param  {number} fullCharW 全角符号/文字宽度\r\n     * @param  {number} tabSize   tab符所占宽度\r\n     * @param  {number} start     文本开始索引\r\n     * @param  {number} end       文本结束索引\r\n     * @return {number}           文本真实宽度\r\n     */\r\n    static getStrWidth(str, charW, fullCharW, tabSize, start, end) {\r\n        tabSize = tabSize || 4;\r\n        if (typeof start != 'undefined') {\r\n            str = str.substr(start);\r\n        }\r\n        if (typeof end != 'undefined') {\r\n            str = str.substring(0, end - start);\r\n        }\r\n        var match = str.match(this.fullAngleReg);\r\n        var width = str.length * charW;\r\n        var tabNum = str.match(/\\t/g);\r\n        tabNum = (tabNum && tabNum.length) || 0;\r\n        match = (match && match.length) || 0;\r\n        if (match) {\r\n            match = match - tabNum;\r\n            width = match * fullCharW + (str.length - match) * charW;\r\n            width += tabNum * charW * (tabSize - 1);\r\n        }\r\n        return width;\r\n    }\r\n    /**\r\n     * 获取文本在浏览器中的真实宽度\r\n     * @param  {string} str       文本\r\n     * @param  {DOM} wrap     容器\r\n     */\r\n    static getStrExactWidth(str, tabSize, wrap) {\r\n        Util.getStrExactWidth.count = Util.getStrExactWidth.count || 0;\r\n        Util.getStrExactWidth.count++;\r\n        if (!str) {\r\n            return 0;\r\n        }\r\n        var id = 'str-width-' + Util.getUUID();\r\n        var $tempDom = $(`<div class=\"my-line my-temp-text\" style=\"visibility:hidden\">\r\n        <div class=\"my-code\" id=\"${id}\">${_splitStr(str)}</div>\r\n        </div>`);\r\n        $(wrap).append($tempDom);\r\n        var dom = $('#' + id)[0];\r\n        var charWidth = dom.clientWidth;\r\n        $('.my-temp-text').remove();\r\n        // if (Util.getStrExactWidth.count > 5) { //避免频繁删除dom导致浏览器卡顿\r\n        //     $('.my-temp-text').remove();\r\n        // } else {\r\n        //     clearTimeout(Util.getStrExactWidth.timer);\r\n        //     Util.getStrExactWidth.timer = setTimeout(() => {\r\n        //         $('.my-temp-text').remove();\r\n        //     }, 500);\r\n        // }\r\n        return charWidth;\r\n\r\n        function _splitStr(str) {\r\n            let count = Math.floor(str.length / 100);\r\n            let result = [];\r\n            for (let i = 0; i < count; i++) {\r\n                let column = i * 100;\r\n                result.push(Util.htmlTrans(str.slice(column, column + 100)));\r\n            }\r\n            count = count * 100;\r\n            if (count < str.length) {\r\n                result.push(Util.htmlTrans(str.slice(count)));\r\n            }\r\n            return `<span>${result.join('</span><span>').replace(/\\t/g, Util.space(tabSize || 4))}</span>`;\r\n        }\r\n    }\r\n    //<,>转义\r\n    static htmlTrans(cont) {\r\n        cont = cont.replace(/\\&\\#/g, '&amp;#');\r\n        return cont.replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n    }\r\n    // 深度克隆\r\n    static deepAssign(targetObj, originObj, noDeepKeys) {\r\n        return _assign(targetObj, originObj, noDeepKeys, new Map());\r\n\r\n        function _assign(targetObj, originObj, noDeepKeys, assigned) {\r\n            noDeepKeys = noDeepKeys || [];\r\n            for (var key in originObj) {\r\n                var value = originObj[key];\r\n                if (noDeepKeys.indexOf(key) > -1) {\r\n                    targetObj[key] = value;\r\n                    continue;\r\n                }\r\n                if (typeof value === 'object' && !(value instanceof RegExp) && value !== null && (!value.nodeName || !value.nodeType)) {\r\n                    if (assigned.has(value)) {\r\n                        targetObj[key] = assigned.get(value);\r\n                    } else {\r\n                        let tmp = null;\r\n                        if (value instanceof Array) {\r\n                            tmp = targetObj[key] || [];\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, noDeepKeys, new Map(assigned));\r\n                        } else {\r\n                            tmp = targetObj[key] || {};\r\n                            assigned.set(value, tmp);\r\n                            targetObj[key] = _assign(tmp, value, noDeepKeys, new Map(assigned));\r\n                        }\r\n                    }\r\n                } else {\r\n                    targetObj[key] = value;\r\n                }\r\n            }\r\n            return targetObj;\r\n        }\r\n    }\r\n    static getUUID(len) {\r\n        len = len || 16;\r\n        var str = '';\r\n        for (var i = 0; i < len; i++) {\r\n            str += ((Math.random() * 16) | 0).toString(16);\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 比较坐标的前后\r\n     * @param {Object} start\r\n     * @param {Object} end\r\n     */\r\n    static comparePos(start, end) {\r\n        if (start.line > end.line || (start.line == end.line && start.column > end.column)) {\r\n            return 1;\r\n        } else if (start.line == end.line && start.column == end.column) {\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n    static createWorker(funStr) {\r\n        var blob = new Blob([funStr]);\r\n        var url = window.URL.createObjectURL(blob);\r\n        var worker = new Worker(url);\r\n        return worker;\r\n    }\r\n    static defineProperties(target, context, properties) {\r\n        let result = {};\r\n        properties.forEach((property) => {\r\n            result[property] = {\r\n                get: function () {\r\n                    if (typeof context[property] == 'function') {\r\n                        return context[property].bind(context);\r\n                    } else {\r\n                        return context[property];\r\n                    }\r\n                },\r\n            };\r\n        });\r\n        Object.defineProperties(target, result);\r\n    }\r\n    static getLanguageById(languageList, language) {\r\n        for (let i = 0; i < languageList.length; i++) {\r\n            if (languageList[i].language === language) {\r\n                return languageList[i];\r\n            }\r\n        }\r\n    }\r\n    static getLanguageByScopeName(languageList, scopeName) {\r\n        for (let i = 0; i < languageList.length; i++) {\r\n            if (languageList[i].scopeName === scopeName) {\r\n                return languageList[i];\r\n            }\r\n        }\r\n    }\r\n    static getWordPattern(language) {\r\n        let wordPattern = globalData.defaultWordPattern;\r\n        language = Util.getLanguageById(globalData.languageList, language);\r\n        if (language) {\r\n            let _wordPattern = globalData.sourceWordMap[language.scopeName];\r\n            _wordPattern = _wordPattern && _wordPattern.pattern;\r\n            wordPattern = _wordPattern || wordPattern;\r\n        }\r\n        return new RegExp(wordPattern);\r\n    }\r\n    static getIconByPath(iconData, path, type, fileType, opened) {\r\n        let fileName = /[^\\\\\\/]+$/.exec(path);\r\n        let suffix1 = '';\r\n        let suffix2 = '';\r\n        fileName = fileName && fileName[0];\r\n        if (!iconData) {\r\n            return '';\r\n        }\r\n        if (fileName) {\r\n            suffix1 = /(?<=\\.)[^\\.]+$/.exec(fileName);\r\n            suffix2 = /(?<=\\.)[^\\.]+\\.[^\\.]+$/.exec(fileName);\r\n            suffix1 = suffix1 && suffix1[0];\r\n            suffix2 = suffix2 && suffix2[0];\r\n        }\r\n        if (type === 'light' || type === 'contrast light') {\r\n            iconData = iconData.light;\r\n        }\r\n        if (fileType === 'dir') {\r\n            return opened ? iconData.folderExpanded : iconData.folder;\r\n        }\r\n        if (iconData.fileNames && iconData.fileNames[fileName]) {\r\n            return iconData.fileNames[fileName];\r\n        }\r\n        if (iconData.fileExtensions && iconData.fileExtensions[suffix2]) {\r\n            return iconData.fileExtensions[suffix2];\r\n        }\r\n        if (iconData.fileExtensions && iconData.fileExtensions[suffix1]) {\r\n            return iconData.fileExtensions[suffix1];\r\n        }\r\n        return iconData.file;\r\n    }\r\n    static readFile(path) {\r\n        return new Promise((resolve, reject) => {\r\n            fs.readFile(path, (error, data) => (error ? reject(error) : resolve(data)));\r\n        });\r\n    }\r\n    static loadJsonFile(fullPath) {\r\n        return Util.readFile(fullPath).then((data) => {\r\n            data = data.toString();\r\n            data = stripJsonComments(data);\r\n            data = data.replaceAll(/\\,(?=\\s*(?:(?:\\r\\n|\\n|\\r))*\\s*[\\]\\}])/g, '');\r\n            data = JSON.parse(data);\r\n            return data;\r\n        });\r\n    }\r\n    /**\r\n     * 模糊匹配【word是否存在于target中】\r\n     * @param {String} word 被搜索的单词\r\n     * @param {String} target 模板单词\r\n     */\r\n    static fuzzyMatch(word, target, fullMatch) {\r\n        let wordMap = {};\r\n        let towMap = {};\r\n        let wordLength = 0;\r\n        let score = 0;\r\n        let preFinedChar = '';\r\n        let preFinedOriginChar = '';\r\n        let preFinded = false;\r\n        let targetMap = {};\r\n        let count = 0;\r\n        let indexs = [];\r\n        let result = null;\r\n        let _target = target.toLowerCase();\r\n        if (word === target) {\r\n            return fullMatch ? { score: 100, indexs: [] } : null;\r\n        }\r\n        _setMap();\r\n        for (let i = 0; i < target.length; i++) {\r\n            let originChar = target[i];\r\n            let char = _target[i];\r\n            if (\r\n                wordMap[char] &&\r\n                //保证前后字符顺序最多只出现一个位置颠倒且颠倒的两个字符必须相邻\r\n                (!preFinedChar || towMap[preFinedChar + char] || (towMap[char + preFinedChar] && preFinded))\r\n            ) {\r\n                if (!targetMap[char] || targetMap[char] < wordMap[char]) {\r\n                    targetMap[char] = targetMap[char] ? targetMap[char] + 1 : 1;\r\n                    indexs.push(i);\r\n                    if (char === '_' || char === '$') {\r\n                        //检测到连接符+10分\r\n                        score += 10;\r\n                    } else if (preFinded) {\r\n                        //检测到连续匹配\r\n                        score += 5;\r\n                        if (towMap[preFinedChar + char]) {\r\n                            //连续匹配且顺序正确\r\n                            score += 1;\r\n                            if (_humpCheck(preFinedOriginChar, originChar) && preFinded) {\r\n                                //检测到驼峰命名+10分\r\n                                score += 5;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (_complete(char)) {\r\n                        return result;\r\n                    }\r\n                    if (!towMap[char + preFinedChar] || towMap[preFinedChar + char]) {\r\n                        preFinedChar = char;\r\n                        preFinedOriginChar = originChar;\r\n                    }\r\n                    preFinded = true;\r\n                } else {\r\n                    //检测到字符不匹配-1分\r\n                    score--;\r\n                    preFinded = char === preFinedChar;\r\n                }\r\n            } else {\r\n                if (!count && score > -9) {\r\n                    //检测到前三个首字符不匹配-3分\r\n                    score -= 3;\r\n                } else {\r\n                    //检测到字符不匹配-1分\r\n                    score--;\r\n                }\r\n                preFinded = char === preFinedChar;\r\n            }\r\n        }\r\n\r\n        // 预处理搜素单词\r\n        function _setMap() {\r\n            if (Util.fuzzyMatch.cache && Util.fuzzyMatch.cache.word === word) {\r\n                wordMap = Util.fuzzyMatch.cache.wordMap;\r\n                towMap = Util.fuzzyMatch.cache.towMap;\r\n                wordLength = Util.fuzzyMatch.cache.wordLength;\r\n                return;\r\n            }\r\n            let preChar = '';\r\n            for (let i = 0; i < word.length; i++) {\r\n                let char = word[i].toLowerCase();\r\n                wordMap[char] = wordMap[char] ? wordMap[char] + 1 : 1;\r\n                if (i > 0) {\r\n                    towMap[preChar + char] = true;\r\n                }\r\n                preChar = char;\r\n            }\r\n            wordLength = Object.keys(wordMap).length;\r\n            Util.fuzzyMatch.cache = {\r\n                word: word,\r\n                wordMap: wordMap,\r\n                towMap: towMap,\r\n                wordLength: wordLength,\r\n            };\r\n        }\r\n\r\n        // 检查驼峰命名\r\n        function _humpCheck(preChar, char) {\r\n            let preCode = preChar.charCodeAt(0);\r\n            let charCode = char.charCodeAt(0);\r\n            if ((preCode < 97 && charCode >= 97) || (charCode < 97 && preCode >= 97)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // 检查是否匹配完成\r\n        function _complete(char) {\r\n            if (targetMap[char] === wordMap[char]) {\r\n                if (++count === wordLength) {\r\n                    result = {\r\n                        score: score,\r\n                        indexs: indexs,\r\n                    };\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nArray.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n};\r\nArray.prototype.empty = function () {\r\n    this.length = 0;\r\n    return this;\r\n};\r\nArray.prototype.insert = function (item, sort) {\r\n    if (sort && this.length) {\r\n        let left = 0,\r\n            right = this.length - 1;\r\n        while (left < right) {\r\n            let mid = Math.floor((left + right) / 2);\r\n            if (sort(item, this[mid]) > 0) {\r\n                left = mid + 1;\r\n            } else {\r\n                right = mid;\r\n            }\r\n        }\r\n        if (sort(item, this[left]) < 0) {\r\n            left--;\r\n        }\r\n        this.splice(left + 1, 0, item);\r\n    } else {\r\n        this.push(item);\r\n    }\r\n};\r\nString.prototype.peek = function (index) {\r\n    if (this.length) {\r\n        return this[this.length - (index || 1)];\r\n    }\r\n};\r\n//全角符号和中文字符\r\nUtil.fullAngleReg =\r\n    /[\\x00-\\x1f\\x80-\\xa0\\xad\\u1680\\u180E\\u2000-\\u200f\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF\\uFFF9-\\uFFFC]|[\\u1100-\\u115F\\u11A3-\\u11A7\\u11FA-\\u11FF\\u2329-\\u232A\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3000-\\u303E\\u3041-\\u3096\\u3099-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u3190-\\u31BA\\u31C0-\\u31E3\\u31F0-\\u321E\\u3220-\\u3247\\u3250-\\u32FE\\u3300-\\u4DBF\\u4E00-\\uA48C\\uA490-\\uA4C6\\uA960-\\uA97C\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFAFF\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE66\\uFE68-\\uFE6B\\uFF01-\\uFF60\\uFFE0-\\uFFE6]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nUtil.keyCode = {\r\n    DELETE: 46,\r\n    BACKSPACE: 8,\r\n};\r\nUtil.command = {\r\n    DELETE: 'delete',\r\n    INSERT: 'insert',\r\n    MOVEUP: 'moveLineUp',\r\n    MOVEDOWN: 'moveLineDown',\r\n    COPY_UP: 'copyLineUp',\r\n    COPY_DOWN: 'copyLineDown',\r\n    DELETE_COPY_UP: 'deleteCopyLineUp',\r\n    DELETE_COPY_DOWN: 'deleteCopyLineDown',\r\n    REPLACE: 'replace',\r\n    INSERT_LINE: 'insertLine',\r\n    DELETE_LINE: 'deleteLine',\r\n    REPLACE: 'replace',\r\n};\r\nUtil.constData = {\r\n    LINE_COMMENT: 'line-comment',\r\n    BLOCK_COMMENT: 'block-comment',\r\n    BRACKET: 'bracket',\r\n    TAG: 'tag',\r\n};\r\nexport default Util;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editorBar) {\r\n        this.initProperties(editorBar);\r\n    }\r\n    initProperties(editorBar) {\r\n        Util.defineProperties(this, editorBar, [\r\n            '$emit',\r\n        ]);\r\n    }\r\n    onKeyDown(e) {\r\n        if (e.ctrlKey) {\r\n            if (this.pressK) {\r\n                this.pressK = false;\r\n                switch (e.keyCode) {\r\n                    case 85: //Ctrl+U\r\n                        e.preventDefault();\r\n                        this.$emit('close-saved');\r\n                        break;\r\n                    case 87: //Ctrl+W\r\n                        e.preventDefault();\r\n                        this.$emit('close-all');\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (e.keyCode) {\r\n                    case 75: //Ctrl+K\r\n                        e.preventDefault();\r\n                        this.pressK = true;\r\n                        break;\r\n                    case 115: //Ctrl+F4\r\n                        e.preventDefault();\r\n                        this.$emit('close');\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @selectstart.prevent class=\"my-editor-bar\" ref=\"editorBar\">\r\n        <div class=\"bar-scroller my-scroll-overlay my-scroll-mini\">\r\n            <div\r\n                :class=\"[item.active ? 'my-active' : '']\"\r\n                :title=\"item.path\"\r\n                @click=\"onClickItem(item.id)\"\r\n                @contextmenu.prevent.stop=\"onContextmenu($event, item.id)\"\r\n                class=\"bar-item my-hover\"\r\n                v-for=\"item in editorList\"\r\n            >\r\n                <div class=\"bar-content\" :class=\"[item.icon]\">\r\n                    <span class=\"bar-text\">{{ item.name }}</span>\r\n                    <div class=\"bar-icon\">\r\n                        <span @click.stop=\"onClose(item.id)\" class=\"bar-close-icon iconfont icon-close\" title=\"close\" v-show=\"item.saved\"></span>\r\n                        <span class=\"bar-dot\" v-show=\"!item.saved\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <editor-bar-menu ref=\"editorBarMenu\"></editor-bar-menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EditorBarMenu from './EditorBarMenu';\r\nimport ShortCut from '@/module/shortcut/editor-bar';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n    name: 'EditorBar',\r\n    components: {\r\n        EditorBarMenu,\r\n    },\r\n    props: {\r\n        editorList: {\r\n            type: Array,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            list: [],\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            rootList: this.list,\r\n        };\r\n    },\r\n    created() {\r\n        this.shortcut = new ShortCut(this);\r\n        this.initEventBus();\r\n        $(window).on('keydown', (e) => {\r\n            this.shortcut.onKeyDown(e);\r\n        });\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('tab-change', (data) => {\r\n                this.$nextTick(() => {\r\n                    let $tab = $(this.$refs.editorBar).find('div.my-active');\r\n                    $tab.length && $tab[0].scrollIntoView();\r\n                });\r\n            });\r\n        },\r\n        onClickItem(id) {\r\n            this.$emit('change', id);\r\n        },\r\n        onClose(id) {\r\n            this.$emit('close', id);\r\n        },\r\n        onContextmenu(e, id) {\r\n            this.$refs.editorBarMenu.show(e, id);\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./EditorBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditorBar.vue?vue&type=template&id=7451f082&\"\nimport script from \"./EditorBar.vue?vue&type=script&lang=js&\"\nexport * from \"./EditorBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"editor\",staticClass:\"my-editor-wrap\",on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)},\"selectstart\":function($event){$event.preventDefault();},\"wheel\":function($event){$event.preventDefault();return _vm.onWheel.apply(null, arguments)}}},[(_vm.active)?_c('div',{staticClass:\"my-nums\",style:({ top: _vm._numTop })},[_c('div',{staticClass:\"my-num\",staticStyle:{\"visibility\":\"hidden\"}},[_vm._v(_vm._s(_vm.maxLine))]),_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-num\",class:{ 'my-active': _vm.nowCursorPos.line === line.num },style:({ height: _vm._lineHeight, 'line-height': _vm._lineHeight })},[_c('span',{staticClass:\"num\"},[_vm._v(_vm._s(line.num))]),(line.fold)?_c('span',{staticClass:\"my-fold my-center-center\",class:['iconfont', line.fold == 'open' ? 'my-fold-open icon-down1' : 'my-fold-close icon-right'],on:{\"click\":function($event){return _vm.onToggleFold(line.num)}}}):_vm._e()])})],2):_vm._e(),_c('div',{staticClass:\"my-content-wrap\",style:({ 'box-shadow': _vm._leftShadow })},[_c('div',{ref:\"scroller\",staticClass:\"my-scroller my-scroll-overlay\",on:{\"scroll\":_vm.onScroll}},[_c('div',{ref:\"content\",staticClass:\"my-content\",style:({ minWidth: _vm._contentMinWidth, height: _vm.contentHeight }),on:{\"mousedown\":_vm.onContentMdown,\"mousemove\":_vm.onContentMmove,\"mouseleave\":_vm.onContentMLeave,\"selectend\":function($event){$event.preventDefault();return _vm.onSelectend.apply(null, arguments)}}},[(_vm.active)?_c('div',{ref:\"render\",staticClass:\"my-render\",style:({ top: _vm._top })},_vm._l((_vm.renderHtmls),function(line){return _c('div',{key:line.num,staticClass:\"my-line\",class:{ 'my-active': _vm._activeLine(line.num) },style:({ height: _vm._lineHeight, 'line-height': _vm._lineHeight }),attrs:{\"data-line\":line.num,\"id\":'line_' + line.num}},[_c('div',{staticClass:\"my-code\",class:[\n                                line.active ? 'my-active' : '',\n                                line.selected ? (line.isFsearch ? 'my-search-bg' : 'my-select-bg') : '',\n                                line.selected && _vm.selectedFg ? 'my-select-fg' : '',\n                                line.fold == 'close' ? 'fold-close' : '' ],attrs:{\"data-line\":line.num},domProps:{\"innerHTML\":_vm._s(line.html)}}),(_vm.bracketMatch && line.num == _vm.bracketMatch.start.line)?_c('div',{staticClass:\"my-bracket-match\",style:({ left: _vm.bracketMatch.start.left + 'px', width: _vm.bracketMatch.start.width + 'px' })}):_vm._e(),(_vm.bracketMatch && line.num == _vm.bracketMatch.end.line)?_c('div',{staticClass:\"my-bracket-match\",style:({ left: _vm.bracketMatch.end.left + 'px', width: _vm.bracketMatch.end.width + 'px' })}):_vm._e(),_vm._l((line.selectStarts),function(range){return _c('div',{staticClass:\"my-line-bg my-select-bg\",class:{ 'my-active': range.active, 'my-search-bg': range.isFsearch },style:({ left: range.left + 'px', width: range.width + 'px' })})}),_vm._l((line.selectEnds),function(range){return _c('div',{staticClass:\"my-line-bg my-select-bg\",class:{ 'my-active': range.active, 'my-search-bg': range.isFsearch },style:({ left: range.left + 'px', width: range.width + 'px' })})}),_vm._l((line.tabNum),function(tab){return _c('span',{staticClass:\"my-tab-line\",style:({ left: _vm._tabLineLeft(tab) })})}),_vm._l((line.cursorList),function(left){return _c('div',{staticClass:\"my-cursor\",staticStyle:{\"top\":\"0px\"},style:({ height: _vm._lineHeight, left: left, visibility: _vm._cursorVisible })})})],2)}),0):_vm._e(),_c('textarea',{ref:\"textarea\",staticClass:\"my-textarea\",style:({ top: _vm._textAreaPos.top, left: _vm._textAreaPos.left }),on:{\"blur\":_vm.onBlur,\"compositionend\":_vm.onCompositionend,\"compositionstart\":_vm.onCompositionstart,\"copy\":function($event){$event.preventDefault();return _vm.onCopy.apply(null, arguments)},\"cut\":function($event){$event.preventDefault();return _vm.onCut.apply(null, arguments)},\"focus\":_vm.onFocus,\"input\":_vm.onInput,\"keydown\":_vm.onKeyDown,\"paste\":function($event){$event.preventDefault();return _vm.onPaste.apply(null, arguments)}}}),_c('auto-tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.autoTipList && _vm.autoTipList.length),expression:\"autoTipList && autoTipList.length\"}],ref:\"autoTip\",attrs:{\"styles\":_vm.autoTipStyle,\"tipList\":_vm.autoTipList},on:{\"change\":_vm.onClickAuto}})],1)]),_c('search-dialog',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchVisible),expression:\"searchVisible\"}],ref:\"searchDialog\",attrs:{\"count\":_vm.searchCount,\"now\":_vm.searchNow},on:{\"close\":_vm.onCloseSearch,\"next\":function($event){return _vm.onSearchNext()},\"prev\":function($event){return _vm.onSearchPrev()},\"replace\":_vm.replace,\"replaceAll\":_vm.replaceAll,\"search\":_vm.onSearch}})],1),_c('Menu',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onClickMenu}}),_c('tip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.tipContent),expression:\"tipContent\"}],ref:\"tip\",attrs:{\"content\":_vm.tipContent,\"styles\":_vm.tipStyle}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-15 11:39:41\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\nimport * as vsctm from 'vscode-textmate';\r\nimport * as oniguruma from 'vscode-oniguruma';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nconst regs = {\r\n    stringToken: /(\\.|^)string(\\.|$)/,\r\n};\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.currentLine = 1;\r\n        this.initRegistry();\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n    }\r\n    initRegistry() {\r\n        const wasmBin = fs.readFileSync(path.join(globalData.dirname, 'main/lib/onig.wasm')).buffer;\r\n        const vscodeOnigurumaLib = oniguruma.loadWASM(wasmBin).then(() => {\r\n            return {\r\n                createOnigScanner(patterns) {\r\n                    return new oniguruma.OnigScanner(patterns);\r\n                },\r\n                createOnigString(s) {\r\n                    return new oniguruma.OnigString(s);\r\n                },\r\n            };\r\n        });\r\n        this.registry = new vsctm.Registry({\r\n            onigLib: vscodeOnigurumaLib,\r\n            loadGrammar: (scopeName) => {\r\n                let language = Util.getLanguageByScopeName(globalData.scopeFileList, scopeName);\r\n                if (language) {\r\n                    if (language.configPath) {\r\n                        return Util.loadJsonFile(language.configPath).then((data) => {\r\n                            // 每种语言都有对应的折叠标记\r\n                            this.sourceFoldMap[language.scopeName] = {};\r\n                            globalData.sourceWordMap[language.scopeName] = data.wordPattern;\r\n                            // 是否存在标记性语言\r\n                            this.hasTextGrammar = this.hasTextGrammar || language.scopeName.startsWith('text');\r\n                            this.initLanguageConifg(this.sourceFoldMap[language.scopeName], data);\r\n                            return Util.readFile(language.path).then((data) => vsctm.parseRawGrammar(data.toString(), language.path));\r\n                        });\r\n                    } else {\r\n                        return Util.readFile(language.path).then((data) => vsctm.parseRawGrammar(data.toString(), language.path));\r\n                    }\r\n                }\r\n                return null;\r\n            },\r\n        });\r\n    }\r\n    initLanguage(language) {\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.grammar = null;\r\n        this.foldType = 1;\r\n        this.sourceFoldMap = {};\r\n        this.hasTextGrammar = false;\r\n        this.currentLine = 1;\r\n        language = Util.getLanguageById(globalData.languageList, language);\r\n        this.scopeName = (language && language.scopeName) || '';\r\n        if (this.scopeName) {\r\n            if (globalData.grammars[this.scopeName]) {\r\n                let grammarData = globalData.grammars[this.scopeName];\r\n                this.grammar = grammarData.grammar;\r\n                this.sourceFoldMap = grammarData.sourceFoldMap;\r\n                this.hasTextGrammar = grammarData.hasTextGrammar;\r\n            } else {\r\n                return this.registry.loadGrammar(this.scopeName).then((grammar) => {\r\n                    this.grammar = grammar;\r\n                    globalData.grammars[this.scopeName] = {\r\n                        grammar: grammar,\r\n                        sourceFoldMap: this.sourceFoldMap,\r\n                        hasTextGrammar: this.hasTextGrammar,\r\n                    };\r\n                    this.tokenizeVisibleLins();\r\n                });\r\n            }\r\n        }\r\n        this.tokenizeVisibleLins();\r\n        return Promise.resolve();\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['startLine', 'maxVisibleLines', 'maxLine', 'renderLine', 'folder', '$nextTick']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    initLanguageConifg(foldMap, data) {\r\n        let source = [];\r\n        foldMap.__comments__ = {\r\n            lineComment: '',\r\n            blockComment: [],\r\n        };\r\n        if (data.comments) {\r\n            if (data.comments.lineComment) {\r\n                source.push(data.comments.lineComment);\r\n                foldMap[data.comments.lineComment] = 0;\r\n                foldMap.__comments__.lineComment = data.comments.lineComment;\r\n            }\r\n            if (data.comments.blockComment) {\r\n                source.push(data.comments.blockComment[0]);\r\n                source.push(data.comments.blockComment[1]);\r\n                foldMap[data.comments.blockComment[0]] = -this.foldType;\r\n                foldMap[data.comments.blockComment[1]] = this.foldType;\r\n                foldMap.__comments__.blockComment = data.comments.blockComment;\r\n                foldMap.__endCommentReg__ = new RegExp(data.comments.blockComment[1].replace(/[\\{\\}\\(\\)\\[\\]\\&\\?\\+\\*\\\\]/g, '\\\\$&'), 'g');\r\n                this.foldType++;\r\n            }\r\n        }\r\n        if (data.brackets) {\r\n            data.brackets.forEach((item) => {\r\n                if (foldMap[item[0]]) {\r\n                    //相同的前缀\r\n                    if (!foldMap[item[1]]) {\r\n                        source.push(item[1]);\r\n                        foldMap[item[1]] = -foldMap[item[0]];\r\n                    }\r\n                } else if (foldMap[item[1]]) {\r\n                    //相同的后缀\r\n                    if (!foldMap[item[0]]) {\r\n                        source.push(item[0]);\r\n                        foldMap[item[0]] = -foldMap[item[1]];\r\n                    }\r\n                } else {\r\n                    source.push(item[0]);\r\n                    source.push(item[1]);\r\n                    foldMap[item[0]] = -this.foldType;\r\n                    foldMap[item[1]] = this.foldType;\r\n                    this.foldType++;\r\n                }\r\n            });\r\n        }\r\n        source = source.join('|');\r\n        source = source.replace(/[\\{\\}\\(\\)\\[\\]\\&\\?\\+\\*\\\\]/g, '\\\\$&');\r\n        foldMap.__foldReg__ = new RegExp(source, 'g');\r\n    }\r\n    onInsertContentAfter(nowLine, newLine) {\r\n        if (nowLine <= this.currentLine) {\r\n            this.currentLine = nowLine;\r\n            clearTimeout(this.tokenizeLinesTimer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== nowLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(nowLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    onDeleteContentAfter(nowLine, newLine) {\r\n        if (newLine <= this.currentLine) {\r\n            this.currentLine = newLine;\r\n            clearTimeout(this.tokenizeLinesTimer);\r\n            this.$nextTick(() => {\r\n                if (this.currentLine !== newLine) {\r\n                    return;\r\n                }\r\n                this.tokenizeLines(newLine);\r\n            });\r\n        } else {\r\n            this.tokenizeVisibleLins();\r\n        }\r\n    }\r\n    tokenizeVisibleLins() {\r\n        let tokenizeVisibleLinsId = this.tokenizeVisibleLinsId + 1 || 1;\r\n        this.tokenizeVisibleLinsId = tokenizeVisibleLinsId;\r\n        this.$nextTick(() => {\r\n            if (this.tokenizeVisibleLinsId !== tokenizeVisibleLinsId) {\r\n                return;\r\n            }\r\n            let currentLine = this.currentLine;\r\n            let startLine = this.startLine;\r\n            let endLine = this.startLine + this.maxVisibleLines;\r\n            endLine = this.folder.getRealLine(endLine);\r\n            // 先渲染可视范围内的行\r\n            this.asyncTokenizeLines(startLine, endLine).then(() => {\r\n                startLine = this.startLine - 2000;\r\n                startLine = startLine < 1 ? 1 : startLine;\r\n                // 考虑到当前行可能处于内嵌语法种，渲染前2000行\r\n                if (startLine > currentLine) {\r\n                    this.asyncTokenizeLines(startLine, endLine).then(() => {\r\n                        this.tokenizeLines(currentLine);\r\n                    });\r\n                } else {\r\n                    this.tokenizeLines(currentLine);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    asyncTokenizeLines(startLine, endLine) {\r\n        return new Promise((resolve) => {\r\n            this.tokenizeLines(startLine, endLine, resolve);\r\n        });\r\n    }\r\n    tokenizeLines(startLine, endLine, resolve) {\r\n        let processedLines = 0;\r\n        let processedTime = Date.now();\r\n        endLine = endLine || this.maxLine;\r\n        endLine = endLine > this.maxLine ? this.maxLine : endLine;\r\n        cancelIdleCallback(this.tokenizeLinesTimer);\r\n        if (this.scopeName && !this.grammar) {\r\n            this.tokenizeLinesTimer = setTimeout(() => {\r\n                this.tokenizeLines(startLine, endLine, resolve);\r\n            });\r\n            return;\r\n        }\r\n        while (startLine <= endLine) {\r\n            let lineObj = this.htmls[startLine - 1];\r\n            if (!lineObj.tokens) {\r\n                //文本超过一万时跳过高亮\r\n                let data = this.tokenizeLine(startLine);\r\n                lineObj.tokens = data.tokens;\r\n                lineObj.folds = data.folds;\r\n                lineObj.stateFold = data.stateFold;\r\n                if (this.checkLineVisible(startLine)) {\r\n                    lineObj.tokens = this.splitLongToken(lineObj.tokens);\r\n                    lineObj.html = this.createHtml(lineObj.tokens, lineObj.text);\r\n                    this.renderLine(lineObj.lineId);\r\n                }\r\n                if (!lineObj.states || (lineObj.states.equals && !lineObj.states.equals(data.states)) || lineObj.states.toString() !== data.states.toString()) {\r\n                    lineObj.states = data.states;\r\n                    lineObj = this.htmls[startLine];\r\n                    if (lineObj) {\r\n                        lineObj.tokens = null;\r\n                        lineObj.html = '';\r\n                    }\r\n                }\r\n                processedLines++;\r\n                // 避免卡顿\r\n                if (processedLines % 5 == 0 && Date.now() - processedTime >= 20) {\r\n                    startLine++;\r\n                    break;\r\n                }\r\n            }\r\n            startLine++;\r\n        }\r\n        this.currentLine = startLine;\r\n        if (startLine <= endLine) {\r\n            this.tokenizeLinesTimer = requestIdleCallback(() => {\r\n                this.tokenizeLines(startLine, endLine, resolve);\r\n            });\r\n        } else if (resolve) {\r\n            resolve();\r\n        }\r\n    }\r\n    createHtml(tokens, lineText) {\r\n        return tokens\r\n            .map((item) => {\r\n                let selector = '';\r\n                let value = lineText.substring(item.startIndex, item.endIndex);\r\n                if (item.scopes[0] === 'plain') {\r\n                    selector = 'my-plain';\r\n                } else if (item.scopes[0] === 'selected') {\r\n                    selector = 'my-select-fg';\r\n                } else {\r\n                    selector = _getSelector(item);\r\n                    selector = (selector && `my-scope-${selector.scopeId}`) || '';\r\n                }\r\n                return `<span class=\"${selector}\" data-column=\"${item.startIndex}\">${Util.htmlTrans(value)}</span>`;\r\n            })\r\n            .join('');\r\n\r\n        function _getSelector(token) {\r\n            let result = null;\r\n            let scopes = token.scopes;\r\n            token.scope = scopes.join(' ');\r\n            outerLoop: for (let i = scopes.length - 1; i >= 0; i--) {\r\n                let scope = scopes[i];\r\n                for (let i = 0; i < globalData.scopeTokenList.length; i++) {\r\n                    let item = globalData.scopeTokenList[i];\r\n                    let _scope = item.scopes.peek();\r\n                    if (scope.indexOf(_scope) > -1) {\r\n                        if (item.regexp.test(token.scope)) {\r\n                            result = item;\r\n                            break outerLoop;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    tokenizeLine(line) {\r\n        let lineText = this.htmls[line - 1].text;\r\n        let folds = [];\r\n        if (lineText.length > 10000 || !this.scopeName) {\r\n            return {\r\n                tokens: [\r\n                    {\r\n                        scopes: ['plain'],\r\n                        startIndex: 0,\r\n                        endIndex: lineText.length,\r\n                    },\r\n                ],\r\n                folds: [],\r\n                states: vsctm.INITIAL,\r\n            };\r\n        }\r\n        let states = (line > 1 && this.htmls[line - 2].states) || vsctm.INITIAL;\r\n        let lineTokens = this.grammar.tokenizeLine(lineText, states);\r\n        let stateFold = this.addFold(line, lineTokens.tokens, folds);\r\n        lineTokens.tokens.peek().endIndex = lineText.length; //某些情况下，会大于lineText.length\r\n        return {\r\n            tokens: lineTokens.tokens,\r\n            states: lineTokens.ruleStack,\r\n            folds: folds,\r\n            stateFold: stateFold,\r\n        };\r\n    }\r\n    addFold(line, tokens, folds) {\r\n        let scopeName = '';\r\n        let startIndex = 0;\r\n        let existTag = false;\r\n        let lineText = this.htmls[line - 1].text;\r\n        let stateFold = line > 1 ? this.htmls[line - 2].stateFold : null;\r\n        //给字符串token打上标记\r\n        tokens.forEach((token) => {\r\n            if (regs.stringToken.test(token.scopes.join('.'))) {\r\n                token.isString = true;\r\n            }\r\n        });\r\n        outerLoop: for (let index = 0; index < tokens.length; index++) {\r\n            let token = tokens[index];\r\n            let _scopeName = '';\r\n            let foldMap = null;\r\n            for (let i = token.scopes.length - 1; i >= 0; i--) {\r\n                foldMap = this.sourceFoldMap[token.scopes[i]];\r\n                if (!foldMap) {\r\n                    continue;\r\n                }\r\n                _scopeName = token.scopes[i];\r\n                if (scopeName || index === tokens.length - 1) {\r\n                    if (_scopeName !== scopeName || index === tokens.length - 1) {\r\n                        let endIndex = index === tokens.length - 1 ? token.endIndex : token.startIndex;\r\n                        let lastFold = this.addBracket({\r\n                            tokens: tokens,\r\n                            line: line,\r\n                            foldMap: foldMap,\r\n                            folds: folds,\r\n                            startIndex: startIndex,\r\n                            endIndex: endIndex,\r\n                            stateFold: stateFold,\r\n                            lineText: lineText,\r\n                        });\r\n                        // 单行注释\r\n                        if (lastFold && lastFold.type === Util.constData.LINE_COMMENT) {\r\n                            break outerLoop;\r\n                        }\r\n                        scopeName = token.scopes[i];\r\n                        startIndex = token.startIndex;\r\n                    }\r\n                } else {\r\n                    scopeName = token.scopes[i];\r\n                    startIndex = token.startIndex;\r\n                }\r\n                break;\r\n            }\r\n            if (\r\n                this.addTagFold({\r\n                    token: token,\r\n                    foldMap: foldMap,\r\n                    folds: folds,\r\n                    lineText: lineText,\r\n                })\r\n            ) {\r\n                existTag = true;\r\n            }\r\n        }\r\n        if (existTag) {\r\n            folds.sort((a, b) => {\r\n                return a.startIndex - b.startIndex;\r\n            });\r\n        }\r\n        if (folds.length) {\r\n            return folds.peek().type === Util.constData.BLOCK_COMMENT ? folds.peek() : null;\r\n        } else {\r\n            return stateFold;\r\n        }\r\n    }\r\n    addBracket(option) {\r\n        let tokens = option.tokens;\r\n        let foldMap = option.foldMap;\r\n        let folds = option.folds;\r\n        let startIndex = option.startIndex;\r\n        let endIndex = option.endIndex;\r\n        let stateFold = option.stateFold;\r\n        let text = option.lineText.slice(startIndex, endIndex);\r\n        let reg = foldMap.__foldReg__;\r\n        let res = null;\r\n        let preFold = null;\r\n        if (folds.length) {\r\n            preFold = folds.peek();\r\n        } else {\r\n            preFold = stateFold;\r\n        }\r\n        if (preFold && preFold.type === Util.constData.BLOCK_COMMENT && preFold.side < 0) {\r\n            reg = foldMap.__endCommentReg__;\r\n        }\r\n        while ((res = reg.exec(text))) {\r\n            let type = Util.constData.BRACKET;\r\n            if (foldMap.__comments__.lineComment === res[0]) {\r\n                type = Util.constData.LINE_COMMENT;\r\n            } else if (foldMap.__comments__.blockComment[0] === res[0] || foldMap.__comments__.blockComment[1] === res[0]) {\r\n                type = Util.constData.BLOCK_COMMENT;\r\n            }\r\n            // 如果处于字符串中，则无效\r\n            if (_inString(res)) {\r\n                continue;\r\n            }\r\n            folds.push({\r\n                startIndex: startIndex + res.index,\r\n                endIndex: startIndex + res.index + res[0].length,\r\n                side: foldMap[res[0]],\r\n                type: type,\r\n            });\r\n            if (type === Util.constData.BLOCK_COMMENT && foldMap[res[0]] < 0) {\r\n                foldMap.__endCommentReg__.lastIndex = reg.lastIndex;\r\n                reg.lastIndex = 0;\r\n                reg = foldMap.__endCommentReg__;\r\n            } else if (type === Util.constData.LINE_COMMENT) {\r\n                break;\r\n            }\r\n        }\r\n        reg.lastIndex = 0;\r\n        return folds.length && folds.peek();\r\n\r\n        function _inString(res) {\r\n            let index = res.index;\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex <= index && tokens[i].endIndex > index) {\r\n                    if (tokens[i].isString) {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                } else if (tokens[i].startIndex > index) {\r\n                    break;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    addTagFold(option) {\r\n        let token = option.token;\r\n        let folds = option.folds;\r\n        let foldMap = option.foldMap;\r\n        let lineText = option.lineText;\r\n        if (this.hasTextGrammar && token.scopes.peek().startsWith('entity.name.tag')) {\r\n            //html、xml标签名称\r\n            let tag = lineText.slice(token.startIndex, token.endIndex);\r\n            let side = 0;\r\n            if (foldMap[tag]) {\r\n                side = foldMap[tag];\r\n            } else {\r\n                side = this.foldType++;\r\n                foldMap[tag] = side;\r\n            }\r\n            //开始标签\r\n            if (lineText[token.startIndex - 1] === '<') {\r\n                side = -side;\r\n            }\r\n            folds.push({\r\n                startIndex: token.startIndex,\r\n                endIndex: token.endIndex,\r\n                side: side,\r\n                type: Util.constData.TAG,\r\n            });\r\n            return true;\r\n        }\r\n    }\r\n    splitLongToken(tokens) {\r\n        let result = [];\r\n        tokens.forEach((token) => {\r\n            let length = token.endIndex - token.startIndex;\r\n            if (length > 100) {\r\n                //将文本数量大于100的token分隔\r\n                let startCol = token.startIndex;\r\n                let count = Math.floor(length / 100);\r\n                for (let i = 0; i < count; i++) {\r\n                    let startIndex = i * 100;\r\n                    let endIndex = (i + 1) * 100;\r\n                    endIndex = endIndex > token.endIndex ? token.endIndex : endIndex;\r\n                    result.push({\r\n                        startIndex: startIndex + startCol,\r\n                        endIndex: endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                }\r\n                count = count * 100;\r\n                if (count < length) {\r\n                    result.push({\r\n                        startIndex: count + startCol,\r\n                        endIndex: token.endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                }\r\n            } else {\r\n                result.push(token);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    checkLineVisible(line) {\r\n        let endLine = this.startLine + this.maxVisibleLines;\r\n        endLine = this.folder.getRealLine(endLine);\r\n        if (this.folder.getLineInFold(line)) {\r\n            //该行被包裹\r\n            return false;\r\n        }\r\n        return line >= this.startLine && line <= endLine;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-01-05 14:28:42\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\nconst child_process = require('child_process');\r\n\r\nlet worker = null;\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.initLanguage(editor.language);\r\n        this.initEvent();\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, context, ['htmls', 'getAllText']);\r\n        Util.defineProperties(this, editor, ['setErrors']);\r\n    }\r\n    initLanguage(language) {\r\n        if (this.language === language) {\r\n            return;\r\n        }\r\n        this.language = language;\r\n        this.setErrors([]);\r\n        this.initEvent();\r\n        this.parse();\r\n    }\r\n    initEvent() {\r\n        if (worker === null) {\r\n            worker = child_process.fork(path.join(globalData.dirname, 'main/process/lint/index.js'));\r\n            worker.on('message', (data) => {\r\n                console.log(data);\r\n                if (data.parseId === this.parseId) {\r\n                    this.setErrors(data.results);\r\n                }\r\n            });\r\n        }\r\n        worker.on('close', () => {\r\n            worker = null;\r\n            this.initEvent();\r\n        });\r\n    }\r\n    onInsertContentAfter(nowLine, newLine) {\r\n        clearTimeout(this.parseTimer);\r\n        this.parseId = '';\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    onDeleteContentAfter(nowLine, newLine) {\r\n        clearTimeout(this.parseTimer);\r\n        this.parseId = '';\r\n        this.parseTimer = setTimeout(() => {\r\n            this.parse();\r\n        }, 300);\r\n    }\r\n    parse() {\r\n        if (!this.language) {\r\n            return;\r\n        }\r\n        const text = this.getAllText();\r\n        this.parseId = Util.getUUID();\r\n        worker.send({\r\n            text: text,\r\n            parseId: this.parseId,\r\n            language: this.language,\r\n        });\r\n    }\r\n}\r\n","export default {\r\n    TOKEN_TYPE: {\r\n        TEXT: 'text',\r\n        SOURCE: 'source',\r\n        TAG_NAME: 'tag-name',\r\n        ATTR_NAME: 'attr-name',\r\n        STRING: 'string',\r\n        WORD: 'word',\r\n        CSS: 'css',\r\n        CSS_VALUE: 'css-value',\r\n        CSS_PROPERTY: 'css-property',\r\n        CSS_SELECTOR: 'css-selector',\r\n        CSS_TAG: 'css-tag',\r\n        CSS_CLASS: 'css-class',\r\n        CSS_ATTR: 'css-attr',\r\n        CSS_PSEUDO: 'css-pseudo',\r\n        EMMET_HTML: 'emmet-html',\r\n        EMMET_CSS: 'emmet-css'\r\n    },\r\n};\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-17 15:29:26\r\n * @Description:\r\n */\r\nimport { extract } from 'emmet';\r\nimport Util from '@/common/util';\r\nimport Enum from '@/data/enum';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\n\r\nconst regs = {\r\n    stringToken: /(?:\\.|^)(?:string|regexp)(?:\\.|$)/,\r\n    tagToken: /meta\\.tag/,\r\n    tagNameToken: /entity\\.name\\.tag/,\r\n    tagAttrName: /attribute\\-name/,\r\n    cssValueToken: /property\\-list|property\\-value|separator/,\r\n    cssPropertyToken: /meta\\.property\\-name/,\r\n    cssSelectorToken: /meta\\.selector/,\r\n    cssAttributeToken: /attribute\\-selector/,\r\n    cssClassToken: /attribute\\-name\\.class/,\r\n    cssPseudoToken: /pseudo\\-element/,\r\n    styleCss: /([^\\:\\;\\\"\\'\\s]+)\\s*\\:\\s*([^\\:\\;]+)?$/,\r\n    styleCssProperty: /(?:^|[\\;\\\"\\'])([^\\:\\;]+)$/,\r\n};\r\n\r\nclass Autocomplete {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.doneMap = {};\r\n        this.results = [];\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.wordPattern = new RegExp(`^(${this.wordPattern.source})$`);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'cursor', 'nowCursorPos', 'tokenizer', 'autoTipList', 'setAutoTip', 'selectAutoTip']);\r\n        Util.defineProperties(this, context, ['htmls', 'replaceTip', 'insertContent']);\r\n    }\r\n    reset() {\r\n        this.currentLine = 1;\r\n        this.results = [];\r\n        this.doneMap = {};\r\n    }\r\n    stop() {\r\n        cancelIdleCallback(this.searchTimer);\r\n    }\r\n    search() {\r\n        this.stop();\r\n        this.searchTimer = requestIdleCallback(() => {\r\n            this._search();\r\n        });\r\n    }\r\n    emmet() {\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let tokenIndex = this.getTokenIndex(this.nowCursorPos);\r\n        let nowToken = lineObj.tokens[tokenIndex];\r\n        let word = nowToken && lineObj.text.slice(nowToken.startIndex, this.nowCursorPos.column);\r\n        let emmetObj = null;\r\n        let type = '';\r\n        if (word) {\r\n            let scope = nowToken.scopes.peek();\r\n            if (scope.startsWith('text.')) {\r\n                emmetObj = extract(word);\r\n                type = Enum.TOKEN_TYPE.EMMET_HTML;\r\n            } else if (this._isCssToken(nowToken)) {\r\n                if (this._isCssPropertyToken(nowToken)) {\r\n                    emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n                } else if (this._isCssValueToken(nowToken)) {\r\n                    //p10将会被分成pd和10两个token\r\n                    let preToken = lineObj.tokens[tokenIndex - 1];\r\n                    if (preToken && this._isCssPropertyToken(preToken)) {\r\n                        word = lineObj.text.slice(preToken.startIndex, preToken.endIndex) + word;\r\n                        emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n                    }\r\n                }\r\n                type = Enum.TOKEN_TYPE.EMMET_CSS;\r\n            }\r\n        }\r\n        if (emmetObj) {\r\n            this.replaceTip({ word: emmetObj.abbreviation, result: emmetObj.abbreviation, type: type });\r\n        } else if (this.autoTipList && this.autoTipList.length) {\r\n            this.selectAutoTip();\r\n        } else {\r\n            this.insertContent('\\t');\r\n        }\r\n    }\r\n    _search() {\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let tokenIndex = this.getTokenIndex(this.nowCursorPos);\r\n        let nowToken = lineObj.tokens[tokenIndex];\r\n        let word = nowToken && lineObj.text.slice(nowToken.startIndex, this.nowCursorPos.column);\r\n        this.reset();\r\n        this.setAutoTip(null);\r\n        if (!word) {\r\n            return;\r\n        }\r\n        if (this._isTextToken(nowToken)) {\r\n            let scope = nowToken.scopes.peek();\r\n            if (scope.startsWith('text.')) {\r\n                //emmet表达式\r\n                this._searchEmmet(word);\r\n            } else if (this._isTagNameToken(nowToken)) {\r\n                //标签名\r\n                this._searchTagName(word);\r\n            } else if (this._isAttrNameToken(nowToken)) {\r\n                //属性名\r\n                let tag = this._getPreTagName(tokenIndex, this.nowCursorPos.line);\r\n                if (tag) {\r\n                    this._searchTagAttrName(word, tag);\r\n                }\r\n            }\r\n        } else if (this._isCssToken(nowToken)) {\r\n            if (this._isCssPropertyToken(nowToken)) {\r\n                //css属性名\r\n                this._searchCssProperty(word);\r\n            } else if (this._isCssValueToken(nowToken)) {\r\n                //css属性值\r\n                let preToken = lineObj.tokens[tokenIndex - 1];\r\n                //p10将会被分成pd和10两个token\r\n                if (preToken && this._isCssPropertyToken(preToken)) {\r\n                    let preToken = lineObj.tokens[tokenIndex - 1];\r\n                    if (preToken && this._isCssPropertyToken(preToken)) {\r\n                        word = lineObj.text.slice(preToken.startIndex, preToken.endIndex) + word;\r\n                        this._searchCssProperty(word);\r\n                    }\r\n                } else {\r\n                    let property = this._getPreCssProperty(tokenIndex, this.nowCursorPos.line);\r\n                    if (property) {\r\n                        this._searchCssValue(word, property);\r\n                    }\r\n                }\r\n            } else if (this._isCssSelectorToken(nowToken)) {\r\n                if (this._isTagNameToken(nowToken)) {\r\n                    this._searchCssTag(word);\r\n                } else if (word.indexOf(':') > -1) {\r\n                    this._searchCssPseudo(word);\r\n                }\r\n                this._searchSelector(word, nowToken);\r\n            } else if (this._isTagToken(nowToken)) {\r\n                //style种的css样式\r\n                this._searchStyle(word, nowToken);\r\n            }\r\n        } else if (this._isSourceToken(nowToken)) {\r\n            if (this.wordPattern.test(word)) {\r\n                this._searchWord(word, nowToken);\r\n            }\r\n        }\r\n    }\r\n    _searchWord(word, nowToken) {\r\n        this._searchDocument((lineObj) => {\r\n            lineObj.tokens.forEach((token) => {\r\n                if (token === nowToken) {\r\n                    return;\r\n                }\r\n                let text = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                if (this.wordPattern.test(text)) {\r\n                    // 跳过标签和字符串\r\n                    if (this._isTextToken(token) || this._isStringToken(token)) {\r\n                        return;\r\n                    }\r\n                    this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.WORD });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _searchSelector(word, nowToken) {\r\n        if (this._isCssClassToken(nowToken) && word !== '.') {\r\n            word = '.' + word;\r\n        }\r\n        this._searchDocument((lineObj) => {\r\n            lineObj.tokens.forEach((token) => {\r\n                if (token === nowToken) {\r\n                    return;\r\n                }\r\n                if (this._isCssSelectorToken(token)) {\r\n                    let text = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    if (!this.wordPattern.test(text)) {\r\n                        return;\r\n                    }\r\n                    if (this._isCssClassToken(token)) {\r\n                        text = '.' + text;\r\n                    }\r\n                    if (word === '.') {\r\n                        if (this._isCssClassToken(token) && text !== '..') {\r\n                            this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_CLASS, skipMatch: true });\r\n                        }\r\n                    } else if (this._isCssClassToken(nowToken)) {\r\n                        if (this._isCssClassToken(token)) {\r\n                            this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_CLASS });\r\n                        }\r\n                    } else {\r\n                        this._addTip({ word: word, value: text, type: Enum.TOKEN_TYPE.CSS_SELECTOR });\r\n                    }\r\n                }\r\n            });\r\n        }, true);\r\n    }\r\n    _searchDocument(callback, showAll) {\r\n        let line = this.currentLine;\r\n        let startTime = Date.now();\r\n        let processedLines = 0;\r\n        while (line <= this.htmls.length) {\r\n            let lineObj = this.htmls[line - 1];\r\n            line++;\r\n            if (!lineObj.tokens) {\r\n                continue;\r\n            }\r\n            callback(lineObj);\r\n            processedLines++;\r\n            // 避免卡顿\r\n            if (processedLines % 5 == 0 && Date.now() - startTime >= 20) {\r\n                break;\r\n            }\r\n        }\r\n        this.currentLine = line;\r\n        this._showTip(showAll);\r\n        if (line <= this.htmls.length) {\r\n            this.searchTimer = requestIdleCallback(() => {\r\n                this._searchDocument(callback, showAll);\r\n            });\r\n        }\r\n    }\r\n    _searchTagName(word) {\r\n        const htmlData = this.getHtmlData();\r\n        htmlData.tags.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.TAG_NAME });\r\n        });\r\n        if (!this.results.length) {\r\n            this._addTip({ word: word, value: word, type: Enum.TOKEN_TYPE.TAG_NAME, skipMatch: true });\r\n        }\r\n        this._showTip();\r\n    }\r\n    _searchTagAttrName(word, tag) {\r\n        const htmlData = this.getHtmlData();\r\n        let attributes = htmlData.tagMap[tag];\r\n        attributes = attributes && attributes.attributes;\r\n        if (attributes) {\r\n            // 标签专有属性\r\n            attributes.forEach((item) => {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.ATTR_NAME, after: '=\"\"' });\r\n            });\r\n        }\r\n        // 公共属性\r\n        htmlData.globalAttributes.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.ATTR_NAME, after: '=\"\"' });\r\n        });\r\n        this._showTip();\r\n    }\r\n    _searchCssTag(word) {\r\n        const htmlData = this.getHtmlData();\r\n        htmlData.tags.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_TAG });\r\n        });\r\n    }\r\n    _searchCssPseudo(word) {\r\n        const cssData = this.getCssData();\r\n        const pseudo = word.split(':').peek().trim();\r\n        cssData.pseudoClasses.forEach((item) => {\r\n            if (pseudo) {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO });\r\n            } else {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO, skipMatch: true });\r\n            }\r\n        });\r\n        cssData.pseudoElements.forEach((item) => {\r\n            if (pseudo) {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO });\r\n            } else {\r\n                this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PSEUDO, skipMatch: true });\r\n            }\r\n        });\r\n    }\r\n    _searchStyle(word, nowToken) {\r\n        let column = this.nowCursorPos.column;\r\n        let lineObj = this.htmls[this.nowCursorPos.line - 1];\r\n        let keyValue = null;\r\n        word = lineObj.text.slice(nowToken.startIndex, column);\r\n        keyValue = regs.styleCss.exec(word);\r\n        if (keyValue && keyValue[1]) {\r\n            let property = keyValue[1];\r\n            let value = keyValue[2] || '';\r\n            this._searchCssValue(value, property);\r\n            return;\r\n        }\r\n        keyValue = regs.styleCssProperty.exec(word);\r\n        if (keyValue && keyValue[1]) {\r\n            this._searchCssProperty(keyValue[1]);\r\n        }\r\n    }\r\n    _searchCssProperty(word) {\r\n        const cssData = this.getCssData();\r\n        cssData.properties.forEach((item) => {\r\n            this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_PROPERTY, after: ': ' });\r\n        });\r\n        if (!this.results.length) {\r\n            const emmetObj = extract(word, word.length, { type: 'stylesheet' });\r\n            if (emmetObj && emmetObj.abbreviation) {\r\n                this._addTip({ word: emmetObj.abbreviation, value: emmetObj.abbreviation, type: Enum.TOKEN_TYPE.EMMET_CSS, skipMatch: true });\r\n            }\r\n        }\r\n        this._showTip();\r\n    }\r\n    _searchCssValue(word, property) {\r\n        const cssData = this.getCssData();\r\n        let values = cssData.propertyMap[property];\r\n        values = values && values.values;\r\n        if (values) {\r\n            let _word = word.trim();\r\n            if (_word === ':' || _word === '') {\r\n                values.forEach((item) => {\r\n                    this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_VALUE, before: ' ', after: ';', skipMatch: true });\r\n                });\r\n                this._showTip(true);\r\n            } else {\r\n                values.forEach((item) => {\r\n                    this._addTip({ word: word, value: item.name, type: Enum.TOKEN_TYPE.CSS_VALUE, after: ';' });\r\n                });\r\n                this._showTip();\r\n            }\r\n        }\r\n    }\r\n    _searchEmmet(word) {\r\n        const emmetObj = extract(word);\r\n        if (emmetObj && emmetObj.abbreviation) {\r\n            this._addTip({ word: emmetObj.abbreviation, value: emmetObj.abbreviation, type: Enum.TOKEN_TYPE.EMMET_HTML, skipMatch: true });\r\n            this._showTip();\r\n        }\r\n    }\r\n    _setTokenType(token) {\r\n        token.isSourceToken = false;\r\n        token.isCssToken = false;\r\n        token.isTextToken = false;\r\n        token.isTagToken = false;\r\n        token.isTagAttrNameToken = false;\r\n        token.scope = token.scope || token.scopes.join(' ');\r\n        for (let i = token.scopes.length - 1; i >= 0; i--) {\r\n            let scope = token.scopes[i];\r\n            if (scope.startsWith('source.')) {\r\n                token.isSourceToken = true;\r\n                if (scope.startsWith('source.css')) {\r\n                    token.isCssToken = true;\r\n                }\r\n                break;\r\n            } else if (scope.startsWith('text.')) {\r\n                token.isTextToken = true;\r\n                token.isTagAttrNameToken = regs.tagAttrName.test(token.scope);\r\n                break;\r\n            }\r\n        }\r\n        token.isTagToken = regs.tagToken.test(token.scope);\r\n        token.isTagNameToken = regs.tagNameToken.test(token.scope);\r\n        token.isStringToken = regs.stringToken.test(token.scope);\r\n        if (token.isCssToken) {\r\n            token.isCssValueToken = regs.cssValueToken.test(token.scope);\r\n            token.isCssPropertyToken = regs.cssPropertyToken.test(token.scope);\r\n            token.isCssSelectorToken = regs.cssSelectorToken.test(token.scope);\r\n            token.isCssClassToken = regs.cssClassToken.test(token.scope);\r\n            token.isCssAttributeToken = regs.cssAttributeToken.test(token.scope);\r\n            token.isCssPseudoToken = regs.cssPseudoToken.test(token.scope);\r\n        }\r\n    }\r\n    _isTextToken(token) {\r\n        if (token.isTextToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTextToken;\r\n    }\r\n    _isSourceToken(token) {\r\n        if (token.isSourceToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isSourceToken;\r\n    }\r\n    _isCssToken(token) {\r\n        if (token.isCssToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssToken;\r\n    }\r\n    _isCssPropertyToken(token) {\r\n        if (token.isCssPropertyToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssPropertyToken;\r\n    }\r\n    _isCssValueToken(token) {\r\n        if (token.isCssValueToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssValueToken;\r\n    }\r\n    _isCssSelectorToken(token) {\r\n        if (token.isCssSelectorToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssSelectorToken;\r\n    }\r\n    _isCssClassToken(token) {\r\n        if (token.isCssClassToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssClassToken;\r\n    }\r\n    _isCssAttributeToken(token) {\r\n        if (token.isCssAttributeToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssAttributeToken;\r\n    }\r\n    _isCssPseudoToken(token) {\r\n        if (token.isCssPseudoToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isCssPseudoToken;\r\n    }\r\n    _isStringToken(token) {\r\n        if (token.isStringToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isStringToken;\r\n    }\r\n    _isTagToken(token) {\r\n        if (token.isTagToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagToken;\r\n    }\r\n    _isTagNameToken(token) {\r\n        if (token.isTagNameToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagNameToken;\r\n    }\r\n    _isAttrNameToken(token) {\r\n        if (token.isTagAttrNameToken === undefined) {\r\n            this._setTokenType(token);\r\n        }\r\n        return token.isTagAttrNameToken;\r\n    }\r\n    _getPreTagName(tokenIndex, line) {\r\n        let tag = '';\r\n        let count = 0;\r\n        outerLoop: while (line >= 1) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (!lineObj.tokens) {\r\n                break;\r\n            }\r\n            tokenIndex = tokenIndex > -1 ? tokenIndex : lineObj.tokens.length;\r\n            for (let i = tokenIndex - 1; i >= 0; i--) {\r\n                let token = lineObj.tokens[i];\r\n                if (this._isTagNameToken(token)) {\r\n                    tag = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    break outerLoop;\r\n                }\r\n                count++;\r\n                if (count > 100) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n            line--;\r\n            tokenIndex = -1;\r\n        }\r\n        return tag;\r\n    }\r\n    _getPreCssProperty(tokenIndex, line) {\r\n        let property = '';\r\n        let count = 0;\r\n        outerLoop: while (line >= 1) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (!lineObj.tokens) {\r\n                break;\r\n            }\r\n            tokenIndex = tokenIndex > -1 ? tokenIndex : lineObj.tokens.length;\r\n            for (let i = tokenIndex - 1; i >= 0; i--) {\r\n                let token = lineObj.tokens[i];\r\n                if (this._isCssPropertyToken(token)) {\r\n                    property = lineObj.text.slice(token.startIndex, token.endIndex);\r\n                    break outerLoop;\r\n                }\r\n                count++;\r\n                if (count > 100 || !this._isCssValueToken(token)) {\r\n                    break outerLoop;\r\n                }\r\n            }\r\n            line--;\r\n            tokenIndex = -1;\r\n        }\r\n        return property;\r\n    }\r\n    _addTip(option) {\r\n        let result = null;\r\n        let fullMatch = option.fullMatch;\r\n        fullMatch = fullMatch === undefined ? true : fullMatch;\r\n        if (this.doneMap[option.value] && !option.skipDone) {\r\n            return;\r\n        }\r\n        if (option.skipMatch) {\r\n            result = {\r\n                indexs: [],\r\n                score: 0,\r\n            };\r\n        } else {\r\n            result = Util.fuzzyMatch(option.word.trim(), option.value, fullMatch);\r\n        }\r\n        if (result) {\r\n            let obj = {\r\n                result: option.value,\r\n                word: option.word || '',\r\n                desc: option.desc || '',\r\n                type: option.type || '',\r\n                before: option.before || '',\r\n                after: option.after || '',\r\n                icon: this.getIcon(option.scope),\r\n                indexs: result.indexs,\r\n                score: result.score,\r\n            };\r\n            this.results.push(obj);\r\n            this.doneMap[option.value] = obj;\r\n        } else {\r\n            this.doneMap[option.value] = true;\r\n        }\r\n    }\r\n    _showTip(all) {\r\n        let results = null;\r\n        let limit = all ? 200 : 10;\r\n        this.results.sort((a, b) => {\r\n            return b.score - a.score;\r\n        });\r\n        results = this.results.slice(0, limit);\r\n        this.setAutoTip(results);\r\n    }\r\n    checkEmmetValid(text) {\r\n        let _text = '';\r\n        if (regs.invalidEmmetParen.exec(text)) {\r\n            return false;\r\n        }\r\n        while (text !== (_text = text.replace(regs.paremEmmet, 'a'))) {\r\n            text = _text;\r\n        }\r\n        return !!regs.emmet.exec(text);\r\n    }\r\n    getTokenIndex(cursorPos) {\r\n        let tokens = this.htmls[cursorPos.line - 1].tokens;\r\n        if (tokens) {\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex < cursorPos.column && tokens[i].endIndex >= cursorPos.column) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    getHtmlData() {\r\n        if (this.htmlData) {\r\n            return this.htmlData;\r\n        } else {\r\n            const htmlData = require(path.join(globalData.dirname, 'main/data/browsers.html-data'));\r\n            this.htmlData = htmlData;\r\n            htmlData.tagMap = {};\r\n            htmlData.tags.forEach((item) => {\r\n                htmlData.tagMap[item.name] = item;\r\n            });\r\n            return this.htmlData;\r\n        }\r\n    }\r\n    getCssData() {\r\n        if (this.cssData) {\r\n            return this.cssData;\r\n        } else {\r\n            const cssData = require(path.join(globalData.dirname, 'main/data/browsers.css-data'));\r\n            this.cssData = cssData;\r\n            cssData.propertyMap = {};\r\n            cssData.properties.forEach((item) => {\r\n                cssData.propertyMap[item.name] = item;\r\n            });\r\n            return this.cssData;\r\n        }\r\n    }\r\n    getIcon(scope) {\r\n        return '';\r\n    }\r\n}\r\n\r\nexport default Autocomplete;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-04 16:13:41\r\n * @Description: \r\n */\r\nclass Node {\r\n    constructor(max) {\r\n        this.dataList = new Array(max + 1);\r\n        this.linkList = new Array(max + 2);\r\n        this.num = 0;\r\n        this.next = null;\r\n        this.prev = null;\r\n        this.pNode = null;\r\n    }\r\n}\r\nclass Btree {\r\n    /**\r\n     * 构造器\r\n     * @param {Function} compare 比较器\r\n     * @param {Number} max 节点可存储的最大数量 \r\n     */\r\n    constructor(compare, max) {\r\n        this.max = max || 4;\r\n        this.root = null;\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.compare = compare || function (a, b) {\r\n            return a - b;\r\n        }\r\n    }\r\n    /**\r\n     * 插入\r\n     * @param {Any} value \r\n     */\r\n    insert(value) {\r\n        if (!this.root) {\r\n            let node = new Node(this.max);\r\n            node.dataList[0] = value;\r\n            node.num++;\r\n            this.root = node;\r\n            this.head = node;\r\n            this.size++;\r\n            this.arrayCache = null;\r\n            return;\r\n        }\r\n        let node = this._search(value, true);\r\n        let link = null;\r\n        let half = Math.floor(this.max / 2) || 1; //m为1时，n应该也为1\r\n        let result = this.iterator(node, value);\r\n        if (this.findIndex(node, value) > -1) { //value已经存在，直接返回\r\n            return result;\r\n        }\r\n        this.size++;\r\n        this.arrayCache = null;\r\n        while (node) {\r\n            let linkList = node.linkList;\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                let data = dataList[i];\r\n                if (this.compare(value, data) < 0) {\r\n                    _insert(dataList, linkList, i);\r\n                    break;\r\n                } else if (i === node.num - 1) {\r\n                    _insert(dataList, linkList, i + 1);\r\n                }\r\n            }\r\n            node.num++; //关键字数量加1\r\n            if (node.num <= this.max) { //存储数量未超过最大限制，直接结束插入\r\n                break;\r\n            }\r\n            let newNode = new Node(this.max);\r\n            let isPnode = node.linkList[0];\r\n            value = dataList[half]; //父节点需要插入的值\r\n            if (!isPnode) { //叶子节点更新前后件\r\n                if (node.next) {\r\n                    node.next.prev = newNode;\r\n                }\r\n                newNode.next = node.next;\r\n                node.next = newNode;\r\n                newNode.prev = node;\r\n                newNode.pNode = node.pNode;\r\n            }\r\n            link = newNode;\r\n            //复制数据到新节点，如果是叶子节点，需要把value留在叶子节点中\r\n            for (let i = (isPnode ? half + 1 : half), j = 0; i < node.num; i++, j++) {\r\n                newNode.dataList[j] = dataList[i];\r\n                newNode.linkList[j + 1] = linkList[i + 1];\r\n                if (newNode.linkList[j + 1]) {\r\n                    newNode.linkList[j + 1].pNode = newNode;\r\n                }\r\n                dataList[i] = null;\r\n                linkList[i + 1] = null;\r\n                newNode.num++;\r\n            }\r\n            node.num = half; //关键字数量为最大值的一半\r\n            if (isPnode) {\r\n                node.dataList[node.num] = null;\r\n                // 非叶子节点，需要把左侧最后一个指针域复制过来\r\n                newNode.linkList[0] = node.linkList[node.num + 1];\r\n                if (newNode.linkList[0]) {\r\n                    newNode.linkList[0].pNode = newNode;\r\n                }\r\n                node.linkList[node.num + 1] = null;\r\n            }\r\n            if (!node.pNode) { //上溢到了根节点\r\n                this.root = new Node(this.max);\r\n                this.root.dataList[0] = value;\r\n                this.root.linkList[0] = node;\r\n                this.root.linkList[1] = newNode;\r\n                this.root.num = 1;\r\n                node.pNode = this.root;\r\n                newNode.pNode = this.root;\r\n                break;\r\n            }\r\n            node = node.pNode;\r\n        }\r\n        return result;\r\n\r\n        // 在i位置插入数据\r\n        function _insert(dataList, linkList, i) {\r\n            for (let j = node.num; j >= i + 1; j--) { //后移元素\r\n                dataList[j] = dataList[j - 1];\r\n                linkList[j + 1] = linkList[j];\r\n            }\r\n            dataList[i] = value;\r\n            linkList[i + 1] = link;\r\n            if (link) {\r\n                link.pNode = node;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 删除\r\n     * @param {Any} value \r\n     */\r\n    delete(value) {\r\n        let that = this;\r\n        let node = this._search(value);\r\n        let result = null;\r\n        let half = Math.floor(this.max / 2) || 1;\r\n        if (node) {\r\n            let dataList = node.dataList;\r\n            let index = this.findIndex(node, value);\r\n            result = dataList[index];\r\n            for (let i = index; i < node.num; i++) { //前移元素\r\n                dataList[i] = dataList[i + 1];\r\n            }\r\n            node.num--;\r\n            this.size--;\r\n            this.arrayCache = null;\r\n            if (!this.size) {\r\n                this.root = null;\r\n                return result;\r\n            }\r\n        }\r\n        while (node && node.num < half && node.pNode) {\r\n            let pNode = node.pNode;\r\n            let pIndex = pNode.linkList.indexOf(node);\r\n            let leftNode = pNode.linkList[pIndex - 1];\r\n            let rightNode = pNode.linkList[pIndex + 1];\r\n            let isPnode = node.linkList[0];\r\n            if (leftNode && leftNode.num > half) { //从左节点借\r\n                _moveRight(node, 1);\r\n                if (isPnode) {\r\n                    node.dataList[0] = pNode.dataList[pIndex - 1];\r\n                    node.linkList[0] = leftNode.linkList[leftNode.num];\r\n                    pNode.dataList[pIndex - 1] = leftNode.dataList[leftNode.num - 1];\r\n                } else {\r\n                    node.dataList[0] = leftNode.dataList[leftNode.num - 1];\r\n                    pNode.dataList[pIndex - 1] = node.dataList[0];\r\n                }\r\n                if (node.linkList[0]) {\r\n                    node.linkList[0].pNode = node;\r\n                }\r\n                pNode.dataList[pIndex - 1] = leftNode.dataList[leftNode.num - 1];\r\n                leftNode.dataList[leftNode.num - 1] = null;\r\n                leftNode.linkList[leftNode.num] = null;\r\n                leftNode.num--;\r\n                node.num++;\r\n            } else if (rightNode && rightNode.num > half) { //从右节点借\r\n                if (isPnode) {\r\n                    node.dataList[node.num] = pNode.dataList[pIndex];\r\n                    node.linkList[node.num + 1] = rightNode.linkList[0];\r\n                    pNode.dataList[pIndex] = rightNode.dataList[0];\r\n                } else {\r\n                    node.dataList[node.num] = rightNode.dataList[0];\r\n                    pNode.dataList[pIndex] = rightNode.dataList[1];\r\n                }\r\n                if (node.linkList[node.num + 1]) {\r\n                    node.linkList[node.num + 1].pNode = node;\r\n                }\r\n                _moveLeft(rightNode, 1);\r\n                rightNode.num--;\r\n                node.num++;\r\n            } else if (rightNode) { //向右合并\r\n                _join(node.pNode, pIndex, node, rightNode);\r\n            } else if (leftNode) { //向左合并\r\n                _join(node.pNode, pIndex - 1, leftNode, node);\r\n            }\r\n        }\r\n        return result;\r\n\r\n        function _join(pNode, pIndex, leftNode, rightNode) {\r\n            let isPnode = leftNode.linkList[0] ? 1 : 0;\r\n            // 右移右节点\r\n            _moveRight(rightNode, leftNode.num + isPnode);\r\n            //复制左节点到右节点\r\n            for (let i = 0; i < leftNode.num; i++) {\r\n                rightNode.dataList[i] = leftNode.dataList[i];\r\n                rightNode.linkList[i + 1] = leftNode.linkList[i + 1];\r\n                if (rightNode.linkList[i + 1]) {\r\n                    rightNode.linkList[i + 1].pNode = rightNode;\r\n                }\r\n            }\r\n            rightNode.linkList[0] = leftNode.linkList[0];\r\n            if (rightNode.linkList[0]) {\r\n                rightNode.linkList[0].pNode = rightNode;\r\n            }\r\n            if (isPnode) { //当前节点非叶子节点，父节点下移\r\n                rightNode.dataList[leftNode.num] = pNode.dataList[pIndex];\r\n            }\r\n            _moveLeft(pNode, 1, pIndex); //删除父节点和左域\r\n            rightNode.num += leftNode.num + isPnode;\r\n            pNode.num--;\r\n            if (!isPnode) { //叶子节点更新前后件\r\n                if (that.head === leftNode) { //头结点被删除\r\n                    that.head = rightNode;\r\n                    that.head.prev = null;\r\n                } else {\r\n                    leftNode.prev.next = rightNode;\r\n                    rightNode.prev = leftNode.prev;\r\n                }\r\n            }\r\n            if (!pNode.num) { //已经到了根节点\r\n                that.root = rightNode;\r\n                that.root.pNode = null;\r\n                node = null;\r\n            } else {\r\n                node = pNode;\r\n            }\r\n        }\r\n\r\n        //右移num个节点\r\n        function _moveRight(target, num) {\r\n            for (let i = target.num - 1; i >= 0; i--) {\r\n                target.dataList[num + i] = target.dataList[i];\r\n                target.linkList[num + i + 1] = target.linkList[i + 1];\r\n            }\r\n            target.linkList[num] = target.linkList[0];\r\n        }\r\n\r\n        //左移num个节点\r\n        function _moveLeft(target, num, index) {\r\n            index = index || 0;\r\n            for (let i = index; i < target.num; i++) {\r\n                target.dataList[i] = target.dataList[i + num];\r\n                target.linkList[i] = target.linkList[i + num];\r\n            }\r\n            target.linkList[target.num] = target.linkList[target.num + num];\r\n        }\r\n    }\r\n    /**\r\n     * 查找\r\n     * @param {Any} value \r\n     * @param {Function} compare 自定义查找比较器 \r\n     * @param {Boolean} insert 是否查找查找最近的节点 \r\n     */\r\n    search(value, compare, insert) {\r\n        let result = this._search(value, insert, compare);\r\n        if (result) {\r\n            result = this.iterator(result, value, compare);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {Node} node \r\n     * @param {Any} value \r\n     */\r\n    findIndex(node, value) {\r\n        for (let i = 0; i < node.num; i++) {\r\n            if (this.compare(value, node.dataList[i]) === 0) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * 把搜索结果封装成迭代器\r\n     * @param {Node} result \r\n     * @param {Any} value \r\n     */\r\n    iterator(result, value, compare) {\r\n        let index = result.num;\r\n        let orginIndex = result.num;\r\n        let originResult = result.num;\r\n        compare = compare || this.compare;\r\n        for (let i = 0; i < result.num; i++) {\r\n            let item = result.dataList[i];\r\n            let res = compare(value, item);\r\n            if(res <= 0) { //确保next一定大于等于当前值value\r\n                orginIndex = i;\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            next: _next,\r\n            prev: _prev,\r\n            reset: function () {\r\n                index = orginIndex;\r\n                result = originResult;\r\n            }\r\n        }\r\n\r\n        function _next() {\r\n            if (index < result.num) {\r\n                return result.dataList[index++];\r\n            } else if (result.next) {\r\n                result = result.next;\r\n                index = 0;\r\n                return result.dataList[index];\r\n            }\r\n            return null;\r\n        }\r\n\r\n        function _prev() {\r\n            index--;\r\n            if (index >= 0) {\r\n                return result.dataList[index];\r\n            } else if (result.prev) {\r\n                result = result.prev;\r\n                index = result.num - 1;\r\n                return result.dataList[index];\r\n            } else {\r\n                index++;\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n    forEach(cb) {\r\n        let arr = this.toArray();\r\n        for (let i = 0; i < arr.length; i++) {\r\n            cb(arr[i], i);\r\n        }\r\n    }\r\n    toArray() {\r\n        if (this.arrayCache) {\r\n            return this.arrayCache;\r\n        }\r\n        let results = [];\r\n        let node = this.head;\r\n        while (node) {\r\n            let dataList = node.dataList;\r\n            for (let index = 0; index < node.num; index++) {\r\n                results.push(dataList[index]);\r\n            }\r\n            node = node.next;\r\n        }\r\n        this.arrayCache = results;\r\n        return results;\r\n    }\r\n    get(index) {\r\n        let node = this.head;\r\n        let count = -1;\r\n        while (node) {\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                count++;\r\n                if (count == index) {\r\n                    return dataList[i];\r\n                }\r\n            }\r\n            node = node.next;\r\n        }\r\n        return null;\r\n    }\r\n    empty() {\r\n        this.root = null;\r\n        this.head = null;\r\n        this.size = 0;\r\n        this.arrayCache = null;\r\n    }\r\n    _search(value, isInsert, compare) {\r\n        let node = this.root;\r\n        compare = compare || this.compare;\r\n        while (node) {\r\n            let linkList = node.linkList;\r\n            let dataList = node.dataList;\r\n            for (let i = 0; i < node.num; i++) {\r\n                let res = compare(value, dataList[i]);\r\n                if (res === 0) {\r\n                    if (linkList[i + 1]) { //右侧子节点存放了父节点\r\n                        node = linkList[i + 1];\r\n                        break;\r\n                    } else {\r\n                        return node;\r\n                    }\r\n                } else if (res > 0) {\r\n                    if (!dataList[i + 1] || compare(value, dataList[i + 1]) < 0) { //目标在右侧子树中\r\n                        if (linkList[i + 1]) {\r\n                            node = linkList[i + 1];\r\n                            break;\r\n                        } else {\r\n                            return isInsert ? node : null;\r\n                        }\r\n                    }\r\n                } else { //目标在左侧子树中\r\n                    if (linkList[i]) {\r\n                        node = linkList[i];\r\n                        break;\r\n                    } else {\r\n                        return isInsert ? node : null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Btree;","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 14:42:01\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst comparator = function (a, b) {\r\n    return a.start.line - b.start.line;\r\n};\r\n\r\nconst singleTag = ['br', 'hr', 'area', 'base', 'img', 'input', 'link', 'meta', 'basefont', 'param', 'col', 'frame', 'embed', 'keygen', 'source'];\r\nconst singleTagMap = {};\r\nsingleTag.forEach((tag) => {\r\n    singleTagMap[tag] = true;\r\n});\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.folds = new Btree(comparator);\r\n        this.editorFunObj = {};\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this.editorFunObj, editor, ['unFold']);\r\n        Util.defineProperties(this, editor, ['selecter']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    onInsertContentAfter(preCursorPos, cursorPos) {\r\n        let folds = this.folds.toArray();\r\n        let afterIndex = Infinity;\r\n        // 历史记录中操作光标在折叠区，需要先展开\r\n        for (let i = 0; i < folds.length; i++) {\r\n            let fold = folds[i];\r\n            if (fold.start.line < preCursorPos.line) {\r\n                if (fold.end.line > preCursorPos.line) {\r\n                    this.editorFunObj.unFold(fold.start.line);\r\n                }\r\n            } else {\r\n                afterIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (cursorPos.line > preCursorPos.line) {\r\n            if (folds[afterIndex] && folds[afterIndex].start.line === preCursorPos.line) {\r\n                this.editorFunObj.unFold(preCursorPos.line);\r\n                afterIndex++;\r\n            }\r\n            // 更新后面的行号\r\n            for (let i = afterIndex; i < folds.length; i++) {\r\n                folds[i].start.line += cursorPos.line - preCursorPos.line;\r\n                folds[i].end.line += cursorPos.line - preCursorPos.line;\r\n            }\r\n        }\r\n    }\r\n    onDeleteContentAfter(preCursorPos, cursorPos) {\r\n        let folds = this.folds.toArray();\r\n        let afterIndex = Infinity;\r\n        for (let i = 0; i < folds.length; i++) {\r\n            let fold = folds[i];\r\n            let starLine = fold.start.line;\r\n            let endLine = fold.end.line;\r\n            if (starLine <= preCursorPos.line) {\r\n                if (starLine < preCursorPos.line) {\r\n                    if ((starLine >= cursorPos.line && starLine < preCursorPos.line) || (starLine < cursorPos.line && endLine > cursorPos.line)) {\r\n                        this.editorFunObj.unFold(starLine);\r\n                    }\r\n                } else {\r\n                    if (preCursorPos.line > cursorPos.line) {\r\n                        this.editorFunObj.unFold(starLine);\r\n                    }\r\n                }\r\n            } else {\r\n                afterIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (preCursorPos.line > cursorPos.line) {\r\n            // 更新后面的行号\r\n            for (let i = afterIndex; i < folds.length; i++) {\r\n                folds[i].start.line += cursorPos.line - preCursorPos.line;\r\n                folds[i].end.line += cursorPos.line - preCursorPos.line;\r\n            }\r\n        }\r\n    }\r\n    // 折叠行\r\n    foldLine(line) {\r\n        let resultFold = this.getRangeFold(line);\r\n        if (resultFold) {\r\n            // 避免交叉折叠\r\n            for (let line = resultFold.start.line + 1; line < resultFold.end.line; line++) {\r\n                let fold = this.getFoldByLine(line);\r\n                if (fold) {\r\n                    if (fold.end.line > resultFold.end.line) {\r\n                        this.editorFunObj.unFold(line);\r\n                    }\r\n                }\r\n            }\r\n            this.folds.insert(resultFold);\r\n        }\r\n        return resultFold;\r\n    }\r\n    // 展开折叠行\r\n    unFold(line) {\r\n        let fold = this.getFoldByLine(line);\r\n        fold && this.folds.delete(fold);\r\n        return fold;\r\n    }\r\n    getFoldByLine(line) {\r\n        let it = this.folds.search(line, (a, b) => {\r\n            return a - b.start.line;\r\n        });\r\n        return it && it.next();\r\n    }\r\n    getLineInFold(line) {\r\n        let it = this.folds.search(\r\n            line,\r\n            (a, b) => {\r\n                return a - b.start.line;\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let fold = it.prev();\r\n            if (fold && fold.start.line < line && fold.end.line > line) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 获取折叠范围\r\n     * @param {Number} line 行号\r\n     * @param {Boolean} foldIconCheck 检测是否显示折叠图标\r\n     */\r\n    getRangeFold(line, foldIconCheck) {\r\n        let stack = [];\r\n        let startLine = line;\r\n        let lineObj = this.htmls[startLine - 1];\r\n        let startFold = null;\r\n        if (lineObj.folds && lineObj.folds.length) {\r\n            for (let i = 0; i < lineObj.folds.length; i++) {\r\n                let fold = lineObj.folds[i];\r\n                if (fold.side <= 0) {\r\n                    stack.push(fold);\r\n                } else if (fold.side > 0) {\r\n                    for (let i = stack.length - 1; i >= 0; i--) {\r\n                        if (stack[i].side + fold.side === 0) {\r\n                            stack.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (stack.length) {\r\n            let foldStartText = '';\r\n            startFold = stack.peek();\r\n            startFold = Object.assign({ line: startLine }, startFold);\r\n            foldStartText = lineObj.text.slice(startFold.startIndex, startFold.endIndex);\r\n            // 单标签没有折叠\r\n            if (singleTagMap[foldStartText]) {\r\n                return false;\r\n            }\r\n            // 单行注释\r\n            if (startFold.type === Util.constData.LINE_COMMENT) {\r\n                let endLine = startLine;\r\n                let fold = null;\r\n                line = startLine + 1;\r\n                while (line <= this.htmls.length) {\r\n                    let lineObj = this.htmls[line - 1];\r\n                    let text = lineObj.text.trimLeft();\r\n                    let startIndex = lineObj.text.length - text.length;\r\n                    let _fold = lineObj.folds && lineObj.folds[0];\r\n                    if (_fold && _fold.type === Util.constData.LINE_COMMENT && _fold.startIndex === startIndex) {\r\n                        endLine = line;\r\n                        fold = _fold;\r\n                        if (foldIconCheck && endLine - startLine > 1) {\r\n                            return true;\r\n                        }\r\n                        line++;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (foldIconCheck) {\r\n                    return endLine - startLine > 1;\r\n                } else {\r\n                    return {\r\n                        start: startFold,\r\n                        end: Object.assign({ line: endLine }, fold),\r\n                    };\r\n                }\r\n            }\r\n            return this.getRangeFoldByStartFold(startFold, foldIconCheck);\r\n        }\r\n        return false;\r\n    }\r\n    getRangeFoldByStartFold(startFold, foldIconCheck) {\r\n        let line = startFold.line;\r\n        let stack = [];\r\n        let resultFold = null;\r\n        while (line <= this.htmls.length && (!foldIconCheck || line - startFold.line <= 1)) {\r\n            let lineObj = this.htmls[line - 1];\r\n            if (lineObj.folds && lineObj.folds.length) {\r\n                for (let i = 0; i < lineObj.folds.length; i++) {\r\n                    let fold = lineObj.folds[i];\r\n                    if (line === startFold.line && fold.startIndex <= startFold.startIndex) {\r\n                        continue;\r\n                    }\r\n                    if (fold.side === startFold.side) {\r\n                        stack.push(fold);\r\n                    } else if (startFold.side + fold.side === 0) {\r\n                        if (stack.length === 0) {\r\n                            resultFold = {\r\n                                start: startFold,\r\n                                end: Object.assign({ line: line }, fold),\r\n                            };\r\n                            return foldIconCheck ? line - startFold.line > 1 : resultFold;\r\n                        } else {\r\n                            stack.pop();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            line++;\r\n        }\r\n        return foldIconCheck ? line - startFold.line > 1 : resultFold;\r\n    }\r\n    /**\r\n     * 获取当前光标所处的范围\r\n     * @param {Object} cursorPos\r\n     */\r\n    getBracketMatch(cursorPos) {\r\n        let line = cursorPos.line;\r\n        let startFold = null;\r\n        let stack = [];\r\n        outerLoop: while (line >= 1 && !startFold) {\r\n            let folds = this.htmls[line - 1].folds || [];\r\n            for (let i = folds.length - 1; i >= 0; i--) {\r\n                let fold = folds[i];\r\n                // 跳过标签名\r\n                if(fold.type === Util.constData.TAG) {\r\n                    continue;\r\n                } else if (fold.side > 0 && (line < cursorPos.line || fold.endIndex < cursorPos.column)) {\r\n                    stack.push(fold);\r\n                } else if (fold.side < 0 && (line < cursorPos.line || fold.startIndex <= cursorPos.column)) {\r\n                    let exsitEnd = false;\r\n                    if (stack.length) {\r\n                        for (let i = stack.length - 1; i >= 0; i--) {\r\n                            if (stack[i].side + fold.side === 0) {\r\n                                stack.splice(i, 1);\r\n                                exsitEnd = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!exsitEnd) {\r\n                        startFold = Object.assign({ line: line }, fold);\r\n                        break outerLoop;\r\n                    }\r\n                }\r\n            }\r\n            line--;\r\n        }\r\n        if (startFold) {\r\n            return this.getRangeFoldByStartFold(startFold);\r\n        }\r\n    }\r\n    // 根据相对行号获取真实行号(折叠后行号会改变)\r\n    getRealLine(line) {\r\n        let i = 0;\r\n        let lineCount = 1;\r\n        let realLine = 1;\r\n        let folds = this.folds.toArray();\r\n        while (i < folds.length && lineCount < line) {\r\n            let fold = folds[i];\r\n            if (lineCount + fold.start.line - realLine < line) {\r\n                lineCount += fold.start.line + 1 - realLine;\r\n                realLine = fold.end.line;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < folds.length && folds[i].end.line <= fold.end.line) {\r\n                //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        realLine += line - lineCount;\r\n        return realLine;\r\n    }\r\n    // 根据真实行号获取相对行号\r\n    getRelativeLine(line) {\r\n        let relLine = line;\r\n        let i = 0;\r\n        let folds = this.folds.toArray();\r\n        while (i < folds.length) {\r\n            let fold = folds[i];\r\n            if (line >= fold.end.line) {\r\n                relLine -= fold.end.line - fold.start.line - 1;\r\n            } else {\r\n                break;\r\n            }\r\n            i++;\r\n            while (i < folds.length && folds[i].end.line <= fold.end.line) {\r\n                //多级折叠\r\n                i++;\r\n            }\r\n        }\r\n        return relLine;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-12 09:52:06\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editor, context, selecter) {\r\n        this.selecter = selecter;\r\n        this.initProperties(editor, context);\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.wholeWordPattern = new RegExp(`^(${this.wordPattern.source})$`);\r\n        this.wordPattern = new RegExp(this.wordPattern.source, 'g');\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'fSearcher', 'searcher', 'nowCursorPos', 'cursor', '$nextTick', '$refs']);\r\n        Util.defineProperties(this, context, ['htmls', 'getRangeText', 'getAllText']);\r\n    }\r\n    search(searchObj) {\r\n        let resultObj = null;\r\n        let now = 0;\r\n        let count = 0;\r\n        let hasCache = this.hasCache();\r\n        let config = null;\r\n        searchObj = searchObj || {};\r\n        if (hasCache) {\r\n            resultObj = this.getFromCache(searchObj.direct, searchObj.increase);\r\n        } else {\r\n            config = (searchObj && searchObj.config) || this.getSearchConfig();\r\n            if (!config || !config.text) {\r\n                return { now: 0, count: 0 };\r\n            }\r\n            resultObj = this._search(config);\r\n        }\r\n        if (resultObj && resultObj.result) {\r\n            if (this.searcher === this || searchObj.increase) {\r\n                if (hasCache) {\r\n                    this.cursor.addCursorPos(resultObj.result.end);\r\n                    this.selecter.addActive(resultObj.result.end);\r\n                } else {\r\n                    //当前光标已处于选中区域边界，则不处理（历史记录后退时可能存在多个选中区域的情况）\r\n                    if (this.selecter.activedRanges.size === 0) {\r\n                        this.cursor.setCursorPos(resultObj.result.end);\r\n                    } else {\r\n                        this.initIndexs();\r\n                    }\r\n                    this.selecter.addRange(resultObj.results);\r\n                }\r\n            } else {\r\n                if (hasCache) {\r\n                    this.selecter.setActive(resultObj.result.end);\r\n                    this.cursor.setCursorPos(resultObj.result.end);\r\n                    this.searcher.clearSearch(); //搜索框确认搜索后，删除按键搜索\r\n                } else {\r\n                    this.selecter.addRange(resultObj.results);\r\n                    this.clearActive();\r\n                }\r\n            }\r\n            now = resultObj.now;\r\n            count = resultObj.results.length;\r\n        }\r\n\r\n        return {\r\n            now: now,\r\n            count: count,\r\n        };\r\n    }\r\n    _search(config) {\r\n        let that = this;\r\n        let reg = null;\r\n        let exec = null;\r\n        let start = null;\r\n        let end = null;\r\n        let result = null;\r\n        let results = [];\r\n        let indexs = {};\r\n        let rangePos = null;\r\n        let line = 1;\r\n        let column = 0;\r\n        let index = 0;\r\n        let text = this.getAllText();\r\n        let lines = config.text.split(/\\n/);\r\n        let source = config.text.replace(/\\\\|\\.|\\*|\\+|\\-|\\?|\\(|\\)|\\[|\\]|\\{|\\}|\\^|\\$|\\~|\\!|\\&|\\|/g, '\\\\$&');\r\n        //完整匹配\r\n        if (this.wholeWordPattern.test(config.text) && config.wholeWord) {\r\n            source = '(?:\\\\b|(?<=[^0-9a-zA-Z]))' + source + '(?:\\\\b|(?=[^0-9a-zA-Z]))';\r\n        }\r\n        reg = new RegExp('[^\\n]*?(' + source + ')|[^\\n]*?\\n', config.ignoreCase ? 'img' : 'mg');\r\n        config = config || {};\r\n        while ((exec = reg.exec(text))) {\r\n            if (!exec[1]) {\r\n                line++;\r\n                column = 0;\r\n            } else {\r\n                start = {\r\n                    line: line,\r\n                    column: column + exec[0].length - exec[1].length,\r\n                };\r\n                end = {\r\n                    line: line + lines.length - 1,\r\n                    column: lines.length > 1 ? lines.peek().length : column + exec[0].length,\r\n                };\r\n                line = end.line;\r\n                column = end.column;\r\n                rangePos = {\r\n                    start: start,\r\n                    end: end,\r\n                };\r\n                results.push(rangePos);\r\n                if (!result && Util.comparePos(end, that.nowCursorPos) >= 0) {\r\n                    result = rangePos;\r\n                    index = results.length - 1;\r\n                    indexs[results.length - 1] = true;\r\n                }\r\n            }\r\n        }\r\n        if (!results.length) {\r\n            return null;\r\n        }\r\n        if (!result && results.length) {\r\n            index = 0;\r\n            result = results[0];\r\n        }\r\n        this.cacheData = {\r\n            config: config,\r\n            results: results,\r\n            indexs: indexs,\r\n            index: index,\r\n        };\r\n        return {\r\n            now: this.cacheData.index + 1,\r\n            results: results,\r\n            result: result,\r\n        };\r\n    }\r\n    initIndexs() {\r\n        let ranges = this.selecter.activedRanges.toArray();\r\n        this.cacheData.indexs = {};\r\n        ranges.forEach((range) => {\r\n            for (let i = 0; i < this.cacheData.results.length; i++) {\r\n                let item = this.cacheData.results[i];\r\n                if (Util.comparePos(range.start, item.start) === 0) {\r\n                    this.cacheData.index = i;\r\n                    this.cacheData.indexs[i] = true;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // 重新搜索\r\n    refreshSearch(config) {\r\n        if (!this.hasCache() && !config) {\r\n            return;\r\n        }\r\n        return new Promise((resolve) => {\r\n            let refreshSearchId = this.refreshSearch.id + 1 || 1;\r\n            this.refreshSearch.id = refreshSearchId;\r\n            this.$nextTick(() => {\r\n                if (this.refreshSearch.id !== refreshSearchId) {\r\n                    return;\r\n                }\r\n                if (this.hasCache() || config) {\r\n                    config = config || this.cacheData.config;\r\n                    this.clearSearch();\r\n                    this.search({\r\n                        config: config,\r\n                    });\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    hasCache() {\r\n        return !!this.cacheData;\r\n    }\r\n    /**\r\n     * 清除搜索\r\n     * @param {Boolean} retainActive 是否保留活动的选中区域\r\n     */\r\n    clearSearch(retainActive) {\r\n        if (retainActive) {\r\n            this.selecter.clearInactiveRange();\r\n        } else {\r\n            this.selecter.clearRange();\r\n        }\r\n        this.cacheData = null;\r\n    }\r\n    clearActive() {\r\n        if (this.cacheData) {\r\n            this.cacheData.index = -1;\r\n            this.cacheData.indexs = {};\r\n            this.selecter.clearActive();\r\n        }\r\n    }\r\n    setPrevActive(cursorPos) {\r\n        let results = this.cacheData.results;\r\n        let index = this.cacheData.index;\r\n        this.cacheData.index = results.length - 1;\r\n        for (let i = results.length - 1; i >= 0; i--) {\r\n            let item = results[i];\r\n            let res = Util.comparePos(item.end, cursorPos);\r\n            if (res < 0 || (index === -1 && res === 0)) {\r\n                this.cacheData.index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    setNextActive(cursorPos) {\r\n        let results = this.cacheData.results;\r\n        let index = this.cacheData.index;\r\n        this.cacheData.index = 0;\r\n        for (let i = 0; i < results.length; i++) {\r\n            let item = results[i];\r\n            let res = Util.comparePos(item.end, cursorPos);\r\n            if (res > 0 || (index === -1 && res === 0)) {\r\n                this.cacheData.index = i;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    removeNow() {\r\n        this.cacheData.results.splice(this.cacheData.index, 1);\r\n        this.cacheData.index--;\r\n    }\r\n    clone(cacheData) {\r\n        this.cacheData = cacheData;\r\n        if (cacheData) {\r\n            this.selecter.addRange(cacheData.results);\r\n        }\r\n    }\r\n    getCacheData() {\r\n        return this.cacheData;\r\n    }\r\n    getNowRange() {\r\n        return this.cacheData.results[this.cacheData.index];\r\n    }\r\n    getFromCache(direct, increase) {\r\n        let results = this.cacheData.results;\r\n        let result = null;\r\n        let index = 0;\r\n        if (this.fSearcher === this && !increase) {\r\n            // 搜索框移动活动区域\r\n            if (direct === 'up') {\r\n                this.setPrevActive(this.nowCursorPos);\r\n            } else {\r\n                this.setNextActive(this.nowCursorPos);\r\n            }\r\n            index = this.cacheData.index;\r\n            result = this.cacheData.results[index];\r\n            this.cacheData.indexs = { i: true };\r\n        } else {\r\n            //CTRL+D移动活动区域\r\n            let indexs = this.cacheData.indexs;\r\n            let delta = 0;\r\n            if (direct === 'up') {\r\n                delta = -1;\r\n            } else {\r\n                delta = 1;\r\n            }\r\n            index = this.cacheData.index + delta;\r\n            if (index == results.length) {\r\n                index = 0;\r\n            } else if (index < 0) {\r\n                index = results.length - 1;\r\n            }\r\n            // 已经没有非活动区域\r\n            if (!indexs[index]) {\r\n                result = results[index];\r\n                indexs[index] = true;\r\n                this.cacheData.index = index;\r\n            } else {\r\n                index = this.cacheData.index;\r\n            }\r\n        }\r\n\r\n        return {\r\n            now: index + 1,\r\n            result: result,\r\n            results: results,\r\n        };\r\n    }\r\n    getConfig() {\r\n        if (!this.cacheData) {\r\n            return;\r\n        }\r\n        return Object.assign({}, this.cacheData.config);\r\n    }\r\n    // 获取待搜索的文本\r\n    getSearchConfig() {\r\n        let result = null;\r\n        let wholeWord = false;\r\n        let searchText = '';\r\n        let range = this.searcher.selecter.getRangeByCursorPos(this.nowCursorPos);\r\n        if (this.searcher === this && this.selecter.ranges.size > 0) {\r\n            return null;\r\n        }\r\n        if (range) {\r\n            searchText = this.getRangeText(range.start, range.end);\r\n        } else {\r\n            searchText = this.getNowWord().text;\r\n            wholeWord = true;\r\n        }\r\n        if (searchText) {\r\n            result = {\r\n                text: searchText,\r\n                wholeWord: wholeWord,\r\n                ignoreCase: wholeWord,\r\n            };\r\n        }\r\n        return result;\r\n    }\r\n    getNowWord() {\r\n        let text = this.htmls[this.nowCursorPos.line - 1].text;\r\n        let str = '';\r\n        let index = this.nowCursorPos.column;\r\n        let startColumn = index;\r\n        let endColumn = index;\r\n        let res = null;\r\n        while ((res = this.wordPattern.exec(text))) {\r\n            if (res.index <= index && res.index + res[0].length >= index) {\r\n                startColumn = res.index;\r\n                endColumn = res.index + res[0].length;\r\n                str = res[0];\r\n                break;\r\n            } else if (res.index > index) {\r\n                break;\r\n            }\r\n        }\r\n        this.wordPattern.lastIndex = 0;\r\n\r\n        return {\r\n            text: str,\r\n            range: {\r\n                start: {\r\n                    line: this.nowCursorPos.line,\r\n                    column: startColumn,\r\n                },\r\n                end: {\r\n                    line: this.nowCursorPos.line,\r\n                    column: endColumn,\r\n                },\r\n            },\r\n        };\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-13 10:41:16\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst comparator = function (a, b) {\r\n    let res = Util.comparePos(a.start, b.start);\r\n    if (res === 0) {\r\n        return Util.comparePos(a.end, b.end);\r\n    }\r\n    return res;\r\n};\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.ranges = new Btree(comparator);\r\n        this.activedRanges = new Btree(comparator);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['cursor', 'renderSelectedBg', 'clearSelectionToken']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n        this.setContextData = (prop, value) => {\r\n            context.setData(prop, value);\r\n        };\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        };\r\n    }\r\n    getRange(range) {\r\n        let it = this.ranges.search(range);\r\n        return it && it.next();\r\n    }\r\n    getRangeByLine(line) {\r\n        let results = [];\r\n        let it = this.ranges.search(\r\n            { line: line, column: 0 },\r\n            (value, item) => {\r\n                return value - item.start.line;\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let value = it.next();\r\n            while (value) {\r\n                if (value.start === line || value.end.line === line) {\r\n                    results.push(value);\r\n                } else if (value.start.line > line) {\r\n                    break;\r\n                }\r\n                value = it.next();\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    // 检测光标是否在选中区域范围的边界\r\n    getRangeByCursorPos(cursorPos) {\r\n        let result = this.ranges.search(cursorPos, (value, item) => {\r\n            if (Util.comparePos(value, item.start) === 0 || Util.comparePos(value, item.end) === 0) {\r\n                return 0;\r\n            }\r\n            return Util.comparePos(value, item.start);\r\n        });\r\n        return result && result.next();\r\n    }\r\n    // 检查光标是否在选中范围内\r\n    getRangeWithCursorPos(cursorPos) {\r\n        let it = this.ranges.search(\r\n            cursorPos,\r\n            (value, item) => {\r\n                return Util.comparePos(value, item.start);\r\n            },\r\n            true\r\n        );\r\n        if (it) {\r\n            let value = it.prev();\r\n            if (value && Util.comparePos(value.end, cursorPos) >= 0) {\r\n                return value;\r\n            }\r\n            it.reset();\r\n            value = it.next();\r\n            if (value && Util.comparePos(value.start, cursorPos) == 0) {\r\n                return value;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    select(direct, wholeWord) {\r\n        this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n            let range = this.getRangeByCursorPos(cursorPos);\r\n            if (range) {\r\n                let start = range.start;\r\n                let end = range.end;\r\n                this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                if (direct === 'left') {\r\n                    if (Util.comparePos(cursorPos, range.start) < 0) {\r\n                        start = cursorPos;\r\n                    } else {\r\n                        end = cursorPos;\r\n                    }\r\n                } else {\r\n                    if (Util.comparePos(cursorPos, range.end) > 0) {\r\n                        end = cursorPos;\r\n                    } else {\r\n                        start = cursorPos;\r\n                    }\r\n                }\r\n                this.updateRange(range, {\r\n                    start: start,\r\n                    end: end,\r\n                });\r\n            } else {\r\n                let start = Object.assign({}, cursorPos);\r\n                let end = this.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                range = this.createRange(start, end);\r\n                if (range) {\r\n                    this.addRange({\r\n                        start: start,\r\n                        end: end,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n    }\r\n    selectAll() {\r\n        let end = {\r\n            line: this.htmls.length,\r\n            column: this.htmls.peek().text.length,\r\n        };\r\n        this.setEditorData('forceCursorView', false);\r\n        this.cursor.setCursorPos(end);\r\n        this.setRange(\r\n            {\r\n                line: 1,\r\n                column: 0,\r\n            },\r\n            end\r\n        );\r\n        this.renderSelectedBg();\r\n    }\r\n    selectAllOccurence() {\r\n        this.cursor.clearCursorPos();\r\n        this.ranges.forEach((item) => {\r\n            this.cursor.addCursorPos(item.end);\r\n            if (!item.active) {\r\n                item.active = true;\r\n                this.activedRanges.insert(item);\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n    }\r\n    addActive(cursorPos) {\r\n        let range = this.getRangeByCursorPos(cursorPos);\r\n        if (range && !range.active) {\r\n            range.active = true;\r\n            this.activedRanges.insert(range);\r\n        }\r\n        this.renderSelectedBg();\r\n    }\r\n    // 添加选中区域\r\n    addRange(ranges) {\r\n        let results = [];\r\n        let list = ranges instanceof Array ? ranges : [ranges];\r\n        list.forEach((range) => {\r\n            let start = range.start;\r\n            let end = range.end;\r\n            let same = Util.comparePos(start, end);\r\n            if (same > 0) {\r\n                let tmp = start;\r\n                start = end;\r\n                end = tmp;\r\n            } else if (!same) {\r\n                return;\r\n            }\r\n            let active = this.cursor.getCursorsByLineColumn(start.line, start.column) || this.cursor.getCursorsByLineColumn(end.line, end.column);\r\n            range = {\r\n                start: {\r\n                    line: start.line,\r\n                    column: start.column,\r\n                },\r\n                end: {\r\n                    line: end.line,\r\n                    column: end.column,\r\n                },\r\n                active: !!active,\r\n            };\r\n            let _range = this.getRange(range);\r\n            if(_range) {\r\n                if(!_range.active) {\r\n                    _range.active = active;\r\n                    this.activedRanges.insert(_range);\r\n                }\r\n                results.push(_range);\r\n            } else {\r\n                this.ranges.insert(range);\r\n                active && this.activedRanges.insert(range);\r\n                results.push(range);\r\n                this.filterRange(range);\r\n            }\r\n        });\r\n        this.renderSelectedBg();\r\n        return ranges instanceof Array ? results : results[0];\r\n    }\r\n    removeRange(range) {\r\n        range = this.ranges.delete(range);\r\n        if (range) {\r\n            if (range.active) {\r\n                this.activedRanges.delete(range);\r\n            }\r\n            this.cursor.removeCursor(range.start);\r\n            this.cursor.removeCursor(range.end);\r\n            this.renderSelectedBg();\r\n        }\r\n    }\r\n    /**\r\n     * 设置选中区域\r\n     * @param {Object} start\r\n     * @param {Object} end\r\n     */\r\n    setRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return;\r\n        }\r\n        let active = this.cursor.getCursorsByLineColumn(start.line, start.column) || this.cursor.getCursorsByLineColumn(end.line, end.column);\r\n        let range = {\r\n            start: Object.assign({}, start),\r\n            end: Object.assign({}, end),\r\n            active: !!active,\r\n        };\r\n        this.clearRange();\r\n        this.ranges.insert(range);\r\n        active && this.activedRanges.insert(range);\r\n        this.renderSelectedBg();\r\n        return range;\r\n    }\r\n    setActive(cursorPos) {\r\n        let range = this.getRangeByCursorPos(cursorPos);\r\n        this.activedRanges.forEach((item) => {\r\n            item.active = false;\r\n        });\r\n        this.activedRanges.empty();\r\n        if (range) {\r\n            range.active = true;\r\n            this.activedRanges.insert(range);\r\n        }\r\n        this.renderSelectedBg();\r\n    }\r\n    updateRange(target, range) {\r\n        let start = range.start;\r\n        let end = range.end;\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        } else if (!same) {\r\n            return false;\r\n        }\r\n        this.ranges.delete(target);\r\n        target.start.line = start.line;\r\n        target.start.column = start.column;\r\n        target.end.line = end.line;\r\n        target.end.column = end.column;\r\n        this.ranges.insert(target);\r\n        this.filterRange(target);\r\n        this.renderSelectedBg();\r\n    }\r\n    filterRange(range) {\r\n        let it = this.ranges.search(range);\r\n        let dels = [];\r\n        let value = it.prev();\r\n        if (value && Util.comparePos(value.end, range.start) > 0) {\r\n            //删除前件\r\n            dels.push(value);\r\n        }\r\n        it.reset();\r\n        it.next();\r\n        value = it.next();\r\n        if (value && Util.comparePos(range.end, value.start) > 0) {\r\n            dels.push(value);\r\n        }\r\n        dels.forEach((item) => {\r\n            this.ranges.delete(item);\r\n            this.activedRanges.delete(item);\r\n            this.cursor.removeCursor(item.start);\r\n            this.cursor.removeCursor(item.end);\r\n        });\r\n    }\r\n    createRange(start, end) {\r\n        let same = Util.comparePos(start, end);\r\n        if (same > 0) {\r\n            let tmp = start;\r\n            start = end;\r\n            end = tmp;\r\n        }\r\n        if (same === 0) {\r\n            return null;\r\n        }\r\n        return {\r\n            start: start,\r\n            end: end,\r\n        };\r\n    }\r\n    // 清除选中背景\r\n    clearRange() {\r\n        this.ranges.empty();\r\n        this.activedRanges.empty();\r\n        this.renderSelectedBg();\r\n    }\r\n    clearActive() {\r\n        this.activedRanges.forEach((item) => {\r\n            item.active = false;\r\n        });\r\n        this.activedRanges.empty();\r\n        this.renderSelectedBg();\r\n    }\r\n    clearInactiveRange() {\r\n        if (!this.activedRanges.size) {\r\n            this.clearRange();\r\n        } else {\r\n            this.ranges.forEach((item) => {\r\n                if (!item.active) {\r\n                    this.ranges.delete(item);\r\n                }\r\n            });\r\n            this.renderSelectedBg();\r\n        }\r\n    }\r\n    clone(range, properties) {\r\n        properties = properties || [];\r\n        let result = {\r\n            start: Object.assign({}, range.start),\r\n            end: Object.assign({}, range.end),\r\n        };\r\n        properties.forEach((key) => {\r\n            result[key] = range[key];\r\n        });\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-14 11:20:31\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Btree from '@/common/btree';\r\n\r\nconst regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    dWord: Util.fullAngleReg,\r\n    space: /\\s/,\r\n};\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n        this.multiCursorPos = new Btree(Util.comparePos);\r\n        this.multiKeyCode = 'ctrl';\r\n        this.wordPattern = Util.getWordPattern(this.language);\r\n        this.rightWrodPattern = new RegExp(`^(${this.wordPattern.source})`);\r\n        this.leftWrodPattern = new RegExp(`(${this.wordPattern.source})$`);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['language', 'nowCursorPos', 'searcher', 'selecter', 'setNowCursorPos', 'renderCursor', 'getColumnByWidth', 'getStrWidth']);\r\n        Util.defineProperties(this, context, ['htmls']);\r\n    }\r\n    // 添加光标\r\n    addCursorPos(cursorPos) {\r\n        let pos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (pos) {\r\n            this.setNowCursorPos(pos);\r\n            return pos;\r\n        }\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column,\r\n        };\r\n        this.multiCursorPos.insert(cursorPos);\r\n        this.setNowCursorPos(cursorPos);\r\n        return cursorPos;\r\n    }\r\n    addCursorAbove() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            if (item.line > 1) {\r\n                let width = item.moveWidth || this.getStrWidth(this.htmls[item.line - 1].text, 0, item.column);\r\n                let column = this.getColumnByWidth(this.htmls[item.line - 2].text, width);\r\n                let cursorPos = this.addCursorPos({\r\n                    line: item.line - 1,\r\n                    column: column,\r\n                });\r\n                cursorPos.moveWidth = width;\r\n                this.setNowCursorPos(cursorPos);\r\n            }\r\n        });\r\n    }\r\n    addCursorBelow() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            if (item.line < this.htmls.length) {\r\n                let width = item.moveWidth || this.getStrWidth(this.htmls[item.line - 1].text, 0, item.column);\r\n                let column = this.getColumnByWidth(this.htmls[item.line].text, width);\r\n                let cursorPos = this.addCursorPos({\r\n                    line: item.line + 1,\r\n                    column: column,\r\n                });\r\n                cursorPos.moveWidth = width;\r\n                this.setNowCursorPos(cursorPos);\r\n            }\r\n        });\r\n    }\r\n    addCursorLineEnds() {\r\n        if (this.selecter.activedRanges.size) {\r\n            this.clearCursorPos();\r\n            this.selecter.activedRanges.forEach((item) => {\r\n                let startLine = item.start.line;\r\n                let endLine = item.end.line;\r\n                while (startLine < endLine) {\r\n                    this.addCursorPos({\r\n                        line: startLine,\r\n                        column: this.htmls[startLine - 1].text.length,\r\n                    });\r\n                    startLine++;\r\n                }\r\n                this.setNowCursorPos(\r\n                    this.addCursorPos({\r\n                        line: endLine,\r\n                        column: this.htmls[endLine - 1].text.length,\r\n                    })\r\n                );\r\n            });\r\n            this.searcher.clearSearch();\r\n        }\r\n    }\r\n    // 设置光标\r\n    setCursorPos(cursorPos) {\r\n        cursorPos = {\r\n            line: cursorPos.line,\r\n            column: cursorPos.column,\r\n        };\r\n        if (this.multiCursorPos.size == 1) {\r\n            let pos = this.multiCursorPos.get(0);\r\n            if (Util.comparePos(pos, cursorPos) === 0) {\r\n                return pos;\r\n            }\r\n        }\r\n        this.multiCursorPos.empty();\r\n        this.multiCursorPos.insert(cursorPos);\r\n        this.setNowCursorPos(cursorPos);\r\n        return cursorPos;\r\n    }\r\n    updateCursorPos(cursorPos, line, column) {\r\n        let pos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (pos === cursorPos) {\r\n            this.multiCursorPos.delete(cursorPos);\r\n        }\r\n        cursorPos.line = line;\r\n        cursorPos.column = column;\r\n        this.multiCursorPos.insert(cursorPos);\r\n        if (cursorPos === this.nowCursorPos) {\r\n            //触发滚动\r\n            this.setNowCursorPos(this.nowCursorPos);\r\n        } else {\r\n            this.renderCursor();\r\n        }\r\n        return cursorPos;\r\n    }\r\n    removeCursor(cursorPos) {\r\n        cursorPos = this.getCursorsByLineColumn(cursorPos.line, cursorPos.column);\r\n        if (cursorPos) {\r\n            cursorPos.del = true;\r\n            this.multiCursorPos.delete(cursorPos);\r\n            if (cursorPos === this.nowCursorPos) {\r\n                this.setNowCursorPos(null);\r\n            }\r\n            this.renderCursor();\r\n        }\r\n    }\r\n    removeCursorInRange(range) {\r\n        let it = this.multiCursorPos.search(range.start, null, true);\r\n        if (it) {\r\n            let value = null;\r\n            let toDels = [];\r\n            while ((value = it.next())) {\r\n                let res = Util.comparePos(value, range.end);\r\n                if (res >= 0) {\r\n                    break;\r\n                }\r\n                if (Util.comparePos(value, range.start) > 0) {\r\n                    toDels.push(value);\r\n                }\r\n            }\r\n            toDels.forEach((item) => {\r\n                item.del = true;\r\n                this.multiCursorPos.delete(item);\r\n            });\r\n            this.renderCursor();\r\n        }\r\n    }\r\n    clearCursorPos() {\r\n        this.multiCursorPos.forEach((item) => {\r\n            item.del = true;\r\n        });\r\n        this.multiCursorPos.empty();\r\n        this.setNowCursorPos(null);\r\n    }\r\n    getCursorsByLine(line) {\r\n        let results = [];\r\n        let value = null;\r\n        let it = this.multiCursorPos.search(\r\n            {\r\n                line: line,\r\n                column: 0,\r\n            },\r\n            null,\r\n            true\r\n        );\r\n        if (it) {\r\n            while ((value = it.next())) {\r\n                if (value.line === line) {\r\n                    results.push(value);\r\n                } else if (value.line > line) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n    getCursorsByLineColumn(line, column) {\r\n        let it = this.multiCursorPos.search({\r\n            line: line,\r\n            column: column,\r\n        });\r\n        return it && it.next();\r\n    }\r\n    // 移动光标\r\n    moveCursor(cursorPos, direct, wholeWord) {\r\n        let text = this.htmls[cursorPos.line - 1].text;\r\n        let line = cursorPos.line;\r\n        let column = cursorPos.column;\r\n        // 去除上下移动光标的初始宽度记录\r\n        if(direct !== 'up' && direct !== 'down') {\r\n            cursorPos.moveWidth = 0;\r\n        }\r\n        if (direct === 'home') {\r\n            column = 0;\r\n        } else if (direct === 'end') {\r\n            column = this.htmls[line - 1].text.length;\r\n        } else if (direct === 'up') {\r\n            if (line > 1) {\r\n                let width = cursorPos.moveWidth || this.getStrWidth(text, 0, column);\r\n                cursorPos.moveWidth = width;\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'down') {\r\n            if (line < this.htmls.length) {\r\n                let width = cursorPos.moveWidth || this.getStrWidth(text, 0, column);\r\n                cursorPos.moveWidth = width;\r\n                line++;\r\n                text = this.htmls[line - 1].text;\r\n                column = this.getColumnByWidth(text, width);\r\n            }\r\n        } else if (direct === 'left') {\r\n            while (column === 0 && line > 1) {\r\n                line--;\r\n                text = this.htmls[line - 1].text;\r\n                column = text.length;\r\n            }\r\n            if (column > 0) {\r\n                if (wholeWord) {\r\n                    //过滤开始的空格\r\n                    while (column && text[column - 1].match(regs.space)) {\r\n                        column--;\r\n                    }\r\n                    if (column > 0) {\r\n                        let res = null;\r\n                        let _column = column;\r\n                        column--;\r\n                        text = text.slice(0, _column);\r\n                        res = this.leftWrodPattern.exec(text);\r\n                        if (res) {\r\n                            column = res.index;\r\n                        }\r\n                    }\r\n                } else if (cursorPos.line === line) {\r\n                    column--;\r\n                }\r\n            }\r\n        } else {\r\n            while (column === text.length && line < this.htmls.length) {\r\n                line++;\r\n                column = 0;\r\n                text = this.htmls[line - 1].text;\r\n            }\r\n            if (column < text.length) {\r\n                if (wholeWord) {\r\n                    //过滤开始的空格\r\n                    while (column < text.length && text[column].match(regs.space)) {\r\n                        column++;\r\n                    }\r\n                    if (column < text.length) {\r\n                        text = text.slice(column);\r\n                        text = this.rightWrodPattern.exec(text);\r\n                        if (text && text.index == 0) {\r\n                            column += text[0].length;\r\n                        } else {\r\n                            column++;\r\n                        }\r\n                    }\r\n                } else if (cursorPos.line === line) {\r\n                    column++;\r\n                }\r\n            }\r\n        }\r\n        this.updateCursorPos(cursorPos, line, column);\r\n\r\n        return {\r\n            line: line,\r\n            column: column,\r\n        };\r\n    }\r\n    switchMultiKeyCode() {\r\n        this.multiKeyCode = this.multiKeyCode === 'ctrl' ? 'alt' : 'ctrl';\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2021-12-31 15:11:27\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.history = [];\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, ['cursor']);\r\n        Util.defineProperties(this, context, [\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n            'deleteCopyLineUp',\r\n            'deleteCopyLineDown',\r\n            'insertLine',\r\n            'deleteLine',\r\n            'replace',\r\n        ]);\r\n    }\r\n    // 撤销操作\r\n    undo() {\r\n        if (this.history.index > 0) {\r\n            let command = this.history[this.history.index - 1];\r\n            this.doCommand(command);\r\n            this.history.index--;\r\n            if (command.serial) {\r\n                //连续操作标识\r\n                let _command = this.history[this.history.index - 1];\r\n                _command && _command.serial === command.serial && this.undo();\r\n            }\r\n        }\r\n    }\r\n    // 重做操作\r\n    redo() {\r\n        if (this.history.index < this.history.length) {\r\n            let command = this.history[this.history.index];\r\n            this.history.index++;\r\n            this.doCommand(command);\r\n            if (command.serial) {\r\n                //连续操作标识\r\n                let _command = this.history[this.history.index];\r\n                _command && _command.serial === command.serial && this.redo();\r\n            }\r\n        }\r\n    }\r\n    // 操作命令\r\n    doCommand(command) {\r\n        let commandType = command.type || (command instanceof Array ? command[0].type : command.type);\r\n        switch (commandType) {\r\n            case Util.command.DELETE:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteContent(Util.keyCode.BACKSPACE, command);\r\n                break;\r\n            case Util.command.INSERT:\r\n                this.cursor.clearCursorPos();\r\n                if (command instanceof Array) {\r\n                    var text = [];\r\n                    command.forEach((item) => {\r\n                        text.push(item.text);\r\n                    });\r\n                    this.insertContent(text, command);\r\n                } else {\r\n                    this.insertContent(command.text, command);\r\n                }\r\n                break;\r\n            case Util.command.DELETE_LINE:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteLine(command);\r\n                break;\r\n            case Util.command.INSERT_LINE:\r\n                this.cursor.clearCursorPos();\r\n                this.insertLine(command);\r\n                break;\r\n            case Util.command.MOVEUP:\r\n                this.cursor.clearCursorPos();\r\n                this.moveLineUp(command);\r\n                break;\r\n            case Util.command.MOVEDOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.moveLineDown(command);\r\n                break;\r\n            case Util.command.COPY_DOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.copyLineDown(command);\r\n                break;\r\n            case Util.command.DELETE_COPY_DOWN:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteCopyLineDown(command);\r\n                break;\r\n            case Util.command.COPY_UP:\r\n                this.cursor.clearCursorPos();\r\n                this.copyLineUp(command);\r\n                break;\r\n            case Util.command.DELETE_COPY_UP:\r\n                this.cursor.clearCursorPos();\r\n                this.deleteCopyLineUp(command);\r\n                break;\r\n            case Util.command.REPLACE:\r\n                this.cursor.clearCursorPos();\r\n                this.replace(command.text, command.cursorPos, command);\r\n                break;\r\n        }\r\n    }\r\n    // 添加历史记录\r\n    pushHistory(command) {\r\n        while (this.history.length > this.history.index) {\r\n            this.history.pop();\r\n        }\r\n        let that = this;\r\n        let lastCommand = this.history[this.history.index - 1];\r\n        command = this.sortComand(command);\r\n        if (lastCommand instanceof Array && command instanceof Array && lastCommand.length === command.length && Date.now() - this.pushHistoryTime < 2000) {\r\n            if (_checkSameOp(lastCommand) && _checkSameOp(command) && _combCheck(lastCommand[0], command[0])) {\r\n                for (let i = 0; i < lastCommand.length; i++) {\r\n                    _combCommand(lastCommand[i], command[i]);\r\n                }\r\n            } else {\r\n                this.history.push(command);\r\n            }\r\n        } else if (_combCheck(lastCommand, command)) {\r\n            _combCommand(lastCommand, command);\r\n        } else {\r\n            this.history.push(command);\r\n        }\r\n        this.history.index = this.history.length;\r\n        this.pushHistoryTime = Date.now();\r\n\r\n        function _checkSameOp(commandList) {\r\n            for (let i = 1; i < commandList.length; i++) {\r\n                if (commandList[i].type !== commandList[i - 1].type) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n\r\n        function _combCheck(lastCommand, command) {\r\n            // 检测是否为连续插入或连续删除\r\n            if (\r\n                (command.type == Util.command.DELETE || command.type == Util.command.INSERT) &&\r\n                lastCommand &&\r\n                lastCommand.type == command.type &&\r\n                lastCommand.preCursorPos.line == command.cursorPos.line &&\r\n                Date.now() - that.pushHistoryTime < 2000\r\n            ) {\r\n                if (lastCommand.type == Util.command.DELETE) {\r\n                    if (Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n                if (lastCommand.type == Util.command.INSERT) {\r\n                    if (Util.comparePos(lastCommand.cursorPos, command.preCursorPos) == 0 || Util.comparePos(lastCommand.cursorPos, command.cursorPos) == 0) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // 检查两次操作是否可以合并\r\n        function _combCommand(lastCommand, command) {\r\n            if (lastCommand.type === Util.command.DELETE) {\r\n                command.preCursorPos.column -= lastCommand.cursorPos.column - lastCommand.preCursorPos.column;\r\n                lastCommand.preCursorPos = command.preCursorPos;\r\n                lastCommand.cursorPos = command.cursorPos;\r\n            } else {\r\n                lastCommand.cursorPos = command.cursorPos;\r\n                if (command.keyCode === Util.keyCode.DELETE) {\r\n                    lastCommand.text = lastCommand.text + command.text;\r\n                } else {\r\n                    lastCommand.text = command.text + lastCommand.text;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 更新历史记录\r\n    updateHistory(command) {\r\n        let index = this.history.index;\r\n        if (command instanceof Array) {\r\n            command.forEach((item, _index) => {\r\n                item.keyCode = this.history[index - 1][_index].keyCode;\r\n            });\r\n        } else {\r\n            command.keyCode = this.history[index - 1].keyCode;\r\n        }\r\n        this.history[index - 1] = this.sortComand(command);\r\n    }\r\n    sortComand(command) {\r\n        if (command instanceof Array) {\r\n            command.sort((a, b) => {\r\n                a = a.cursorPos;\r\n                b = b.cursorPos;\r\n                if (a.line === b.line) {\r\n                    return a.column - b.column;\r\n                }\r\n                return a.line - b.line;\r\n            });\r\n        }\r\n        return command;\r\n    }\r\n}\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 13:42:22\r\n * @Description:\r\n */\r\nimport Util from '@/common/util';\r\nimport Enum from '@/data/enum';\r\nimport expand from 'emmet';\r\n\r\nconst regs = {\r\n    word: /[a-zA-Z0-9_]/,\r\n    emmetWord: /^[a-zA-Z][a-zA-Z0-9\\-]*/,\r\n    emmetAttr: /^[\\.\\#]([^\\.\\#\\>\\<\\+\\*\\(\\)]*)/,\r\n    emmetNum: /^\\*(\\d+)/,\r\n    dWord: Util.fullAngleReg,\r\n    endTag: /(?=\\<\\/)/,\r\n    space: /\\s/,\r\n};\r\n\r\nclass Context {\r\n    constructor(editor) {\r\n        this.lineId = Number.MIN_SAFE_INTEGER;\r\n        this.serial = 1;\r\n        this.htmls = [];\r\n        this.fgLines = [];\r\n        this.lineIdMap = new Map(); //htmls的唯一标识对象\r\n        this.renderedIdMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.renderedLineMap = new Map(); //renderHtmls的唯一标识对象\r\n        this.initProperties(editor);\r\n        this.initData();\r\n    }\r\n    initProperties(editor) {\r\n        Util.defineProperties(this, editor, [\r\n            'language',\r\n            'tabSize',\r\n            'nowCursorPos',\r\n            'maxLine',\r\n            'maxWidthObj',\r\n            'cursor',\r\n            'history',\r\n            'tokenizer',\r\n            'lint',\r\n            'folder',\r\n            'selecter',\r\n            'searcher',\r\n            'fSelecter',\r\n            'fSearcher',\r\n            'autocomplete',\r\n            'render',\r\n            'unFold',\r\n            'setNowCursorPos',\r\n            'setErrors',\r\n            'setAutoTip',\r\n            'getStrWidth',\r\n            '$emit',\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        };\r\n    }\r\n    initData() {\r\n        this.htmls.push({\r\n            lineId: this.lineId++,\r\n            text: '',\r\n            html: '',\r\n            width: 0,\r\n            tokens: [],\r\n            folds: [],\r\n            states: [],\r\n            stateFold: null,\r\n        });\r\n        this.lineIdMap.set(this.htmls[0].lineId, this.htmls[0]);\r\n    }\r\n    setData(prop, value) {\r\n        if (typeof this[prop] === 'function') {\r\n            return;\r\n        }\r\n        this[prop] = value;\r\n    }\r\n    insertContent(text, command) {\r\n        let historyArr = null;\r\n        let cursorPosList = [];\r\n        let serial = false;\r\n        if (!command) {\r\n            // 如果有选中区域，需要先删除选中区域\r\n            if (this.selecter.activedRanges.size) {\r\n                let _historyArr = this.deleteContent();\r\n                // 连续操作标识\r\n                _historyArr.serial = this.serial++;\r\n                serial = _historyArr.serial;\r\n            }\r\n            cursorPosList = this.cursor.multiCursorPos.toArray();\r\n        } else {\r\n            command.forEach((item) => {\r\n                // 多个插入的光标可能相同，这里不能先添加光标\r\n                cursorPosList.push(item.cursorPos);\r\n            });\r\n        }\r\n        historyArr = this._insertMultiContent(text, cursorPosList, command);\r\n        historyArr.serial = serial;\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyArr);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyArr);\r\n            historyArr.serial = command.serial;\r\n        }\r\n        this.setNowCursorPos(this.cursor.multiCursorPos.get(0));\r\n        this.fSearcher.refreshSearch();\r\n        return historyArr;\r\n    }\r\n    _insertMultiContent(text, cursorPosList, command) {\r\n        let prePos = null;\r\n        let historyObj = null;\r\n        let historyArr = [];\r\n        let texts = text instanceof Array ? text : text.split(/\\r\\n|\\n/);\r\n        let lineDelta = 0;\r\n        let columnDelta = 0;\r\n        this.cursor.clearCursorPos();\r\n        if (text === '\\n') {\r\n            texts = ['\\n'];\r\n        }\r\n        cursorPosList.forEach((cursorPos, index) => {\r\n            let _text = texts.length === cursorPosList.length ? texts[index] : text;\r\n            let commandObj = (command && command[index]) || {};\r\n            let margin = commandObj.margin || 'right';\r\n            let active = commandObj.active || false;\r\n            let pos = {\r\n                line: cursorPos.line,\r\n                column: cursorPos.column,\r\n            };\r\n            pos.line += lineDelta;\r\n            if (prePos && pos.line === prePos.line) {\r\n                pos.column += columnDelta;\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = this._insertContent(_text, pos, !command);\r\n            historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            historyObj.margin = margin;\r\n            historyObj.active = active;\r\n            lineDelta += historyObj.cursorPos.line - historyObj.preCursorPos.line;\r\n            columnDelta += historyObj.cursorPos.column - historyObj.preCursorPos.column;\r\n            if (margin === 'right') {\r\n                this.cursor.addCursorPos(historyObj.cursorPos);\r\n            } else {\r\n                this.cursor.addCursorPos(historyObj.preCursorPos);\r\n            }\r\n            if (active) {\r\n                this.selecter.addRange({\r\n                    start: historyObj.preCursorPos,\r\n                    end: historyObj.cursorPos,\r\n                });\r\n            }\r\n        });\r\n        return historyArr;\r\n    }\r\n    // 插入内容\r\n    _insertContent(text, cursorPos, alignmentTab) {\r\n        let lineObj = this.htmls[cursorPos.line - 1];\r\n        let nowLineText = lineObj.text;\r\n        let newPos = Object.assign({}, cursorPos);\r\n        cursorPos.moveWidth = 0; //去除上下移动光标的初始宽度记录\r\n        text = text.split(/\\r\\n|\\n/);\r\n        text = text.map((item) => {\r\n            item = {\r\n                lineId: this.lineId++,\r\n                text: item,\r\n                html: '',\r\n                width: 0,\r\n                tokens: null,\r\n                folds: null,\r\n                states: null,\r\n                stateFold: null,\r\n            };\r\n            this.lineIdMap.set(item.lineId, item);\r\n            return item;\r\n        });\r\n        if (text.length > 1) {\r\n            // 换行对齐\r\n            if (!text[0].text && alignmentTab) {\r\n                let tabStr = _getTabStr.call(this, nowLineText, this.folder.getRangeFold(cursorPos.line, true));\r\n                if (tabStr) {\r\n                    text[1].text = tabStr + text[1].text.trimLeft();\r\n                }\r\n            }\r\n            // 插入多行\r\n            newPos.column = text[text.length - 1].text.length;\r\n            text[0].text = nowLineText.slice(0, cursorPos.column) + text[0].text;\r\n            text[text.length - 1].text = text[text.length - 1].text + nowLineText.slice(cursorPos.column);\r\n            this.htmls = this.htmls\r\n                .slice(0, cursorPos.line - 1)\r\n                .concat(text)\r\n                .concat(this.htmls.slice(cursorPos.line));\r\n        } else {\r\n            // 插入一行\r\n            newPos.column += text[0].text.length;\r\n            text[0].text = nowLineText.slice(0, cursorPos.column) + text[0].text + nowLineText.slice(cursorPos.column);\r\n            this.htmls.splice(cursorPos.line - 1, 1, text[0]);\r\n        }\r\n        newPos.line += text.length - 1;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.lint.onInsertContentAfter(cursorPos.line, newPos.line);\r\n        this.tokenizer.onInsertContentAfter(cursorPos.line, newPos.line);\r\n        this.folder.onInsertContentAfter(Object.assign({}, cursorPos), Object.assign({}, newPos));\r\n        this.setLineWidth(text);\r\n        this.setErrors([]);\r\n        this.setAutoTip(null);\r\n        this.render(true);\r\n        this.$emit('change');\r\n        let historyObj = {\r\n            type: Util.command.DELETE,\r\n            cursorPos: Object.assign({}, newPos),\r\n            preCursorPos: Object.assign({}, cursorPos),\r\n        };\r\n        return historyObj;\r\n\r\n        function _getTabStr(text, plus) {\r\n            let tabNum = 0;\r\n            let tabStr = '';\r\n            //该行有内容\r\n            let spaceNum = /^\\s+/.exec(text);\r\n            if (spaceNum) {\r\n                tabNum = /\\t+/.exec(spaceNum[0]);\r\n                tabNum = (tabNum && tabNum[0].length) || 0;\r\n                tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / this.tabSize);\r\n            }\r\n            tabNum += plus ? 1 : 0;\r\n            for (let i = 0; i < tabNum; i++) {\r\n                tabStr += '\\t';\r\n            }\r\n            return tabStr;\r\n        }\r\n    }\r\n    deleteContent(keyCode, command) {\r\n        let historyArr = [];\r\n        let rangeList = [];\r\n        if (command) {\r\n            rangeList = command.map((item) => {\r\n                let obj = {\r\n                    start: item.preCursorPos,\r\n                    end: item.cursorPos,\r\n                    margin: item.margin,\r\n                    active: item.active,\r\n                };\r\n                return obj;\r\n            });\r\n        } else {\r\n            this.cursor.multiCursorPos.forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                if (range) {\r\n                    if (Util.comparePos(range.start, item) === 0) {\r\n                        range.margin = 'left';\r\n                    } else {\r\n                        range.margin = 'right';\r\n                    }\r\n                    rangeList.push(range);\r\n                } else {\r\n                    rangeList.push(item);\r\n                }\r\n            });\r\n        }\r\n        historyArr = this._deleteMultiContent(rangeList, keyCode);\r\n        if (!command) {\r\n            // 新增历史记录\r\n            historyArr.length && this.history.pushHistory(historyArr);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            historyArr.serial = command.serial;\r\n            this.history.updateHistory(historyArr);\r\n            historyArr.forEach((item) => {\r\n                this.cursor.addCursorPos(item.cursorPos);\r\n            });\r\n        }\r\n        this.setNowCursorPos(this.cursor.multiCursorPos.get(0));\r\n        this.searcher.clearSearch();\r\n        this.fSearcher.refreshSearch();\r\n        return historyArr;\r\n    }\r\n    _deleteMultiContent(rangeList, keyCode) {\r\n        let that = this;\r\n        let historyArr = [];\r\n        let historyObj = null;\r\n        let prePos = null;\r\n        let lineDelta = 0;\r\n        let columnDelta = 0;\r\n        this.cursor.clearCursorPos();\r\n        rangeList.forEach((item) => {\r\n            if (item.start && item.end) {\r\n                _deleteRangePos(item);\r\n            } else {\r\n                _deleteCursorPos(item);\r\n            }\r\n        });\r\n        return historyArr;\r\n\r\n        function _deleteCursorPos(cursorPos) {\r\n            let pos = {\r\n                line: cursorPos.line,\r\n                column: cursorPos.column,\r\n            };\r\n            pos.line -= lineDelta;\r\n            if (prePos && pos.line === prePos.line) {\r\n                pos.column -= columnDelta;\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = that._deleteContent(pos, keyCode);\r\n            historyObj.text && historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            lineDelta += historyObj.preCursorPos.line - prePos.line;\r\n            columnDelta += historyObj.preCursorPos.column - prePos.column;\r\n            that.cursor.addCursorPos({\r\n                line: prePos.line,\r\n                column: prePos.column,\r\n            });\r\n        }\r\n\r\n        function _deleteRangePos(rangePos) {\r\n            let start = rangePos.start;\r\n            let end = rangePos.end;\r\n            start.line -= lineDelta;\r\n            end.line -= lineDelta;\r\n            if (prePos && start.line === prePos.line) {\r\n                start.column -= columnDelta;\r\n                if (start.line === end.line) {\r\n                    end.column -= columnDelta;\r\n                } else {\r\n                    columnDelta = 0;\r\n                }\r\n            } else {\r\n                columnDelta = 0;\r\n            }\r\n            historyObj = that._deleteContent(rangePos, keyCode);\r\n            historyObj.text && historyArr.push(historyObj);\r\n            prePos = historyObj.cursorPos;\r\n            lineDelta += historyObj.preCursorPos.line - prePos.line;\r\n            columnDelta += historyObj.preCursorPos.column - prePos.column;\r\n            that.cursor.addCursorPos({\r\n                line: prePos.line,\r\n                column: prePos.column,\r\n            });\r\n        }\r\n    }\r\n    // 删除内容\r\n    _deleteContent(cursorPos, keyCode) {\r\n        let range = null;\r\n        let margin = keyCode === Util.keyCode.DELETE ? 'left' : 'right';\r\n        cursorPos.moveWidth = 0; //去除上下移动光标的初始宽度记录\r\n        if (cursorPos.start && cursorPos.end) {\r\n            //删除范围内的内容\r\n            range = cursorPos;\r\n            cursorPos = range.end;\r\n            margin = range.margin;\r\n        }\r\n        let start = null;\r\n        let startObj = this.htmls[cursorPos.line - 1];\r\n        let text = startObj.text;\r\n        let deleteText = '';\r\n        let rangeUuid = [startObj.lineId];\r\n        let originPos = Object.assign({}, cursorPos);\r\n        let newPos = Object.assign({}, cursorPos);\r\n        if (range) {\r\n            // 删除选中区域\r\n            let end = range.end;\r\n            let endObj = this.htmls[end.line - 1];\r\n            start = range.start;\r\n            startObj = this.htmls[start.line - 1];\r\n            text = startObj.text;\r\n            deleteText = this.getRangeText(range.start, range.end);\r\n            if (start.line == 1 && end.line == this.maxLine) {\r\n                //全选删除\r\n                rangeUuid = [this.maxWidthObj.lineId];\r\n                this.lineIdMap.clear();\r\n            } else {\r\n                rangeUuid = this.htmls.slice(start.line - 1, end.line).map((item) => {\r\n                    this.lineIdMap.delete(item.lineId);\r\n                    return item.lineId;\r\n                });\r\n            }\r\n            this.lineIdMap.set(startObj.lineId, startObj);\r\n            if (start.line == end.line) {\r\n                // 单行选中\r\n                text = text.slice(0, start.column) + text.slice(end.column);\r\n                startObj.text = text;\r\n            } else {\r\n                // 多行选中\r\n                text = text.slice(0, start.column);\r\n                startObj.text = text;\r\n                text = endObj.text;\r\n                text = text.slice(end.column);\r\n                startObj.text += text;\r\n                this.htmls.splice(start.line, end.line - start.line);\r\n            }\r\n            newPos.line = start.line;\r\n            newPos.column = start.column;\r\n        } else if (Util.keyCode.DELETE == keyCode) {\r\n            // 向后删除一个字符\r\n            if (cursorPos.column == text.length) {\r\n                // 光标处于行尾\r\n                if (cursorPos.line < this.htmls.length) {\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line].lineId);\r\n                    text = startObj.text + this.htmls[cursorPos.line].text;\r\n                    this.htmls.splice(cursorPos.line, 1);\r\n                    deleteText = '\\n';\r\n                    originPos = {\r\n                        line: cursorPos.line - 1,\r\n                        column: 0,\r\n                    };\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column];\r\n                text = text.slice(0, cursorPos.column) + text.slice(cursorPos.column + 1);\r\n                originPos = {\r\n                    line: cursorPos.line,\r\n                    column: cursorPos.column + 1,\r\n                };\r\n            }\r\n            startObj.text = text;\r\n        } else {\r\n            // 向前删除一个字符\r\n            if (cursorPos.column == 0) {\r\n                // 光标处于行首\r\n                if (cursorPos.line > 1) {\r\n                    let column = this.htmls[cursorPos.line - 2].text.length;\r\n                    this.lineIdMap.delete(this.htmls[cursorPos.line - 2].lineId);\r\n                    text = this.htmls[cursorPos.line - 2].text + text;\r\n                    this.htmls.splice(cursorPos.line - 2, 1);\r\n                    deleteText = '\\n';\r\n                    newPos.line = cursorPos.line - 1;\r\n                    newPos.column = column;\r\n                }\r\n            } else {\r\n                deleteText = text[cursorPos.column - 1];\r\n                text = text.slice(0, cursorPos.column - 1) + text.slice(cursorPos.column);\r\n                newPos.column = cursorPos.column - 1;\r\n            }\r\n            startObj.text = text;\r\n        }\r\n        startObj.width = this.getStrWidth(startObj.text);\r\n        startObj.html = '';\r\n        startObj.tokens = null;\r\n        startObj.folds = null;\r\n        startObj.states = null;\r\n        startObj.stateFold = null;\r\n        this.setEditorData('maxLine', this.htmls.length);\r\n        this.lint.onDeleteContentAfter(originPos.line, newPos.line);\r\n        this.tokenizer.onDeleteContentAfter(originPos.line, newPos.line);\r\n        this.folder.onDeleteContentAfter(Object.assign({}, originPos), Object.assign({}, newPos));\r\n        this.setErrors([]);\r\n        this.setAutoTip(null);\r\n        this.render(true);\r\n        this.$emit('change');\r\n        // 更新最大文本宽度\r\n        if (startObj.width >= this.maxWidthObj.width) {\r\n            this.setEditorData('maxWidthObj', {\r\n                lineId: startObj.lineId,\r\n                text: startObj.text,\r\n                width: startObj.width,\r\n            });\r\n        } else if (rangeUuid.indexOf(this.maxWidthObj.lineId) > -1) {\r\n            this.setMaxWidth();\r\n        }\r\n        let historyObj = {\r\n            type: Util.command.INSERT,\r\n            cursorPos: Object.assign({}, newPos),\r\n            preCursorPos: Object.assign({}, originPos),\r\n            text: deleteText,\r\n            keyCode: keyCode,\r\n            margin: margin,\r\n            active: range && range.active,\r\n        };\r\n        return historyObj;\r\n    }\r\n    // 获取最大宽度\r\n    setMaxWidth() {\r\n        let that = this;\r\n        let index = 0;\r\n        let startTime = Date.now();\r\n        let maxWidthObj = {\r\n            line: this.htmls[0].lineId,\r\n            width: 0,\r\n        };\r\n        clearTimeout(this.setMaxWidthTimer);\r\n        _setMaxWidth();\r\n\r\n        function _setMaxWidth() {\r\n            while (index < that.htmls.length) {\r\n                let item = that.htmls[index];\r\n                if (item.width > maxWidthObj.width) {\r\n                    maxWidthObj = {\r\n                        lineId: item.lineId,\r\n                        text: item.text,\r\n                        width: item.width,\r\n                    };\r\n                }\r\n                index++;\r\n                if (Date.now() - startTime > 20) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index < that.htmls.length) {\r\n                that.setMaxWidthTimer = setTimeout(() => {\r\n                    _setMaxWidth();\r\n                }, 20);\r\n            } else {\r\n                that.setEditorData('maxWidthObj', maxWidthObj);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置每行文本的宽度\r\n     * @param {Array} texts\r\n     */\r\n    setLineWidth(texts) {\r\n        let that = this;\r\n        let index = 0;\r\n        let startTime = Date.now();\r\n        let maxWidthObj = this.maxWidthObj;\r\n        clearTimeout(this.setLineWidthTimer);\r\n        _setLineWidth();\r\n\r\n        function _setLineWidth() {\r\n            while (index < texts.length) {\r\n                let lineObj = texts[index];\r\n                if (that.lineIdMap.has(lineObj.lineId)) {\r\n                    let width = that.getStrWidth(lineObj.text);\r\n                    lineObj.width = width;\r\n                    if (width > maxWidthObj.width) {\r\n                        maxWidthObj = {\r\n                            lineId: lineObj.lineId,\r\n                            text: lineObj.text,\r\n                            width: width,\r\n                        };\r\n                    }\r\n                }\r\n                index++;\r\n                if (Date.now() - startTime > 20) {\r\n                    break;\r\n                }\r\n            }\r\n            if (index < texts.length) {\r\n                that.setLineWidthTimer = setTimeout(() => {\r\n                    _setLineWidth();\r\n                }, 20);\r\n            } else {\r\n                that.setEditorData('maxWidthObj', maxWidthObj);\r\n            }\r\n        }\r\n    }\r\n    moveLineUp(command) {\r\n        this.moveLine(command, 'up');\r\n    }\r\n    moveLineDown(command) {\r\n        this.moveLine(command, 'down');\r\n    }\r\n    moveLine(command, direct) {\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let index = 0;\r\n        let prePos = null;\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            cursorPosList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            cursorPosList = [];\r\n            // 过滤光标，去除上下相邻的光标\r\n            this.cursor.multiCursorPos.toArray().forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item); //当前光标处于活动区域边界\r\n                let pass = true;\r\n                let line = range ? range.start.line : item.line;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine + 1 === line || preLine === line) {\r\n                        //和之前的光标冲突，移除当前光标所处的活动区域\r\n                        range && this.selecter.removeRange(range);\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    var enLine = (range && range.end.line) || line;\r\n                    if ((line === 1 && direct === 'up') || (enLine === this.maxLine && direct === 'down')) {\r\n                        pass = false;\r\n                    } else {\r\n                        if (range) {\r\n                            range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                            prePos = range;\r\n                        } else {\r\n                            prePos = item;\r\n                        }\r\n                        cursorPosList.push(prePos);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        while (index < cursorPosList.length) {\r\n            let pos = cursorPosList[index];\r\n            let range = pos.start ? pos : null;\r\n            this._moveLine(pos, direct);\r\n            //移动光标和选区\r\n            let delta = direct === 'down' ? 1 : -1;\r\n            if (range) {\r\n                //更新选中区域坐标\r\n                range.start.line = range.start.line + delta;\r\n                range.end.line = range.end.line + delta;\r\n            } else {\r\n                // 更新光标坐标\r\n                pos.line = pos.line + delta;\r\n            }\r\n            historyPosList.push(range ? this.selecter.clone(range, ['margin']) : Object.assign({}, pos));\r\n            index++;\r\n        }\r\n        if (!historyPosList.length) {\r\n            return;\r\n        }\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.MOVEUP : Util.command.MOVEDOWN,\r\n            cursorPos: historyPosList,\r\n            searchConifg: searchConifg, // 记录搜索配置\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n            this.searcher.refreshSearch(searchConifg);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    _moveLine(cursorPos, direct) {\r\n        let range = cursorPos.start ? cursorPos : null;\r\n        let upLine = 0;\r\n        let downLine = 0;\r\n        let text = '';\r\n        // 当前光标处于选中区域边界\r\n        if (range) {\r\n            text = this.htmls\r\n                .slice(range.start.line - 1, range.end.line)\r\n                .map((item) => {\r\n                    return item.text;\r\n                })\r\n                .join('\\n');\r\n            if (direct === 'down') {\r\n                upLine = range.start.line;\r\n                downLine = range.end.line + 1;\r\n                text = this.htmls[downLine - 1].text + '\\n' + text;\r\n            } else {\r\n                upLine = range.start.line - 1;\r\n                downLine = range.end.line;\r\n                text = text + '\\n' + this.htmls[upLine - 1].text;\r\n            }\r\n        } else {\r\n            upLine = cursorPos.line - (direct === 'down' ? 0 : 1);\r\n            downLine = upLine + 1;\r\n            text = this.htmls[downLine - 1].text + '\\n' + this.htmls[upLine - 1].text;\r\n        }\r\n        let start = {\r\n            line: upLine,\r\n            column: 0,\r\n        };\r\n        let end = {\r\n            line: downLine,\r\n            column: this.htmls[downLine - 1].text.length,\r\n        };\r\n        this._deleteContent({\r\n            start: start,\r\n            end: end,\r\n        });\r\n        this._insertContent(text, start);\r\n    }\r\n    // 向上复制一行\r\n    copyLineUp(command) {\r\n        this.copyLine(command, 'up');\r\n    }\r\n    // 向下复制一行\r\n    copyLineDown(command) {\r\n        this.copyLine(command, 'down');\r\n    }\r\n    copyLine(command, direct) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        let texts = [];\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            originList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            originList = [];\r\n            // 过滤重叠光标和活动区域\r\n            this.cursor.multiCursorPos.toArray().forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                let line = (range && range.start.line) || item.line;\r\n                let pass = true;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine === line) {\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    if (range) {\r\n                        range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                        prePos = range;\r\n                    } else {\r\n                        prePos = item;\r\n                    }\r\n                    originList.push(prePos);\r\n                }\r\n            });\r\n        }\r\n        originList.forEach((item) => {\r\n            let line = 0;\r\n            let text = '';\r\n            if (item.end) {\r\n                line = item.start.line - 1;\r\n                text = this.htmls\r\n                    .slice(item.start.line - 1, item.end.line)\r\n                    .map((item) => {\r\n                        return item.text;\r\n                    })\r\n                    .join('\\n');\r\n            } else {\r\n                line = item.line - 1;\r\n                text = this.htmls[item.line - 1].text;\r\n            }\r\n            line = line < 1 ? 1 : line;\r\n            text = '\\n' + text;\r\n            texts.push(text);\r\n            cursorPosList.push({ line: line, column: this.htmls[line - 1].text.length });\r\n        });\r\n        this._insertMultiContent(texts, cursorPosList).forEach((item, index) => {\r\n            let line = 0;\r\n            let originPos = originList[index];\r\n            line = item.cursorPos.line;\r\n            if (direct === 'down') {\r\n                line = line + (originPos.start ? originPos.end.line - originPos.start.line + 1 : 1);\r\n            }\r\n            if (originPos.start) {\r\n                let delta = originPos.end.line - originPos.start.line;\r\n                originPos.end.line = line;\r\n                originPos.start.line = line - delta;\r\n            } else {\r\n                originPos.line = line;\r\n            }\r\n            historyPosList.push(originPos.start ? this.selecter.clone(originPos, ['margin']) : Object.assign({}, originPos));\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.DELETE_COPY_DOWN : Util.command.DELETE_COPY_UP,\r\n            cursorPos: historyPosList,\r\n            searchConifg: searchConifg, // 记录搜索配置\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n            this.searcher.refreshSearch(searchConifg);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 删除上面一行\r\n    deleteCopyLineUp(command) {\r\n        this.deleteCopyLine(command, 'up');\r\n    }\r\n    // 删除下面一行\r\n    deleteCopyLineDown(command) {\r\n        this.deleteCopyLine(command, 'down');\r\n    }\r\n    deleteCopyLine(command, direct) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        originList = command.cursorPos;\r\n        originList.forEach((item) => {\r\n            let upLine = 0;\r\n            let downLine = 0;\r\n            let range = null;\r\n            let startColumn = 0;\r\n            let endColumn = 0;\r\n            if (item.end) {\r\n                upLine = item.start.line - 1;\r\n                downLine = item.end.line;\r\n            } else {\r\n                upLine = item.line - 1;\r\n                downLine = item.line;\r\n            }\r\n            endColumn = this.htmls[downLine - 1].text.length;\r\n            if (upLine < 1) {\r\n                upLine = 1;\r\n                if (downLine < this.maxLine) {\r\n                    downLine++;\r\n                    endColumn = 0;\r\n                }\r\n            } else {\r\n                startColumn = this.htmls[upLine - 1].text.length;\r\n            }\r\n            range = {\r\n                start: { line: upLine, column: startColumn },\r\n                end: { line: downLine, column: endColumn },\r\n            };\r\n            cursorPosList.push(range);\r\n        });\r\n        this._deleteMultiContent(cursorPosList).forEach((item, index) => {\r\n            let originPos = originList[index];\r\n            if (originPos.start) {\r\n                let delta = originPos.end.line - originPos.start.line;\r\n                if (direct === 'up') {\r\n                    originPos.start.line = item.cursorPos.line + (originPos.start.line === 1 ? 0 : 1);\r\n                    originPos.end.line = originPos.start.line + delta;\r\n                } else {\r\n                    originPos.end.line = item.cursorPos.line;\r\n                    originPos.start.line = originPos.end.line - delta;\r\n                }\r\n            } else {\r\n                if (direct === 'up') {\r\n                    originPos.line = item.cursorPos.line + (originPos.line === 1 ? 0 : 1);\r\n                } else {\r\n                    originPos.line = item.cursorPos.line;\r\n                }\r\n            }\r\n            historyPosList.push(originPos.start ? this.selecter.clone(originPos, ['margin']) : Object.assign({}, originPos));\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        // 恢复活动区域和光标\r\n        historyPosList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: direct === 'down' ? Util.command.COPY_UP : Util.command.COPY_DOWN,\r\n            cursorPos: historyPosList,\r\n            searchConifg: command.searchConifg,\r\n        };\r\n        this.history.updateHistory(historyObj);\r\n        this.searcher.refreshSearch(command.searchConifg);\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 插入当前行\r\n    insertLine(command) {\r\n        let searchConifg = command.searchConifg;\r\n        let originList = command.cursorPos;\r\n        let texts = command.text;\r\n        let cursorPosList = [];\r\n        originList.forEach((item) => {\r\n            let line = item.start ? item.start.line - 1 : item.line - 1;\r\n            line = line < 1 ? 1 : line;\r\n            cursorPosList.push({ line: line, column: this.htmls[line - 1].text.length });\r\n        });\r\n        this._insertMultiContent(texts, cursorPosList);\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        originList.forEach((item) => {\r\n            if (item.start) {\r\n                this.cursor.addCursorPos(item.margin === 'left' ? item.start : item.end);\r\n                this.selecter.addRange(item);\r\n            } else {\r\n                this.cursor.addCursorPos(item);\r\n            }\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.DELETE_LINE,\r\n            cursorPos: originList,\r\n            searchConifg: searchConifg,\r\n        };\r\n        // 撤销或重做操作后，更新历史记录\r\n        this.history.updateHistory(historyObj);\r\n        this.searcher.refreshSearch(command.searchConifg);\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    // 删除当前行\r\n    deleteLine(command) {\r\n        let originList = [];\r\n        let cursorPosList = [];\r\n        let historyPosList = [];\r\n        let prePos = null;\r\n        let texts = [];\r\n        let searchConifg = null;\r\n        if (command) {\r\n            searchConifg = command.searchConifg;\r\n            originList = command.cursorPos;\r\n        } else {\r\n            searchConifg = this.searcher.getConfig();\r\n            this.cursor.multiCursorPos.forEach((item) => {\r\n                let range = this.selecter.getRangeByCursorPos(item);\r\n                let line = (range && range.start.line) || item.line;\r\n                let pass = true;\r\n                if (prePos) {\r\n                    let preLine = prePos.end ? prePos.end.line : prePos.line;\r\n                    if (preLine === line) {\r\n                        pass = false;\r\n                    }\r\n                }\r\n                if (pass) {\r\n                    if (range) {\r\n                        range.margin = Util.comparePos(range.start, item) === 0 ? 'left' : 'right';\r\n                        prePos = range;\r\n                    } else {\r\n                        prePos = item;\r\n                    }\r\n                    originList.push(prePos);\r\n                }\r\n            });\r\n        }\r\n        originList.forEach((item) => {\r\n            let upLine = 0;\r\n            let downLine = 0;\r\n            let range = null;\r\n            let startColumn = 0;\r\n            let endColumn = 0;\r\n            if (item.end) {\r\n                upLine = item.start.line - 1;\r\n                downLine = item.end.line;\r\n            } else {\r\n                upLine = item.line - 1;\r\n                downLine = item.line;\r\n            }\r\n            endColumn = this.htmls[downLine - 1].text.length;\r\n            if (upLine < 1) {\r\n                upLine = 1;\r\n                if (downLine < this.maxLine) {\r\n                    downLine++;\r\n                    endColumn = 0;\r\n                }\r\n            } else {\r\n                startColumn = this.htmls[upLine - 1].text.length;\r\n            }\r\n            range = {\r\n                start: { line: upLine, column: startColumn },\r\n                end: { line: downLine, column: endColumn },\r\n            };\r\n            texts.push(this.getRangeText(range.start, range.end));\r\n            cursorPosList.push(range);\r\n        });\r\n        this._deleteMultiContent(cursorPosList).forEach((item, index) => {\r\n            let originPos = originList[index];\r\n            let line = item.cursorPos.line;\r\n            let column = originList[index].column;\r\n            if (originPos.start) {\r\n                column = originPos.margin === 'left' ? originPos.start.column : originPos.end.column;\r\n            }\r\n            column = column > this.htmls[line - 1].text.length ? this.htmls[line - 1].text.length : column;\r\n            historyPosList.push({ line: line, column: column });\r\n        });\r\n        this.searcher.clearSearch();\r\n        this.cursor.clearCursorPos();\r\n        historyPosList.forEach((item) => {\r\n            this.cursor.addCursorPos(item);\r\n        });\r\n        let historyObj = {\r\n            type: Util.command.INSERT_LINE,\r\n            cursorPos: originList,\r\n            text: texts,\r\n            searchConifg: searchConifg,\r\n        };\r\n        if (!command) {\r\n            // 新增历史记录\r\n            this.history.pushHistory(historyObj);\r\n        } else {\r\n            // 撤销或重做操作后，更新历史记录\r\n            this.history.updateHistory(historyObj);\r\n            this.searcher.refreshSearch(command.searchConifg);\r\n        }\r\n        this.fSearcher.refreshSearch();\r\n    }\r\n    replace(texts, ranges) {\r\n        let historyArr = null;\r\n        let serial = this.serial++;\r\n        historyArr = this._deleteMultiContent(ranges);\r\n        historyArr.serial = serial;\r\n        this.history.pushHistory(historyArr);\r\n        historyArr = this._insertMultiContent(texts, this.cursor.multiCursorPos.toArray());\r\n        historyArr.serial = serial;\r\n        this.history.pushHistory(historyArr);\r\n        return this.fSearcher.refreshSearch();\r\n    }\r\n    // 点击自动提示替换输入的内容\r\n    replaceTip(tip) {\r\n        let word = tip.word || '';\r\n        let after = tip.after || '';\r\n        let before = tip.before || '';\r\n        let result = before + _getResult(tip) + after;\r\n        let ranges = null;\r\n        if (result === word) {\r\n            //替换前后一致，不做操作\r\n            return;\r\n        }\r\n        ranges = _getRanges.call(this);\r\n        this.replace(result, ranges);\r\n        _updatePos.call(this);\r\n        if (tip.type === Enum.TOKEN_TYPE.CSS_PROPERTY) {\r\n            //选中css属性名后，自动弹出属性值列表\r\n            this.autocomplete.search();\r\n        }\r\n\r\n        function _getResult(tip) {\r\n            let result = '';\r\n            if (tip.type === Enum.TOKEN_TYPE.EMMET_HTML || tip.type === Enum.TOKEN_TYPE.EMMET_CSS) {\r\n                try {\r\n                    const config = {};\r\n                    if (tip.type === Enum.TOKEN_TYPE.EMMET_CSS) {\r\n                        config.type = 'stylesheet';\r\n                    }\r\n                    result = expand(tip.result, config);\r\n                } catch (e) {\r\n                    result = tip.result;\r\n                }\r\n            } else if (tip.type === Enum.TOKEN_TYPE.TAG_NAME) {\r\n                result += tip.result + `></${tip.result}>`;\r\n            } else {\r\n                result = tip.result;\r\n            }\r\n            return result;\r\n        }\r\n\r\n        function _getRanges() {\r\n            let ranges = [];\r\n            this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                let range = null;\r\n                range = {\r\n                    start: { line: cursorPos.line, column: cursorPos.column - word.length },\r\n                    end: { line: cursorPos.line, column: cursorPos.column },\r\n                };\r\n                ranges.push(range);\r\n            });\r\n            return ranges;\r\n        }\r\n\r\n        function _updatePos() {\r\n            if (tip.type === Enum.TOKEN_TYPE.TAG_NAME || tip.type === Enum.TOKEN_TYPE.EMMET_HTML) {\r\n                //生成标签后，光标定位到标签中间的位置\r\n                let exec = regs.endTag.exec(result);\r\n                if (exec) {\r\n                    let text = result.slice(exec.index);\r\n                    let deltaArr = text.split('\\n');\r\n                    let multiCursorPos = this.cursor.multiCursorPos.toArray();\r\n                    for (let i = multiCursorPos.length - 1; i >= 0; i--) {\r\n                        let cursorPos = _getDeltaPos.call(this, deltaArr, multiCursorPos[i]);\r\n                        this.cursor.updateCursorPos(multiCursorPos[i], cursorPos.line, cursorPos.column);\r\n                    }\r\n                }\r\n            } else if (tip.type === Enum.TOKEN_TYPE.ATTR_NAME) {\r\n                //选中标签属性后，光标移动端\"\"内\r\n                this.cursor.multiCursorPos.forEach((item) => {\r\n                    this.cursor.moveCursor(item, 'left');\r\n                });\r\n            }\r\n        }\r\n\r\n        function _getDeltaPos(deltaArr, cursorPos) {\r\n            let line = cursorPos.line;\r\n            let column = cursorPos.column;\r\n            if (deltaArr.length === 1) {\r\n                column -= deltaArr[0].length;\r\n            } else {\r\n                line -= deltaArr.length - 1;\r\n                column = this.htmls[line - 1].text.length - deltaArr[0].length;\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column,\r\n            };\r\n        }\r\n    }\r\n    // 获取选中范围内的文本\r\n    getRangeText(start, end) {\r\n        var text = this.htmls[start.line - 1].text;\r\n        if (start.line != end.line) {\r\n            let arr = [];\r\n            text = text.slice(start.column);\r\n            arr = this.htmls.slice(start.line, end.line - 1);\r\n            arr = arr.map((item) => {\r\n                return item.text;\r\n            });\r\n            text += arr.length ? '\\n' + arr.join('\\n') : '';\r\n            if (end.line <= this.maxLine) {\r\n                text += '\\n' + this.htmls[end.line - 1].text.slice(0, end.column);\r\n            }\r\n        } else {\r\n            text = text.slice(start.column, end.column);\r\n        }\r\n        return text;\r\n    }\r\n    // 获取待复制的文本\r\n    getCopyText(cut) {\r\n        let text = '';\r\n        let prePos = null;\r\n        let ranges = [];\r\n        this.cursor.multiCursorPos.forEach((item) => {\r\n            let range = this.selecter.getRangeByCursorPos(item);\r\n            let start = null;\r\n            if (range) {\r\n                ranges.push(range);\r\n                return;\r\n            }\r\n            if (prePos && item.line === prePos.line) {\r\n                return;\r\n            }\r\n            if (item.line > 1) {\r\n                start = {\r\n                    line: item.line - 1,\r\n                    column: this.htmls[item.line - 2].text.length,\r\n                };\r\n            } else {\r\n                start = {\r\n                    line: item.line,\r\n                    column: 0,\r\n                };\r\n            }\r\n            range = {\r\n                start: start,\r\n                end: {\r\n                    line: item.line,\r\n                    column: this.htmls[item.line - 1].text.length,\r\n                },\r\n            };\r\n            ranges.push(range);\r\n            prePos = item;\r\n        });\r\n        ranges.forEach((item) => {\r\n            let str = this.getRangeText(item.start, item.end);\r\n            text = str[0] === '\\n' ? (text += str) : (text += '\\n' + str);\r\n        });\r\n        if (cut) {\r\n            this.history.pushHistory(this._deleteMultiContent(ranges));\r\n            this.searcher.clearSearch();\r\n            this.fSearcher.refreshSearch();\r\n        }\r\n        return text.slice(1);\r\n    }\r\n    getAllText() {\r\n        return this.htmls\r\n            .map((item) => {\r\n                return item.text;\r\n            })\r\n            .join('\\n');\r\n    }\r\n}\r\nContext.contexts = {};\r\n\r\nexport default Context;\r\n","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(editor, context) {\r\n        this.initProperties(editor, context);\r\n    }\r\n    initProperties(editor, context) {\r\n        Util.defineProperties(this, editor, [\r\n            'nowCursorPos',\r\n            'cursor',\r\n            'selecter',\r\n            'searcher',\r\n            'autocomplete',\r\n            'fSearcher',\r\n            'history',\r\n            'autoTipList',\r\n            'setAutoTip',\r\n            'prevAutoTip',\r\n            'nextAutoTip',\r\n            'selectAutoTip',\r\n            'searchWord',\r\n            'openSearch',\r\n            '$emit',\r\n        ]);\r\n        Util.defineProperties(this, context, [\r\n            'htmls',\r\n            'insertContent',\r\n            'deleteContent',\r\n            'moveLineUp',\r\n            'moveLineDown',\r\n            'copyLineUp',\r\n            'copyLineDown',\r\n            'deleteLine'\r\n        ]);\r\n        this.setEditorData = (prop, value) => {\r\n            editor.setData(prop, value);\r\n        }\r\n    }\r\n    onKeyDown(e) {\r\n        let that = this;\r\n        if (e.ctrlKey && e.shiftKey) {\r\n            e.preventDefault();\r\n            switch (e.keyCode) {\r\n                case 37: //ctrl+shift+left\r\n                    this.selecter.select('left', true);\r\n                    break;\r\n                case 38: //ctrl+shift+up\r\n                    this.moveLineUp();\r\n                    break;\r\n                case 39: //ctrl+shift+right\r\n                    this.selecter.select('right', true);\r\n                    break;\r\n                case 40: //ctrl+shift+down\r\n                    this.moveLineDown();\r\n                    break;\r\n                case 68: //ctrl+shift+D\r\n                    this.copyLineUp();\r\n                    break;\r\n                case 75: //ctrl+shift+K\r\n                    this.deleteLine();\r\n                    break;\r\n                case 76: //ctrl+alt+L\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorLineEnds();\r\n                    break;\r\n            }\r\n            return false;\r\n        } else if (e.ctrlKey && e.altKey) {\r\n            switch (e.keyCode) {\r\n                case 38: //ctrl+alt+up\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorAbove();\r\n                    break;\r\n                case 40: //ctrl+alt+down\r\n                    e.preventDefault();\r\n                    this.cursor.addCursorBelow();\r\n                    break;\r\n            }\r\n        } else if (e.altKey && e.shiftKey) {\r\n            switch (e.keyCode) {\r\n                case 40: //alt+shift+down\r\n                    e.preventDefault();\r\n                    this.copyLineDown();\r\n                    break;\r\n            }\r\n        } else if (e.ctrlKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    _moveCursor('left', true);\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right', true);\r\n                    break;\r\n                case 65: //ctrl+A,全选\r\n                    e.preventDefault();\r\n                    this.selecter.selectAll();\r\n                    break;\r\n                case 68: //ctrl+D，搜素\r\n                    e.preventDefault();\r\n                    this.searchWord('down');\r\n                    break;\r\n                case 70: //ctrl+F，搜素\r\n                    e.preventDefault();\r\n                    this.openSearch();\r\n                    break;\r\n                case 72: //ctrl+H，搜素替换\r\n                    e.preventDefault();\r\n                    this.openSearch(true);\r\n                    break;\r\n                case 83: //ctrl+s 保存\r\n                    this.$emit('save');\r\n                    break;\r\n                case 90: //ctrl+Z，撤销\r\n                case 122:\r\n                    e.preventDefault();\r\n                    this.history.undo();\r\n                    break;\r\n                case 89: //ctrl+Y，重做\r\n                case 121:\r\n                    e.preventDefault();\r\n                    this.history.redo();\r\n                    break;\r\n            }\r\n        } else if (e.shiftKey) {\r\n            switch (e.keyCode) {\r\n                case 37: //left arrow\r\n                    this.selecter.select('left');\r\n                    break;\r\n                case 38: //up arrow\r\n                    this.selecter.select('up');\r\n                    break;\r\n                case 39: //right arrow\r\n                    this.selecter.select('right');\r\n                    break;\r\n                case 40: //down arrow\r\n                    this.selecter.select('down');\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (e.keyCode) {\r\n                case 9: //tab键\r\n                    e.preventDefault();\r\n                    this.autocomplete.emmet();\r\n                    break;\r\n                case 37: //left arrow\r\n                    _moveCursor('left');\r\n                    break;\r\n                case 35: //end键\r\n                    _moveCursor('end');\r\n                    break;\r\n                case 36: //home键\r\n                    _moveCursor('home');\r\n                    break;\r\n                case 38: //up arrow\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        that.prevAutoTip();\r\n                    } else {\r\n                        _moveCursor('up');\r\n                    }\r\n                    break;\r\n                case 39: //right arrow\r\n                    _moveCursor('right');\r\n                    break;\r\n                case 40: //down arrow\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        that.nextAutoTip();\r\n                    } else {\r\n                        _moveCursor('down');\r\n                    }\r\n                    break;\r\n                case 13:\r\n                case 100: //enter\r\n                    if (this.autoTipList && this.autoTipList.length) {\r\n                        e.preventDefault();\r\n                        this.selectAutoTip();\r\n                    }\r\n                    break;\r\n                case Util.keyCode.DELETE: //delete\r\n                    this.deleteContent(Util.keyCode.DELETE);\r\n                    this.autocomplete.search();\r\n                    break;\r\n                case Util.keyCode.BACKSPACE: //backspace\r\n                    this.deleteContent(Util.keyCode.BACKSPACE);\r\n                    this.autocomplete.search();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        function _moveCursor(direct, wholeWord) {\r\n            //ctrl+d后，第一次移动光标只是取消选中状态\r\n            if (!that.selecter.getRangeByCursorPos(that.nowCursorPos)) {\r\n                that.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                    that.cursor.moveCursor(cursorPos, direct, wholeWord);\r\n                });\r\n            }\r\n            that.setAutoTip(null); //取消自动提示\r\n            that.searcher.clearSearch();\r\n            that.fSearcher.clearActive();\r\n        }\r\n    }\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-search\",on:{\"contextmenu\":[function($event){$event.preventDefault();},function($event){$event.stopPropagation();}],\"mousedown\":function($event){$event.stopPropagation();},\"selectstart\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"my-search-left active-click\",staticStyle:{\"border-radius\":\"0\"},attrs:{\"tabindex\":\"-1\"},on:{\"click\":_vm.showReplace}},[_c('span',{staticClass:\"iconfont\",class:{ 'icon-down1': _vm.replaceVisible, 'icon-right': !_vm.replaceVisible },staticStyle:{\"font-size\":\"14px\"},attrs:{\"title\":\"Toggle Replace mode\"}})]),_c('div',{staticStyle:{\"flex-grow\":\"1\"}},[_c('div',{staticClass:\"my-search-top\"},[_c('div',{staticClass:\"my-search-input\",class:{ 'my-active': _vm.input1Focus }},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.text),expression:\"text\"}],ref:\"input1\",style:({ height: _vm.input1Height + 'px' }),attrs:{\"type\":\"text\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.text)},on:{\"blur\":function($event){_vm.input1Focus = false},\"focus\":function($event){_vm.input1Focus = true},\"keydown\":_vm.onKeyDown,\"input\":[function($event){if($event.target.composing){ return; }_vm.text=$event.target.value},_vm.onInput]}}),_c('span',{staticClass:\"my-search-suffix\",class:{ 'my-active': _vm.ignoreCase },attrs:{\"title\":\"Match Case(Alt+C)\"},on:{\"click\":_vm.changeCase}},[_vm._v(\"Aa\")]),_c('span',{staticClass:\"my-search-suffix iconfont icon-whole-word\",class:{ 'my-active': _vm.wholeWord },attrs:{\"title\":\"Match Whole Word(Alt+W)\"},on:{\"click\":_vm.changeWhole}})]),(_vm.count)?_c('div',[_c('span',[_vm._v(_vm._s(_vm.now))]),_c('span',[_vm._v(\" of \")]),_c('span',[_vm._v(_vm._s(_vm.count))])]):_c('span',{staticClass:\"no-result\",class:{ 'my-active': _vm.text }},[_vm._v(\"No results\")])]),(_vm.replaceVisible)?_c('div',{staticClass:\"my-search-bottom\",staticStyle:{\"margin-top\":\"5px\"}},[_c('div',{staticClass:\"my-search-input\",class:{ 'my-active': _vm.input2Focus }},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.replaceText),expression:\"replaceText\"}],ref:\"input2\",style:({ height: _vm.input2Height + 'px' }),attrs:{\"type\":\"text\",\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.replaceText)},on:{\"blur\":function($event){_vm.input2Focus = false},\"focus\":function($event){_vm.input2Focus = true},\"keydown\":_vm.onKeyDown2,\"input\":function($event){if($event.target.composing){ return; }_vm.replaceText=$event.target.value}}})]),_c('span',{staticClass:\"iconfont icon-replace active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace(Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.replace}}),_c('span',{staticClass:\"iconfont icon-replace-all active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Replace All(Ctrl+Alt+Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.replaceAll}})]):_vm._e()]),_c('div',{staticClass:\"my-search-right\"},[_c('span',{staticClass:\"iconfont icon-up active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Previous Match(Shift Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.searchPrev,\"focus\":function($event){_vm.preFocus = true},\"blur\":function($event){_vm.preFocus = false}}}),_c('span',{staticClass:\"iconfont icon-down active-click\",class:{ 'enabled-color': _vm.count > 0, 'disabled-color': _vm.count == 0 },staticStyle:{\"margin-right\":\"5px\"},attrs:{\"title\":\"Next Match(Enter)\",\"tabindex\":\"-1\"},on:{\"click\":_vm.searchNext,\"focus\":function($event){_vm.nextFocus = true},\"blur\":function($event){_vm.nextFocus = false}}}),_c('span',{staticClass:\"iconfont icon-close active-click\",attrs:{\"title\":\"Close\"},on:{\"click\":_vm.close}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @contextmenu.prevent @contextmenu.stop @mousedown.stop @selectstart.stop class=\"my-search\">\r\n        <div class=\"my-search-left active-click\" style=\"border-radius: 0\" tabindex=\"-1\" @click=\"showReplace\">\r\n            <span :class=\"{ 'icon-down1': replaceVisible, 'icon-right': !replaceVisible }\" class=\"iconfont\" style=\"font-size: 14px\" title=\"Toggle Replace mode\"></span>\r\n        </div>\r\n        <div style=\"flex-grow: 1\">\r\n            <div class=\"my-search-top\">\r\n                <div :class=\"{ 'my-active': input1Focus }\" class=\"my-search-input\">\r\n                    <textarea\r\n                        @blur=\"input1Focus = false\"\r\n                        @focus=\"input1Focus = true\"\r\n                        @keydown=\"onKeyDown\"\r\n                        @input=\"onInput\"\r\n                        ref=\"input1\"\r\n                        :style=\"{ height: input1Height + 'px' }\"\r\n                        type=\"text\"\r\n                        spellcheck=\"false\"\r\n                        v-model=\"text\"\r\n                    ></textarea>\r\n                    <span :class=\"{ 'my-active': ignoreCase }\" @click=\"changeCase\" class=\"my-search-suffix\" title=\"Match Case(Alt+C)\">Aa</span>\r\n                    <span :class=\"{ 'my-active': wholeWord }\" @click=\"changeWhole\" class=\"my-search-suffix iconfont icon-whole-word\" title=\"Match Whole Word(Alt+W)\"></span>\r\n                </div>\r\n                <div v-if=\"count\">\r\n                    <span>{{ now }}</span>\r\n                    <span>&nbsp;of&nbsp;</span>\r\n                    <span>{{ count }}</span>\r\n                </div>\r\n                <span class=\"no-result\" :class=\"{ 'my-active': text }\" v-else>No results</span>\r\n            </div>\r\n            <div class=\"my-search-bottom\" style=\"margin-top: 5px\" v-if=\"replaceVisible\">\r\n                <div :class=\"{ 'my-active': input2Focus }\" class=\"my-search-input\">\r\n                    <textarea\r\n                        @blur=\"input2Focus = false\"\r\n                        @focus=\"input2Focus = true\"\r\n                        @keydown=\"onKeyDown2\"\r\n                        ref=\"input2\"\r\n                        :style=\"{ height: input2Height + 'px' }\"\r\n                        type=\"text\"\r\n                        v-model=\"replaceText\"\r\n                        spellcheck=\"false\"\r\n                    ></textarea>\r\n                </div>\r\n                <span\r\n                    :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                    @click=\"replace\"\r\n                    class=\"iconfont icon-replace active-click\"\r\n                    style=\"margin-right: 5px\"\r\n                    title=\"Replace(Enter)\"\r\n                    tabindex=\"-1\"\r\n                ></span>\r\n                <span\r\n                    :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                    @click=\"replaceAll\"\r\n                    class=\"iconfont icon-replace-all active-click\"\r\n                    style=\"margin-right: 5px\"\r\n                    title=\"Replace All(Ctrl+Alt+Enter)\"\r\n                    tabindex=\"-1\"\r\n                ></span>\r\n            </div>\r\n        </div>\r\n        <div class=\"my-search-right\">\r\n            <span\r\n                :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                @click=\"searchPrev\"\r\n                @focus=\"preFocus = true\"\r\n                @blur=\"preFocus = false\"\r\n                class=\"iconfont icon-up active-click\"\r\n                style=\"margin-right: 5px\"\r\n                title=\"Previous Match(Shift Enter)\"\r\n                tabindex=\"-1\"\r\n            ></span>\r\n            <span\r\n                :class=\"{ 'enabled-color': count > 0, 'disabled-color': count == 0 }\"\r\n                @click=\"searchNext\"\r\n                @focus=\"nextFocus = true\"\r\n                @blur=\"nextFocus = false\"\r\n                class=\"iconfont icon-down active-click\"\r\n                style=\"margin-right: 5px\"\r\n                title=\"Next Match(Enter)\"\r\n                tabindex=\"-1\"\r\n            ></span>\r\n            <span @click=\"close\" class=\"iconfont icon-close active-click\" title=\"Close\"></span>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport $ from 'jquery';\r\nexport default {\r\n    name: 'Search',\r\n    props: {\r\n        now: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n        count: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            text: '',\r\n            replaceText: '',\r\n            replaceVisible: false,\r\n            wholeWord: false,\r\n            ignoreCase: false,\r\n            searchPrevActive: false,\r\n            searchNextActive: false,\r\n            input1Focus: false,\r\n            input2Focus: false,\r\n            preFocus: false,\r\n            nextFocus: false,\r\n            input1Height: 30,\r\n            input2Height: 30,\r\n        };\r\n    },\r\n    watch: {\r\n        text() {\r\n            let lines = this.text.split(/\\n/);\r\n            this.input1Height = lines.length * 20 + 10;\r\n        },\r\n        replaceText() {\r\n            let lines = this.replaceText.split(/\\n/);\r\n            this.input2Height = lines.length * 20 + 10;\r\n        },\r\n    },\r\n    created() {\r\n        $(document).on('keydown', (e) => {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                if (this.preFocus) {\r\n                    this.searchPrev();\r\n                } else if (this.nextFocus) {\r\n                    this.searchNext();\r\n                }\r\n            }\r\n        });\r\n    },\r\n    methods: {\r\n        initData(obj) {\r\n            for (let key in obj) {\r\n                this[key] = obj[key];\r\n            }\r\n        },\r\n        getData() {\r\n            return {\r\n                text: this.text,\r\n                wholeWord: this.wholeWord,\r\n                ignoreCase: this.ignoreCase,\r\n            };\r\n        },\r\n        search() {\r\n            let searchId = this.search.id || 1;\r\n            this.search.id = searchId;\r\n            this.$nextTick(() => {\r\n                if (this.search.id !== searchId) {\r\n                    return;\r\n                }\r\n                this.$emit('search', {\r\n                    text: this.text,\r\n                    ignoreCase: this.ignoreCase,\r\n                    wholeWord: this.wholeWord,\r\n                });\r\n            });\r\n        },\r\n        changeCase() {\r\n            this.ignoreCase = !this.ignoreCase;\r\n            this.focus();\r\n            this.onInput();\r\n        },\r\n        changeWhole() {\r\n            this.wholeWord = !this.wholeWord;\r\n            this.focus();\r\n            this.onInput();\r\n        },\r\n        showReplace() {\r\n            this.replaceVisible = !this.replaceVisible;\r\n        },\r\n        searchNext() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('next');\r\n        },\r\n        searchPrev() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('prev');\r\n        },\r\n        replace() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replace', { text: this.replaceText });\r\n        },\r\n        replaceAll() {\r\n            if (!this.count) {\r\n                return;\r\n            }\r\n            this.$emit('replaceAll', { text: this.replaceText });\r\n        },\r\n        close() {\r\n            this.$emit('close');\r\n        },\r\n        focus() {\r\n            this.$refs.input1.focus();\r\n            requestAnimationFrame(() => {\r\n                this.$refs.input1.focus();\r\n            });\r\n        },\r\n        directBlur() {\r\n            this.searchPrevActive = false;\r\n            this.searchNextActive = false;\r\n        },\r\n        onKeyDown(e) {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                e.preventDefault();\r\n                this.$emit('next');\r\n            }\r\n        },\r\n        onKeyDown2(e) {\r\n            if (e.keyCode === 13 || e.keyCode === 100) {\r\n                e.preventDefault();\r\n                if (this.count) {\r\n                    if (e.ctrlKey && e.altKey) {\r\n                        this.replaceAll();\r\n                    } else {\r\n                        this.replace();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onInput() {\r\n            clearTimeout(this.searchTimer);\r\n            this.searchTimer = setTimeout(() => {\r\n                this.search();\r\n            }, 100);\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Search.vue?vue&type=template&id=097d468a&\"\nimport script from \"./Search.vue?vue&type=script&lang=js&\"\nexport * from \"./Search.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"auto\",staticClass:\"my-auto my-shadow my-border my-scroll-overlay my-scroll-mini\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();},\"wheel\":function($event){$event.stopPropagation();}}},[_c('div',_vm._l((_vm.tipList),function(item){return _c('div',{staticClass:\"my-auto-item my-center-between\",class:{'my-active': item.active},on:{\"mousedown\":function($event){return _vm.onClick(item)}}},[_c('div',{staticClass:\"my-center-between\"},[_c('div',{staticClass:\"my-auto-icon my-center-center iconfont\",class:[item.icon]}),_c('div',{staticClass:\"my-auto-content\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm._html(item))}})])]),_c('div',{staticClass:\"my-auto-desc\"},[_vm._v(_vm._s(item.desc))])])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop @wheel.stop class=\"my-auto my-shadow my-border my-scroll-overlay my-scroll-mini\" ref=\"auto\">\r\n\t\t<div>\r\n\t\t\t<div :class=\"{'my-active': item.active}\" @mousedown=\"onClick(item)\" class=\"my-auto-item my-center-between\" v-for=\"item in tipList\">\r\n\t\t\t\t<div class=\"my-center-between\">\r\n\t\t\t\t\t<div :class=\"[item.icon]\" class=\"my-auto-icon my-center-center iconfont\"></div>\r\n\t\t\t\t\t<div class=\"my-auto-content\">\r\n\t\t\t\t\t\t<span v-html=\"_html(item)\"></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"my-auto-desc\">{{item.desc}}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'AutoTip',\r\n    props: {\r\n        tipList: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n        styles: {\r\n            type: Object\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            nowIndex: 0,\r\n            itemHeight: 25\r\n        }\r\n    },\r\n    computed: {\r\n        _html() {\r\n            return (item) => {\r\n                let index = 0;\r\n                let html = '';\r\n                item.indexs.forEach((_index) => {\r\n                    html += item.result.slice(index, _index);\r\n                    html += `<span class=\"match-char\">${item.result[_index]}</span>`;\r\n                    index = _index + 1;\r\n                });\r\n                return html + item.result.slice(index);\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        nowIndex() {\r\n            let $auto = this.$refs.auto;\r\n            let height = (this.nowIndex + 1) * this.itemHeight;\r\n            if ($auto && height > $auto.clientHeight + $auto.scrollTop) {\r\n                $auto.scrollTop = height - $auto.clientHeight;\r\n            } else if ($auto && height < $auto.scrollTop + this.itemHeight) {\r\n                $auto.scrollTop = height - this.itemHeight;\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n        onClick(item) {\r\n            this.$emit('change', item);\r\n        },\r\n        prev() {\r\n            let index = this.getActiveIndex();\r\n            this.tipList[index].active = false;\r\n            index = index - 1;\r\n            index = index < 0 ? this.tipList.length - 1 : index;\r\n            this.tipList[index].active = true;\r\n            this.nowIndex = index;\r\n        },\r\n        next() {\r\n            let index = this.getActiveIndex();\r\n            this.tipList[index].active = false;\r\n            index = index + 1;\r\n            index = index > this.tipList.length - 1 ? 0 : index;\r\n            this.tipList[index].active = true;\r\n            this.nowIndex = index;\r\n        },\r\n        getActiveIndex() {\r\n            for (let i = 0; i < this.tipList.length; i++) {\r\n                if (this.tipList[i].active) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.icon-function {\r\n    color: #a6e22e;\r\n}\r\n.icon-class {\r\n    color: gold;\r\n}\r\n.icon-property {\r\n    color: lightskyblue;\r\n}\r\n.icon-value {\r\n    color: lightblue;\r\n}\r\n</style>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./AutoTip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./AutoTip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AutoTip.vue?vue&type=template&id=378f7506&scoped=true&\"\nimport script from \"./AutoTip.vue?vue&type=script&lang=js&\"\nexport * from \"./AutoTip.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AutoTip.vue?vue&type=style&index=0&id=378f7506&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"378f7506\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-tip\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"my-tip-content\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n\t<div :style=\"styles\" @mousedown.stop class=\"my-tip\">\r\n\t\t<div class=\"my-tip-content\">\r\n\t\t\t<div v-html=\"content\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'Tip',\r\n    props: {\r\n        content: String,\r\n        styles: {\r\n            type: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n        }\r\n    },\r\n    created() {\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Tip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tip.vue?vue&type=template&id=3edf792c&\"\nimport script from \"./Tip.vue?vue&type=script&lang=js&\"\nexport * from \"./Tip.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div @contextmenu.prevent.stop=\"onContextmenu\" @selectstart.prevent @wheel.prevent=\"onWheel\" class=\"my-editor-wrap\" ref=\"editor\">\r\n        <!-- 行号 -->\r\n        <div :style=\"{ top: _numTop }\" class=\"my-nums\" v-if=\"active\">\r\n            <!-- 占位行号，避免行号宽度滚动时变化 -->\r\n            <div class=\"my-num\" style=\"visibility: hidden\">{{ maxLine }}</div>\r\n            <div :class=\"{ 'my-active': nowCursorPos.line === line.num }\" :key=\"line.num\" :style=\"{ height: _lineHeight, 'line-height': _lineHeight }\" class=\"my-num\" v-for=\"line in renderHtmls\">\r\n                <span class=\"num\">{{ line.num }}</span>\r\n                <!-- 折叠图标 -->\r\n                <span\r\n                    :class=\"['iconfont', line.fold == 'open' ? 'my-fold-open icon-down1' : 'my-fold-close icon-right']\"\r\n                    @click=\"onToggleFold(line.num)\"\r\n                    class=\"my-fold my-center-center\"\r\n                    v-if=\"line.fold\"\r\n                ></span>\r\n            </div>\r\n        </div>\r\n        <div :style=\"{ 'box-shadow': _leftShadow }\" class=\"my-content-wrap\">\r\n            <!-- 可滚动区域 -->\r\n            <div @scroll=\"onScroll\" class=\"my-scroller my-scroll-overlay\" ref=\"scroller\">\r\n                <!-- 内如区域 -->\r\n                <div\r\n                    :style=\"{ minWidth: _contentMinWidth, height: contentHeight }\"\r\n                    @mousedown=\"onContentMdown\"\r\n                    @mousemove=\"onContentMmove\"\r\n                    @mouseleave=\"onContentMLeave\"\r\n                    @selectend.prevent=\"onSelectend\"\r\n                    class=\"my-content\"\r\n                    ref=\"content\"\r\n                >\r\n                    <div :style=\"{ top: _top }\" class=\"my-render\" ref=\"render\" v-if=\"active\">\r\n                        <div\r\n                            :class=\"{ 'my-active': _activeLine(line.num) }\"\r\n                            :data-line=\"line.num\"\r\n                            :id=\"'line_' + line.num\"\r\n                            :key=\"line.num\"\r\n                            :style=\"{ height: _lineHeight, 'line-height': _lineHeight }\"\r\n                            class=\"my-line\"\r\n                            v-for=\"line in renderHtmls\"\r\n                        >\r\n                            <!-- my-select-bg为选中状态 -->\r\n                            <div\r\n                                :class=\"[\r\n                                    line.active ? 'my-active' : '',\r\n                                    line.selected ? (line.isFsearch ? 'my-search-bg' : 'my-select-bg') : '',\r\n                                    line.selected && selectedFg ? 'my-select-fg' : '',\r\n                                    line.fold == 'close' ? 'fold-close' : '',\r\n                                ]\"\r\n                                :data-line=\"line.num\"\r\n                                class=\"my-code\"\r\n                                v-html=\"line.html\"\r\n                            ></div>\r\n                            <!-- 当前光标所处范围-begin -->\r\n                            <div\r\n                                class=\"my-bracket-match\"\r\n                                :style=\"{ left: bracketMatch.start.left + 'px', width: bracketMatch.start.width + 'px' }\"\r\n                                v-if=\"bracketMatch && line.num == bracketMatch.start.line\"\r\n                            ></div>\r\n                            <!-- 当前光标所处范围-end -->\r\n                            <div\r\n                                class=\"my-bracket-match\"\r\n                                :style=\"{ left: bracketMatch.end.left + 'px', width: bracketMatch.end.width + 'px' }\"\r\n                                v-if=\"bracketMatch && line.num == bracketMatch.end.line\"\r\n                            ></div>\r\n                            <!-- 选中时的首行背景 -->\r\n                            <div\r\n                                :class=\"{ 'my-active': range.active, 'my-search-bg': range.isFsearch }\"\r\n                                :style=\"{ left: range.left + 'px', width: range.width + 'px' }\"\r\n                                class=\"my-line-bg my-select-bg\"\r\n                                v-for=\"range in line.selectStarts\"\r\n                            ></div>\r\n                            <!-- 选中时的末行背景 -->\r\n                            <div\r\n                                :class=\"{ 'my-active': range.active, 'my-search-bg': range.isFsearch }\"\r\n                                :style=\"{ left: range.left + 'px', width: range.width + 'px' }\"\r\n                                class=\"my-line-bg my-select-bg\"\r\n                                v-for=\"range in line.selectEnds\"\r\n                            ></div>\r\n                            <span :style=\"{ left: _tabLineLeft(tab) }\" class=\"my-tab-line\" v-for=\"tab in line.tabNum\"></span>\r\n                            <!-- 模拟光标 -->\r\n                            <div :style=\"{ height: _lineHeight, left: left, visibility: _cursorVisible }\" class=\"my-cursor\" style=\"top: 0px\" v-for=\"left in line.cursorList\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 输入框 -->\r\n                    <textarea\r\n                        :style=\"{ top: _textAreaPos.top, left: _textAreaPos.left }\"\r\n                        @blur=\"onBlur\"\r\n                        @compositionend=\"onCompositionend\"\r\n                        @compositionstart=\"onCompositionstart\"\r\n                        @copy.prevent=\"onCopy\"\r\n                        @cut.prevent=\"onCut\"\r\n                        @focus=\"onFocus\"\r\n                        @input=\"onInput\"\r\n                        @keydown=\"onKeyDown\"\r\n                        @paste.prevent=\"onPaste\"\r\n                        class=\"my-textarea\"\r\n                        ref=\"textarea\"\r\n                    ></textarea>\r\n                    <auto-tip :styles=\"autoTipStyle\" :tipList=\"autoTipList\" @change=\"onClickAuto\" ref=\"autoTip\" v-show=\"autoTipList && autoTipList.length\"></auto-tip>\r\n                </div>\r\n            </div>\r\n            <!-- 搜索框 -->\r\n            <search-dialog\r\n                :count=\"searchCount\"\r\n                :now=\"searchNow\"\r\n                @close=\"onCloseSearch\"\r\n                @next=\"onSearchNext()\"\r\n                @prev=\"onSearchPrev()\"\r\n                @replace=\"replace\"\r\n                @replaceAll=\"replaceAll\"\r\n                @search=\"onSearch\"\r\n                ref=\"searchDialog\"\r\n                v-show=\"searchVisible\"\r\n            ></search-dialog>\r\n        </div>\r\n        <!-- 右键菜单 -->\r\n        <Menu :checkable=\"false\" :menuList=\"menuList\" :styles=\"menuStyle\" @change=\"onClickMenu\" ref=\"menu\" v-show=\"menuVisible\"></Menu>\r\n        <tip :content=\"tipContent\" :styles=\"tipStyle\" ref=\"tip\" v-show=\"tipContent\"></tip>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Tokenizer from '@/module/tokenizer/index';\r\nimport Lint from '@/module/lint/index';\r\nimport Autocomplete from '@/module/autocomplete/index';\r\nimport Fold from '@/module/fold/index';\r\nimport Search from '@/module/search/index';\r\nimport Select from '@/module/select/index';\r\nimport Cursor from '@/module/cursor/index';\r\nimport History from '@/module/history/index';\r\nimport Context from '@/module/context/index';\r\nimport ShortCut from '@/module/shortcut/editor';\r\nimport SearchDialog from './Search';\r\nimport Menu from './Menu';\r\nimport AutoTip from './AutoTip';\r\nimport Tip from './Tip';\r\nimport Util from '@/common/util';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst contexts = Context.contexts;\r\n\r\nexport default {\r\n    name: 'Editor',\r\n    components: {\r\n        SearchDialog,\r\n        Menu,\r\n        AutoTip,\r\n        Tip,\r\n    },\r\n    props: {\r\n        id: {\r\n            type: Number,\r\n        },\r\n        active: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            charObj: {\r\n                charWidth: 7.15,\r\n                fullAngleCharWidth: 15,\r\n                charHight: 19,\r\n            },\r\n            nowCursorPos: {\r\n                line: 1,\r\n                column: 0,\r\n            },\r\n            cursorVisible: true,\r\n            cursorFocus: true,\r\n            language: '',\r\n            theme: '',\r\n            tabSize: 4,\r\n            renderHtmls: [],\r\n            startLine: 1,\r\n            top: 0,\r\n            cursorLeft: 0,\r\n            scrollLeft: 0,\r\n            scrollTop: 0,\r\n            maxVisibleLines: 1,\r\n            maxLine: 1,\r\n            contentHeight: '100%',\r\n            scrollerArea: {},\r\n            bracketMatch: {\r\n                start: {},\r\n                end: {},\r\n            },\r\n            maxWidthObj: {\r\n                lineId: null,\r\n                text: '',\r\n                width: 0,\r\n            },\r\n            menuList: [\r\n                [\r\n                    {\r\n                        name: 'Cut',\r\n                        op: 'cut',\r\n                        shortcut: 'Ctrl+X',\r\n                    },\r\n                    {\r\n                        name: 'Copy',\r\n                        op: 'copy',\r\n                        shortcut: 'Ctrl+C',\r\n                    },\r\n                    {\r\n                        name: 'Paste',\r\n                        op: 'paste',\r\n                        shortcut: 'Ctrl+V',\r\n                    },\r\n                ],\r\n            ],\r\n            menuStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n                'min-width': '200px',\r\n            },\r\n            tipStyle: {\r\n                top: '0px',\r\n                left: '0px',\r\n            },\r\n            autoTipStyle: {\r\n                top: '50%',\r\n                left: '50%',\r\n            },\r\n            errorMap: {},\r\n            errors: [],\r\n            autoTipList: [],\r\n            tipContent: null,\r\n            menuVisible: false,\r\n            searchVisible: false,\r\n            selectedFg: false,\r\n            activeLineBg: true,\r\n            searchNow: 1,\r\n            searchCount: 0,\r\n        };\r\n    },\r\n    computed: {\r\n        _numTop() {\r\n            return this.top - this.charObj.charHight + 'px';\r\n        },\r\n        _leftShadow() {\r\n            return this.scrollLeft ? '17px 0 16px -16px rgba(0, 0, 0, 0.8) inset' : 'none';\r\n        },\r\n        _top() {\r\n            return (this.folder.getRelativeLine(this.startLine) - 1) * this.charObj.charHight + 'px';\r\n        },\r\n        _lineHeight() {\r\n            return this.charObj.charHight + 'px';\r\n        },\r\n        _cursorVisible() {\r\n            return this.cursorVisible && this.cursorFocus ? 'visible' : 'hidden';\r\n        },\r\n        _hScrollWidth() {\r\n            return this._contentMinWidth;\r\n        },\r\n        _contentMinWidth() {\r\n            let width = 0;\r\n            if (this.$refs.content) {\r\n                width = Util.getStrExactWidth(this.maxWidthObj.text, this.tabSize, this.$refs.content);\r\n                width += this.charObj.fullAngleCharWidth;\r\n            }\r\n            width = this.scrollerArea.width > width ? this.scrollerArea.width : width;\r\n            return width + 'px';\r\n        },\r\n        _textAreaPos() {\r\n            let left = this.cursorLeft;\r\n            let top = this.top;\r\n            if (this.nowCursorPos) {\r\n                let line = this.nowCursorPos.line < this.startLine ? this.startLine : this.nowCursorPos.line;\r\n                top = this.folder.getRelativeLine(line) * this.charObj.charHight;\r\n                if (top > this.scrollTop + this.scrollerArea.height - 2 * this.charObj.charHight) {\r\n                    top = this.scrollTop + this.scrollerArea.height - 2 * this.charObj.charHight;\r\n                }\r\n            }\r\n            return {\r\n                top: top + 'px',\r\n                left: left + 'px',\r\n            };\r\n        },\r\n        _tabLineLeft() {\r\n            return (tab) => {\r\n                return (tab - 1) * this.tabSize * this.charObj.charWidth + 'px';\r\n            };\r\n        },\r\n        _activeLine() {\r\n            return (num) => {\r\n                return this.nowCursorPos.line == num && this.activeLineBg;\r\n            };\r\n        },\r\n        space() {\r\n            return Util.space(this.tabSize);\r\n        },\r\n        myContext() {\r\n            return contexts[this.id];\r\n        },\r\n    },\r\n    watch: {\r\n        language: function (newVal) {\r\n            this.myContext.htmls.forEach((lineObj) => {\r\n                lineObj.tokens = null;\r\n                lineObj.folds = null;\r\n                lineObj.stateFold = null;\r\n                lineObj.states = null;\r\n                lineObj.html = '';\r\n            });\r\n            this.lint.initLanguage(newVal);\r\n            this.tokenizer.initLanguage(newVal);\r\n        },\r\n        theme: function () {\r\n            this.myContext.htmls.forEach((lineObj) => {\r\n                lineObj.html = '';\r\n            });\r\n            this.render();\r\n        },\r\n        tabSize: function (newVal) {\r\n            this.render();\r\n            this.maxWidthObj = { lineId: null, text: '', width: 0 };\r\n            this.myContext.setLineWidth(this.myContext.htmls);\r\n        },\r\n        maxLine: function (newVal) {\r\n            this.setContentHeight();\r\n        },\r\n        startLine: function (newVal) {\r\n            this.render();\r\n            this.tokenizer.tokenizeVisibleLins();\r\n        },\r\n        nowCursorPos: {\r\n            handler: function (newVal) {\r\n                EventBus.$emit('cursor-change', {\r\n                    line: newVal ? newVal.line : '?',\r\n                    column: newVal ? newVal.column : '?',\r\n                });\r\n                this.renderBracketMatch();\r\n            },\r\n            deep: true,\r\n        },\r\n        active: function (newVal) {\r\n            if (newVal) {\r\n                this.showEditor();\r\n            } else {\r\n                this.autocomplete.stop();\r\n            }\r\n        },\r\n    },\r\n    created() {\r\n        this.initData();\r\n        this.initEventBus();\r\n        this.initEvent();\r\n    },\r\n    mounted() {\r\n        this.selectedFg = !!globalData.colors['editor.selectionForeground'];\r\n        this.showEditor();\r\n        this.initResizeEvent();\r\n    },\r\n    destroyed() {\r\n        this.unbindEvent();\r\n    },\r\n    methods: {\r\n        // 初始化数据\r\n        initData() {\r\n            this.editorId = this.id;\r\n            contexts[this.editorId] = new Context(this);\r\n            this.maxWidthObj.lineId = this.myContext.htmls[0].lineId;\r\n            this.tokenizer = new Tokenizer(this, this.myContext);\r\n            this.lint = new Lint(this, this.myContext);\r\n            this.autocomplete = new Autocomplete(this, this.myContext);\r\n            this.folder = new Fold(this, this.myContext);\r\n            this.history = new History(this, this.myContext);\r\n            this.selecter = new Select(this, this.myContext);\r\n            this.searcher = new Search(this, this.myContext, this.selecter);\r\n            this.fSelecter = new Select(this, this.myContext);\r\n            this.fSearcher = new Search(this, this.myContext, this.fSelecter);\r\n            this.shortcut = new ShortCut(this, this.myContext);\r\n            this.cursor = new Cursor(this, this.myContext);\r\n            this.cursor.addCursorPos(this.nowCursorPos);\r\n            this.wordPattern = Util.getWordPattern(this.language);\r\n            this.wordPattern = new RegExp(`^(${this.wordPattern.source})`);\r\n        },\r\n        // 初始化文档事件\r\n        initEvent() {\r\n            this.initEvent.fn1 = (e) => {\r\n                this.active && this.onDocumentMmove(e);\r\n            };\r\n            this.initEvent.fn2 = (e) => {\r\n                this.active && this.onDocumentMouseUp(e);\r\n            };\r\n            $(document).on('mousemove', this.initEvent.fn1);\r\n            $(document).on('mouseup', this.initEvent.fn2);\r\n        },\r\n        initResizeEvent() {\r\n            const resizeObserver = new ResizeObserver((entries) => {\r\n                if (this.$refs.editor) {\r\n                    this.showEditor();\r\n                }\r\n            });\r\n            resizeObserver.observe(this.$refs.editor);\r\n        },\r\n        initEventBus() {\r\n            EventBus.$on(\r\n                'language-change',\r\n                (this.initEventBus.fn1 = (language) => {\r\n                    if (this.active) {\r\n                        this.language = language;\r\n                    }\r\n                    this._language = language;\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'tab-size-change',\r\n                (this.initEventBus.fn2 = (tabSize) => {\r\n                    if (this.active) {\r\n                        this.tabSize = tabSize;\r\n                    }\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'close-menu',\r\n                (this.initEventBus.fn3 = () => {\r\n                    this.menuVisible = false;\r\n                    this.autoTipList = null;\r\n                    this.autocomplete.stop();\r\n                })\r\n            );\r\n            EventBus.$on(\r\n                'theme-change',\r\n                (this.initEventBus.fn4 = (theme) => {\r\n                    this.selectedFg = !!globalData.colors['editor.selectionForeground'];\r\n                    if (this.active) {\r\n                        this.theme = theme;\r\n                    }\r\n                    this._theme = theme;\r\n                })\r\n            );\r\n        },\r\n        unbindEvent() {\r\n            $(document).unbind('mousemove', this.initEvent.fn1);\r\n            $(document).unbind('mouseup', this.initEvent.fn2);\r\n            EventBus.$off('language-change', this.initEventBus.fn1);\r\n            EventBus.$off('tab-size-change', this.initEventBus.fn2);\r\n            EventBus.$off('close-menu', this.initEventBus.fn3);\r\n            EventBus.$off('theme-change', this.initEventBus.fn4);\r\n        },\r\n        showEditor() {\r\n            if (this.active) {\r\n                this.$nextTick(() => {\r\n                    this.language = this._language || '';\r\n                    this.theme = this._theme || '';\r\n                    this.charObj = Util.getCharWidth(this.$refs.content);\r\n                    this.maxVisibleLines = Math.ceil(this.$refs.scroller.clientHeight / this.charObj.charHight) + 1;\r\n                    this.render();\r\n                    this.focus();\r\n                });\r\n            }\r\n        },\r\n        // 显示光标\r\n        showCursor() {\r\n            this.cursorFocus = true;\r\n            if (!this.cursor.multiCursorPos.size) {\r\n                this.showCursor.show = false;\r\n                return;\r\n            }\r\n            if (this.showCursor.show) {\r\n                return;\r\n            }\r\n            this.showCursor.show = true;\r\n            this.cursorVisible = true;\r\n            let _timer = () => {\r\n                clearTimeout(this.curserTimer);\r\n                this.curserTimer = setTimeout(() => {\r\n                    this.cursorVisible = !this.cursorVisible;\r\n                    _timer();\r\n                }, 500);\r\n            };\r\n            _timer();\r\n        },\r\n        // 隐藏光标\r\n        hideCursor() {\r\n            clearTimeout(this.curserTimer);\r\n            this.showCursor.show = false;\r\n            this.cursorFocus = false;\r\n        },\r\n        // 聚焦\r\n        focus() {\r\n            this.$refs.textarea.focus();\r\n            requestAnimationFrame(() => {\r\n                this.$refs.textarea.focus();\r\n            });\r\n        },\r\n        // 渲染\r\n        render(forceCursorView) {\r\n            let renderId = this.renderId + 1 || 1;\r\n            this.renderId = renderId;\r\n            this.$nextTick(() => {\r\n                if (this.renderId !== renderId) {\r\n                    return;\r\n                }\r\n                this.renderLine();\r\n                this.renderSelectedBg();\r\n                this.renderSelectionToken();\r\n                this.renderError();\r\n                this.renderCursor(forceCursorView);\r\n                this.$nextTick(() => {\r\n                    this.scrollerArea = {\r\n                        height: this.$refs.scroller.clientHeight,\r\n                        width: this.$refs.scroller.clientWidth,\r\n                    };\r\n                });\r\n            });\r\n        },\r\n        // 渲染代码\r\n        renderLine(lineId) {\r\n            let that = this;\r\n            // 只更新一行\r\n            if (lineId) {\r\n                if (this.myContext.renderedIdMap.has(lineId)) {\r\n                    let item = this.myContext.lineIdMap.get(lineId);\r\n                    let obj = this.myContext.renderedIdMap.get(lineId);\r\n                    // 高亮完成渲染某一行时，render可能还没完成，导致num没更新，此时跳过\r\n                    if (this.myContext.htmls[obj.num - 1] && this.myContext.htmls[obj.num - 1].lineId === lineId) {\r\n                        Object.assign(obj, _getObj(item, obj.num));\r\n                        this.renderCursor();\r\n                        this.renderSelectedBg();\r\n                        this.renderSelectionToken(obj.line);\r\n                        this.renderError(obj.line);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            this.myContext.renderedIdMap.clear();\r\n            this.myContext.renderedLineMap.clear();\r\n            this.renderHtmls = [];\r\n            for (let i = 0, startLine = this.startLine; i < this.maxVisibleLines && startLine <= this.myContext.htmls.length; i++) {\r\n                let lineObj = this.myContext.htmls[startLine - 1];\r\n                let lineId = lineObj.lineId;\r\n                let obj = _getObj(lineObj, startLine);\r\n                let fold = this.folder.getFoldByLine(startLine);\r\n                this.renderHtmls.push(obj);\r\n                this.myContext.renderedIdMap.set(lineId, obj);\r\n                this.myContext.renderedLineMap.set(startLine, obj);\r\n                if (fold) {\r\n                    startLine = fold.end.line;\r\n                } else {\r\n                    startLine++;\r\n                }\r\n            }\r\n\r\n            function _getObj(item, line) {\r\n                let tabNum = _getTabNum(line);\r\n                let fold = '';\r\n                if (that.folder.getFoldByLine(line)) {\r\n                    //该行已经折叠\r\n                    fold = 'close';\r\n                } else if (that.folder.getRangeFold(line, true)) {\r\n                    //可折叠\r\n                    fold = 'open';\r\n                }\r\n                let html = item.html;\r\n                if (!html) {\r\n                    if (item.tokens && item.tokens.length) {\r\n                        item.tokens = that.tokenizer.splitLongToken(item.tokens);\r\n                        item.html = that.tokenizer.createHtml(item.tokens, item.text);\r\n                        html = item.html;\r\n                    } else {\r\n                        html = Util.htmlTrans(item.text);\r\n                    }\r\n                }\r\n                html = html.replace(/\\t/g, that.space);\r\n                return {\r\n                    html: html,\r\n                    num: line,\r\n                    tabNum: tabNum,\r\n                    selectStarts: [],\r\n                    selectEnds: [],\r\n                    selected: false,\r\n                    isFsearch: false,\r\n                    fold: fold,\r\n                    cursorList: [],\r\n                };\r\n            }\r\n\r\n            function _getTabNum(line) {\r\n                let text = that.myContext.htmls[line - 1].text;\r\n                let wReg = /[^\\s]/;\r\n                let tabNum = 0;\r\n                if (that.myContext.renderedLineMap.has(line)) {\r\n                    return that.myContext.renderedLineMap.get(line).tabNum;\r\n                }\r\n                if (wReg.exec(text)) {\r\n                    //该行有内容\r\n                    let spaceNum = /^\\s+/.exec(text);\r\n                    if (spaceNum) {\r\n                        tabNum = /\\t+/.exec(spaceNum[0]);\r\n                        tabNum = (tabNum && tabNum[0].length) || 0;\r\n                        tabNum = tabNum + Math.ceil((spaceNum[0].length - tabNum) / that.tabSize);\r\n                    }\r\n                } else {\r\n                    //空行\r\n                    let _line = line - 1;\r\n                    while (_line >= 1) {\r\n                        if (wReg.exec(that.myContext.htmls[_line - 1].text)) {\r\n                            tabNum = _getTabNum(_line);\r\n                            if (that.folder.getRangeFold(_line, true)) {\r\n                                tabNum++;\r\n                            }\r\n                            break;\r\n                        }\r\n                        _line--;\r\n                    }\r\n                }\r\n                return tabNum;\r\n            }\r\n        },\r\n        renderSelectedBg() {\r\n            let renderSelectedBgId = this.renderSelectedBgId + 1 || 1;\r\n            this.renderSelectedBgId = renderSelectedBgId;\r\n            this.activeLineBg = true;\r\n            this.$nextTick(() => {\r\n                if (this.renderSelectedBgId != renderSelectedBgId) {\r\n                    return;\r\n                }\r\n                if (!this.renderHtmls.length) {\r\n                    //删除内容后，窗口还没滚动到可视区域\r\n                    requestAnimationFrame(() => {\r\n                        this.renderSelectedBg();\r\n                    });\r\n                    return;\r\n                }\r\n                this.clearSelectionToken();\r\n                this.renderHtmls.forEach((item) => {\r\n                    item.selected = false;\r\n                    item.selectStarts = [];\r\n                    item.selectEnds = [];\r\n                });\r\n                this.fSelecter.ranges.forEach((range) => {\r\n                    this._renderSelectedBg(range, true);\r\n                });\r\n                this.selecter.ranges.forEach((range) => {\r\n                    let _range = this.fSelecter.getRangeByCursorPos(range.start);\r\n                    if (this.searchVisible) {\r\n                        // 优先渲染搜索框的选中范围\r\n                        if (!_range && range.active) {\r\n                            this._renderSelectedBg(range);\r\n                        }\r\n                    } else {\r\n                        this._renderSelectedBg(range);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        // 渲染选中背景\r\n        _renderSelectedBg(range, isFsearch) {\r\n            let firstLine = this.renderHtmls[0].num;\r\n            let lastLine = this.renderHtmls.peek().num;\r\n            let start = range.start;\r\n            let end = range.end;\r\n            let text = this.myContext.htmls[start.line - 1].text;\r\n            let endColumn = text.length;\r\n            start.left = this.getStrWidth(text, 0, start.column);\r\n            if (start.line == end.line) {\r\n                start.width = this.getStrWidth(text, start.column, end.column) || 10;\r\n            } else {\r\n                start.width = this.getStrWidth(text, start.column) || 10;\r\n                end.left = 0;\r\n                text = this.myContext.htmls[end.line - 1].text;\r\n                end.width = this.getStrWidth(text, 0, end.column) || 10;\r\n            }\r\n            firstLine = firstLine > start.line + 1 ? firstLine : start.line + 1;\r\n            lastLine = lastLine < end.line - 1 ? lastLine : end.line - 1;\r\n            for (let line = firstLine; line <= lastLine; line++) {\r\n                if (this.myContext.renderedLineMap.has(line)) {\r\n                    let lineObj = this.myContext.renderedLineMap.get(line);\r\n                    lineObj.selected = true;\r\n                    lineObj.isFsearch = isFsearch;\r\n                    lineObj.active = range.active;\r\n                }\r\n            }\r\n            if (this.myContext.renderedLineMap.has(start.line)) {\r\n                this.myContext.renderedLineMap.get(start.line).selectStarts.push({\r\n                    left: start.left,\r\n                    width: start.width,\r\n                    active: range.active,\r\n                    isFsearch: isFsearch,\r\n                });\r\n                if (end.line == start.line) {\r\n                    endColumn = end.column;\r\n                }\r\n                range.active && this._renderSelectionToken(start.line, start.column, endColumn);\r\n            }\r\n            if (end.line > start.line && this.myContext.renderedLineMap.has(end.line)) {\r\n                this.myContext.renderedLineMap.get(end.line).selectEnds.push({\r\n                    left: end.left,\r\n                    width: end.width,\r\n                    active: range.active,\r\n                    isFsearch: isFsearch,\r\n                });\r\n                range.active && this._renderSelectionToken(end.line, 0, end.column);\r\n            }\r\n            if (start.line === this.nowCursorPos.line || end.line === this.nowCursorPos.line) {\r\n                this.activeLineBg = false;\r\n            }\r\n        },\r\n        renderSelectionToken(line) {\r\n            // 只有设置了选中前景色才处理\r\n            if (!globalData.colors['editor.selectionForeground']) {\r\n                return;\r\n            }\r\n            let results = this.selecter.getRangeByLine(line);\r\n            results.forEach((range) => {\r\n                if (range.active) {\r\n                    let startColumn = range.start.column;\r\n                    let endColumn = range.end.column;\r\n                    if (range.start.line === line) {\r\n                        if (range.end.line > range.start.line) {\r\n                            endColumn = this.myContext.htmls[range.start.line - 1].text.length;\r\n                        }\r\n                    } else {\r\n                        startColumn = 0;\r\n                    }\r\n                    this._renderSelectionToken(line, startColumn, endColumn);\r\n                }\r\n            });\r\n        },\r\n        _renderSelectionToken(line, startColumn, endColumn) {\r\n            // 只有设置了选中前景色才处理\r\n            if (!globalData.colors['editor.selectionForeground']) {\r\n                return;\r\n            }\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            let tokens = lineObj.tokens;\r\n            let scopes = ['selected'];\r\n            let _tokens = [];\r\n            this.myContext.fgLines.push(line);\r\n            for (let i = 0; i < tokens.length; i++) {\r\n                let token = tokens[i];\r\n                if (token.startIndex <= startColumn && token.endIndex > startColumn) {\r\n                    if (token.startIndex < startColumn) {\r\n                        _tokens.push({\r\n                            startIndex: token.startIndex,\r\n                            endIndex: startColumn,\r\n                            scopes: token.scopes,\r\n                        });\r\n                    }\r\n                    if (token.endIndex > endColumn) {\r\n                        _tokens.push({\r\n                            startIndex: startColumn,\r\n                            endIndex: endColumn,\r\n                            scopes: scopes,\r\n                        });\r\n                        _tokens.push({\r\n                            startIndex: endColumn,\r\n                            endIndex: token.endIndex,\r\n                            scopes: token.scopes,\r\n                        });\r\n                        _tokens = _tokens.concat(tokens.slice(i + 1));\r\n                        break;\r\n                    } else {\r\n                        _tokens.push({\r\n                            startIndex: startColumn,\r\n                            endIndex: token.endIndex,\r\n                            scopes: scopes,\r\n                        });\r\n                    }\r\n                } else if (token.startIndex > startColumn && token.endIndex <= endColumn) {\r\n                    _tokens.push({\r\n                        startIndex: token.startIndex,\r\n                        endIndex: token.endIndex,\r\n                        scopes: scopes,\r\n                    });\r\n                } else if (token.startIndex < endColumn && token.endIndex > endColumn) {\r\n                    _tokens.push({\r\n                        startIndex: token.startIndex,\r\n                        endIndex: endColumn,\r\n                        scopes: scopes,\r\n                    });\r\n                    _tokens.push({\r\n                        startIndex: endColumn,\r\n                        endIndex: token.endIndex,\r\n                        scopes: token.scopes,\r\n                    });\r\n                    _tokens = _tokens.concat(tokens.slice(i + 1));\r\n                    break;\r\n                } else if (token.startIndex >= endColumn) {\r\n                    _tokens = _tokens.concat(tokens.slice(i));\r\n                    break;\r\n                } else {\r\n                    _tokens.push(token);\r\n                }\r\n            }\r\n            lineObj.html = this.tokenizer.createHtml(_tokens, lineObj.text);\r\n            this.myContext.renderedIdMap.get(lineObj.lineId).html = lineObj.html;\r\n            this.$nextTick(() => {\r\n                lineObj.fgTokens = _tokens;\r\n            });\r\n        },\r\n        renderBracketMatch() {\r\n            this.bracketMatch = this.folder.getBracketMatch(this.nowCursorPos);\r\n            if (this.bracketMatch) {\r\n                let lineObj = null;\r\n                let pos = null;\r\n\r\n                lineObj = this.myContext.htmls[this.bracketMatch.start.line - 1];\r\n                pos = this.bracketMatch.start;\r\n                this.bracketMatch.start.width = this.getStrWidth(lineObj.text, pos.startIndex, pos.endIndex);\r\n                this.bracketMatch.start.left = this.getStrWidth(lineObj.text, 0, pos.startIndex);\r\n\r\n                lineObj = this.myContext.htmls[this.bracketMatch.end.line - 1];\r\n                pos = this.bracketMatch.end;\r\n                this.bracketMatch.end.width = this.getStrWidth(lineObj.text, pos.startIndex, pos.endIndex);\r\n                this.bracketMatch.end.left = this.getStrWidth(lineObj.text, 0, pos.startIndex);\r\n            }\r\n        },\r\n        // 清除选中前景色\r\n        clearSelectionToken() {\r\n            this.myContext.fgLines.forEach((line) => {\r\n                this._clearSelectionToken(line);\r\n            });\r\n            this.myContext.fgLines.empty();\r\n        },\r\n        _clearSelectionToken(line) {\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            if (!lineObj || !lineObj.fgTokens) {\r\n                return;\r\n            }\r\n            lineObj.fgTokens = null;\r\n            if (this.myContext.renderedLineMap.has(line)) {\r\n                this.myContext.renderedIdMap.get(lineObj.lineId).html = this.tokenizer.createHtml(lineObj.tokens, lineObj.text);\r\n            }\r\n            lineObj.html = '';\r\n        },\r\n        // 渲染光标\r\n        renderCursor(forceCursorView) {\r\n            let that = this;\r\n            let renderCursorId = this.renderCursorId + 1 || 1;\r\n            this.renderCursorId = renderCursorId;\r\n            this.$nextTick(() => {\r\n                if (this.renderCursorId !== renderCursorId || !this.renderHtmls.length) {\r\n                    return;\r\n                }\r\n                this.renderHtmls.forEach((item) => {\r\n                    _setLine(item);\r\n                });\r\n                this.cursorVisible = true;\r\n            });\r\n\r\n            function _setLine(item) {\r\n                let cursorList = [];\r\n                that.cursor.getCursorsByLine(item.num).forEach((cursorPos) => {\r\n                    cursorList.push(_setCursorRealPos(cursorPos));\r\n                });\r\n                item.cursorList = cursorList;\r\n            }\r\n\r\n            function _setCursorRealPos(cursorPos) {\r\n                let left = 0;\r\n                if (cursorPos.del) {\r\n                    return;\r\n                }\r\n                left = that.getExactLeft(cursorPos);\r\n                // 强制滚动使光标处于可见区域\r\n                if (forceCursorView && cursorPos === that.nowCursorPos) {\r\n                    if (left > that.scrollerArea.width + that.scrollLeft - that.charObj.fullAngleCharWidth) {\r\n                        that.$refs.scroller.scrollLeft = left + that.charObj.fullAngleCharWidth - that.scrollerArea.width;\r\n                    } else if (left < that.scrollLeft) {\r\n                        that.$refs.scroller.scrollLeft = left - 1;\r\n                    }\r\n                }\r\n                if (cursorPos === that.nowCursorPos) {\r\n                    that.cursorLeft = left;\r\n                }\r\n                return left + 'px';\r\n            }\r\n        },\r\n        renderError(line) {\r\n            this.$nextTick(() => {\r\n                _renderError.call(this);\r\n            });\r\n\r\n            function _renderError() {\r\n                let $render = $(this.$refs.render);\r\n                let keyMap = {};\r\n                $render.find('span.my-token-error').remove();\r\n                this.errors.forEach((item) => {\r\n                    let key = item.line + ',' + item.originColumn;\r\n                    let lineObj = null;\r\n                    if ((line && item.line !== line) || keyMap[key]) {\r\n                        return;\r\n                    }\r\n                    keyMap[key] = true;\r\n                    lineObj = this.myContext.htmls[item.line - 1];\r\n                    if (!item.endLine) {\r\n                        item.endLine = item.line;\r\n                    }\r\n                    if (item.column >= lineObj.text.length) {\r\n                        item.column = lineObj.text.length - 1;\r\n                    }\r\n                    if (!item.endColumn) {\r\n                        let res = null;\r\n                        if ((res = this.wordPattern.exec(lineObj.text.slice(item.column)))) {\r\n                            item.endColumn = item.column + res[0].length;\r\n                        } else {\r\n                            item.endColumn = item.column + 1;\r\n                        }\r\n                    }\r\n                    if (item.endColumn > lineObj.text.length) {\r\n                        item.endColumn = lineObj.text.length;\r\n                    }\r\n                    if (item.line === item.endLine) {\r\n                        _renderColError.call(this, item.line, item.column, item.endColumn, key);\r\n                    } else {\r\n                        _renderColError.call(this, item.line, item.column, lineObj.text.length, key);\r\n                        _renderColError.call(this, item.endLine, 0, item.endColumn, key);\r\n                        for (let line = item.line + 1; line < item.endLine; line++) {\r\n                            _renderLineError.call(this, line, key);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            function _renderColError(line, column, endColumn, key) {\r\n                if (line < this.startLine || line > this.startLine + this.maxVisibleLines) {\r\n                    return;\r\n                }\r\n                let $render = $(this.$refs.render);\r\n                let lineObj = this.myContext.htmls[line - 1];\r\n                let token = this.getToken(line, column);\r\n                let left = 0;\r\n                if (token) {\r\n                    let $token = $render.find(`div.my-code[data-line=\"${line}\"]`).find(`span[data-column=\"${token.startIndex}\"]`);\r\n                    left = $token[0].offsetLeft + this.getStrWidth(lineObj.text, token.startIndex, column);\r\n                }\r\n                let width = this.getStrWidth(lineObj.text, column, endColumn) || this.charObj.charWidth;\r\n                let html = `<span class=\"my-token-error\" style=\"width:${width}px;left:${left}px\" data-key=\"${key}\"></span>`;\r\n                $render.find(`div.my-code[data-line=\"${line}\"]`).append(html);\r\n            }\r\n\r\n            function _renderLineError(line, key) {\r\n                if (line < this.startLine || line > this.startLine + this.maxVisibleLines) {\r\n                    return;\r\n                }\r\n                let $render = $(this.$refs.render);\r\n                let html = `<span class=\"my-token-error\" style=\"width:100%;left:0px\" data-key=\"${key}\"></span>`;\r\n                $render.find(`div.my-code[data-line=\"${line}\"]`).append(html);\r\n            }\r\n        },\r\n        // 折叠行\r\n        foldLine(line) {\r\n            let resultFold = this.folder.foldLine(line);\r\n            this.focus();\r\n            if (resultFold) {\r\n                this.cursor.multiCursorPos.forEach((cursorPos) => {\r\n                    if (cursorPos.line > line && cursorPos.line < resultFold.end.line) {\r\n                        let lineObj = this.myContext.htmls[line - 1];\r\n                        cursorPos.line = line;\r\n                        cursorPos.column = lineObj.text.length;\r\n                    }\r\n                });\r\n                this.setContentHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // 展开折叠行\r\n        unFold(line) {\r\n            this.focus();\r\n            if (this.folder.unFold(line)) {\r\n                this.setContentHeight();\r\n                this.render();\r\n            }\r\n        },\r\n        // ctrl+f打开搜索\r\n        openSearch(replaceMode) {\r\n            let searchDialog = this.$refs.searchDialog;\r\n            if (this.searchVisible && (this.fSelecter.activedRanges.size || !this.cursorFocus)) {\r\n                //无效操作\r\n                return;\r\n            }\r\n            if (this.cursorFocus) {\r\n                let searchConfig = this.fSearcher.getSearchConfig();\r\n                if (searchConfig) {\r\n                    //有效搜索\r\n                    searchDialog.initData({\r\n                        ignoreCase: searchConfig.ignoreCase,\r\n                        wholeWord: searchConfig.wholeWord,\r\n                        text: searchConfig.text,\r\n                    });\r\n                } else if (this.searchVisible) {\r\n                    //无效搜索\r\n                    return;\r\n                }\r\n            }\r\n            this.searchVisible = true;\r\n            this.fSearcher.clearSearch();\r\n            this.searchText({ config: searchDialog.getData() });\r\n            searchDialog.initData({ replaceVisible: !!replaceMode });\r\n            searchDialog.focus();\r\n        },\r\n        // 搜索完整单词\r\n        searchWord(direct) {\r\n            let resultObj = null;\r\n            this.searcher.search({ direct: direct });\r\n            if (this.searchVisible) {\r\n                if (this.fSelecter.activedRanges.size === 0) {\r\n                    let searchConfig = this.fSearcher.getSearchConfig();\r\n                    if (searchConfig) {\r\n                        this.fSearcher.clearSearch();\r\n                        resultObj = this.fSearcher.search({ direct: direct, increase: true });\r\n                    }\r\n                } else {\r\n                    resultObj = this.fSearcher.search({ direct: direct, increase: true });\r\n                }\r\n                if (resultObj) {\r\n                    this.searchNow = resultObj.now;\r\n                    this.searchCount = resultObj.count;\r\n                }\r\n            }\r\n        },\r\n        searchText(option) {\r\n            let resultObj = this.fSearcher.search(option);\r\n            if (resultObj) {\r\n                this.searchNow = resultObj.now;\r\n                this.searchCount = resultObj.count;\r\n            } else {\r\n                this.searchCount = 0;\r\n            }\r\n        },\r\n        replace(data) {\r\n            if (this.fSelecter.activedRanges.size) {\r\n                let range = this.fSearcher.getNowRange();\r\n                this.myContext.replace(data.text, [range]).then(() => {\r\n                    this.searchText();\r\n                });\r\n            } else {\r\n                this.searchText();\r\n            }\r\n        },\r\n        replaceAll(data) {\r\n            if (this.fSelecter.ranges.size) {\r\n                this.myContext.replace(data.text, this.fSelecter.ranges.toArray()).then(() => {\r\n                    this.fSearcher.clearSearch();\r\n                    this.searchCount = 0;\r\n                });\r\n            }\r\n        },\r\n        // 上一个提示\r\n        prevAutoTip() {\r\n            this.$refs.autoTip.prev();\r\n        },\r\n        // 下一个提示\r\n        nextAutoTip() {\r\n            this.$refs.autoTip.next();\r\n        },\r\n        selectAutoTip() {\r\n            let index = this.$refs.autoTip.getActiveIndex();\r\n            this.onClickAuto(this.autoTipList[index]);\r\n        },\r\n        setData(prop, value) {\r\n            if (typeof this[prop] === 'function') {\r\n                return;\r\n            }\r\n            this[prop] = value;\r\n        },\r\n        setNowCursorPos(nowCursorPos) {\r\n            this.nowCursorPos = nowCursorPos || { line: 1, column: 0 };\r\n            if (nowCursorPos) {\r\n                let setNowCursorPosId = this.setNowCursorPosId + 1 || 1;\r\n                this.setNowCursorPosId = setNowCursorPosId;\r\n                // 强制滚动使光标处于可见区域\r\n                this.$nextTick(() => {\r\n                    if (this.setNowCursorPosId != setNowCursorPosId) {\r\n                        return;\r\n                    }\r\n                    let height = this.folder.getRelativeLine(nowCursorPos.line) * this.charObj.charHight;\r\n                    if (height + this.charObj.charHight > this.scrollTop + this.scrollerArea.height) {\r\n                        requestAnimationFrame(() => {\r\n                            this.setStartLine(height + this.charObj.charHight - this.scrollerArea.height);\r\n                            this.$refs.scroller.scrollTop = height + this.charObj.charHight - this.scrollerArea.height;\r\n                        });\r\n                    } else if (nowCursorPos.line <= this.startLine) {\r\n                        requestAnimationFrame(() => {\r\n                            if (nowCursorPos.line <= this.startLine) {\r\n                                //此时this.startLine可能已经通过onScrll而改变\r\n                                this.startLine = nowCursorPos.line;\r\n                                this.$refs.scroller.scrollTop = (this.folder.getRelativeLine(nowCursorPos.line) - 1) * this.charObj.charHight;\r\n                            }\r\n                        });\r\n                    }\r\n                    this.renderCursor(true);\r\n                });\r\n            }\r\n        },\r\n        // 设置滚动区域真实高度\r\n        setContentHeight() {\r\n            let maxLine = this.myContext.htmls.length;\r\n            let contentHeight = 0;\r\n            maxLine = this.folder.getRelativeLine(maxLine);\r\n            contentHeight = maxLine * this.charObj.charHight;\r\n            if (this.scrollerArea) {\r\n                contentHeight += this.scrollerArea.height - this.charObj.charHight;\r\n            }\r\n            this.contentHeight = contentHeight + 'px';\r\n        },\r\n        setStartLine(scrollTop) {\r\n            let startLine = 1;\r\n            startLine = Math.floor(scrollTop / this.charObj.charHight);\r\n            startLine++;\r\n            this.startLine = this.folder.getRealLine(startLine);\r\n            this.top = -scrollTop % this.charObj.charHight;\r\n        },\r\n        setErrors(errors) {\r\n            this.errorMap = {};\r\n            this.errors = errors;\r\n            _formatError.call(this, this.errorMap, errors);\r\n            this.renderError();\r\n\r\n            function _formatError(errorMap, errors) {\r\n                let index = 0;\r\n                while (index < errors.length) {\r\n                    let line = errors[index].line;\r\n                    let arr = [];\r\n                    while (index < errors.length && errors[index].line === line) {\r\n                        let key = line + ',' + errors[index].column;\r\n                        errors[index].originColumn = errors[index].column;\r\n                        arr.push(errors[index].reason);\r\n                        if (errorMap[key]) {\r\n                            errorMap[key] += '<br>' + errors[index].reason;\r\n                        } else {\r\n                            errorMap[key] = errors[index].reason;\r\n                        }\r\n                        index++;\r\n                    }\r\n                    line = line || this.htmls.length;\r\n                    errorMap[line] = arr.join('<br>');\r\n                }\r\n            }\r\n        },\r\n        setAutoTip(results) {\r\n            clearTimeout(this.setAutoTip.hideTimer);\r\n            if (results && results.length) {\r\n                results.forEach((item) => {\r\n                    item.active = false;\r\n                });\r\n                this.autoTipList = results;\r\n                this.autoTipList[0].active = true;\r\n                this.$nextTick(() => {\r\n                    let width = this.$refs.autoTip.$el.clientWidth;\r\n                    let height = this.$refs.autoTip.$el.clientHeight;\r\n                    this.autoTipStyle.top = this.folder.getRelativeLine(this.nowCursorPos.line) * this.charObj.charHight;\r\n                    this.autoTipStyle.left = this.getExactLeft(this.nowCursorPos);\r\n                    if (this.autoTipStyle.top + height > Util.getNum(this._top) + this.$refs.scroller.clientHeight) {\r\n                        this.autoTipStyle.top -= height + this.charObj.charHight;\r\n                    }\r\n                    if (this.autoTipStyle.left + width > this.scrollLeft + this.scrollerArea.width) {\r\n                        this.autoTipStyle.left -= width;\r\n                    }\r\n                    this.autoTipStyle.top += 'px';\r\n                    this.autoTipStyle.left += 'px';\r\n                });\r\n            } else {\r\n                //内容改变时会触发setAutoTip(null)\r\n                this.setAutoTip.hideTimer = setTimeout(() => {\r\n                    this.autoTipList = null;\r\n                }, 60);\r\n            }\r\n        },\r\n        // 获取文本在浏览器中的宽度\r\n        getStrWidth(str, start, end) {\r\n            return Util.getStrWidth(str, this.charObj.charWidth, this.charObj.fullAngleCharWidth, this.tabSize, start, end);\r\n        },\r\n        // 获取行对应的文本在浏览器中的宽度\r\n        getStrWidthByLine(line, start, end) {\r\n            return this.getStrWidth(this.myContext.htmls[line - 1].text, start, end);\r\n        },\r\n        // 根据文本宽度计算当前列号\r\n        getColumnByWidth(text, offsetX) {\r\n            let left = 0,\r\n                right = text.length;\r\n            let mid, width, w1, w2;\r\n            while (left < right) {\r\n                mid = Math.floor((left + right) / 2);\r\n                width = this.getStrWidth(text, 0, mid);\r\n                w1 = text[mid - 1] && this.getStrWidth(text[mid - 1]) / 2;\r\n                w2 = (text[mid] && this.getStrWidth(text[mid]) / 2) || w1;\r\n                if ((width >= offsetX && width - offsetX < w1) || (offsetX >= width && offsetX - width < w2)) {\r\n                    left = mid;\r\n                    break;\r\n                } else if (width > offsetX) {\r\n                    right = mid;\r\n                } else {\r\n                    left = mid + 1;\r\n                }\r\n            }\r\n            return left;\r\n        },\r\n        // 根据鼠标事件对象获取行列坐标\r\n        getPosByEvent(e) {\r\n            let $target = $(e.target);\r\n            let line = ($target.attr('data-line') || $target.parent().attr('data-line')) - 0;\r\n            let column = $target.attr('data-column');\r\n            if (!line) {\r\n                if (e.target === this.$refs.content) {\r\n                    line = this.myContext.htmls.length;\r\n                } else {\r\n                    //移动到了区域外\r\n                    return null;\r\n                }\r\n            }\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            let tokens = lineObj.fgTokens || lineObj.tokens;\r\n            if (!column) {\r\n                column = lineObj.text.length;\r\n            } else {\r\n                column = column - 0;\r\n                for (let i = 0; i < tokens.length; i++) {\r\n                    let token = tokens[i];\r\n                    if (tokens[i].startIndex == column) {\r\n                        column += this.getColumnByWidth(lineObj.text.slice(token.startIndex, token.endIndex), e.offsetX);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                line: line,\r\n                column: column,\r\n            };\r\n        },\r\n        // 获取光标真实位置\r\n        getExactLeft(cursorPos) {\r\n            let lineObj = this.myContext.htmls[cursorPos.line - 1];\r\n            if (!lineObj.tokens || !lineObj.tokens.length) {\r\n                return 0;\r\n            }\r\n            let tokens = lineObj.fgTokens || lineObj.tokens;\r\n            let token = tokens[0];\r\n            for (let i = 1; i < tokens.length; i++) {\r\n                if (tokens[i].startIndex < cursorPos.column) {\r\n                    token = tokens[i];\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n            let $token = $('#line_' + cursorPos.line)\r\n                .children('.my-code')\r\n                .children('span[data-column=\"' + token.startIndex + '\"]');\r\n            if (!$token.length) {\r\n                return 0;\r\n            }\r\n            let text = lineObj.text.slice(token.startIndex, cursorPos.column);\r\n            return $token[0].offsetLeft + this.getStrWidth(text);\r\n        },\r\n        getToken(line, column) {\r\n            let lineObj = this.myContext.htmls[line - 1];\r\n            if (lineObj && lineObj.tokens) {\r\n                if (column > lineObj.tokens.peek().startIndex) {\r\n                    return lineObj.tokens.peek();\r\n                }\r\n                for (let i = 0; i < lineObj.tokens.length; i++) {\r\n                    if (lineObj.tokens[i].startIndex <= column && lineObj.tokens[i].endIndex > column) {\r\n                        return lineObj.tokens[i];\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        // 右键菜单事件\r\n        onContextmenu(e) {\r\n            let menuWidth = 0;\r\n            let menuHeight = 0;\r\n            let $editor = $(this.$refs.editor);\r\n            let offset = $editor.offset();\r\n            this.menuVisible = true;\r\n            this.$nextTick(() => {\r\n                menuWidth = this.$refs.menu.$el.clientWidth;\r\n                menuHeight = this.$refs.menu.$el.clientHeight;\r\n                if (menuHeight + e.clientY > offset.top + this.scrollerArea.height) {\r\n                    this.menuStyle.top = e.clientY - offset.top - menuHeight + 'px';\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + 'px';\r\n                }\r\n                if (menuWidth + e.clientX > offset.left + $editor[0].clientWidth) {\r\n                    this.menuStyle.left = e.clientX - offset.left - menuWidth + 'px';\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + 'px';\r\n                }\r\n                this.focus();\r\n            });\r\n        },\r\n        // 选中菜单\r\n        onClickMenu(menu) {\r\n            switch (menu.op) {\r\n                case 'cut':\r\n                case 'copy':\r\n                    Util.writeClipboard(this.myContext.getCopyText(menu.op === 'cut'));\r\n                    break;\r\n                case 'paste':\r\n                    this.$refs.textarea.focus();\r\n                    Util.readClipboard().then((text) => {\r\n                        this.myContext.insertContent(text);\r\n                    });\r\n                    break;\r\n            }\r\n            this.menuVisible = false;\r\n            this.focus();\r\n        },\r\n        // 选中自动提示\r\n        onClickAuto(item) {\r\n            this.myContext.replaceTip(item);\r\n            this.autoTipList = null;\r\n            this.focus();\r\n        },\r\n        // 折叠/展开\r\n        onToggleFold(line) {\r\n            if (this.folder.getFoldByLine(line)) {\r\n                this.unFold(line);\r\n            } else {\r\n                this.foldLine(line);\r\n            }\r\n        },\r\n        // 内容区域鼠标按下事件\r\n        onContentMdown(e) {\r\n            if (e.which == 3) {\r\n                //右键\r\n                return;\r\n            }\r\n            let pos = this.getPosByEvent(e);\r\n            let cursorPos = null;\r\n            this.mouseStartObj = {\r\n                time: Date.now(),\r\n                start: pos,\r\n            };\r\n            if ((e.ctrlKey && this.cursor.multiKeyCode === 'ctrl') || (e.altKey && this.cursor.multiKeyCode === 'alt')) {\r\n                // 多光标编辑\r\n                let range = this.selecter.getRangeWithCursorPos(pos);\r\n                //删除重叠选中区域\r\n                range && this.selecter.removeRange(range);\r\n                cursorPos = this.cursor.addCursorPos(pos);\r\n            } else {\r\n                cursorPos = this.cursor.setCursorPos(pos);\r\n                // 非多点编辑情况下，鼠标左键删除选中区域\r\n                if (e.which !== 3) {\r\n                    this.searcher.clearSearch();\r\n                }\r\n            }\r\n            if (e.which != 3) {\r\n                this.fSearcher.clearActive(); //光标更改后，搜索框取消当前活动区域\r\n                if (this.mouseUpTime && Date.now() - this.mouseUpTime < 200) {\r\n                    //双击选中单词\r\n                    this.mouseStartObj.doubleClick = true;\r\n                    this.searchWord();\r\n                }\r\n            }\r\n            this.mouseStartObj.cursorPos = cursorPos;\r\n            // 删除非活动区域的选中区域\r\n            this.searcher.clearSearch(true);\r\n            this.focus();\r\n        },\r\n        onErrorMousemove(e, line) {\r\n            let $errors = $(`div.my-code[data-line=${line}]`).children('span.my-token-error');\r\n            let left = e.clientX - $(this.$refs.render).offset().left;\r\n            for (let i = 0; i < $errors.length; i++) {\r\n                let $error = $errors.eq(i);\r\n                let width = $error.width();\r\n                let _left = $error[0].offsetLeft;\r\n                if (left >= _left && left <= _left + width) {\r\n                    _showTip.call(this, e, $error.attr('data-key'));\r\n                    break;\r\n                }\r\n            }\r\n\r\n            function _showTip(e, key) {\r\n                let $editor = $(this.$refs.editor);\r\n                let $tip = $(this.$refs.tip.$el);\r\n                let offset = $editor.offset();\r\n                let top = e.clientY - offset.top;\r\n                let left = e.clientX - offset.left;\r\n                this.tipContent = this.errorMap[key];\r\n                this.$nextTick(() => {\r\n                    if (top + $tip[0].clientHeight > this.scrollerArea.height) {\r\n                        top = this.scrollerArea.height - $tip[0].clientHeight;\r\n                    }\r\n                    this.tipStyle = {\r\n                        left: left + 10 + 'px',\r\n                        top: top + 10 + 'px',\r\n                    };\r\n                });\r\n            }\r\n        },\r\n        onContentMmove(e) {\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                let end = this.getPosByEvent(e);\r\n                if (end && Util.comparePos(end, this.mouseStartObj.cursorPos)) {\r\n                    let range = this.selecter.getRangeWithCursorPos(end);\r\n                    //删除重叠选中区域\r\n                    range && this.selecter.removeRange(range);\r\n                    this.cursor.removeCursor(this.mouseStartObj.cursorPos);\r\n                    this.mouseStartObj.cursorPos = this.cursor.addCursorPos({\r\n                        line: end.line,\r\n                        column: end.column,\r\n                    });\r\n                    if (this.mouseStartObj.preRange) {\r\n                        this.selecter.updateRange(this.mouseStartObj.preRange, {\r\n                            start: this.mouseStartObj.start,\r\n                            end: end,\r\n                        });\r\n                    } else {\r\n                        this.mouseStartObj.preRange = this.selecter.addRange({\r\n                            start: this.mouseStartObj.start,\r\n                            end: end,\r\n                        });\r\n                    }\r\n                    // 删除区域范围内的光标\r\n                    this.cursor.removeCursorInRange(this.mouseStartObj.preRange);\r\n                }\r\n            }\r\n            _checkErrorOver.call(this, e);\r\n\r\n            function _checkErrorOver(e) {\r\n                let $target = $(e.target);\r\n                let line = $target.parent().attr('data-line');\r\n                this.tipContent = '';\r\n                line && this.onErrorMousemove(e, line);\r\n            }\r\n        },\r\n        onContentMLeave() {\r\n            this.tipContent = '';\r\n        },\r\n        // 鼠标移动事件\r\n        onDocumentMmove(e) {\r\n            let that = this;\r\n            let offset = $(this.$refs.scroller).offset();\r\n            if (this.mouseStartObj && Date.now() - this.mouseStartObj.time > 100) {\r\n                let line = Math.ceil((this.scrollTop + e.clientY - offset.top) / this.charObj.charHight);\r\n                line = line < 1 ? 1 : line;\r\n                line = line > this.maxLine ? this.maxLine : line;\r\n                cancelAnimationFrame(this.selectMoveTimer);\r\n                if (e.clientY > offset.top + this.scrollerArea.height) {\r\n                    //鼠标超出底部区域\r\n                    _move('down', e.clientY - offset.top - this.scrollerArea.height);\r\n                } else if (e.clientY < offset.top) {\r\n                    //鼠标超出顶部区域\r\n                    _move('up', offset.top - e.clientY);\r\n                } else if (e.clientX < offset.left) {\r\n                    //鼠标超出左边区域\r\n                    _move('left', offset.left - e.clientX, line);\r\n                } else if (e.clientX > offset.left + this.scrollerArea.width) {\r\n                    //鼠标超出右边区域\r\n                    _move('right', e.clientX - offset.left - this.scrollerArea.width, line);\r\n                }\r\n            }\r\n            function _move(autoDirect, speed, line) {\r\n                let originLine = line || that.folder.getRelativeLine(that.nowCursorPos.line);\r\n                let originColumn = that.nowCursorPos.column;\r\n                let count = 0; // 累计滚动距离\r\n                _run(autoDirect, speed);\r\n\r\n                function _run(autoDirect, speed) {\r\n                    let line = originLine;\r\n                    let column = originColumn;\r\n                    switch (autoDirect) {\r\n                        case 'up':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine - line;\r\n                            column = 0;\r\n                            break;\r\n                        case 'down':\r\n                            count += speed;\r\n                            line = Math.floor(count / that.charObj.charHight);\r\n                            line = originLine + line;\r\n                            break;\r\n                        case 'left':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn - column;\r\n                            break;\r\n                        case 'right':\r\n                            count += speed;\r\n                            column = Math.floor(count / that.charObj.charWidth);\r\n                            column = originColumn + column;\r\n                            break;\r\n                    }\r\n                    line = that.folder.getRealLine(line);\r\n                    line = line < 1 ? 1 : line > that.maxLine ? that.maxLine : line;\r\n                    if (autoDirect === 'down') {\r\n                        column = that.myContext.htmls[line - 1].text.length;\r\n                    } else {\r\n                        column = column < 0 ? 0 : column > that.myContext.htmls[line - 1].text.length ? that.myContext.htmls[line - 1].text.length : column;\r\n                    }\r\n                    that.mouseStartObj.cursorPos = that.cursor.setCursorPos({\r\n                        line: line,\r\n                        column: column,\r\n                    });\r\n                    that.mouseStartObj.preRange = that.selecter.setRange(that.mouseStartObj.start, {\r\n                        line: line,\r\n                        column: column,\r\n                    });\r\n                    that.selectMoveTimer = requestAnimationFrame(() => {\r\n                        _run(autoDirect, speed);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        // 鼠标抬起事件\r\n        onDocumentMouseUp(e) {\r\n            // 停止滚动选中\r\n            cancelAnimationFrame(this.selectMoveTimer);\r\n            this.mouseStartObj = null;\r\n            this.mouseUpTime = Date.now();\r\n            this.$refs.searchDialog && this.$refs.searchDialog.directBlur();\r\n        },\r\n        // 左右滚动事件\r\n        onScroll(e) {\r\n            this.setStartLine(e.target.scrollTop);\r\n            this.scrollTop = e.target.scrollTop;\r\n            this.scrollLeft = e.target.scrollLeft;\r\n            this.$refs.scroller.scrollLeft = this.scrollLeft;\r\n        },\r\n        // 滚动滚轮\r\n        onWheel(e) {\r\n            this.$refs.scroller.scrollTop = this.scrollTop + e.deltaY;\r\n            this.$refs.scroller.scrollLeft = this.scrollLeft + e.deltaX;\r\n        },\r\n        // 中文输入开始\r\n        onCompositionstart() {\r\n            clearTimeout(this.compositionendTimer);\r\n            this.compositionstart = true;\r\n        },\r\n        // 中文输入结束\r\n        onCompositionend() {\r\n            if (this.compositionstart) {\r\n                let text = this.$refs.textarea.value || '';\r\n                if (text) {\r\n                    this.myContext.insertContent(text);\r\n                    this.autocomplete.search();\r\n                    this.$refs.textarea.value = '';\r\n                }\r\n            }\r\n            //避免有些浏览器compositionend在input事件之前触发的bug\r\n            this.compositionendTimer = setTimeout(() => {\r\n                this.compositionstart = false;\r\n            }, 100);\r\n        },\r\n        // 输入事件\r\n        onInput() {\r\n            if (!this.compositionstart) {\r\n                let text = this.$refs.textarea.value || '';\r\n                if (text) {\r\n                    this.myContext.insertContent(text);\r\n                    this.autocomplete.search();\r\n                    this.$refs.textarea.value = '';\r\n                }\r\n            }\r\n        },\r\n        // 复制事件\r\n        onCopy(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, this.myContext.getCopyText());\r\n        },\r\n        onCut(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            clipboardData.setData(mime, this.myContext.getCopyText(true));\r\n        },\r\n        // 粘贴事件\r\n        onPaste(e) {\r\n            let mime = window.clipboardData ? 'Text' : 'text/plain';\r\n            let clipboardData = e.clipboardData || window.clipboardData;\r\n            let copyText = '';\r\n            copyText = clipboardData.getData(mime);\r\n            this.myContext.insertContent(copyText);\r\n        },\r\n        // 获得焦点\r\n        onFocus() {\r\n            this.showCursor();\r\n        },\r\n        // 失去焦点\r\n        onBlur() {\r\n            this.hideCursor();\r\n        },\r\n        // 键盘按下事件\r\n        onKeyDown(e) {\r\n            this.shortcut.onKeyDown(e);\r\n        },\r\n        // 搜索框首次搜索\r\n        onSearch(config) {\r\n            this.fSearcher.clearSearch();\r\n            this.searchText({ config: config });\r\n        },\r\n        onSearchNext() {\r\n            this.searchText({ direct: 'next' });\r\n        },\r\n        onSearchPrev() {\r\n            this.searchText({ direct: 'up' });\r\n        },\r\n        onCloseSearch() {\r\n            this.focus();\r\n            if (this.fSelecter.activedRanges.size) {\r\n                this.searcher.clone(this.fSearcher.getCacheData());\r\n            }\r\n            this.fSearcher.clearSearch();\r\n            this.searchVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=784caa1a&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-title-bar my-width-100\",style:({ height: _vm.height + 'px' }),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100 my-center-between\"},[_c('div',{staticClass:\"menu-bar\"},[_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('fileMenuVisible')}}},[_c('span',[_vm._v(\"File\")]),(_vm.fileMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.fileMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onFileMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('editMenuVisible')}}},[_c('span',[_vm._v(\"Edit\")]),(_vm.editMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.editMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onEditMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('selectionMenuVisible')}}},[_c('span',[_vm._v(\"Selection\")]),(_vm.selectionMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.selectionMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onSelectionMenuChange}}):_vm._e()],1),_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showMemu('preferenceMenuVisible')}}},[_c('span',[_vm._v(\"Preference\")]),(_vm.preferenceMenuVisible)?_c('Menu',{attrs:{\"hoverCheck\":true,\"menuList\":_vm.preferenceMenuList,\"styles\":{ left: 0, top: _vm._top }},on:{\"change\":_vm.onPreferenceMenuChange}}):_vm._e()],1)]),(_vm.mode === 'app')?_c('div',{staticClass:\"bar-right\"},[_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onMinimize}},[_c('span',{staticClass:\"iconfont icon-zuixiaohua\"})]),(_vm.maximize)?_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onUnmaximize}},[_c('span',{staticClass:\"iconfont icon-huanyuan\"})]):_c('div',{staticClass:\"bar-item my-hover\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onMaximize}},[_c('span',{staticClass:\"iconfont icon-zuidahua\"})]),_c('div',{staticClass:\"bar-item my-hover-danger\",staticStyle:{\"width\":\"35px\",\"height\":\"35px\"},on:{\"click\":_vm.onClose}},[_c('span',{staticClass:\"iconfont icon-close\",staticStyle:{\"font-size\":\"18px\"}})])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2022-02-18 16:13:15\r\n * @Description: \r\n */\r\nimport Util from '@/common/util';\r\n\r\nexport default class {\r\n    constructor(titleBar) {\r\n        this.initProperties(titleBar);\r\n    }\r\n    initProperties(titleBar) {\r\n        Util.defineProperties(this, titleBar, [\r\n            'openFile',\r\n            'openFolder'\r\n        ]);\r\n    }\r\n    onKeyDown(e) {\r\n        if (e.ctrlKey) {\r\n            if (this.pressK) {\r\n                this.pressK = false;\r\n                switch (e.keyCode) {\r\n                    case 79: //Ctrl+O\r\n                        e.preventDefault();\r\n                        this.openFolder();\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (e.keyCode) {\r\n                    case 75: //Ctrl+K\r\n                        e.preventDefault();\r\n                        this.pressK = true;\r\n                        break;\r\n                    case 78: //Ctrl+N\r\n                        e.preventDefault();\r\n                        this.openFile();\r\n                        break;\r\n                    case 79: //Ctrl+O\r\n                        e.preventDefault();\r\n                        this.openFile(null, true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"{ height: height + 'px' }\" @contextmenu.stop.prevent class=\"my-title-bar my-width-100\">\r\n        <div class=\"my-height-100 my-center-between\">\r\n            <div class=\"menu-bar\">\r\n                <div @mousedown.stop=\"showMemu('fileMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>File</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"fileMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onFileMenuChange\"\r\n                        v-if=\"fileMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('editMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Edit</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"editMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onEditMenuChange\"\r\n                        v-if=\"editMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('selectionMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Selection</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"selectionMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onSelectionMenuChange\"\r\n                        v-if=\"selectionMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n                <div @mousedown.stop=\"showMemu('preferenceMenuVisible')\" class=\"bar-item my-hover\">\r\n                    <span>Preference</span>\r\n                    <Menu\r\n                        :hoverCheck=\"true\"\r\n                        :menuList=\"preferenceMenuList\"\r\n                        :styles=\"{ left: 0, top: _top }\"\r\n                        @change=\"onPreferenceMenuChange\"\r\n                        v-if=\"preferenceMenuVisible\"\r\n                    ></Menu>\r\n                </div>\r\n            </div>\r\n            <div class=\"bar-right\" v-if=\"mode === 'app'\">\r\n                <!-- 最小化 -->\r\n                <div @click=\"onMinimize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\">\r\n                    <span class=\"iconfont icon-zuixiaohua\"></span>\r\n                </div>\r\n                <!-- 还原最大化 -->\r\n                <div @click=\"onUnmaximize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\" v-if=\"maximize\">\r\n                    <span class=\"iconfont icon-huanyuan\"></span>\r\n                </div>\r\n                <!-- 最大化 -->\r\n                <div @click=\"onMaximize\" class=\"bar-item my-hover\" style=\"width: 35px; height: 35px\" v-else>\r\n                    <span class=\"iconfont icon-zuidahua\"></span>\r\n                </div>\r\n                <!-- 关闭 -->\r\n                <div @click=\"onClose\" class=\"bar-item my-hover-danger\" style=\"width: 35px; height: 35px\">\r\n                    <span class=\"iconfont icon-close\" style=\"font-size: 18px\"></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Util from '@/common/util';\r\nimport Menu from './Menu';\r\nimport ShortCut from '@/module/shortcut/menu-bar';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\nconst require = window.require || window.parent.require || function () {};\r\nconst remote = require('@electron/remote');\r\nconst currentWindow = remote && remote.getCurrentWindow();\r\n\r\nexport default {\r\n    name: 'TitleBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25,\r\n        },\r\n    },\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            fileMenuVisible: false,\r\n            editMenuVisible: false,\r\n            selectionMenuVisible: false,\r\n            preferenceMenuVisible: false,\r\n            maximize: false,\r\n            mode: remote ? 'app' : 'web',\r\n            fileMenuList: [\r\n                [\r\n                    {\r\n                        name: 'New File',\r\n                        op: 'newFile',\r\n                        shortcut: 'Ctrl+N',\r\n                    },\r\n                ],\r\n            ],\r\n            editMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Undo',\r\n                        op: 'undo',\r\n                        shortcut: 'Ctrl+Z',\r\n                    },\r\n                    {\r\n                        name: 'Redo',\r\n                        op: 'redo',\r\n                        shortcut: 'Ctrl+Y',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Cut',\r\n                        op: 'cut',\r\n                        shortcut: 'Ctrl+X',\r\n                    },\r\n                    {\r\n                        name: 'Copy',\r\n                        op: 'copy',\r\n                        shortcut: 'Ctrl+C',\r\n                    },\r\n                    {\r\n                        name: 'Paste',\r\n                        op: 'paste',\r\n                        shortcut: 'Ctrl+V',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Delete Line',\r\n                        op: 'deleteLine',\r\n                        shortcut: 'Ctrl+Shift+K',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Find',\r\n                        op: 'find',\r\n                        shortcut: 'Ctrl+F',\r\n                    },\r\n                    {\r\n                        name: 'Replace',\r\n                        op: 'replace',\r\n                        shortcut: 'Ctrl+H',\r\n                    },\r\n                ],\r\n            ],\r\n            selectionMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Select All',\r\n                        op: 'selectAll',\r\n                        shortcut: 'Ctrl+A',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Copy Line Up',\r\n                        op: 'copyLineUp',\r\n                        shortcut: 'Ctrl+Shift+D',\r\n                    },\r\n                    {\r\n                        name: 'Copy Line Down',\r\n                        op: 'copyLineDown',\r\n                        shortcut: 'Alt+Shift+Down',\r\n                    },\r\n                    {\r\n                        name: 'Move Line Up',\r\n                        op: 'moveLineUp',\r\n                        shortcut: 'Ctrl+Shift+Up',\r\n                    },\r\n                    {\r\n                        name: 'Move Line Down',\r\n                        op: 'moveLineDown',\r\n                        shortcut: 'Ctrl+Shift+Down',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Add Cursor Above',\r\n                        op: 'addCursorAbove',\r\n                        shortcut: 'Ctrl+Alt+Up',\r\n                    },\r\n                    {\r\n                        name: 'Add Cursor Below',\r\n                        op: 'addCursorBelow',\r\n                        shortcut: 'Ctrl+Alt+Down',\r\n                    },\r\n                    {\r\n                        name: 'Add Cursor to Line Ends',\r\n                        op: 'addCursorLineEnds',\r\n                        shortcut: 'Ctrl+Shift+L',\r\n                    },\r\n                    {\r\n                        name: 'Add Next Occurence',\r\n                        op: 'addNextOccurence',\r\n                        shortcut: 'Ctrl+D',\r\n                    },\r\n                    {\r\n                        name: 'Add Previous Occurence',\r\n                        op: 'addPrevOccurence',\r\n                        shortcut: 'Shift+D',\r\n                    },\r\n                    {\r\n                        name: 'Select All Occurence',\r\n                        op: 'selectAllOccurence',\r\n                    },\r\n                ],\r\n                [\r\n                    {\r\n                        name: 'Switch Alt+Click to Multi-Cursor',\r\n                        op: 'switchMultiKeyCode',\r\n                        keyCode: 'ctrl',\r\n                    },\r\n                ],\r\n            ],\r\n            preferenceMenuList: [\r\n                [\r\n                    {\r\n                        name: 'Color Theme',\r\n                        op: 'changeTheme',\r\n                    },\r\n                    {\r\n                        name: 'Icon Theme',\r\n                        op: 'changeIconTheme',\r\n                    },\r\n                ],\r\n            ],\r\n        };\r\n    },\r\n    computed: {\r\n        _top() {\r\n            return this.height + 2 + 'px';\r\n        },\r\n        editor() {\r\n            return this.getNowEditor();\r\n        },\r\n        context() {\r\n            return this.getNowContext();\r\n        },\r\n    },\r\n    inject: ['getNowEditor', 'getNowContext', 'openFile', 'openFolder'],\r\n    created() {\r\n        if (this.mode === 'app') {\r\n            this.fileMenuList.push([\r\n                {\r\n                    name: 'Open File',\r\n                    op: 'openFile',\r\n                    shortcut: 'Ctrl+O',\r\n                },\r\n                {\r\n                    name: 'Open Folder',\r\n                    op: 'openFolder',\r\n                    shortcut: 'Ctrl+K Ctrl+O',\r\n                },\r\n            ]);\r\n        }\r\n        this.shortcut = new ShortCut(this);\r\n        this.initEventBus();\r\n        $(window).on('keydown', (e) => {\r\n            this.shortcut.onKeyDown(e);\r\n        });\r\n    },\r\n    mounted() {\r\n        if (this.mode === 'app') {\r\n            this.maximize = currentWindow.isMaximized();\r\n        }\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('close-menu', () => {\r\n                this.fileMenuVisible = false;\r\n                this.editMenuVisible = false;\r\n                this.selectionMenuVisible = false;\r\n                this.preferenceMenuVisible = false;\r\n            });\r\n        },\r\n        showMemu(prop) {\r\n            EventBus.$emit('close-menu');\r\n            this[prop] = true;\r\n        },\r\n        // 最小化\r\n        onMinimize() {\r\n            currentWindow.minimize();\r\n        },\r\n        // 最大化\r\n        onMaximize() {\r\n            currentWindow.maximize();\r\n            this.maximize = true;\r\n        },\r\n        // 最大化\r\n        onUnmaximize() {\r\n            currentWindow.unmaximize();\r\n            this.maximize = false;\r\n        },\r\n        // 关闭窗口\r\n        onClose() {\r\n            currentWindow.close();\r\n        },\r\n        onFileMenuChange(item) {\r\n            switch (item.op) {\r\n                case 'newFile':\r\n                    this.openFile();\r\n                    break;\r\n                case 'openFile':\r\n                    this.openFile(null, true);\r\n                    break;\r\n                case 'openFolder':\r\n                    this.openFolder();\r\n                    break;\r\n            }\r\n            this.fileMenuVisible = false;\r\n        },\r\n        onEditMenuChange(item) {\r\n            if (!this.editor) {\r\n                this.editMenuVisible = false;\r\n                return;\r\n            }\r\n            switch (item.op) {\r\n                case 'undo':\r\n                    this.editor.history.undo();\r\n                    break;\r\n                case 'redo':\r\n                    this.editor.history.redo();\r\n                    break;\r\n                case 'cut':\r\n                    Util.writeClipboard(this.context.getCopyText(true));\r\n                    break;\r\n                case 'copy':\r\n                    Util.writeClipboard(this.context.getCopyText());\r\n                    break;\r\n                case 'paste':\r\n                    Util.readClipboard().then((text) => {\r\n                        this.context.insertContent(text);\r\n                    });\r\n                    break;\r\n                case 'deleteLine':\r\n                    this.context.deleteLine();\r\n                    break;\r\n                case 'find':\r\n                    this.editor.openSearch();\r\n                    break;\r\n                case 'replace':\r\n                    this.editor.openSearch(true);\r\n                    break;\r\n            }\r\n            this.editor.focus();\r\n            this.editMenuVisible = false;\r\n        },\r\n        onSelectionMenuChange(item) {\r\n            if (!this.editor) {\r\n                this.selectionMenuVisible = false;\r\n                return;\r\n            }\r\n            switch (item.op) {\r\n                case 'selectAll':\r\n                    this.editor.selecter.selectAll();\r\n                    break;\r\n                case 'copyLineUp':\r\n                    this.context.copyLineUp();\r\n                    break;\r\n                case 'copyLineDown':\r\n                    this.context.copyLineDown();\r\n                    break;\r\n                case 'moveLineUp':\r\n                    this.context.moveLineUp();\r\n                    break;\r\n                case 'moveLineDown':\r\n                    this.context.moveLineDown();\r\n                    break;\r\n                case 'addCursorAbove':\r\n                    this.editor.cursor.addCursorAbove();\r\n                    break;\r\n                case 'addCursorBelow':\r\n                    this.editor.cursor.addCursorBelow();\r\n                    break;\r\n                case 'addCursorLineEnds':\r\n                    this.editor.cursor.addCursorLineEnds();\r\n                    break;\r\n                case 'addNextOccurence':\r\n                    this.editor.searchWord('down');\r\n                    break;\r\n                case 'addPrevOccurence':\r\n                    this.editor.searchWord('up');\r\n                    break;\r\n                case 'selectAllOccurence':\r\n                    this.editor.selecter.selectAllOccurence();\r\n                    break;\r\n                case 'switchMultiKeyCode':\r\n                    this.editor.cursor.switchMultiKeyCode();\r\n                    item.keyCode = this.editor.cursor.multiKeyCode;\r\n                    item.name = `Switch ${item.keyCode === 'alt' ? 'Ctrl' : 'Alt'}+Click to Multi-Cursor`;\r\n                    break;\r\n            }\r\n            this.editor.focus();\r\n            this.selectionMenuVisible = false;\r\n        },\r\n        onPreferenceMenuChange(item) {\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    this.$emit('change', item);\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    this.$emit('change', item);\r\n            }\r\n            this.preferenceMenuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./TitleBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./TitleBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TitleBar.vue?vue&type=template&id=020a2e8f&\"\nimport script from \"./TitleBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TitleBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"my-status-bar my-width-100\",style:({ height: _vm.height + 'px' }),on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100 my-center-between\"},[_c('div',{staticClass:\"bar-left\"},[(_vm.hasEditor)?_c('div',{staticClass:\"bar-item\"},[_c('span',[_vm._v(\"Line \"+_vm._s(_vm.line)+\", Column \"+_vm._s(_vm.column))])]):_vm._e()]),_c('div',{staticClass:\"bar-right\"},[(_vm.hasEditor)?_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showTabsize.apply(null, arguments)}}},[_c('span',[_vm._v(\"Tab Size:\"+_vm._s(_vm.tabSize))]),_c('div',{staticClass:\"my-list\",staticStyle:{\"position\":\"absolute\",\"bottom\":\"30px\"}},[(_vm.tabsizeVisible)?_c('Menu',{attrs:{\"menuList\":_vm.tabSizeList,\"styles\":{ position: 'relative' },\"value\":_vm.tabSize},on:{\"change\":_vm.onTabsizeChange}}):_vm._e()],1)]):_vm._e(),(_vm.hasEditor)?_c('div',{staticClass:\"bar-item my-hover\",on:{\"mousedown\":function($event){$event.stopPropagation();return _vm.showLanguage.apply(null, arguments)}}},[_c('span',[_vm._v(_vm._s(_vm.nowLanguage))])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-09 21:38:38\r\n * @Description: \r\n-->\r\n<template>\r\n    <div :style=\"{ height: height + 'px' }\" @contextmenu.stop.prevent class=\"my-status-bar my-width-100\">\r\n        <div class=\"my-height-100 my-center-between\">\r\n            <div class=\"bar-left\">\r\n                <div class=\"bar-item\" v-if=\"hasEditor\">\r\n                    <span>Line {{ line }}, Column {{ column }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"bar-right\">\r\n                <div @mousedown.stop=\"showTabsize\" class=\"bar-item my-hover\" v-if=\"hasEditor\">\r\n                    <span>Tab Size:{{ tabSize }}</span>\r\n                    <div class=\"my-list\" style=\"position: absolute; bottom: 30px\">\r\n                        <Menu\r\n                            :menuList=\"tabSizeList\"\r\n                            :styles=\"{ position: 'relative' }\"\r\n                            :value=\"tabSize\"\r\n                            @change=\"onTabsizeChange\"\r\n                            v-if=\"tabsizeVisible\"\r\n                        ></Menu>\r\n                    </div>\r\n                </div>\r\n                <div @mousedown.stop=\"showLanguage\" class=\"bar-item my-hover\" v-if=\"hasEditor\">\r\n                    <span>{{ nowLanguage }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from './Menu';\r\nimport EventBus from '@/event';\r\n\r\nexport default {\r\n    name: 'StatusBar',\r\n    props: {\r\n        height: {\r\n            type: Number,\r\n            default: 25,\r\n        },\r\n        languageList: Array,\r\n    },\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            line: 1,\r\n            column: 0,\r\n            tabSize: 4,\r\n            language: '',\r\n            tabsizeVisible: false,\r\n            hasEditor: false,\r\n            tabSizeList: [],\r\n            languages: [[]],\r\n            languageMap: {},\r\n        };\r\n    },\r\n    watch: {\r\n        languageList() {\r\n            let languageMap = {};\r\n            this.languageList.forEach((item) => {\r\n                languageMap[item.value] = item.name;\r\n            });\r\n            this.languages = [this.languageList];\r\n            this.languageMap = languageMap;\r\n        },\r\n    },\r\n    computed: {\r\n        nowLanguage() {\r\n            return this.languageMap[this.language];\r\n        },\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n        for (let i = 1; i <= 8; i++) {\r\n            this.tabSizeList.push({\r\n                name: `Tab Width：${i}`,\r\n                value: i,\r\n            });\r\n        }\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('tab-change', (data) => {\r\n                if (data) {\r\n                    this.language = data.language;\r\n                    this.tabSize = data.tabSize;\r\n                    this.line = data.line;\r\n                    this.column = data.column;\r\n                    this.hasEditor = true;\r\n                } else {\r\n                    this.hasEditor = false;\r\n                }\r\n            });\r\n            EventBus.$on('cursor-change', (data) => {\r\n                this.line = data.line;\r\n                this.column = data.column;\r\n            });\r\n            EventBus.$on('language-change', (language) => {\r\n                this.language = language;\r\n            });\r\n            EventBus.$on('close-menu', (language) => {\r\n                this.tabsizeVisible = false;\r\n            });\r\n        },\r\n        showTabsize() {\r\n            let visible = this.tabsizeVisible;\r\n            EventBus.$emit('close-menu');\r\n            this.tabsizeVisible = !visible;\r\n        },\r\n        showLanguage() {\r\n            EventBus.$emit('close-menu');\r\n            this.$emit('select-langeuage');\r\n        },\r\n        onTabsizeChange(item) {\r\n            if (this.tabSize != item.value) {\r\n                EventBus.$emit('tab-size-change', item.value);\r\n                this.tabSize = item.value;\r\n            }\r\n            this.tabsizeVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./StatusBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatusBar.vue?vue&type=template&id=67eb5ef1&\"\nimport script from \"./StatusBar.vue?vue&type=script&lang=js&\"\nexport * from \"./StatusBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"sideBar\",staticClass:\"my-side-bar\",style:({ width: _vm.width + 'px' }),on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.onContextmenu.apply(null, arguments)},\"selectstart\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"my-height-100\",staticStyle:{\"overflow\":\"hidden\"}},[_c('div',{staticClass:\"side-bar-title my-shadow\"},[_vm._v(\"EXPLORER\")]),_c('side-tree',{attrs:{\"list\":_vm.list}})],1),_c('SideBarMenu',{ref:\"sideBarMenu\"}),_c('div',{staticClass:\"my-sash-v\",on:{\"mousedown\":_vm.onSashBegin}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrap\",staticClass:\"side-tree-warp my-scroll-overlay\",on:{\"scroll\":_vm.onScroll}},[_c('div',{staticStyle:{\"width\":\"100%\",\"overflow\":\"hidden\"}},[_c('div',{staticClass:\"side-tree\",style:({ height: _vm._scrollHeight })},[_c('div',{staticClass:\"side-tree-content\",style:({ top: _vm._top })},_vm._l((_vm.renderList),function(item){return _c('div',{staticClass:\"tree-item\",on:{\"click\":function($event){$event.stopPropagation();return _vm.onClickItem(item)}}},[_c('div',{staticClass:\"tree-item-title my-center-start\",class:[item.active ? 'my-active' : ''],style:({ 'padding-left': _vm._paddingLeft(item) }),attrs:{\"title\":item.path},on:{\"contextmenu\":function($event){$event.stopPropagation();$event.preventDefault();}}},[(item.type === 'dir')?[(item.open)?_c('span',{staticClass:\"left-icon iconfont icon-down1\"}):_c('span',{staticClass:\"left-icon iconfont icon-right\"})]:_vm._e(),_c('div',{staticClass:\"tree-item-content my-center-start\",class:[item.icon]},[_c('span',{staticClass:\"tree-item-text\",staticStyle:{\"margin-left\":\"4px\"}},[_vm._v(_vm._s(item.name))])])],2)])}),0)])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @scroll=\"onScroll\" class=\"side-tree-warp my-scroll-overlay\" ref=\"wrap\">\r\n        <div style=\"width: 100%; overflow: hidden\">\r\n            <div :style=\"{ height: _scrollHeight }\" class=\"side-tree\">\r\n                <div :style=\"{ top: _top }\" class=\"side-tree-content\">\r\n                    <div @click.stop=\"onClickItem(item)\" class=\"tree-item\" v-for=\"item in renderList\">\r\n                        <div\r\n                            :class=\"[item.active ? 'my-active' : '']\"\r\n                            :style=\"{ 'padding-left': _paddingLeft(item) }\"\r\n                            :title=\"item.path\"\r\n                            @contextmenu.stop.prevent\r\n                            class=\"tree-item-title my-center-start\"\r\n                        >\r\n                            <template v-if=\"item.type === 'dir'\">\r\n                                <span class=\"left-icon iconfont icon-down1\" v-if=\"item.open\"></span>\r\n                                <span class=\"left-icon iconfont icon-right\" v-else></span>\r\n                            </template>\r\n                            <div class=\"tree-item-content my-center-start\" :class=\"[item.icon]\">\r\n                                <span class=\"tree-item-text\" style=\"margin-left: 4px\">{{ item.name }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EventBus from '@/event';\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nlet preActiveItem = null;\r\n\r\nexport default {\r\n    name: 'SideTree',\r\n    props: {\r\n        list: {\r\n            type: Array,\r\n        },\r\n    },\r\n    inject: ['openFile'],\r\n    data() {\r\n        return {\r\n            itemHeight: 30,\r\n            itemPadding: 16,\r\n            openedList: [],\r\n            renderList: [],\r\n            startLine: 1,\r\n            maxVisibleLines: 100,\r\n        };\r\n    },\r\n    computed: {\r\n        _top() {\r\n            return (this.startLine - 1) * this.itemHeight + 'px';\r\n        },\r\n        _scrollHeight() {\r\n            return this.openedList.length * this.itemHeight + 'px';\r\n        },\r\n        _paddingLeft() {\r\n            return function (item) {\r\n                return item.deep * this.itemPadding + 'px';\r\n            };\r\n        },\r\n    },\r\n    watch: {\r\n        list() {\r\n            this.openedList = [];\r\n            this.renderList = [];\r\n            this.openedList = this.getRenderList(this.list, 0);\r\n            this.render();\r\n        },\r\n    },\r\n    created() {\r\n        this.openedList = this.getRenderList(this.list, 0);\r\n        this.initEventBus();\r\n    },\r\n    mounted() {\r\n        this.maxVisibleLines = Math.ceil(this.$refs.wrap.clientHeight / this.itemHeight) + 1;\r\n        this.render();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('icon-change', () => {\r\n                this.openedList.forEach((item) => {\r\n                    item.icon = '';\r\n                });\r\n                this.render();\r\n            });\r\n            EventBus.$on('theme-change', () => {\r\n                this.openedList.forEach((item) => {\r\n                    item.icon = '';\r\n                });\r\n                this.render();\r\n            });\r\n            EventBus.$on('tab-change', (data) => {\r\n                let path = data && data.path;\r\n                if (path && preActiveItem && preActiveItem.path !== path) {\r\n                    preActiveItem.active = false;\r\n                    this.focusItem(path);\r\n                } else if (!path && preActiveItem) {\r\n                    preActiveItem.active = false;\r\n                    preActiveItem = null;\r\n                }\r\n            });\r\n        },\r\n        render() {\r\n            this.renderList = this.openedList.slice(this.startLine - 1, this.startLine - 1 + this.maxVisibleLines);\r\n            this.renderList.forEach((item) => {\r\n                if (globalData.nowIconData) {\r\n                    item.icon = Util.getIconByPath(globalData.nowIconData, item.path, globalData.nowTheme.type, item.type, item.open);\r\n                    item.icon = item.icon ? `my-file-icon my-file-icon-${item.icon}` : '';\r\n                }\r\n            });\r\n        },\r\n        readdir(dirPath) {\r\n            const fs = require('fs');\r\n            const path = require('path');\r\n            return new Promise((resolve) => {\r\n                let results = [];\r\n                // 异步读取目录内容\r\n                fs.readdir(dirPath, { encoding: 'utf8' }, (err, files) => {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                    files.forEach((item, index) => {\r\n                        let fullPath = path.join(dirPath, item);\r\n                        let state = fs.statSync(fullPath);\r\n                        let obj = {\r\n                            name: item,\r\n                            path: fullPath,\r\n                            parentPath: dirPath,\r\n                            active: false,\r\n                            children: [],\r\n                        };\r\n                        if (state.isFile()) {\r\n                            obj.type = 'file';\r\n                        } else {\r\n                            obj.type = 'dir';\r\n                            obj.open = false;\r\n                        }\r\n                        results.push(obj);\r\n                        if (index === files.length - 1) {\r\n                            resolve(this.sortFileList(results));\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        },\r\n        sortFileList(results) {\r\n            results.sort((a, b) => {\r\n                if (a.type === 'dir' && b.type === 'file') {\r\n                    return -1;\r\n                } else if (a.type === 'file' && b.type === 'dir') {\r\n                    return 1;\r\n                } else if (a.name > b.name) {\r\n                    return 1;\r\n                } else if (a.name < b.name) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n            return results;\r\n        },\r\n        getRenderList(list, deep) {\r\n            let results = [];\r\n            _loopList(list, deep);\r\n            return results;\r\n\r\n            function _loopList(list, deep) {\r\n                list.forEach((item) => {\r\n                    item.deep = deep + 1;\r\n                    results.push(item);\r\n                    if (item.open && item.children.length) {\r\n                        _loopList(item.children, item.deep);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        focusItem(path) {\r\n            let index = 0;\r\n            _findItem.call(this, path);\r\n\r\n            function _findItem(path) {\r\n                for (let i = index; i < this.openedList.length; i++) {\r\n                    let item = this.openedList[i];\r\n                    if (item.path === path) {\r\n                        let wrap = this.$refs.wrap;\r\n                        let scrollTop = wrap.scrollTop;\r\n                        let clientHeight = wrap.clientHeight;\r\n                        let height = (i + 1) * this.itemHeight;\r\n                        if (scrollTop + clientHeight < height) {\r\n                            wrap.scrollTop = height - clientHeight;\r\n                        } else if (scrollTop + this.itemHeight > height) {\r\n                            wrap.scrollTop = height - this.itemHeight;\r\n                        }\r\n                        if (!item.active) {\r\n                            this.onClickItem(item);\r\n                        }\r\n                        break;\r\n                    } else if (path.startsWith(item.path)) {\r\n                        if (!item.open) {\r\n                            index = i + 1;\r\n                            this.onClickItem(item).then(() => {\r\n                                _findItem.call(this, path);\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        onClickItem(item) {\r\n            if (!item.active) {\r\n                if (preActiveItem) {\r\n                    preActiveItem.active = false;\r\n                }\r\n                item.active = true;\r\n                preActiveItem = item;\r\n                if (item.type === 'dir') {\r\n                    item.open = !item.open;\r\n                    if (!item.loaded) {\r\n                        return this.readdir(item.path).then((data) => {\r\n                            item.children = data;\r\n                            item.loaded = true;\r\n                            data.forEach((_item) => {\r\n                                _item.deep = item.deep + 1;\r\n                            });\r\n                            _changOpen.call(this, item);\r\n                        });\r\n                    } else {\r\n                        _changOpen.call(this, item);\r\n                    }\r\n                } else {\r\n                    this.openFile(item);\r\n                }\r\n            } else if (item.type === 'dir') {\r\n                item.open = !item.open;\r\n                _changOpen.call(this, item);\r\n            }\r\n            return Promise.resolve();\r\n\r\n            function _changOpen(item) {\r\n                if (item.children.length) {\r\n                    if (item.open) {\r\n                        let index = this.openedList.indexOf(item);\r\n                        this.openedList = this.openedList\r\n                            .slice(0, index + 1)\r\n                            .concat(this.getRenderList(item.children, item.deep))\r\n                            .concat(this.openedList.slice(index + 1));\r\n                    } else {\r\n                        let index = this.openedList.indexOf(item) + 1;\r\n                        let endIn = index;\r\n                        while (endIn < this.openedList.length && this.openedList[endIn].parentPath != item.parentPath) {\r\n                            endIn++;\r\n                        }\r\n                        this.openedList.splice(index, endIn - index);\r\n                    }\r\n                    this.render();\r\n                }\r\n            }\r\n        },\r\n        onScroll(e) {\r\n            let scrollTop = e.target.scrollTop;\r\n            this.startLine = Math.floor(scrollTop / this.itemHeight) + 1;\r\n            this.render();\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideTree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideTree.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideTree.vue?vue&type=template&id=4d5a5b30&\"\nimport script from \"./SideTree.vue?vue&type=script&lang=js&\"\nexport * from \"./SideTree.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"wrap\"},[_c('Menu',{ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\" v-show=\"menuVisible\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from \"./Menu\";\r\nimport EventBus from \"@/event\";\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            list: [],\r\n            menuList: [],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"10px\",\r\n                top: \"40px\",\r\n            },\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            rootList: this.list,\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n            EventBus.$on(\"open-side-menu\", () => {\r\n                this.menuVisible = true;\r\n            });\r\n        },\r\n        show(e) {\r\n            let $parent = $(this.$refs.wrap).parent();\r\n            this.$nextTick(() => {\r\n                let menuWidth = 0;\r\n                let menuHeight = 0;\r\n                menuWidth = this.$refs.menu.$el.clientWidth;\r\n                menuHeight = this.$refs.menu.$el.clientHeight;\r\n                let offset = $parent.offset();\r\n                if (menuHeight + e.clientY > offset.top + $parent.height()) {\r\n                    this.menuStyle.top =\r\n                        e.clientY - offset.top - menuHeight + \"px\";\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n                }\r\n                this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBarMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBarMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideBarMenu.vue?vue&type=template&id=bccab2a0&\"\nimport script from \"./SideBarMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./SideBarMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div\r\n        @contextmenu.prevent.stop=\"onContextmenu\"\r\n        @selectstart.prevent\r\n        class=\"my-side-bar\"\r\n        ref=\"sideBar\"\r\n        :style=\"{ width: width + 'px' }\"\r\n    >\r\n        <div class=\"my-height-100\" style=\"overflow: hidden\">\r\n            <div class=\"side-bar-title my-shadow\">EXPLORER</div>\r\n            <side-tree :list=\"list\"></side-tree>\r\n        </div>\r\n        <SideBarMenu ref=\"sideBarMenu\"></SideBarMenu>\r\n        <div class=\"my-sash-v\" @mousedown=\"onSashBegin\"></div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport SideTree from './SideTree';\r\nimport SideBarMenu from './SideBarMenu';\r\nimport EventBus from '@/event';\r\nimport $ from 'jquery';\r\n\r\nexport default {\r\n    components: {\r\n        SideTree,\r\n        SideBarMenu,\r\n    },\r\n    data() {\r\n        return {\r\n            width: 300,\r\n            list: [],\r\n        };\r\n    },\r\n    provide() {\r\n        return {\r\n            getRootList: () => {\r\n                return this.list;\r\n            },\r\n        };\r\n    },\r\n    mounted() {\r\n        this.initEvent();\r\n    },\r\n    methods: {\r\n        initEvent() {\r\n            $(document)\r\n                .on('mousemove', (e) => {\r\n                    if (this.mouseObj) {\r\n                        let width = (this.width += e.clientX - this.mouseObj.clientX);\r\n                        let pWidth = $(this.$refs.sideBar).parent().width();\r\n                        width = width < 10 ? 10 : width;\r\n                        width = width > pWidth - 10 ? pWidth - 10 : width;\r\n                        this.width = width;\r\n                        this.mouseObj = e;\r\n                    }\r\n                })\r\n                .on('mouseup', (e) => {\r\n                    this.mouseObj = null;\r\n                });\r\n        },\r\n        onContextmenu(e) {\r\n            // EventBus.$emit(\"open-side-menu\");\r\n        },\r\n        onSashBegin(e) {\r\n            this.originMouseObj = e;\r\n            this.mouseObj = e;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./SideBar.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SideBar.vue?vue&type=template&id=36596f36&\"\nimport script from \"./SideBar.vue?vue&type=script&lang=js&\"\nexport * from \"./SideBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.overlay)?_c('div',{staticClass:\"my-dialog-overlay\"}):_vm._e(),_c('div',{staticClass:\"my-dialog\",style:(_vm.styles),on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"dialog-title\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.title)}}),_c('span',{staticClass:\"dialog-close iconfont icon-close\",on:{\"click\":_vm.onClose}})]),_c('div',{staticClass:\"dialog-content\"},[(_vm.icon)?_c('span',{class:[_vm.icon],staticStyle:{\"margin-right\":\"5px\",\"width\":\"30px\",\"height\":\"30px\"}}):_vm._e(),_c('div',[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.content)}})])]),_c('div',{staticClass:\"dialog-btns\"},[_vm._l((_vm.btns),function(item){return _c('div',{staticClass:\"dialog-btn\",on:{\"click\":function($event){return _vm.onClickBtn(item)}}},[_vm._v(_vm._s(item.name))])}),_c('div',{staticClass:\"dialog-btn\",on:{\"click\":function($event){return _vm.onClose()}}},[_vm._v(\"取消\")])],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\n * @Author: lisong\n * @Date: 2021-12-24 11:00:11\n * @Description: \n-->\n<template>\n\t<div>\n\t\t<div class=\"my-dialog-overlay\" v-if=\"overlay\"></div>\n\t\t<div :style=\"styles\" @mousedown.stop class=\"my-dialog\">\n\t\t\t<div class=\"dialog-title\">\n\t\t\t\t<div v-html=\"title\"></div>\n\t\t\t\t<span @click=\"onClose\" class=\"dialog-close iconfont icon-close\"></span>\n\t\t\t</div>\n\t\t\t<div class=\"dialog-content\">\n\t\t\t\t<span :class=\"[icon]\" style=\"margin-right:5px;width:30px;height:30px;\" v-if=\"icon\"></span>\n\t\t\t\t<div>\n\t\t\t\t\t<div v-html=\"content\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"dialog-btns\">\n\t\t\t\t<div @click=\"onClickBtn(item)\" class=\"dialog-btn\" v-for=\"item in btns\">{{item.name}}</div>\n\t\t\t\t<div @click=\"onClose()\" class=\"dialog-btn\">取消</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nexport default {\n    name: 'Dialog',\n    props: {\n        title: String,\n        content: String,\n        btns: Array,\n        overlay: Boolean,\n        styles: Object,\n        icon: String,\n        iconColor: String,\n    },\n    data() {\n        return {\n        }\n    },\n    created() {\n    },\n    methods: {\n        onClickBtn(item) {\n            item.callback();\n        },\n        onClose() {\n            this.$emit('close');\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Dialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Dialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dialog.vue?vue&type=template&id=3fea6a40&\"\nimport script from \"./Dialog.vue?vue&type=script&lang=js&\"\nexport * from \"./Dialog.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.menuVisible),expression:\"menuVisible\"}],ref:\"wrap\"},[_c('Menu',{ref:\"menu\",attrs:{\"checkable\":false,\"menuList\":_vm.menuList,\"styles\":_vm.menuStyle},on:{\"change\":_vm.onMenuChange}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div ref=\"wrap\" v-show=\"menuVisible\">\r\n        <Menu\r\n            :checkable=\"false\"\r\n            :menuList=\"menuList\"\r\n            :styles=\"menuStyle\"\r\n            @change=\"onMenuChange\"\r\n            ref=\"menu\"\r\n        ></Menu>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Menu from \"./Menu.vue\";\r\nimport EventBus from \"@/event\";\r\nimport $ from \"jquery\";\r\n\r\nexport default {\r\n    name: \"WindowMenu\",\r\n    components: {\r\n        Menu,\r\n    },\r\n    props: {\r\n        styles: {\r\n            type: Object,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            menuList: [],\r\n            menuVisible: false,\r\n            menuStyle: {\r\n                left: \"50%\",\r\n                top: \"50%\",\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on(\"close-menu\", () => {\r\n                this.menuVisible = false;\r\n            });\r\n            EventBus.$on(\"open-win-menu\", () => {\r\n                this.menuVisible = true;\r\n            });\r\n        },\r\n        onMenuChange(item) {\r\n            switch (item.op) {\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n        show(e) {\r\n            this.menuVisible = true;\r\n            this.$nextTick(() => {\r\n                let $parent = $(this.$refs.wrap).parent();\r\n                let offset = $parent.offset();\r\n                let menuWidth = this.$refs.menu.$el.clientWidth;\r\n                let menuHeight = this.$refs.menu.$el.clientHeight;\r\n                if (\r\n                    menuHeight + e.clientY >\r\n                    offset.top + $parent[0].clientHeight\r\n                ) {\r\n                    this.menuStyle.top =\r\n                        e.clientY - offset.top - menuHeight + \"px\";\r\n                } else {\r\n                    this.menuStyle.top = e.clientY - offset.top + \"px\";\r\n                }\r\n                if (\r\n                    menuWidth + e.clientX >\r\n                    offset.left + $parent[0].clientWidth\r\n                ) {\r\n                    this.menuStyle.left =\r\n                        e.clientX - offset.left - menuWidth + \"px\";\r\n                } else {\r\n                    this.menuStyle.left = e.clientX - offset.left + \"px\";\r\n                }\r\n            });\r\n        },\r\n        hide() {\r\n            this.menuVisible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./WindowMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./WindowMenu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WindowMenu.vue?vue&type=template&id=3b84567e&\"\nimport script from \"./WindowMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./WindowMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.visible)?_c('div',{staticClass:\"my-cmd-panel my-list\",on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_c('div',[_c('div',{staticClass:\"my-cmd-search\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.searchText),expression:\"searchText\"}],ref:\"input\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.searchText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.searchText=$event.target.value}}})]),_c('div',[_c('Menu',{staticClass:\"my-scroll-overlay my-scroll-mini\",staticStyle:{\"position\":\"relative\"},attrs:{\"checkable\":true,\"menuList\":_vm.cmdList,\"value\":_vm.value,\"spellcheck\":\"false\"},on:{\"change\":_vm.onChange}})],1)])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\r\n * @Author: lisong\r\n * @Date: 2022-03-22 23:00:49\r\n * @Description:\r\n */\r\nimport Util from '../../common/util';\r\nimport globalData from '@/data/globalData';\r\nimport chroma from 'chroma-js';\r\nimport EventBus from '@/event';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst path = require('path');\r\nconst settingMap = {\r\n    foreground: 'color',\r\n    background: 'background-color',\r\n    fontStyle: 'font-style',\r\n};\r\n\r\nexport default class {\r\n    constructor() {}\r\n    loadTheme(option) {\r\n        let result = { tokenColors: [], colors: {} };\r\n        return _loadTheme.call(this, option.path).then(() => {\r\n            let css = '';\r\n            this.setDefaultColor(result, option.type);\r\n            css = this.parseCss(result);\r\n            this.insertCss(css);\r\n            globalData.nowTheme = {\r\n                value: option.value,\r\n                type: option.type,\r\n                path: option.path,\r\n            };\r\n            EventBus.$emit('theme-change', option.value);\r\n        });\r\n\r\n        function _loadTheme(fullPath) {\r\n            return Util.loadJsonFile(fullPath).then((data) => {\r\n                if (data.include) {\r\n                    return _loadTheme.call(this, path.join(fullPath, '../' + data.include)).then(() => {\r\n                        _addColors(data);\r\n                    });\r\n                } else {\r\n                    _addColors(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        function _addColors(data) {\r\n            data.tokenColors && result.tokenColors.push(...data.tokenColors);\r\n            data.colors && Object.assign(result.colors, data.colors);\r\n        }\r\n    }\r\n    loadIconTheme(option) {\r\n        if (!option.path) {\r\n            globalData.nowIconTheme = {\r\n                value: option.value,\r\n            };\r\n            globalData.nowIconData = null;\r\n            EventBus.$emit('icon-change');\r\n            return;\r\n        }\r\n        let languages = globalData.languageList;\r\n        let languageMap = {};\r\n        languages.forEach((item) => {\r\n            if (item.extensions) {\r\n                languageMap[item.value] = item.extensions.map((e) => {\r\n                    return e.slice(1);\r\n                });\r\n            }\r\n        });\r\n\r\n        return _loadTheme.call(this, option.path);\r\n\r\n        function _loadTheme(fullPath) {\r\n            return Util.loadJsonFile(fullPath).then((data) => {\r\n                let fonts = data.fonts || [];\r\n                let css = '';\r\n                fonts.forEach((font) => {\r\n                    let fontFace = '@font-face{\\nsrc:';\r\n                    font.src.forEach((src, index) => {\r\n                        let url = path.join(fullPath, '../' + src.path);\r\n                        url = url.replace(/\\\\/g, '/');\r\n                        fontFace += `url('my-file://${url}')`;\r\n                        fontFace += ` format('${src.format}')`;\r\n                        fontFace += index < font - src.length - 1 ? ', ' : '';\r\n                    });\r\n                    fontFace += ';\\n';\r\n                    fontFace += `font-family:${font.id};\\n`;\r\n                    fontFace += `font-style:${font.style};\\n`;\r\n                    fontFace += `font-weight:${font.weight};\\n`;\r\n                    fontFace += '}\\n';\r\n                    css += fontFace;\r\n                    css += '.my-file-icon::before{\\n';\r\n                    css += `font-family:${font.id};\\n`;\r\n                    css += `font-size:${font.size};\\n`;\r\n                    css += '}\\n';\r\n                });\r\n                for (let icon in data.iconDefinitions) {\r\n                    css += `.my-file-icon-${icon}::before{\\n`;\r\n                    icon = data.iconDefinitions[icon];\r\n                    if (icon.fontCharacter) {\r\n                        css += 'margin-top:3px;';\r\n                        css += `content:\"${icon.fontCharacter}\";\\n`;\r\n                        css += `color:${icon.fontColor};\\n`;\r\n                    } else if (icon.iconPath) {\r\n                        let imgUrl = path.join(fullPath, '../' + icon.iconPath);\r\n                        imgUrl = imgUrl.replace(/\\\\/g, '/');\r\n                        css += 'content:\"\";';\r\n                        css += `background-image:url(my-file://${imgUrl})`;\r\n                    }\r\n                    css += '}\\n';\r\n                }\r\n                this.insertFont(css);\r\n                data.fileNames = data.fileNames || {};\r\n                data.fileExtensions = data.fileExtensions || {};\r\n                _setFileExtensions(data);\r\n                globalData.nowIconTheme = {\r\n                    value: option.value,\r\n                    path: option.path,\r\n                };\r\n                globalData.nowIconData = data;\r\n                EventBus.$emit('icon-change', option.value);\r\n            });\r\n        }\r\n\r\n        function _setFileExtensions(data) {\r\n            data.languageIds && _parseLanguageIds(data.languageIds, data.fileExtensions);\r\n            if (data.light) {\r\n                data.light.fileExtensions = data.light.fileExtensions || {};\r\n                data.light.fileNames = data.light.fileNames || {};\r\n                data.light.languageIds && _parseLanguageIds(data.light.languageIds, data.light.fileExtensions);\r\n                for (let key in data.fileExtensions) {\r\n                    data.light.fileExtensions[key] = data.light.fileExtensions[key] || data.fileExtensions[key];\r\n                }\r\n                for (let key in data.fileNames) {\r\n                    data.light.fileNames[key] = data.light.fileNames[key] || data.fileNames[key];\r\n                }\r\n            } else {\r\n                data.light = {\r\n                    fileExtensions: data.fileExtensions,\r\n                    fileNames: data.fileNames,\r\n                };\r\n            }\r\n        }\r\n\r\n        function _parseLanguageIds(languageIds, fileExtensions) {\r\n            for (let key in languageIds) {\r\n                let extensions = languageMap[key];\r\n                let value = languageIds[key];\r\n                if (extensions) {\r\n                    extensions.forEach((item) => {\r\n                        fileExtensions[item] = value;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    parseCss(data) {\r\n        let css = '';\r\n        let scopeId = 1;\r\n        let scopeTokenList = [];\r\n        let dotReg = /\\./g;\r\n        let sReg = /\\s+/g;\r\n        if (data.colors) {\r\n            css += ':root{\\n';\r\n            for (let key in data.colors) {\r\n                css += `--my-${key.replace(/\\./g, '-')}: ${data.colors[key]};\\n`;\r\n            }\r\n            css += '}\\n';\r\n        }\r\n        if (data.tokenColors) {\r\n            data.tokenColors.forEach((token) => {\r\n                if (!token.scope) {\r\n                    return;\r\n                }\r\n                let selector = [];\r\n                let scope = token.scope instanceof Array ? token.scope.join(',') : token.scope;\r\n                scope = scope.replace(/\\s+/g, ' ');\r\n                scope = scope.split(/\\s*\\,\\s*/);\r\n                scope.forEach((scope, index) => {\r\n                    selector.push(`.my-scope-${scopeId}`);\r\n                    scopeTokenList.push({\r\n                        scopeId: scopeId,\r\n                        scope: scope,\r\n                        scopes: scope.split(' '),\r\n                        level: _getLevel(scope),\r\n                    });\r\n                    scopeId++;\r\n                });\r\n                selector = selector.join(',');\r\n                css += `${selector}{\\n`;\r\n                for (let prop in token.settings) {\r\n                    css += `${settingMap[prop]}:${token.settings[prop]};\\n`;\r\n                }\r\n                css += '}\\n';\r\n            });\r\n        }\r\n        scopeTokenList.sort((a, b) => {\r\n            return b.level - a.level;\r\n        });\r\n        scopeTokenList.forEach((item) => {\r\n            if (item.scopes.length > 1) {\r\n                item.regexp = item.scopes.join('(?:\\\\.[^\\\\.\\\\s]+)*?(?:\\\\s[^\\\\s]+)*? ');\r\n            } else {\r\n                item.regexp = item.scope;\r\n            }\r\n            item.regexp = new RegExp(item.regexp);\r\n        });\r\n        globalData.scopeTokenList = scopeTokenList;\r\n        globalData.colors = data.colors;\r\n        return css;\r\n\r\n        function _getLevel(scope) {\r\n            let dot = scope.match(dotReg);\r\n            let s = scope.match(sReg);\r\n            dot = (dot && dot.length) || 0;\r\n            s = (s && s.length * 1000) || 0;\r\n            return dot + s;\r\n        }\r\n    }\r\n    insertCss(css) {\r\n        if (globalData.themeStyle) {\r\n            globalData.themeStyle.remove();\r\n        }\r\n        globalData.themeStyle = document.createElement('style');\r\n        globalData.themeStyle.type = 'text/css';\r\n        globalData.themeStyle.appendChild(document.createTextNode(css));\r\n        document.getElementsByTagName('head')[0].appendChild(globalData.themeStyle);\r\n    }\r\n    insertFont(css) {\r\n        if (globalData.iconStyle) {\r\n            globalData.iconStyle.remove();\r\n        }\r\n        globalData.iconStyle = document.createElement('style');\r\n        globalData.iconStyle.type = 'text/css';\r\n        globalData.iconStyle.appendChild(document.createTextNode(css));\r\n        document.getElementsByTagName('head')[0].appendChild(globalData.iconStyle);\r\n    }\r\n    setDefaultColor(result, type) {\r\n        let transparent = 'transparent';\r\n        let foreground = '';\r\n        let background = '';\r\n        let focusBorder = '';\r\n        let contrastBorder = '';\r\n        let contrastActiveBorder = '';\r\n        let isLight = type === 'light' || type === 'contrast light';\r\n        let isHc = type === 'contrast light' || type === 'contrast dark';\r\n\r\n        _base();\r\n        _scrollbar();\r\n        _titleBar();\r\n        _dropdown();\r\n        _list();\r\n        _menu();\r\n        _statusBar();\r\n        _sideBar();\r\n        _editor();\r\n        _tab();\r\n        _editorWidget();\r\n        _input();\r\n        _toolbar();\r\n\r\n        // base\r\n        function _base() {\r\n            if (!result.colors['foreground']) {\r\n                if (result.colors['editor.foreground']) {\r\n                    result.colors['foreground'] = chroma(result.colors['editor.foreground']).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['foreground'] = '#575757';\r\n                } else {\r\n                    result.colors['foreground'] = 'rgb(221, 221, 221)';\r\n                }\r\n            }\r\n            if (!result.colors['errorForeground']) {\r\n                result.colors['errorForeground'] = '#ff0000';\r\n            }\r\n            if (!result.colors['background']) {\r\n                if (result.colors['editor.background']) {\r\n                    result.colors['background'] = chroma(result.colors['editor.background']).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['background'] = '#fff';\r\n                } else if (isHc) {\r\n                    result.colors['background'] = '#000';\r\n                } else {\r\n                    result.colors['background'] = 'rgba(60,60,60)';\r\n                }\r\n            }\r\n            if (!result.colors['focusBorder']) {\r\n                if (isHc) {\r\n                    if (isLight) {\r\n                        result.colors['focusBorder'] = '#0f4a85';\r\n                    } else {\r\n                        result.colors['focusBorder'] = '#f38518';\r\n                    }\r\n                } else {\r\n                    result.colors['focusBorder'] = '#0066b8';\r\n                }\r\n            }\r\n            if (!result.colors['contrastBorder']) {\r\n                if (isHc) {\r\n                    if (isLight) {\r\n                        result.colors['contrastBorder'] = '#0f4a85';\r\n                    } else {\r\n                        result.colors['contrastBorder'] = '#6fc3df';\r\n                    }\r\n                } else {\r\n                    result.colors['contrastBorder'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['contrastActiveBorder']) {\r\n                if (isHc) {\r\n                    result.colors['contrastActiveBorder'] = result.colors['focusBorder'];\r\n                } else {\r\n                    result.colors['contrastActiveBorder'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['widget.shadow']) {\r\n                if (isHc) {\r\n                    result.colors['widget.shadow'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['widget.shadow'] = 'rgba(0,0,0,0.16)';\r\n                } else {\r\n                    result.colors['widget.shadow'] = 'rgba(0,0,0,0.36)';\r\n                }\r\n            }\r\n            if (!result.colors['sash.hoverBorder']) {\r\n                if (isHc) {\r\n                    result.colors['sash.hoverBorder'] = result.colors['contrastActiveBorder'];\r\n                } else {\r\n                    result.colors['sash.hoverBorder'] = result.colors['focusBorder'];\r\n                }\r\n            }\r\n            if (!result.colors['selection.background']) {\r\n                result.colors['selection.background'] = result.colors['focusBorder'];\r\n            }\r\n            background = result.colors['background'];\r\n            foreground = result.colors['foreground'];\r\n            focusBorder = result.colors['focusBorder'];\r\n            contrastBorder = result.colors['contrastBorder'];\r\n            contrastActiveBorder = result.colors['contrastActiveBorder'];\r\n        }\r\n        function _scrollbar() {\r\n            if (!result.colors['scrollbar.shadow']) {\r\n                result.colors['scrollbar.shadow'] = transparent;\r\n            }\r\n            if (!result.colors['scrollbarSlider.background']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.background'] = chroma(contrastBorder).alpha(0.6).css();\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.background'] = 'rgba(100, 100, 100, 0.4)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.background'] = 'rgba(121, 121, 121, 0.4);';\r\n                }\r\n            }\r\n            if (!result.colors['scrollbarSlider.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = chroma(contrastBorder).alpha(0.8).css();\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = 'rgba(100, 100, 100, 0.7)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.hoverBackground'] = 'rgba(100, 100, 100, 0.7);';\r\n                }\r\n            }\r\n            if (!result.colors['scrollbarSlider.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['scrollbarSlider.activeBackground'] = contrastBorder;\r\n                } else if (isLight) {\r\n                    result.colors['scrollbarSlider.activeBackground'] = 'rgba(0, 0, 0, 0.6)';\r\n                } else {\r\n                    result.colors['scrollbarSlider.activeBackground'] = 'rgba(191, 191, 191, 0.4);';\r\n                }\r\n            }\r\n        }\r\n        //titleBar\r\n        function _titleBar() {\r\n            if (!result.colors['titleBar.border']) {\r\n                result.colors['titleBar.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['titleBar.activeForeground']) {\r\n                result.colors['titleBar.activeForeground'] = foreground;\r\n            }\r\n            if (!result.colors['titleBar.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['titleBar.activeBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['titleBar.activeBackground'] = 'rgb(221, 221, 221)';\r\n                }\r\n            }\r\n            if (!result.colors['menubar.selectionForeground']) {\r\n                result.colors['menubar.selectionForeground'] = foreground;\r\n            }\r\n            if (!result.colors['menubar.selectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['menubar.selectionBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['menubar.selectionBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['menubar.selectionBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['menubar.selectionBorder']) {\r\n                if (isHc) {\r\n                    result.colors['menubar.selectionBorder'] = contrastActiveBorder;\r\n                } else {\r\n                    result.colors['menubar.selectionBorder'] = transparent;\r\n                }\r\n            }\r\n        }\r\n        // dropdown\r\n        function _dropdown() {\r\n            if (!result.colors['dropdown.background']) {\r\n                if (isHc) {\r\n                    result.colors['dropdown.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['dropdown.background'] = '#eee';\r\n                } else {\r\n                    result.colors['dropdown.background'] = 'rgba(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['dropdown.foreground']) {\r\n                result.colors['dropdown.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['dropdown.border']) {\r\n                result.colors['dropdown.border'] = contrastBorder;\r\n            }\r\n        }\r\n        // list\r\n        function _list() {\r\n            if (!result.colors['list.highlightForeground']) {\r\n                if (isHc) {\r\n                    result.colors['list.highlightForeground'] = contrastBorder;\r\n                } else {\r\n                    result.colors['list.highlightForeground'] = foreground;\r\n                }\r\n            }\r\n            if (!result.colors['list.activeSelectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['list.activeSelectionBackground'] = transparent;\r\n                } else {\r\n                    result.colors['list.activeSelectionBackground'] = '#0066b8';\r\n                    result.colors['list.activeSelectionForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['list.activeSelectionForeground']) {\r\n                if (isHc) {\r\n                    result.colors['list.activeSelectionForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['list.activeSelectionForeground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['list.activeSelectionForeground'] = 'rgba(255, 255, 255)';\r\n                }\r\n            }\r\n            if (!result.colors['list.hoverForeground']) {\r\n                result.colors['list.hoverForeground'] = foreground;\r\n            }\r\n            if (!result.colors['list.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['list.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['list.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['list.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['quickInputList.focusBackground']) {\r\n                if (result.colors['list.inactiveFocusBackground']) {\r\n                    result.colors['quickInputList.focusBackground'] = result.colors['list.inactiveFocusBackground'];\r\n                } else if (isHc) {\r\n                    result.colors['quickInputList.focusBackground'] = transparent;\r\n                } else {\r\n                    result.colors['quickInputList.focusBackground'] = '#0066b8';\r\n                    result.colors['quickInputList.focusForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['quickInputList.focusForeground']) {\r\n                if (result.colors['list.inactiveFocusForeground']) {\r\n                    result.colors['quickInputList.focusForeground'] = result.colors['list.inactiveFocusForeground'];\r\n                } else {\r\n                    result.colors['quickInputList.focusForeground'] = result.colors['list.activeSelectionForeground'];\r\n                }\r\n            }\r\n        }\r\n        //menu\r\n        function _menu() {\r\n            if (!result.colors['menu.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['menu.foreground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['menu.foreground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['menu.foreground'] = 'rgba(255, 255, 255)';\r\n                }\r\n            }\r\n            if (!result.colors['menu.background']) {\r\n                result.colors['menu.background'] = result.colors['dropdown.background'];\r\n            }\r\n            if (!result.colors['menu.border']) {\r\n                result.colors['menu.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['menu.selectionForeground']) {\r\n                result.colors['menu.selectionForeground'] = result.colors['list.activeSelectionForeground'];\r\n            }\r\n            if (!result.colors['menu.selectionBackground']) {\r\n                result.colors['menu.selectionBackground'] = result.colors['list.activeSelectionBackground'];\r\n            }\r\n            if (!result.colors['menu.selectionBorder']) {\r\n                result.colors['menu.selectionBorder'] = contrastActiveBorder;\r\n            }\r\n            if (!result.colors['menu.separatorBackground']) {\r\n                if (isHc) {\r\n                    result.colors['menu.separatorBackground'] = contrastBorder;\r\n                } else if (isLight) {\r\n                    result.colors['menu.separatorBackground'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['menu.separatorBackground'] = 'rgba(255,255,255,0.2)';\r\n                }\r\n            }\r\n        }\r\n        //statusBar\r\n        function _statusBar() {\r\n            if (!result.colors['statusBar.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['statusBar.foreground'] = foreground;\r\n                } else {\r\n                    result.colors['statusBar.foreground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['statusBar.background']) {\r\n                if (isLight && !isHc) {\r\n                    result.colors['statusBar.background'] = 'rgb(0, 122, 204)';\r\n                } else {\r\n                    result.colors['statusBar.background'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['statusBar.border']) {\r\n                result.colors['statusBar.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['statusBarItem.hoverBackground']) {\r\n                result.colors['statusBarItem.hoverBackground'] = transparent;\r\n            }\r\n            if (!result.colors['statusBarItem.activeBackground']) {\r\n                result.colors['statusBarItem.activeBackground'] = transparent;\r\n            }\r\n        }\r\n        //sideBar\r\n        function _sideBar() {\r\n            if (!result.colors['sideBar.foreground']) {\r\n                result.colors['sideBar.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['sideBarTitle.foreground']) {\r\n                result.colors['sideBarTitle.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['sideBar.background']) {\r\n                if (isHc) {\r\n                    result.colors['sideBar.background'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['sideBar.background'] = '#eee';\r\n                } else {\r\n                    result.colors['sideBar.background'] = 'rgba(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['sideBar.border']) {\r\n                result.colors['sideBar.border'] = contrastBorder;\r\n            }\r\n        }\r\n        // editor\r\n        function _editor() {\r\n            if (!result.colors['editor.foreground']) {\r\n                result.colors['editor.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['editor.background']) {\r\n                if (isHc) {\r\n                    result.colors['editor.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['editor.background'] = '#fff';\r\n                } else {\r\n                    result.colors['editor.background'] = 'rgb(30,30,30)';\r\n                }\r\n            }\r\n            if (!result.colors['editorLineNumber.foreground']) {\r\n                result.colors['editorLineNumber.foreground'] = chroma(result.colors['editor.foreground']).alpha(0.5).css();\r\n            }\r\n            if (!result.colors['editorLineNumber.activeForeground']) {\r\n                result.colors['editorLineNumber.activeForeground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorCursor.foreground']) {\r\n                result.colors['editorCursor.foreground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editor.selectionForeground']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionForeground'] = foreground;\r\n                }\r\n            }\r\n            if (!result.colors['editor.selectionBackground']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionBackground'] = focusBorder;\r\n                } else {\r\n                    result.colors['editor.selectionBackground'] = chroma(focusBorder).alpha(0.8).css();\r\n                }\r\n            }\r\n            if (!result.colors['editor.selectionHighlightBackground']) {\r\n                result.colors['editor.selectionHighlightBackground'] = transparent;\r\n            }\r\n            if (!result.colors['editor.selectionHighlightBorder']) {\r\n                if (isHc) {\r\n                    result.colors['editor.selectionHighlightBorder'] = contrastActiveBorder;\r\n                } else if (result.colors['editor.selectionHighlightBackground'] === transparent) {\r\n                    result.colors['editor.selectionHighlightBorder'] = focusBorder;\r\n                }\r\n            }\r\n            if (!result.colors['editor.findMatchBackground']) {\r\n                result.colors['editor.findMatchBackground'] = result.colors['editor.selectionBackground'];\r\n            }\r\n            if (!result.colors['editor.findMatchBorder']) {\r\n                result.colors['editor.findMatchBorder'] = transparent;\r\n            }\r\n            if (!result.colors['editor.findMatchHighlightBackground']) {\r\n                result.colors['editor.findMatchHighlightBackground'] = result.colors['editor.selectionHighlightBackground'];\r\n            }\r\n            if (!result.colors['editor.findMatchHighlightBorder']) {\r\n                result.colors['editor.findMatchHighlightBorder'] = result.colors['editor.selectionHighlightBorder'];\r\n            }\r\n            if (!result.colors['editor.lineHighlightBackground']) {\r\n                result.colors['editor.lineHighlightBackground'] = transparent;\r\n            }\r\n            if (!result.colors['editor.lineHighlightBorder']) {\r\n                if (result.colors['editor.lineHighlightBackground'] !== transparent) {\r\n                    result.colors['editor.lineHighlightBorder'] = transparent;\r\n                } else if (isHc) {\r\n                    result.colors['editor.lineHighlightBorder'] = contrastActiveBorder;\r\n                } else if (isLight) {\r\n                    result.colors['editor.lineHighlightBorder'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['editor.lineHighlightBorder'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['editorWhitespace.foreground']) {\r\n                if (isHc) {\r\n                    result.colors['editorWhitespace.foreground'] = result.colors['editor.foreground'];\r\n                } else if (isLight) {\r\n                    result.colors['editorWhitespace.foreground'] = 'rgba(0,0,0,0.2)';\r\n                } else {\r\n                    result.colors['editorWhitespace.foreground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['editorIndentGuide.background']) {\r\n                result.colors['editorIndentGuide.background'] = result.colors['editorWhitespace.foreground'];\r\n            }\r\n            if (!result.colors['editorBracketMatch.background']) {\r\n                result.colors['editorBracketMatch.background'] = transparent;\r\n            }\r\n            if (!result.colors['editorBracketMatch.border']) {\r\n                if (result.colors['editorBracketMatch.background'] === transparent) {\r\n                    result.colors['editorBracketMatch.border'] = chroma(result.colors['editor.foreground']).alpha(0.6).css();\r\n                } else {\r\n                    result.colors['editorBracketMatch.border'] = transparent;\r\n                }\r\n            }\r\n        }\r\n        // tab\r\n        function _tab() {\r\n            if (!result.colors['editorGroupHeader.tabsBackground']) {\r\n                if (isHc) {\r\n                    result.colors['editorGroupHeader.tabsBackground'] = transparent;\r\n                } else {\r\n                    result.colors['editorGroupHeader.tabsBackground'] = result.colors['sideBar.background'];\r\n                }\r\n            }\r\n            if (!result.colors['editorGroupHeader.tabsBackground']) {\r\n                result.colors['editorGroupHeader.tabsBackground'] = contrastBorder;\r\n            }\r\n            if (!result.colors['tab.border']) {\r\n                result.colors['tab.border'] = contrastBorder;\r\n            }\r\n            if (!result.colors['tab.activeForeground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.activeForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['tab.activeForeground'] = 'rgba(51, 51, 51)';\r\n                } else {\r\n                    result.colors['tab.activeForeground'] = '#fff';\r\n                }\r\n            }\r\n            if (!result.colors['tab.activeBackground']) {\r\n                result.colors['tab.activeBackground'] = result.colors['editor.background'];\r\n            }\r\n            if (!result.colors['tab.inactiveForeground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.inactiveForeground'] = foreground;\r\n                } else if (isLight) {\r\n                    result.colors['tab.inactiveForeground'] = 'rgba(51, 51, 51, 0.7)';\r\n                } else {\r\n                    result.colors['tab.inactiveForeground'] = 'rgba(255, 255, 255, 0.5)';\r\n                }\r\n            }\r\n            if (!result.colors['tab.inactiveBackground']) {\r\n                if (isHc) {\r\n                    result.colors['tab.inactiveBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['tab.inactiveBackground'] = 'rgb(236, 236, 236)';\r\n                } else {\r\n                    result.colors['tab.inactiveBackground'] = 'rgb(45, 45, 45)';\r\n                }\r\n            }\r\n            if (!result.colors['tab.activeBorder']) {\r\n                result.colors['tab.activeBorder'] = transparent;\r\n            }\r\n            if (!result.colors['tab.activeBorderTop']) {\r\n                result.colors['tab.activeBorderTop'] = transparent;\r\n            }\r\n            if (!result.colors['tab.hoverForeground']) {\r\n                result.colors['tab.hoverForeground'] = result.colors['tab.inactiveForeground'];\r\n            }\r\n            if (!result.colors['tab.hoverBackground']) {\r\n                result.colors['tab.hoverBackground'] = transparent;\r\n            }\r\n            if (!result.colors['tab.hoverBorder']) {\r\n                result.colors['tab.hoverBorder'] = transparent;\r\n            }\r\n        }\r\n        // editorWidget\r\n        function _editorWidget() {\r\n            if (!result.colors['editorWidget.foreground']) {\r\n                result.colors['editorWidget.foreground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorWidget.background']) {\r\n                if (isHc) {\r\n                    result.colors['editorWidget.background'] = background;\r\n                } else if (isLight) {\r\n                    result.colors['editorWidget.background'] = '#eee';\r\n                } else {\r\n                    result.colors['editorWidget.background'] = 'rgb(37,37,38)';\r\n                }\r\n            }\r\n            if (!result.colors['editorWidget.border']) {\r\n                if (isHc) {\r\n                    result.colors['editorWidget.border'] = contrastBorder;\r\n                } else {\r\n                    result.colors['editorWidget.border'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['editorSuggestWidget.foreground']) {\r\n                result.colors['editorSuggestWidget.foreground'] = result.colors['editorWidget.foreground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.background']) {\r\n                result.colors['editorSuggestWidget.background'] = result.colors['editorWidget.background'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.border']) {\r\n                result.colors['editorSuggestWidget.border'] = result.colors['editorWidget.border'];\r\n            }\r\n            if (result.colors['editorSuggestWidget.border'] === transparent) {\r\n                result.colors['editorSuggestWidget.shadow'] = result.colors['widget.shadow'];\r\n            } else {\r\n                result.colors['editorSuggestWidget.shadow'] = transparent;\r\n            }\r\n            if (!result.colors['editorSuggestWidget.selectedForeground']) {\r\n                result.colors['editorSuggestWidget.selectedForeground'] = result.colors['editor.foreground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.selectedBackground']) {\r\n                result.colors['editorSuggestWidget.selectedBackground'] = result.colors['quickInputList.focusBackground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.highlightForeground']) {\r\n                result.colors['editorSuggestWidget.highlightForeground'] = result.colors['list.highlightForeground'];\r\n            }\r\n            if (!result.colors['editorSuggestWidget.focusHighlightForeground']) {\r\n                result.colors['editorSuggestWidget.focusHighlightForeground'] = result.colors['list.highlightForeground'];\r\n            }\r\n        }\r\n        // input\r\n        function _input() {\r\n            if (!result.colors['input.foreground']) {\r\n                result.colors['input.foreground'] = foreground;\r\n            }\r\n            if (!result.colors['input.background']) {\r\n                if (isHc) {\r\n                    result.colors['input.background'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['input.background'] = '#fff';\r\n                } else {\r\n                    result.colors['input.background'] = background;\r\n                }\r\n            }\r\n            if (!result.colors['input.border']) {\r\n                if (result.colors['input.background'] === transparent) {\r\n                    result.colors['input.border'] = '#0066b8';\r\n                } else {\r\n                    result.colors['input.border'] = transparent;\r\n                }\r\n            }\r\n            if (!result.colors['inputOption.activeForeground']) {\r\n                result.colors['inputOption.activeForeground'] = foreground;\r\n            }\r\n            if (!result.colors['inputOption.activeBackground']) {\r\n                if (isHc) {\r\n                    result.colors['inputOption.activeBackground'] = transparent;\r\n                } else {\r\n                    result.colors['inputOption.activeBackground'] = chroma(focusBorder).alpha(0.3).css();\r\n                }\r\n            }\r\n            if (!result.colors['inputOption.activeBorder']) {\r\n                result.colors['inputOption.activeBorder'] = transparent;\r\n            }\r\n            if (!result.colors['inputOption.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['inputOption.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['inputOption.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['inputOption.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n        }\r\n        // toolbar\r\n        function _toolbar() {\r\n            if (!result.colors['toolbar.hoverBackground']) {\r\n                if (isHc) {\r\n                    result.colors['toolbar.hoverBackground'] = transparent;\r\n                } else if (isLight) {\r\n                    result.colors['toolbar.hoverBackground'] = 'rgba(0,0,0,0.1)';\r\n                } else {\r\n                    result.colors['toolbar.hoverBackground'] = 'rgba(255,255,255,0.1)';\r\n                }\r\n            }\r\n            if (!result.colors['toolbar.activeBackground']) {\r\n                result.colors['toolbar.activeBackground'] = transparent;\r\n            }\r\n            if (!result.colors['toolbar.hoverOutline']) {\r\n                result.colors['toolbar.hoverOutline'] = contrastActiveBorder;\r\n            }\r\n        }\r\n    }\r\n}\r\n","<!--\r\n * @Author: lisong\r\n * @Date: 2021-12-24 11:00:11\r\n * @Description: \r\n-->\r\n<template>\r\n    <div @mousedown.stop class=\"my-cmd-panel my-list\" v-if=\"visible\">\r\n        <div>\r\n            <div class=\"my-cmd-search\">\r\n                <input type=\"text\" v-model=\"searchText\" ref=\"input\" />\r\n            </div>\r\n            <div>\r\n                <Menu\r\n                    :checkable=\"true\"\r\n                    :menuList=\"cmdList\"\r\n                    :value=\"value\"\r\n                    @change=\"onChange\"\r\n                    style=\"position: relative\"\r\n                    class=\"my-scroll-overlay my-scroll-mini\"\r\n                    spellcheck=\"false\"\r\n                ></Menu>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Util from '@/common/util';\r\nimport Theme from '@/module/theme';\r\nimport Menu from './Menu';\r\nimport EventBus from '@/event';\r\n\r\nexport default {\r\n    name: 'CmdPanel',\r\n    components: {\r\n        Menu,\r\n    },\r\n    data() {\r\n        return {\r\n            searchText: '',\r\n            cmdList: [],\r\n            visible: false,\r\n        };\r\n    },\r\n    watch: {\r\n        searchText() {\r\n            this.searchMenu();\r\n        },\r\n    },\r\n    created() {\r\n        this.theme = new Theme();\r\n        this.initEventBus();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            EventBus.$on('close-menu', () => {\r\n                this.visible = false;\r\n            });\r\n            EventBus.$on('open-cmd-menu', (data) => {\r\n                this.visible = true;\r\n                this.searchText = '';\r\n                this.originCmdList = data.cmdList;\r\n                this.value = data.value;\r\n                if (this.originCmdList[0] && !(this.originCmdList[0] instanceof Array)) {\r\n                    this.originCmdList = [this.originCmdList];\r\n                }\r\n                this.searchMenu();\r\n                requestAnimationFrame(() => {\r\n                    this.$refs.input.focus();\r\n                });\r\n            });\r\n        },\r\n        searchMenu() {\r\n            if (this.searchText) {\r\n                let menu = [];\r\n                this.originCmdList[0].forEach((item) => {\r\n                    let result = Util.fuzzyMatch(this.searchText, item.name, true);\r\n                    if (result) {\r\n                        menu.push([item, result]);\r\n                    }\r\n                });\r\n                menu = menu\r\n                    .sort((a, b) => {\r\n                        return b[1].score - a[1].score;\r\n                    })\r\n                    .map((item) => {\r\n                        return item[0];\r\n                    });\r\n                this.cmdList = [menu];\r\n            } else {\r\n                this.cmdList = this.originCmdList.slice();\r\n            }\r\n        },\r\n        onChange(item) {\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    this.theme.loadTheme(item);\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    this.theme.loadIconTheme(item);\r\n                    break;\r\n                case 'selectLanguage':\r\n                    EventBus.$emit('language-change', item.value);\r\n                    break;\r\n            }\r\n            this.visible = false;\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./CmdPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./CmdPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CmdPanel.vue?vue&type=template&id=3ba36677&\"\nimport script from \"./CmdPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./CmdPanel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!--\r\n * @Author: lisong\r\n * @Date: 2022-03-09 17:17:02\r\n * @Description: \r\n-->\r\n<template>\r\n    <div\r\n        :style=\"{\r\n            'padding-top': _topBarHeight,\r\n            'padding-bottom': _statusHeight,\r\n        }\"\r\n        @mousedown=\"onWindMouseDown\"\r\n        class=\"my-window\"\r\n        ref=\"window\"\r\n    >\r\n        <!-- 侧边栏 -->\r\n        <side-bar ref=\"sideBar\" v-if=\"mode === 'app'\"></side-bar>\r\n        <div @contextmenu.prevent.stop=\"onContextmenu\" class=\"my-right-wrap\" ref=\"rightWrap\">\r\n            <!-- tab栏 -->\r\n            <editor-bar\r\n                :editorList=\"editorList\"\r\n                @change=\"onChangeTab\"\r\n                @close=\"onCloseTab\"\r\n                @close-all=\"onCloseAll\"\r\n                @close-saved=\"onCloseSaved\"\r\n                @close-to-left=\"onCloseToLeft\"\r\n                @close-to-right=\"onCloseToRight\"\r\n                v-show=\"editorList.length\"\r\n            ></editor-bar>\r\n            <!-- 编辑区 -->\r\n            <template v-for=\"item in editorList\">\r\n                <editor :active=\"item.active\" :id=\"item.id\" :key=\"item.id\" :ref=\"'editor' + item.id\" @change=\"onFileChange(item.id)\" @save=\"onSaveFile(item.id)\" v-show=\"item.active\"></editor>\r\n            </template>\r\n            <window-menu ref=\"winMenu\"></window-menu>\r\n        </div>\r\n        <!-- 顶部菜单栏 -->\r\n        <title-bar :height=\"topBarHeight\" @change=\"onMenuChange\" ref=\"titleBar\"></title-bar>\r\n        <!-- 状态栏 -->\r\n        <status-bar :height=\"statusHeight\" :languageList=\"languageList\" ref=\"statusBar\" @select-langeuage=\"onSelectLanguage\"></status-bar>\r\n        <cmd-panel></cmd-panel>\r\n        <Dialog\r\n            :btns=\"dialogBtns\"\r\n            :content=\"dialogContent\"\r\n            :icon=\"this.dialogIcon\"\r\n            :icon-color=\"this.dialogIconColor\"\r\n            :overlay=\"true\"\r\n            :title=\"dialogTilte\"\r\n            @close=\"onDialogClose\"\r\n            v-show=\"dialogVisible\"\r\n        ></Dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EditorBar from './EditorBar.vue';\r\nimport Editor from './Editor.vue';\r\nimport TitleBar from './TitleBar';\r\nimport StatusBar from './StatusBar';\r\nimport SideBar from './SideBar.vue';\r\nimport Dialog from './Dialog.vue';\r\nimport WindowMenu from './WindowMenu.vue';\r\nimport CmdPanel from './CmdPanel.vue';\r\nimport Context from '@/module/context/index';\r\nimport Theme from '@/module/theme';\r\nimport EventBus from '@/event';\r\nimport Util from '@/common/util';\r\nimport globalData from '@/data/globalData';\r\nimport stripJsonComments from 'strip-json-comments';\r\n\r\nconst require = window.require || window.parent.require || function () {};\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst remote = require('@electron/remote');\r\nconst contexts = Context.contexts;\r\n\r\nexport default {\r\n    components: {\r\n        Editor,\r\n        EditorBar,\r\n        TitleBar,\r\n        StatusBar,\r\n        SideBar,\r\n        Dialog,\r\n        WindowMenu,\r\n        CmdPanel,\r\n    },\r\n    data() {\r\n        return {\r\n            extensionsPath: path.join(globalData.dirname, 'main/extensions'),\r\n            languageList: [],\r\n            statusHeight: 30,\r\n            topBarHeight: 35,\r\n            nowId: null,\r\n            idCount: 1,\r\n            titleCount: 1,\r\n            editorList: [],\r\n            dialogTilte: '',\r\n            dialogContent: '',\r\n            dialogVisible: false,\r\n            dialogBtns: [],\r\n            dialogIcon: '',\r\n            dialogIconColor: '',\r\n            mode: remote ? 'app' : 'mode',\r\n        };\r\n    },\r\n    computed: {\r\n        _topBarHeight() {\r\n            return this.topBarHeight + 'px';\r\n        },\r\n        _statusHeight() {\r\n            return this.statusHeight + 'px';\r\n        },\r\n    },\r\n    provide() {\r\n        return {\r\n            getNowEditor: () => {\r\n                return this.getNowEditor();\r\n            },\r\n            getNowContext: () => {\r\n                return this.getNowContext();\r\n            },\r\n            openFile: (fileObj, choseFile) => {\r\n                this.openFile(fileObj, choseFile);\r\n            },\r\n            openFolder: () => {\r\n                this.openFolder();\r\n            },\r\n        };\r\n    },\r\n    created() {\r\n        window.globalData = globalData;\r\n        if (this.mode === 'app') {\r\n            const currentWindow = remote.getCurrentWindow();\r\n            currentWindow.on('blur', () => {\r\n                EventBus.$emit('close-menu');\r\n            });\r\n        }\r\n        this.theme = new Theme();\r\n        this.loadExtensions().then((result) => {\r\n            let langeuages = result.languages;\r\n            let themes = result.themes;\r\n            let iconThemes = result.iconThemes;\r\n            let scopeFileList = result.scopeFileList;\r\n            langeuages.push({ name: 'Plain Text', value: '', checked: true });\r\n            globalData.languageList = langeuages.slice();\r\n            globalData.scopeFileList = scopeFileList.slice();\r\n            globalData.themes = themes.slice();\r\n            globalData.iconThemes = iconThemes.slice();\r\n            this.languageList = langeuages;\r\n            this.checkLanguage();\r\n            this.theme.loadTheme(globalData.nowTheme);\r\n            this.theme.loadIconTheme(globalData.nowIconTheme);\r\n        });\r\n        this.initEventBus();\r\n    },\r\n    mounted() {\r\n        window.test = this;\r\n        this.openFile();\r\n    },\r\n    methods: {\r\n        initEventBus() {\r\n            let iconFn = (value) => {\r\n                this.editorList.forEach((item) => {\r\n                    if (value) {\r\n                        let icon = Util.getIconByPath(globalData.nowIconData, item.path, globalData.nowTheme.type);\r\n                        item.icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                    } else {\r\n                        item.icon = '';\r\n                    }\r\n                });\r\n                this.editorList.splice();\r\n            };\r\n            EventBus.$on('icon-change', iconFn);\r\n            EventBus.$on('theme-change', iconFn);\r\n        },\r\n        onContextmenu(e) {\r\n            // EventBus.$emit('open-win-menu');\r\n        },\r\n        // 点击编辑器\r\n        onWindMouseDown() {\r\n            EventBus.$emit('close-menu');\r\n        },\r\n        onChangeTab(id) {\r\n            let tab = this.getTabById(id);\r\n            if (!tab.active) {\r\n                this.editorList.forEach((item) => {\r\n                    item.active = false;\r\n                });\r\n                tab.active = true;\r\n                this.nowId = id;\r\n                this.changeStatus();\r\n            } else {\r\n                this.getNowEditor().focus();\r\n            }\r\n        },\r\n        onCloseTab(id) {\r\n            if (!this.nowId) {\r\n                return;\r\n            }\r\n            let tab = this.getTabById(id || this.nowId);\r\n            let index = this.editorList.indexOf(tab);\r\n            if (!tab.saved) {\r\n                this.showDialog({\r\n                    content: '文件尚未保存，是否先保存文件？',\r\n                    cancel: true,\r\n                    icon: 'my-icon-warn',\r\n                    iconColor: 'rgba(255,196,0)',\r\n                    btns: [\r\n                        {\r\n                            name: '保存',\r\n                            callback: () => {\r\n                                if (this.mode === 'app') {\r\n                                    this.onSaveFile(id).then(() => {\r\n                                        _closeTab.call(this);\r\n                                        this.onDialogClose();\r\n                                    });\r\n                                } else {\r\n                                    _closeTab.call(this);\r\n                                    this.onDialogClose();\r\n                                }\r\n                            },\r\n                        },\r\n                        {\r\n                            name: '不保存',\r\n                            callback: () => {\r\n                                _closeTab.call(this);\r\n                                this.onDialogClose();\r\n                            },\r\n                        },\r\n                    ],\r\n                });\r\n            } else {\r\n                _closeTab.call(this);\r\n            }\r\n\r\n            function _closeTab() {\r\n                this.editorList.splice(index, 1);\r\n                contexts[id] = null;\r\n                if (tab.active) {\r\n                    tab.active = false;\r\n                    tab = this.editorList[index] || this.editorList[index - 1];\r\n                    if (tab) {\r\n                        this.onChangeTab(tab.id);\r\n                    } else {\r\n                        this.nowId = null;\r\n                        EventBus.$emit('tab-change', null);\r\n                    }\r\n                } else {\r\n                    this.getNowEditor().focus();\r\n                }\r\n            }\r\n        },\r\n        onCloseAll() {\r\n            this.editorList = this.editorList.filter((item) => {\r\n                return !item.saved;\r\n            });\r\n            this.editorList.forEach((item) => {\r\n                this.onCloseTab(item.id);\r\n            });\r\n            this.nowId = null;\r\n        },\r\n        onCloseSaved() {\r\n            this.editorList.slice().forEach((item) => {\r\n                if (item.saved) {\r\n                    this.onCloseTab(item.id);\r\n                }\r\n            });\r\n        },\r\n        onCloseToLeft(id) {\r\n            let tab = null;\r\n            id = id || this.nowId;\r\n            while ((tab = this.editorList[0])) {\r\n                if (tab.id !== id) {\r\n                    this.onCloseTab(tab.id);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        onCloseToRight(id) {\r\n            let tab = null;\r\n            id = id || this.nowId;\r\n            while ((tab = this.editorList.peek())) {\r\n                if (tab.id !== id) {\r\n                    this.onCloseTab(tab.id);\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        onMenuChange(item) {\r\n            let cmdList = null;\r\n            switch (item.op) {\r\n                case 'changeTheme':\r\n                    cmdList = globalData.themes.map((item) => {\r\n                        return item.map((item) => {\r\n                            return Object.assign({ op: 'changeTheme' }, item);\r\n                        });\r\n                    });\r\n                    EventBus.$emit('open-cmd-menu', {\r\n                        cmdList: cmdList,\r\n                        value: globalData.nowTheme.value,\r\n                    });\r\n                    break;\r\n                case 'changeIconTheme':\r\n                    cmdList = globalData.iconThemes.map((item) => {\r\n                        return Object.assign({ op: 'changeIconTheme' }, item);\r\n                    });\r\n                    cmdList.push({\r\n                        name: 'None',\r\n                        value: 'none',\r\n                        op: 'changeIconTheme',\r\n                    });\r\n                    EventBus.$emit('open-cmd-menu', {\r\n                        cmdList: cmdList,\r\n                        value: globalData.nowIconTheme.value,\r\n                    });\r\n                    break;\r\n            }\r\n        },\r\n        onSelectLanguage() {\r\n            let cmdList = globalData.languageList.map((item) => {\r\n                return {\r\n                    op: 'selectLanguage',\r\n                    name: item.name + (item.language ? `（${item.language}）` : ''),\r\n                    value: item.value,\r\n                };\r\n            });\r\n            EventBus.$emit('open-cmd-menu', {\r\n                cmdList: cmdList,\r\n                value: this.nowId && this.getNowEditor().language,\r\n            });\r\n        },\r\n        onFileChange(id) {\r\n            let tab = this.getTabById(id);\r\n            tab.saved = false;\r\n        },\r\n        onSaveFile(id) {\r\n            let tab = this.getTabById(id);\r\n            if (this.mode === 'web') {\r\n                return Promise.resolve();\r\n            }\r\n            if (!tab.saved) {\r\n                if (tab.path) {\r\n                    this.writeFile(tab.path, contexts[id].getAllText());\r\n                    tab.saved = true;\r\n                    return Promise.resolve();\r\n                } else {\r\n                    let win = remote.getCurrentWindow();\r\n                    let options = {\r\n                        title: '请选择要保存的文件名',\r\n                        buttonLabel: '保存',\r\n                    };\r\n                    return remote.dialog.showSaveDialog(win, options).then((result) => {\r\n                        if (!result.canceled && result.filePath) {\r\n                            tab.path = result.filePath;\r\n                            tab.name = tab.path.match(/[^\\\\\\/]+$/)[0];\r\n                            this.writeFile(tab.path, contexts[id].getAllText());\r\n                            tab.saved = true;\r\n                        } else {\r\n                            return Promise.reject();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        onDialogClose() {\r\n            this.dialogVisible = false;\r\n        },\r\n        openFolder() {\r\n            this.choseFolder().then((results) => {\r\n                if (results) {\r\n                    this.$refs.sideBar.list = results;\r\n                    this.editorList = [];\r\n                    this.nowId = null;\r\n                }\r\n            });\r\n        },\r\n        choseFolder() {\r\n            let win = remote.getCurrentWindow();\r\n            let options = {\r\n                title: '选择文件夹',\r\n                properties: ['openDirectory', 'multiSelections'],\r\n            };\r\n            return remote.dialog\r\n                .showOpenDialog(win, options)\r\n                .then((result) => {\r\n                    let results = [];\r\n                    if (!result.canceled && result.filePaths) {\r\n                        result.filePaths.forEach((item) => {\r\n                            let obj = {\r\n                                name: item.match(/[^\\\\\\/]+$/)[0],\r\n                                path: item,\r\n                                type: 'dir',\r\n                                active: false,\r\n                                open: false,\r\n                                children: [],\r\n                            };\r\n                            results.push(Object.assign({}, obj));\r\n                        });\r\n                        return results;\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        openFile(fileObj, choseFile) {\r\n            let tab = fileObj && this.getTabByPath(fileObj.path);\r\n            if (!tab) {\r\n                let index = -1;\r\n                let name = (fileObj && fileObj.name) || `Untitled${this.titleCount++}`;\r\n                if (this.editorList.length) {\r\n                    tab = this.getTabById(this.nowId);\r\n                    index = this.editorList.indexOf(tab);\r\n                }\r\n                if (choseFile) {\r\n                    //从资源管理器中选择文件\r\n                    this.choseFile().then((results) => {\r\n                        if (results) {\r\n                            tab = results[0];\r\n                            this.editorList = this.editorList.slice(0, index).concat(results).concat(this.editorList.slice(index));\r\n                            _done.call(this);\r\n                        }\r\n                    });\r\n                } else {\r\n                    tab = {\r\n                        id: this.idCount++,\r\n                        name: name,\r\n                        path: (fileObj && fileObj.path) || '',\r\n                        icon: (fileObj && fileObj.icon) || '',\r\n                        saved: true,\r\n                        active: false,\r\n                    };\r\n                    if (!tab.icon) {\r\n                        let icon = Util.getIconByPath(globalData.nowIconData, '', globalData.nowTheme.type);\r\n                        tab.icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                    }\r\n                    this.editorList.splice(index + 1, 0, tab);\r\n                    _done.call(this);\r\n                }\r\n            } else {\r\n                _done.call(this);\r\n            }\r\n\r\n            function _done() {\r\n                this.$nextTick(() => {\r\n                    if (tab && tab.path && !tab.loaded) {\r\n                        fs.readFile(tab.path, { encoding: 'utf8' }, (err, data) => {\r\n                            if (err) {\r\n                                throw err;\r\n                            }\r\n                            this.getContext(tab.id).insertContent(data);\r\n                            tab.saved = true;\r\n                            tab.loaded = true;\r\n                        });\r\n                    }\r\n                    this.onChangeTab(tab.id);\r\n                    this.checkLanguage();\r\n                });\r\n            }\r\n        },\r\n        choseFile() {\r\n            let win = remote.getCurrentWindow();\r\n            let options = {\r\n                title: '选择文件',\r\n                properties: ['openFile', 'multiSelections'],\r\n            };\r\n            return remote.dialog\r\n                .showOpenDialog(win, options)\r\n                .then((result) => {\r\n                    let results = [];\r\n                    if (!result.canceled && result.filePaths) {\r\n                        result.filePaths.forEach((item) => {\r\n                            let icon = Util.getIconByPath(globalData.nowIconData, item, globalData.nowTheme.type);\r\n                            icon = icon ? `my-file-icon my-file-icon-${icon}` : '';\r\n                            let obj = {\r\n                                id: this.idCount++,\r\n                                name: item.match(/[^\\\\\\/]+$/)[0],\r\n                                path: item,\r\n                                icon: icon,\r\n                                saved: true,\r\n                                active: false,\r\n                            };\r\n                            results.push(Object.assign({}, obj));\r\n                        });\r\n                        return results;\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        },\r\n        sortFileList() {\r\n            this.list.sort((a, b) => {\r\n                if (a.type === b.type) {\r\n                    if (a.name === b.name) {\r\n                        return 0;\r\n                    } else if (a.name > b.name) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (a.type === 'dir') {\r\n                    return -1;\r\n                }\r\n                return 1;\r\n            });\r\n        },\r\n        showDialog(option) {\r\n            this.dialogTilte = option.title || '';\r\n            this.dialogContent = option.content || '';\r\n            this.dialogBtns = option.btns;\r\n            this.dialogVisible = true;\r\n            this.dialogIconColor = option.iconColor || '';\r\n            this.dialogIcon = option.icon || '';\r\n        },\r\n        writeFile(path, text) {\r\n            fs.writeFileSync(path, text, { encoding: 'utf-8' });\r\n        },\r\n        changeStatus() {\r\n            let changStatusId = this.changeStatus.id || 1;\r\n            this.changeStatus.id = changStatusId;\r\n            this.$nextTick(() => {\r\n                if (this.changeStatus.id !== changStatusId) {\r\n                    return;\r\n                }\r\n                let editor = this.getNowEditor();\r\n                let tab = this.getTabById(this.nowId);\r\n                EventBus.$emit(`tab-change`, {\r\n                    path: tab.path,\r\n                    language: editor.language,\r\n                    tabSize: editor.tabSize,\r\n                    line: editor.nowCursorPos ? editor.nowCursorPos.line : '?',\r\n                    column: editor.nowCursorPos ? editor.nowCursorPos.column : '?',\r\n                });\r\n            });\r\n        },\r\n        // 检查当前打开的文件的语言\r\n        checkLanguage() {\r\n            if (this.nowId) {\r\n                let tab = this.getTabById(this.nowId);\r\n                let suffix = /\\.[^\\.]+$/.exec(tab.name);\r\n                if (!suffix) {\r\n                    return;\r\n                }\r\n                for (let i = 0; i < this.languageList.length; i++) {\r\n                    let language = this.languageList[i];\r\n                    if (language.extensions && language.extensions.indexOf(suffix[0]) > -1) {\r\n                        this.$nextTick(() => {\r\n                            EventBus.$emit('language-change', language.value);\r\n                        });\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        // 加载语言支持\r\n        loadExtensions() {\r\n            let languages = [];\r\n            let scopeFileList = [];\r\n            let themes = [[], [], [], []];\r\n            let iconThemes = [];\r\n            let varMap = {};\r\n            return new Promise((resolve) => {\r\n                // 异步读取目录内容\r\n                fs.readdir(this.extensionsPath, { encoding: 'utf8' }, (err, files) => {\r\n                    if (err) {\r\n                        throw err;\r\n                    }\r\n                    files.forEach((item, index) => {\r\n                        let fullPath = path.join(this.extensionsPath, item);\r\n                        let packPath = path.join(fullPath, './package.json');\r\n                        let varConfigPath = path.join(fullPath, './package.nls.json');\r\n                        if (fs.existsSync(varConfigPath)) {\r\n                            const text = fs.readFileSync(varConfigPath, 'utf-8');\r\n                            try {\r\n                                varMap = JSON.parse(stripJsonComments(text));\r\n                            } catch (e) {\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                        if (fs.existsSync(packPath)) {\r\n                            const text = fs.readFileSync(packPath, 'utf-8');\r\n                            try {\r\n                                let json = JSON.parse(stripJsonComments(text));\r\n                                let contributes = json.contributes;\r\n                                _addLanguage(contributes, fullPath);\r\n                                _addTheme(contributes, fullPath);\r\n                                _addIconTheme(contributes, fullPath);\r\n                            } catch (e) {\r\n                                console.log(e);\r\n                            }\r\n                        }\r\n                    });\r\n                    themes = themes.filter((item) => {\r\n                        return item.length;\r\n                    });\r\n                    resolve({\r\n                        languages: languages,\r\n                        scopeFileList: scopeFileList,\r\n                        themes: themes,\r\n                        iconThemes: iconThemes,\r\n                    });\r\n                });\r\n            });\r\n\r\n            function _addLanguage(contributes, fullPath) {\r\n                let grammars = contributes.grammars;\r\n                let list = contributes.languages || [];\r\n                list.map((language) => {\r\n                    for (let i = 0; i < grammars.length; i++) {\r\n                        let grammar = grammars[i];\r\n                        scopeFileList.push({\r\n                            scopeName: grammar.scopeName,\r\n                            path: path.join(fullPath, grammar.path),\r\n                            configPath: language.configuration ? path.join(fullPath, language.configuration) : '',\r\n                        });\r\n                        if (language.id === grammar.language) {\r\n                            let name = language.aliases && language.aliases[0];\r\n                            name = name || grammar.language;\r\n                            languages.push({\r\n                                name: name,\r\n                                value: grammar.language,\r\n                                language: grammar.language,\r\n                                scopeName: grammar.scopeName,\r\n                                path: path.join(fullPath, grammar.path),\r\n                                configPath: language.configuration ? path.join(fullPath, language.configuration) : '',\r\n                                extensions: language.extensions,\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            function _addTheme(contributes, fullPath) {\r\n                let list = contributes.themes || [];\r\n                list.map((theme) => {\r\n                    let type = 'light';\r\n                    let index = 0;\r\n                    let label = _getValue(theme.label);\r\n                    switch (theme.uiTheme) {\r\n                        case 'vs-dark':\r\n                            type = 'dark';\r\n                            index = 1;\r\n                            break;\r\n                        case 'hc-light':\r\n                            type = 'contrast light';\r\n                            index = 2;\r\n                            break;\r\n                        case 'hc-black':\r\n                            type = 'contrast dark';\r\n                            index = 3;\r\n                            break;\r\n                    }\r\n                    themes[index].push({\r\n                        name: theme.id || label,\r\n                        value: label || theme.id,\r\n                        type: type,\r\n                        path: path.join(fullPath, theme.path),\r\n                    });\r\n                });\r\n            }\r\n\r\n            function _addIconTheme(contributes, fullPath) {\r\n                let list = contributes.iconThemes || [];\r\n                list.map((theme) => {\r\n                    let label = _getValue(theme.label);\r\n                    iconThemes.push({\r\n                        name: label || theme.id,\r\n                        value: theme.id || label,\r\n                        path: path.join(fullPath, theme.path),\r\n                    });\r\n                });\r\n            }\r\n\r\n            function _getValue(name) {\r\n                name = name || '';\r\n                if (name[0] === '%' && name[name.length - 1] === '%') {\r\n                    name = varMap[name.slice(1, -1)] || name;\r\n                }\r\n                return name;\r\n            }\r\n        },\r\n        getTabById(id) {\r\n            for (let i = 0; i < this.editorList.length; i++) {\r\n                if (this.editorList[i].id === id) {\r\n                    return this.editorList[i];\r\n                }\r\n            }\r\n        },\r\n        getTabByPath(path) {\r\n            for (let i = 0; i < this.editorList.length; i++) {\r\n                if (this.editorList[i].path === path) {\r\n                    return this.editorList[i];\r\n                }\r\n            }\r\n        },\r\n        getEditor(id) {\r\n            let editor = this.$refs[`editor${id}`];\r\n            return editor && editor[0];\r\n        },\r\n        getNowEditor() {\r\n            return this.getEditor(this.nowId);\r\n        },\r\n        getContext(id) {\r\n            return contexts[id];\r\n        },\r\n        getNowContext() {\r\n            return this.getContext(this.nowId);\r\n        },\r\n    },\r\n};\r\n</script>","import mod from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Window.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_thread-loader@3.0.4@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.2.4@babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!./Window.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Window.vue?vue&type=template&id=386355a3&\"\nimport script from \"./Window.vue?vue&type=script&lang=js&\"\nexport * from \"./Window.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.9.8@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Window from './components/Window.vue';\r\n\r\nVue.use(Router)\r\n\r\nvar router = new Router({\r\n    routes: [{\r\n            path: '/',\r\n            name: 'Window',\r\n            component: Window,\r\n            meta: {\r\n                title: 'my-editor'\r\n            }\r\n        },\r\n        {\r\n            path: '*',\r\n            redirect: '/'\r\n        }\r\n    ]\r\n})\r\n\r\nexport default router;","import Vue from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport axios from 'axios';\r\nimport './scss/index.scss';\r\n\r\nVue.config.productionTip = false;\r\nVue.prototype.$http = axios.create({\r\n    timeout: 1000 * 30,\r\n    withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n    },\r\n});\r\n\r\nnew Vue({\r\n    router,\r\n    render: (h) => h(App),\r\n}).$mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_editor\"] = self[\"webpackChunkmy_editor\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(647); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","name","component","ref","staticClass","style","_topBarHeight","_statusHeight","on","onWindMouseDown","mode","_e","$event","preventDefault","stopPropagation","onContextmenu","apply","arguments","directives","rawName","value","editorList","expression","onChangeTab","onCloseTab","onCloseAll","onCloseSaved","onCloseToLeft","onCloseToRight","_l","item","key","id","refInFor","active","onFileChange","onSaveFile","topBarHeight","onMenuChange","statusHeight","languageList","onSelectLanguage","dialogBtns","dialogContent","dialogIcon","dialogIconColor","dialogTilte","onDialogClose","class","path","onClickItem","icon","_v","_s","onClose","saved","menuList","menuStyle","group","index","checkable","checked","disabled","onClick","onHover","shortcut","myMenuList","length","props","type","default","styles","hoverCheck","itemHeight","computed","watch","$","methods","$scroller","setChecked","setCheckedByIndex","bus","Vue","components","Menu","op","menuVisible","left","top","EventBus","show","menuWidth","offset","e","require","window","parent","remote","dirname","app","getAppPath","globalData","scopeIdMap","scopeReg","colors","nowTheme","join","nowIconTheme","nowIconData","themes","iconThemes","scopeFileList","scopeTokenList","grammars","sourceWordMap","defaultWordPattern","fs","Util","clipboardData","Promise","resolve","getData","navigator","clipboard","readText","text","setData","writeText","String","replace","regex","r","exec","num","Number","tabSize","val","tmp","arr","sort","arg1","arg2","wrap","str1","str2","id1","getUUID","id2","$tempDom","append","dom","charWidth","scrollWidth","charHight","clientHeight","fontSize","getComputedStyle","currentStyle","fullAngleCharWidth","remove","str","charW","fullCharW","start","end","substr","substring","match","fullAngleReg","width","tabNum","getStrExactWidth","count","_splitStr","clientWidth","Math","floor","result","i","column","push","htmlTrans","slice","space","cont","targetObj","originObj","noDeepKeys","_assign","Map","assigned","indexOf","RegExp","nodeName","nodeType","has","get","Array","set","len","random","toString","line","funStr","blob","Blob","url","URL","createObjectURL","worker","Worker","target","context","properties","forEach","property","bind","Object","defineProperties","language","scopeName","wordPattern","getLanguageById","_wordPattern","pattern","iconData","fileType","opened","fileName","suffix1","suffix2","light","folderExpanded","folder","fileNames","fileExtensions","file","reject","readFile","error","data","fullPath","then","stripJsonComments","replaceAll","JSON","parse","word","fullMatch","wordMap","towMap","wordLength","score","preFinedChar","preFinedOriginChar","preFinded","targetMap","indexs","_target","toLowerCase","_setMap","originChar","char","_humpCheck","_complete","fuzzyMatch","cache","preChar","keys","preCode","charCodeAt","charCode","prototype","peek","empty","insert","right","mid","splice","keyCode","DELETE","BACKSPACE","command","INSERT","MOVEUP","MOVEDOWN","COPY_UP","COPY_DOWN","DELETE_COPY_UP","DELETE_COPY_DOWN","REPLACE","INSERT_LINE","DELETE_LINE","constData","LINE_COMMENT","BLOCK_COMMENT","BRACKET","TAG","constructor","editorBar","initProperties","onKeyDown","ctrlKey","pressK","$emit","EditorBarMenu","list","rootList","$tab","onWheel","_numTop","staticStyle","maxLine","nowCursorPos","height","_lineHeight","fold","onToggleFold","_leftShadow","onScroll","minWidth","_contentMinWidth","contentHeight","onContentMdown","onContentMmove","onContentMLeave","onSelectend","_top","_activeLine","selected","isFsearch","selectedFg","domProps","html","bracketMatch","range","tab","_tabLineLeft","visibility","_cursorVisible","_textAreaPos","onBlur","onCompositionend","onCompositionstart","onCopy","onCut","onFocus","onInput","onPaste","autoTipList","autoTipStyle","onClickAuto","searchCount","searchNow","onCloseSearch","onSearchNext","onSearchPrev","onSearch","onClickMenu","tipContent","tipStyle","regs","stringToken","editor","currentLine","initRegistry","initLanguage","wasmBin","readFileSync","buffer","vscodeOnigurumaLib","oniguruma","createOnigScanner","patterns","createOnigString","s","registry","vsctm","onigLib","loadGrammar","configPath","sourceFoldMap","hasTextGrammar","startsWith","initLanguageConifg","grammar","foldType","tokenizeVisibleLins","grammarData","foldMap","source","__comments__","lineComment","blockComment","comments","__endCommentReg__","brackets","__foldReg__","onInsertContentAfter","nowLine","newLine","clearTimeout","tokenizeLinesTimer","$nextTick","tokenizeLines","onDeleteContentAfter","tokenizeVisibleLinsId","startLine","endLine","maxVisibleLines","getRealLine","asyncTokenizeLines","processedLines","processedTime","Date","now","cancelIdleCallback","lineObj","htmls","tokens","tokenizeLine","folds","stateFold","checkLineVisible","splitLongToken","createHtml","renderLine","lineId","states","equals","requestIdleCallback","setTimeout","lineText","map","selector","startIndex","endIndex","scopes","_getSelector","scopeId","token","scope","outerLoop","_scope","regexp","test","lineTokens","addFold","ruleStack","existTag","isString","_scopeName","lastFold","addBracket","addTagFold","a","b","option","reg","res","preFold","side","_inString","lastIndex","tag","startCol","getLineInFold","child_process","initEvent","setErrors","fork","console","log","parseId","results","parseTimer","getAllText","send","TOKEN_TYPE","TEXT","SOURCE","TAG_NAME","ATTR_NAME","STRING","WORD","CSS","CSS_VALUE","CSS_PROPERTY","CSS_SELECTOR","CSS_TAG","CSS_CLASS","CSS_ATTR","CSS_PSEUDO","EMMET_HTML","EMMET_CSS","tagToken","tagNameToken","tagAttrName","cssValueToken","cssPropertyToken","cssSelectorToken","cssAttributeToken","cssClassToken","cssPseudoToken","styleCss","styleCssProperty","Autocomplete","doneMap","reset","stop","searchTimer","search","_search","emmet","tokenIndex","getTokenIndex","nowToken","emmetObj","extract","Enum","_isCssToken","_isCssPropertyToken","_isCssValueToken","preToken","replaceTip","abbreviation","selectAutoTip","insertContent","setAutoTip","_isTextToken","_searchEmmet","_isTagNameToken","_searchTagName","_isAttrNameToken","_getPreTagName","_searchTagAttrName","_searchCssProperty","_getPreCssProperty","_searchCssValue","_isCssSelectorToken","_searchCssTag","_searchCssPseudo","_searchSelector","_isTagToken","_searchStyle","_isSourceToken","_searchWord","_searchDocument","_isStringToken","_addTip","_isCssClassToken","skipMatch","callback","showAll","startTime","_showTip","htmlData","getHtmlData","tags","attributes","tagMap","after","globalAttributes","cssData","getCssData","pseudo","split","trim","pseudoClasses","pseudoElements","keyValue","values","propertyMap","_word","before","_setTokenType","isSourceToken","isCssToken","isTextToken","isTagToken","isTagAttrNameToken","isTagNameToken","isStringToken","isCssValueToken","isCssPropertyToken","isCssSelectorToken","isCssClassToken","isCssAttributeToken","isCssPseudoToken","undefined","_isCssAttributeToken","_isCssPseudoToken","skipDone","obj","desc","getIcon","all","limit","checkEmmetValid","_text","invalidEmmetParen","paremEmmet","cursorPos","Node","max","dataList","linkList","next","prev","pNode","Btree","compare","root","head","size","node","arrayCache","link","half","iterator","findIndex","_insert","newNode","isPnode","j","delete","that","pIndex","leftNode","rightNode","_moveRight","_moveLeft","_join","orginIndex","originResult","_next","_prev","cb","toArray","isInsert","comparator","singleTag","singleTagMap","editorFunObj","preCursorPos","afterIndex","Infinity","unFold","starLine","foldLine","resultFold","getRangeFold","getFoldByLine","it","foldIconCheck","stack","startFold","foldStartText","assign","trimLeft","_fold","getRangeFoldByStartFold","pop","getBracketMatch","exsitEnd","lineCount","realLine","getRelativeLine","relLine","selecter","wholeWordPattern","searchObj","resultObj","hasCache","config","getFromCache","direct","increase","getSearchConfig","searcher","cursor","addCursorPos","addActive","activedRanges","setCursorPos","initIndexs","addRange","setActive","clearSearch","clearActive","rangePos","lines","wholeWord","ignoreCase","cacheData","ranges","refreshSearch","refreshSearchId","retainActive","clearInactiveRange","clearRange","setPrevActive","setNextActive","removeNow","clone","getCacheData","getNowRange","fSearcher","delta","getConfig","searchText","getRangeByCursorPos","getRangeText","getNowWord","startColumn","endColumn","setContextData","prop","setEditorData","getRange","getRangeByLine","getRangeWithCursorPos","select","multiCursorPos","moveCursor","updateRange","createRange","renderSelectedBg","selectAll","setRange","selectAllOccurence","clearCursorPos","same","getCursorsByLineColumn","_range","filterRange","removeRange","removeCursor","dels","dWord","multiKeyCode","rightWrodPattern","leftWrodPattern","pos","setNowCursorPos","addCursorAbove","moveWidth","getStrWidth","getColumnByWidth","addCursorBelow","addCursorLineEnds","updateCursorPos","renderCursor","del","removeCursorInRange","toDels","getCursorsByLine","_column","switchMultiKeyCode","history","undo","doCommand","serial","_command","redo","commandType","deleteContent","deleteLine","insertLine","moveLineUp","moveLineDown","copyLineDown","deleteCopyLineDown","copyLineUp","deleteCopyLineUp","pushHistory","lastCommand","sortComand","pushHistoryTime","_checkSameOp","_combCheck","_combCommand","commandList","updateHistory","_index","emmetWord","emmetAttr","emmetNum","endTag","Context","MIN_SAFE_INTEGER","fgLines","lineIdMap","renderedIdMap","renderedLineMap","initData","historyArr","cursorPosList","_historyArr","_insertMultiContent","prePos","historyObj","texts","lineDelta","columnDelta","commandObj","margin","_insertContent","alignmentTab","nowLineText","newPos","tabStr","_getTabStr","call","concat","lint","tokenizer","setLineWidth","plus","spaceNum","ceil","rangeList","_deleteMultiContent","_deleteRangePos","_deleteCursorPos","_deleteContent","startObj","deleteText","rangeUuid","originPos","endObj","maxWidthObj","clear","setMaxWidth","_setMaxWidth","setMaxWidthTimer","_setLineWidth","setLineWidthTimer","moveLine","historyPosList","searchConifg","pass","preLine","enLine","_moveLine","upLine","downLine","copyLine","originList","deleteCopyLine","tip","_getResult","expand","_getRanges","_updatePos","deltaArr","_getDeltaPos","autocomplete","getCopyText","cut","contexts","shiftKey","altKey","_moveCursor","searchWord","openSearch","prevAutoTip","nextAutoTip","showReplace","replaceVisible","input1Focus","input1Height","composing","changeCase","changeWhole","input2Focus","input2Height","onKeyDown2","replaceText","searchPrev","preFocus","searchNext","nextFocus","close","searchPrevActive","searchNextActive","requestAnimationFrame","_html","tipList","nowIndex","$auto","content","Tip","charObj","cursorVisible","cursorFocus","theme","renderHtmls","cursorLeft","scrollLeft","scrollTop","scrollerArea","errorMap","errors","searchVisible","activeLineBg","handler","deep","resizeObserver","selectStarts","selectEnds","cursorList","_renderSelectedBg","firstLine","lastLine","renderSelectionToken","_renderSelectionToken","_tokens","_clearSelectionToken","_setLine","renderError","$render","keyMap","_renderColError","_renderLineError","_renderError","searchDialog","setStartLine","_formatError","getStrWidthByLine","w1","w2","getPosByEvent","getExactLeft","children","getToken","menuHeight","time","onErrorMousemove","_checkErrorOver","onDocumentMmove","cancelAnimationFrame","_move","_run","onDocumentMouseUp","copyText","showMemu","fileMenuList","onFileMenuChange","editMenuList","onEditMenuChange","selectionMenuList","onSelectionMenuChange","preferenceMenuList","onPreferenceMenuChange","onMinimize","onUnmaximize","onMaximize","titleBar","openFolder","openFile","currentWindow","getCurrentWindow","fileMenuVisible","editMenuVisible","selectionMenuVisible","preferenceMenuVisible","maximize","inject","showTabsize","tabSizeList","position","onTabsizeChange","showLanguage","nowLanguage","tabsizeVisible","hasEditor","languages","languageMap","onSashBegin","_scrollHeight","_paddingLeft","preActiveItem","itemPadding","openedList","renderList","readdir","encoding","files","parentPath","sortFileList","getRenderList","_loopList","focusItem","_findItem","_changOpen","_item","SideBarMenu","getRootList","title","onClickBtn","btns","overlay","iconColor","cmdList","onChange","settingMap","foreground","background","fontStyle","loadTheme","tokenColors","_loadTheme","css","setDefaultColor","parseCss","insertCss","include","_addColors","loadIconTheme","extensions","fonts","font","fontFace","src","format","weight","iconDefinitions","fontCharacter","fontColor","iconPath","imgUrl","insertFont","_setFileExtensions","languageIds","_parseLanguageIds","dotReg","sReg","level","_getLevel","settings","dot","document","createElement","createTextNode","getElementsByTagName","appendChild","transparent","focusBorder","contrastBorder","contrastActiveBorder","isLight","isHc","_base","chroma","alpha","_scrollbar","_titleBar","_dropdown","_list","_menu","_statusBar","_sideBar","_editor","_tab","_editorWidget","_input","_toolbar","visible","menu","CmdPanel","extensionsPath","nowId","idCount","titleCount","dialogVisible","getNowEditor","getNowContext","langeuages","_closeTab","cancel","buttonLabel","showOpenDialog","win","options","open","catch","err","_done","showDialog","writeFile","varMap","_addLanguage","_addTheme","_addIconTheme","getTabById","getTabByPath","getEditor","getContext","Router","router","routes","Window","meta","redirect","axios","timeout","withCredentials","headers","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","every","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}